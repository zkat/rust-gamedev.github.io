<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Rust GameDev WG</title>
        <link>https://gamedev.rs/</link>
        <description>Stay up to date with the progress and recent developments in the Rust Game Development Working Group.</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://gamedev.rs/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Sat, 24 Sep 2022 00:00:00 +0000</lastBuildDate>
        <item>
            <title>This Month in Rust GameDev #37 - August 2022</title>
            <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/037/</link>
            <guid>https://gamedev.rs/news/037/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 37th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;037&#x2F;#announcements&quot;&gt;Announcements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;037&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;037&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;037&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;037&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;037&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;announcements&quot;&gt;Announcements&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#announcements&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-jam-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-2&#x2F;results&quot;&gt;Bevy Jam #2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-jam-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_jam_2.png&quot; alt=&quot;Bevy Jam 2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Voting on &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-2&#x2F;&quot;&gt;Bevy Jam #2&lt;&#x2F;a&gt; just finished! It was a
10 day event, where the goal was to make a game in
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;, the free and open-source game engine
built in Rust. The theme was &#x27;Combine&#x27;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-2&#x2F;results&quot;&gt;full results can be found on itch.io&lt;&#x2F;a&gt;. There were 404 participants,
85 submissions, and 2,674 ratings, making it the biggest Bevy Jam yet!
(And maybe the biggest Rust game jam ever?)&lt;&#x2F;p&gt;
&lt;p&gt;Here are the top five games:&lt;&#x2F;p&gt;
&lt;h4 id=&quot;first-place-medal-first-place-usa-football-league-scouting-combine-xlv&quot;&gt;🥇 First Place: &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;usa-football-league-scouting-combine-xlv&quot;&gt;USA Football League Scouting Combine XLV&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#first-place-medal-first-place-usa-football-league-scouting-combine-xlv&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;usa_football.png&quot; alt=&quot;USA Football League Scouting Combine XLV logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;usa-football-league-scouting-combine-xlv&quot;&gt;USA Football League Scouting Combine XLV&lt;&#x2F;a&gt; is a game where you take
part in the historic unveiling of the &amp;quot;Combine Combine&amp;quot; event at this year&#x27;s
USA Football League Scouting Combine!&lt;&#x2F;p&gt;
&lt;p&gt;USAFLSCXLV is singleplayer action game where you attempt to score as many touchdowns
as you can while avoiding professional football players, navigating a corn maze
and also avoiding a combine machine harvesting the maze.&lt;&#x2F;p&gt;
&lt;p&gt;The source for the game is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&#x2F;bevy_jam_02_entry&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;second-place-medal-second-place-loot-goblin&quot;&gt;🥈 Second Place: &lt;a href=&quot;https:&#x2F;&#x2F;park-dev.itch.io&#x2F;loot-goblin&quot;&gt;Loot Goblin&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#second-place-medal-second-place-loot-goblin&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;loot_goblin.png&quot; alt=&quot;Loot Goblin&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;park-dev.itch.io&#x2F;loot-goblin&quot;&gt;Loot Goblin&lt;&#x2F;a&gt; is a game where you craft your way to victory in a
unique adventurer&#x27;s backpack simulation!&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re going dungeon crawling, but all the hard work is done for you by the valiant
Sir Hoardalot, and you, as his resourcesful Loot Goblin are going to keep his
backpack in order! Craft potions and weapons to strengthen the hero, and help
kill the evil Ogre Necromancer.&lt;&#x2F;p&gt;
&lt;p&gt;The source code for the game is available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vanGeck&#x2F;bevy-jam-2&quot;&gt;on Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;third-place-medal-third-place-shanty-quest-treble-at-sea&quot;&gt;🥉 Third Place: &lt;a href=&quot;https:&#x2F;&#x2F;jabuwu.itch.io&#x2F;shanty-quest&quot;&gt;Shanty Quest: Treble at Sea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#third-place-medal-third-place-shanty-quest-treble-at-sea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;shanty_quest.png&quot; alt=&quot;Shanty Quest Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;https:&#x2F;&#x2F;jabuwu.itch.io&#x2F;shanty-quest&quot;&gt;Shanty Quest: Treble at Sea&lt;&#x2F;a&gt;, you combine the magical instruments
and become the Pirate King!&lt;&#x2F;p&gt;
&lt;p&gt;The source code is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jabuwu&#x2F;shanty-quest&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fourth-place-combobox&quot;&gt;Fourth Place: &lt;a href=&quot;https:&#x2F;&#x2F;combobox-game.itch.io&#x2F;combobox&quot;&gt;Combobox&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fourth-place-combobox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;combo_box.png&quot; alt=&quot;Combobox Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;combobox-game.itch.io&#x2F;combobox&quot;&gt;Combobox&lt;&#x2F;a&gt; is a game where you navigate through space with a tiny robot
combining boxes with unique features!&lt;&#x2F;p&gt;
&lt;p&gt;The source code is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ComboboxGame&#x2F;Combobox&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fifth-place-mole-rancher&quot;&gt;Fifth Place: &lt;a href=&quot;https:&#x2F;&#x2F;infinitefall.itch.io&#x2F;mole-rancher&quot;&gt;Mole Rancher&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fifth-place-mole-rancher&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;mole_rancher.png&quot; alt=&quot;Mole Rancher Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;infinitefall.itch.io&#x2F;mole-rancher&quot;&gt;Mole Rancher&lt;&#x2F;a&gt; is a game where you made it through university, got
your PhD, and now you have been selected to work in an top secret experimental
facility which promises a way to generate infinite energy through the combination
of various strange particles.&lt;&#x2F;p&gt;
&lt;p&gt;Use power to generate curious molecules, check their properties in your logbook,
monitor their progress through your trusty E-merge device, and try not to let the
reactor overheat!&lt;&#x2F;p&gt;
&lt;p&gt;And don&#x27;t worry about those armed guards on the way in, as long as you meet your
quota then you&#x27;ll have no problems...&lt;&#x2F;p&gt;
&lt;p&gt;The source for this game is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;V4L3NC3&#x2F;mole_rancher&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 19th Rust Gamedev Meetup took place in August. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;s9kf9HVUKYE&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. Here was the schedule from
the meetup:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;RustConf Arcade Cabinet - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Blue Engine - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aryanpur_elham&quot;&gt;@aryanpur_elham&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Veloren - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VelorenProject&quot;&gt;@VelorenProject&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Graphite - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;@GraphiteEditor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;All is Cubes - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;switchborg&quot;&gt;@switchborg&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The meetups take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev
Discord server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bombercrab-challenge-report&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.tonari.no&#x2F;rust-game-hack-2022&quot;&gt;Bombercrab Challenge Report&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bombercrab-challenge-report&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bombercrab.jpg&quot; alt=&quot;screenshot of the game: many players, block and an explosion&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.tonari.no&#x2F;rust-game-hack-2022&quot;&gt;Pablo Mansanet shared a report&lt;&#x2F;a&gt; about how
the 2022 Tokyo Rust Game Hack went.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;catacomb-2-64k&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;64kramsystem&#x2F;catacomb_ii-64k&quot;&gt;Catacomb 2-64k&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#catacomb-2-64k&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;64kramsystem&#x2F;catacomb_ii-64k&quot;&gt;&lt;img src=&quot;catacomb_2.png&quot; alt=&quot;Catacomb 2 image&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;64kramsystem&#x2F;catacomb_ii-64k&quot;&gt;Catacomb 2-64k&lt;&#x2F;a&gt; is a (completed) experimental
project in porting a moderately complex project, first from C to unsafe Rust,
then to (fully) safe Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The objective of the project has been to study the tooling, transformations
and the overall process required perfom real-world, exact, ports; an article
will follow in September on &lt;a href=&quot;https:&#x2F;&#x2F;saveriomiroddi.github.io&quot;&gt;64kramsystem&#x27;s blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The port uses the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-SDL2&#x2F;rust-sdl2&quot;&gt;Rust-SDL2 bindings&lt;&#x2F;a&gt;. More exact ports
of id Software games are expected in the future, with the introduction of a
refactoring tool based on the
&lt;a href=&quot;https:&#x2F;&#x2F;microsoft.github.io&#x2F;language-server-protocol&quot;&gt;Language Server Protocol&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust-analyzer&quot;&gt;Rust Analyzer&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cybergate&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UClrsOso3Xk2vBWqcsHC3Z4Q&quot;&gt;CyberGate&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cybergate&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cybergate.jpg&quot; alt=&quot;browser udp technology&quot; &#x2F;&gt;
&lt;em&gt;The new browser version works exactly like the native version&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;CyberGate (&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UClrsOso3Xk2vBWqcsHC3Z4Q&quot;&gt;YouTube&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;R7DkHqw7zJ&quot;&gt;Discord&lt;&#x2F;a&gt;) by CyberSoul
is a new multiplayer project that aims at procedurally generating distinct
universes and gameplay experiences. CyberGate is the name of the main world
where universes can be created and accessed by quantum portals.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ported to browser (wgpu with webgl backend)&lt;&#x2F;li&gt;
&lt;li&gt;Unreliable network protocol achieved with WebRTC&lt;&#x2F;li&gt;
&lt;li&gt;Dynamically spawn and synchronize ECS components using macros&lt;&#x2F;li&gt;
&lt;li&gt;Massively improved the events system and actions system&lt;&#x2F;li&gt;
&lt;li&gt;Refactored over 50% of the project&lt;&#x2F;li&gt;
&lt;li&gt;Small features such as grabbing objects and dash forward&lt;&#x2F;li&gt;
&lt;li&gt;Fixed 3 major bugs that slowed down the server&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;R7DkHqw7zJ&quot;&gt;Join the Discord server&lt;&#x2F;a&gt; to participate in upcoming Phase 5.0!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;x60n9y&#x2F;cybergate_45_progress_browser_udp_client_with&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rusty-aquarium&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollej&#x2F;rusty-aquarium&quot;&gt;Rusty Aquarium&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-aquarium&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustyaquarium.gif&quot; alt=&quot;Rusty Aquarium visualization&quot; &#x2F;&gt;
&lt;em&gt;Visualize data as a fish tank with Rusty Aquarium&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollej&#x2F;rusty-aquarium&quot;&gt;Rusty Aquarium&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ollej&quot;&gt;@ollej&lt;&#x2F;a&gt; is a data visualization tool as a virtual fish
tank written in Rust and Macroquad. Different data points control how many
fishes are shown, how they move, how fast they swim, and which size they are.
It can be used to monitor data in a visual way, while those uninitiated only
see a serene fish tank.&lt;&#x2F;p&gt;
&lt;p&gt;Since Macroquad is cross-platform, Rusty Aquarium is available for Windows,
Mac, Linux as well as for browsers using WebAssembly.&lt;&#x2F;p&gt;
&lt;p&gt;The aquarium can be controlled in various different ways:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;System monitoring binary to show CPU usage, disk usage, and processes.&lt;&#x2F;li&gt;
&lt;li&gt;Integrate with Google Sheets to control fishes.&lt;&#x2F;li&gt;
&lt;li&gt;Back it with an URL that generates a JSON file.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This month, a blog post with the &lt;a href=&quot;https:&#x2F;&#x2F;blog.agical.se&#x2F;en&#x2F;posts&#x2F;the-story-behind-rusty-aquarium&#x2F;&quot;&gt;story behind Rusty Aquarium&lt;&#x2F;a&gt;
was published on the &lt;a href=&quot;https:&#x2F;&#x2F;blog.agical.se&#x2F;en&#x2F;&quot;&gt;Agical&lt;&#x2F;a&gt; blog. The code was restructured and the packaged
files now contain binaries for input data generation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;infinite-bunner&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollej&#x2F;rust-bunner-macroquad&quot;&gt;Infinite Bunner&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#infinite-bunner&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;infinitebunner.gif&quot; alt=&quot;Infinite Bunner&quot; &#x2F;&gt;
&lt;em&gt;Port of the Infinite Bunner game to Rust and Macroquad&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollej&#x2F;rust-bunner-macroquad&quot;&gt;Infinite Bunner&lt;&#x2F;a&gt; is a game from the book &lt;a href=&quot;https:&#x2F;&#x2F;wireframe.raspberrypi.org&#x2F;books&#x2F;code-the-classics1&quot;&gt;Code the Classics vol 1&lt;&#x2F;a&gt; that has
been ported by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ollej&quot;&gt;@ollej&lt;&#x2F;a&gt; to Rust and Macroquad from Python and PyGame Zero.
It is a modern version of the classic arcade game Frogger with improved
graphics and sound.&lt;&#x2F;p&gt;
&lt;p&gt;The game has been sent in to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-game-ports&quot;&gt;Rust Game Ports&lt;&#x2F;a&gt; project as
an educational example. It shows how to make a 2D game in Macroquad with
graphics and sound.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wireframe.raspberrypi.org&#x2F;books&#x2F;code-the-classics1&quot;&gt;Code the Classics vol 1&lt;&#x2F;a&gt; is a book from Wireframe Magazine that tells the
history of five classic video games. It also includes code listings of modern
versions of the games written in Python with the PyGame Zero framework.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tiny-building-game&quot;&gt;Tiny Building Game&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tiny-building-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;country_slice.gif&quot; alt=&quot;Country_slice_gif&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The untitled &amp;quot;Tiny Building Game&amp;quot; is a stress-free feel-good game focused on just
building something pretty. It is being made by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&quot;&gt;@anastasiaopara&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&quot;&gt;@h3r2tic&lt;&#x2F;a&gt;, who has recently joined the project!&lt;&#x2F;p&gt;
&lt;p&gt;This month, there was a large visual update, which added &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1560673892574035969&quot;&gt;trees and flowers&lt;&#x2F;a&gt;,
as well as &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1565629377823395841&quot;&gt;fences and gates&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Right now, the team is actively working on setting up a Steam page. Stay
tuned by following the &lt;a href=&quot;https:&#x2F;&#x2F;dashboard.mailerlite.com&#x2F;forms&#x2F;10395&#x2F;51067704544593017&#x2F;share&quot;&gt;newsletter&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;math-it&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vrixyz.itch.io&#x2F;math-it&quot;&gt;Math It&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#math-it&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;math_it.png&quot; alt=&quot;Promotional image of the Math It game&quot; &#x2F;&gt;
&lt;em&gt;Promotional image of the Math It game&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vrixyz.itch.io&#x2F;math-it&quot;&gt;Math It&lt;&#x2F;a&gt; was made with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt; for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-2&quot;&gt;Bevy Jam 2&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The goal of the game is to get as close as possible
to the target number and compete with others on a global leaderboard.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;A cave with lava&quot; &#x2F;&gt;
&lt;em&gt;A barrier of lava&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In August, long-awaited work on a new internationalization system with Fluent
was merged. The real-time simulation v2 system is now in a place, which has
allowed for blacksmiths to now sell swords and armour with only a few additional
lines of code. Work was done to implement a spectator mode in game, as well as
fix a bug about respawning while having a status effect on you persisting, such
as being on fire from swimming in lava.&lt;&#x2F;p&gt;
&lt;p&gt;August&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-183&quot;&gt;#183&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-184&quot;&gt;#184&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-185&quot;&gt;#185&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-186&quot;&gt;#186&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-187&quot;&gt;#187&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;quad-android-playground&quot;&gt;&lt;img src=&quot;android_playground.gif&quot; alt=&quot;diff&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt; is a pure Rust, cross-platform graphics library.&lt;&#x2F;p&gt;
&lt;p&gt;This month was about polishing miniquad-android experience.
To make it easier for regression testing, miniquad got
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;quad-android-playground&quot;&gt;the android playground&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The playground demonstrates all known android shenanigans in
one quad-based app.&lt;&#x2F;p&gt;
&lt;p&gt;It includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;onscreen keyboard&lt;&#x2F;li&gt;
&lt;li&gt;java interop (with file dialog as an example)&lt;&#x2F;li&gt;
&lt;li&gt;dealing with big java services (with bluetooth as an example)&lt;&#x2F;li&gt;
&lt;li&gt;accessing permissions, both runtime and compile time&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;runty8&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jjant&#x2F;runty8&quot;&gt;Runty8&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#runty8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jjant&#x2F;runty8&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;15112080&#x2F;188467323-037617cf-7dbc-4988-bbd7-fbafd1524455.png&quot; alt=&quot;Runty 8 logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jjant&#x2F;runty8&quot;&gt;Runty8&lt;&#x2F;a&gt; is an experimental port of the &lt;a href=&quot;https:&#x2F;&#x2F;www.lexaloffle.com&#x2F;pico-8.php&quot;&gt;Pico8&lt;&#x2F;a&gt;
fantasy console that supports writing games in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Its current goals are to follow Pico8&#x27;s APIs as closely as possible,
to allow easily porting existing games to Rust,
as well as developing new games in a familiar development environment.&lt;&#x2F;p&gt;
&lt;p&gt;The project is in very early stages, and is currently looking for contributors.
If you&#x27;re interested, feel free to read their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jjant&#x2F;runty8&#x2F;blob&#x2F;master&#x2F;CONTRIBUTING.md&quot;&gt;contributing guide&lt;&#x2F;a&gt;
or browse through the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jjant&#x2F;runty8&#x2F;issues&quot;&gt;open issues&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gamercade&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamercade.io&quot;&gt;Gamercade&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gamercade&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gamercade.gif&quot; alt=&quot;Gamercade preview&quot; &#x2F;&gt;
&lt;em&gt;Preview of the Audio Editor in Action&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamercade.io&quot;&gt;Gamercade&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Qafv2Fpt5j&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamercade-io&#x2F;gamercade_console&quot;&gt;Github&lt;&#x2F;a&gt;)
by @RobDavenport is a WASM-powered fantasy console focused
on building multiplayer neo-retro games.&lt;&#x2F;p&gt;
&lt;p&gt;Gamercade is preparing for their first alpha release! This includes all the
core features needed for a fantasy console and game library: input, graphics,
and audio. It also has networked multiplayer, and an editor.&lt;&#x2F;p&gt;
&lt;p&gt;They implemented the in-game sound engine from scratch. They also improved the
editor to allow creation of instruments and tracks. It synthesizes sounds at
runtime, and produces something like an 80s synth, a 90s SoundBlaster, and a
touch of SNES. Songs and Sfx are built using a tracker interface.
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=cRsOvefap_U&quot;&gt;This video&lt;&#x2F;a&gt; shows a small sample of what it is capable of.&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Wavetables&amp;quot; are great for classic sounds like 8-bit chiptunes or even more
complicated sounds. &amp;quot;FM Synth&amp;quot; is a 4-op FM synthesizer. Masters of this
technique can produce a huge variety of instruments, effects, and other
otherwordly things. &amp;quot;Sampler&amp;quot; rounds out the rest of the system, providing
pre-recorded sample playback. Samples can be pitched and played as the desired
note.&lt;&#x2F;p&gt;
&lt;p&gt;Come hang out and chat on &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Qafv2Fpt5j&quot;&gt;Discord&lt;&#x2F;a&gt;, where the developers
interact with members and post updates daily. The project is
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamercade-io&#x2F;gamercade_console&quot;&gt;open source&lt;&#x2F;a&gt; and looking for contributors, suggestions,
as well as awesome game demos.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite.png&quot; alt=&quot;Graphite logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;website&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a free,
in-development raster and vector 2D graphics editor that will be based around a
Rust-powered node graph compositing engine.&lt;&#x2F;p&gt;
&lt;p&gt;August&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;milestone&#x2F;18&quot;&gt;sprint&lt;&#x2F;a&gt; focused on Bézier shape editing and layer
transformation improvements.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ahead of the curve: Bézier shapes gain support for curve extension and shape
closing using the Pen tool and inserting points along curves with the Path
tool.&lt;&#x2F;li&gt;
&lt;li&gt;Front and center: Layer origins may be set to control the center of rotation
and scale using the Transform tool.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Meanwhile, design and architecture work on the Graphene node-based programming
language has been well underway. Graphene is the data graph engine that will
replace Graphite&#x27;s tree-based layer system in the next few sprints and evolve
into a raster-and-vector render engine over time.&lt;&#x2F;p&gt;
&lt;p&gt;Open the &lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Graphite editor&lt;&#x2F;a&gt; in your browser to give it a try
and share your creations with #MadeWithGraphite on Twitter.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hot-lib-reloader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rksm&#x2F;hot-lib-reloader-rs&quot;&gt;hot-lib-reloader&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hot-lib-reloader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hot-lib-reloader.png&quot; alt=&quot;hot-lib-reloader thumbnail&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rksm&#x2F;hot-lib-reloader-rs&quot;&gt;hot-lib-reloader&lt;&#x2F;a&gt; is a development tool that allows you to reload functions
of a running Rust program. This allows to do &amp;quot;live programming&amp;quot; where you
modify code and immediately see the effects in your running program. Gone
are the days of edit-compile-restart loops (to some degree).&lt;&#x2F;p&gt;
&lt;p&gt;hot-lib-reloader works by reloading parts of your application that are defined
as dynamic libraries. This approach works on Linux, MacOS, and Windows but has
some constraints - see the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;hot-lib-reloader&#x2F;latest&#x2F;hot_lib_reloader&#x2F;&quot;&gt;documentation&lt;&#x2F;a&gt; for details. There are several
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rksm&#x2F;hot-lib-reloader-rs&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt;, showing how to create hot-reload setups with various frameworks
and libraries, e.g. bevy, egui, and &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;hyyeLtJ7SQk&quot;&gt;nannou&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-kira-audio&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&#x2F;&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-kira-audio&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_kira_audio_settings.png&quot; alt=&quot;Configuring a sound when playing it&quot; &#x2F;&gt;
&lt;em&gt;Configuring a sound when playing it&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&#x2F;&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; is an alternative audio plugin for the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt;
game engine. It uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt; as its audio library and aims to integrate
well with Bevy&#x27;s ECS.&lt;&#x2F;p&gt;
&lt;p&gt;Last month saw the release of versions &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#v0110&quot;&gt;0.11.0&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#v0120&quot;&gt;0.12.0&lt;&#x2F;a&gt;. With the
latest version, sound settings like volume, playback-rate, or panning can
be adjusted directly when playing audio. The screenshot above shows the new API
with multiple example settings. The plugin now also offers control
over single sound instances via asset handles and will apply configurable
tweens to most operations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-asset-loader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&#x2F;&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-asset-loader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;loading_state.png&quot; alt=&quot;Configuration of a loading state&quot; &#x2F;&gt;
&lt;em&gt;Configuration of a loading state&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&#x2F;&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; is a plugin for &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt; apps aiming to
improve a common pattern for asset-loading. The boilerplate required to set up
a loading-state is reduced to a minimum. The plugin is based on storing
asset handles in resources, which makes it easy to use them in any system
across your app.&lt;&#x2F;p&gt;
&lt;p&gt;The screenshot above shows how a loading state can be added to the Bevy app
in the latest version of the plugin. The update also fixed issues with
configuring the same loading state in different places of your code and enabled
users to define their own dynamic assets.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;notan-v0-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan v0.6&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#notan-v0-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notan.gif&quot; alt=&quot;notan examples&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; is a simple and portable layer designed to create your own
apps on top of it without worrying about platform-specific code.&lt;&#x2F;p&gt;
&lt;p&gt;It provides a set of APIs and tools that can be used to create your
project in an ergonomic manner without enforcing any structure or pattern,
sharing the same codebase across multiple platforms.&lt;&#x2F;p&gt;
&lt;p&gt;The main focus for version &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&#x2F;releases&#x2F;tag&#x2F;v0.6.0&quot;&gt;v0.6&lt;&#x2F;a&gt; was improving how uniforms
are set using the layout std140 for the user with a macro,
among internal fixes and improvements.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shipyard&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leudz&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shipyard&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leudz&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; is an Entity Component System focused on usability and speed.&lt;&#x2F;p&gt;
&lt;p&gt;This monthh, 0.6 was released with big improvements to workloads and
tracking.&lt;&#x2F;p&gt;
&lt;p&gt;The new &lt;a href=&quot;https:&#x2F;&#x2F;leudz.github.io&#x2F;shipyard&#x2F;visualizer&quot;&gt;visualizer&lt;&#x2F;a&gt; is a first step towards visual
inspection and interaction with the library.
For now it can only show which components are used by which systems
and vice-versa.&lt;&#x2F;p&gt;
&lt;p&gt;Learn more about this release in the &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;shipyard-0-6-release&#x2F;79504&quot;&gt;release post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;wi71lu&#x2F;shipyard_06_release&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;wi72vc&#x2F;shipyard_06_release&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;edict&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#edict&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&quot;&gt;@zakarumych&lt;&#x2F;a&gt; is powerful Rust ECS crate that expands traditional ECS
feature set. The new version 0.2 is getting &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;edict&#x2F;0.2.0-rc.3&#x2F;edict&#x2F;&quot;&gt;ready for release&lt;&#x2F;a&gt;. This ECS is based
on archetypes for fast cache-friendly iteration. And there are quite a few novel
features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; allows to express relations between entities using &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;edict&#x2F;0.2.0-rc.3&#x2F;edict&#x2F;relation&#x2F;trait.Relation.html&quot;&gt;&lt;code&gt;Relation&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; trait.
Relations are linked to a pair of entities - origin and target. This opens a
wide range of opportunities to create entity graphs with custom logic.&lt;&#x2F;li&gt;
&lt;li&gt;Custom hooks for components and relations to trigger actions when component is
dropped&#x2F;replaced, or when relation target is dropped.&lt;&#x2F;li&gt;
&lt;li&gt;Optional &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;edict&#x2F;0.2.0-rc.3&#x2F;edict&#x2F;component&#x2F;trait.Component.html&quot;&gt;&lt;code&gt;Component&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; trait. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; allows using component types that do not
implement &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;edict&#x2F;0.2.0-rc.3&#x2F;edict&#x2F;component&#x2F;trait.Component.html&quot;&gt;&lt;code&gt;Component&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; with some restrictions.&lt;&#x2F;li&gt;
&lt;li&gt;Change tracking with flexible queries for modified components suitable for
complex use cases. E.g. incremental saves can fetch all components modified
since previous save.&lt;&#x2F;li&gt;
&lt;li&gt;Type-agnostic component borrowing. Component type may define list of types
that can be borrowed from it. Important use case is borrowing &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch17-02-trait-objects.html&quot;&gt;&lt;code&gt;dyn Traits&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; supports parallel execution. Built-in scheduler uses systems that
implement &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;edict&#x2F;0.2.0-rc.3&#x2F;edict&#x2F;system&#x2F;trait.System.html&quot;&gt;&lt;code&gt;System&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; trait. Functions can be safely transformed into systems
similarly to &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_ecs&quot;&gt;&lt;code&gt;bevy_ecs&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;grid-pathfinding&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbvanderwoude&#x2F;grid_pathfinding&quot;&gt;grid_pathfinding&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#grid-pathfinding&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbvanderwoude&#x2F;grid_pathfinding&quot;&gt;grid_pathfinding&lt;&#x2F;a&gt; is a new pathfinding crate aimed at providing a fast,
out-of-the-box system for pathfinding on various types of grids. While the
current 0.1.1 release is not very configurable yet, the idea is to make the
crate more malleable working towards a 0.2.0 release so that it will support
a range of grids (4-connected, 8-connected, weighted, etc.) as well as
heuristics. Specifically, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbvanderwoude&#x2F;grid_pathfinding&quot;&gt;grid_pathfinding&lt;&#x2F;a&gt; 0.1 assumes a uniform-cost
8-grid with a Chebyshev cost metric and heuristic. More long-term goals are
support for multi-tile and multi-agent pathfinding variants.&lt;&#x2F;p&gt;
&lt;p&gt;The current implementation is based on &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Jump_point_search&quot;&gt;Jump Point Search&lt;&#x2F;a&gt; with
&lt;a href=&quot;https:&#x2F;&#x2F;www.researchgate.net&#x2F;publication&#x2F;287338108_Improving_jump_point_search&quot;&gt;improved pruning rules&lt;&#x2F;a&gt;. On top of this, &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Component_(graph_theory)&quot;&gt;connected components&lt;&#x2F;a&gt; are used to
avoid flood-filling behaviour if no path exists - see the
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;grid_pathfinding&#x2F;0.1.1&#x2F;grid_pathfinding&#x2F;&quot;&gt;documentation&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbvanderwoude&#x2F;grid_pathfinding&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; for information on
how to manage these components. Especially when simulating many agents in
real-time, using components can make a big difference.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;!-- TODO: do i need to put announcements here? oR move them to the next month? --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dequog&#x2F;caveth&quot;&gt;Caveth&lt;&#x2F;a&gt; is a game made with macroquad
where you can shoot enemies with a cannon.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&#x2F;?beta=0&quot;&gt;Im-Oab released a free Steam demo of the shump Flesh&lt;&#x2F;a&gt;
and also added &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;status&#x2F;1557714901434781696&quot;&gt;new enemy types&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;status&#x2F;1564581193454354432&quot;&gt;boss animations&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;status&#x2F;1562015685521604610&quot;&gt;bullet shadows&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dominux&#x2F;spherical-go&quot;&gt;Spherical Go&lt;&#x2F;a&gt; if the Go game&#x27;s implementation
with a variety of spherical fields.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer&#x2F;2022-08-20-v0.0.10.html&quot;&gt;Combine and Conquer has a new devlog about 0.10 version&lt;&#x2F;a&gt; that brings
vector graphics, &amp;quot;merger&amp;quot; and &amp;quot;splitter&amp;quot; structures, new tech-tree UI,
overlay improvements, and new tiers for existing structures.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-Ninja-Sabi&#x2F;rust-bevy-cheeseball&quot;&gt;bevy-cheeseball&lt;&#x2F;a&gt; is a 3D marble game inspired by Monkey Ball
and made with Bevy and Rapier.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;x1ekmg&#x2F;fish_folk_punchy_v004&quot;&gt;Punchy v0.04&lt;&#x2F;a&gt; was released,
featuring MVP for the first boss enemy, an entirely refactored
fighter state model &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fishfolks&#x2F;punchy&#x2F;wiki&#x2F;Fighter-State-Machine&quot;&gt;which was written up on the wiki&lt;&#x2F;a&gt;,
updates to the enemy AI targeting, camera progression boundaries,
updates to debug tools, a health recovery item,
and updates to the way attacks are defined and loaded from resources.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;console.substack.com&#x2F;p&#x2F;console-118&quot;&gt;Console #118 - Interview with Connor of rend3&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;PhaestusFox added a bunch of new videos
to their &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PL6uRoaCCw7GN_lJxpKS3j-KXuThRiSXc6&quot;&gt;&amp;quot;Bevy Basics&amp;quot;&lt;&#x2F;a&gt; YouTube series.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rjgameiro.medium.com&#x2F;let-fun-rust-unity-f7f62609ba49&quot;&gt;@fronkongames shared a quick guide&lt;&#x2F;a&gt; to integrating Rust code
into Unity.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;samkevich&#x2F;learn_gl_with_rust&quot;&gt;@samkevich published a &amp;quot;Learn OpenGL with Rust&amp;quot; series&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PL_UrKDEhALdJS0VrLPn7dqC5A4W1vCAUT&quot;&gt;@jack1232 released a &amp;quot;Rust wgpu Graphics Programming Tutorial&amp;quot; YouTube series&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other engine updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fyrox.rs&#x2F;blog&#x2F;post&#x2F;feature-highlights-0-27&quot;&gt;Fyrox v0.27&lt;&#x2F;a&gt; features a new Fish Folly game example,
compile-time reflection, plugin, and scripting
improvements, and two new book chapters about &lt;a href=&quot;https:&#x2F;&#x2F;fyrox-book.github.io&#x2F;fyrox&#x2F;scene&#x2F;particle_system_node.html&quot;&gt;particle systems&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;fyrox-book.github.io&#x2F;fyrox&#x2F;scene&#x2F;terrain_node.html&quot;&gt;terrain&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kitao&#x2F;status&#x2F;1564234852185960449&quot;&gt;Pyxel v0.18&lt;&#x2F;a&gt;&#x27;s main highlight is the experimental web support.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevys-second-birthday&#x2F;&quot;&gt;Bevy released a blog post&lt;&#x2F;a&gt; about the second birthday
of the engine with a retrospective and future plans.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other tooling updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=qJOPLxFfbMw&quot;&gt;@HackerFoo shared a video&lt;&#x2F;a&gt; of a WIP meta-editor to record
contact movement to create interactive tutorials for Noumenal.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simbleau&#x2F;nbody-wasm-sim&quot;&gt;nbody-wasm-sim&lt;&#x2F;a&gt; is a WebGPU N-Body astrophysics simulation in Rust + WASM.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;wgen&quot;&gt;wgen&lt;&#x2F;a&gt; is a simple multi-threaded heightmap generator made with egui and three_d.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kurbos&#x2F;bevy-shell-template&quot;&gt;bevy-shell-template&lt;&#x2F;a&gt; is an opinionated, monolithic template for Bevy
with cross-platform CI&#x2F;CD, native + WASM launchers,
and managed cross-platform deployment.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vleue&#x2F;bevy_streamdeck&quot;&gt;bevy_streamdeck&lt;&#x2F;a&gt; is a Bevy plugin to interact with Stream Deck.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&#x2F;releases&#x2F;tag&#x2F;v0.7.0&quot;&gt;kira v0.7 release&lt;&#x2F;a&gt; brings a bunch of important bug fixes
some of which require breaking changes.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&#x2F;status&#x2F;1561010036255739904&quot;&gt;egui v0.19&lt;&#x2F;a&gt; brings a lot of various small API improvements and optimizations.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.polymonster.co.uk&#x2F;blog&#x2F;maths-rs&quot;&gt;Alex Dixon shared a blog post&lt;&#x2F;a&gt; about creating another
linear algebra library - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polymonster&#x2F;maths-rs&quot;&gt;maths-rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SamiPerttu&#x2F;fundsp&quot;&gt;fundsp&lt;&#x2F;a&gt; is an audio digital signal processing library for audio processing
and synthesis.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StarArawn&#x2F;bevy_ecs_tilemap&quot;&gt;bevy_ecs_tilemap&lt;&#x2F;a&gt; is an ECS-friendly tilemap rendering crate for Bevy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;xnjeym&#x2F;this_month_in_rust_gamedev_37&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1573978074550616064&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #36 - July 2022</title>
            <pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/036/</link>
            <guid>https://gamedev.rs/news/036/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 36th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#announcements&quot;&gt;Announcements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;036&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;announcements&quot;&gt;Announcements&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#announcements&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 18th Rust Gamedev Meetup took place in July. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;mnuchYuR_ck&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. Here was the schedule from
the meetup:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;RustConf Arcade Cabinet - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Blackjack - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;playtheprocess&quot;&gt;@setzer22&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Dotrix - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;lowenware&quot;&gt;@lowenware&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Graphite - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;graphiteeditor&quot;&gt;@GraphiteEditor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The meetups take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev
Discord server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;17260ccd&quot;&gt;August 13th&lt;&#x2F;a&gt;, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this
form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-game-ports-officialization&quot;&gt;Rust Game Ports Officialization&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-game-ports-officialization&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust_game_ports.jpg&quot; alt=&quot;games collage&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;64kramsystem&quot;&gt;64kramsystem&lt;&#x2F;a&gt;&#x27;s Rust Game Ports &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-game-ports&quot;&gt;project&lt;&#x2F;a&gt; has
been officially adopted by the Rust game development working group.&lt;&#x2F;p&gt;
&lt;p&gt;The project is intended to be a reference for Rust game development, helping
developers, especially newcomers, to understand how to use Rust game libraries,
and design Rust games in general.&lt;&#x2F;p&gt;
&lt;p&gt;Devs are invited to explore and contribute! There are ports for all the levels
and interests 😄&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ferris-3d-got-released&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&#x2F;ferris3d&quot;&gt;Ferris 3D Got Released!&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ferris-3d-got-released&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;raymarch_ferris_3d_release.jpg&quot; alt=&quot;colorful render of a 3d model of Ferris with additional wireframe view&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ray__March&quot;&gt;@RayMarch&lt;&#x2F;a&gt; created a 3d model of &lt;a href=&quot;https:&#x2F;&#x2F;rustacean.net&#x2F;&quot;&gt;Ferris the Rustacean&lt;&#x2F;a&gt;
for the Rust community!&lt;&#x2F;p&gt;
&lt;p&gt;The model is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&#x2F;ferris3d&quot;&gt;now available for free here on github&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;It was released into the &lt;a href=&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;publicdomain&#x2F;zero&#x2F;1.0&#x2F;&quot;&gt;public domain&lt;&#x2F;a&gt; so you can use it
however you like, even commercially!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ray__March&#x2F;status&#x2F;1554115149312790529&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tokyo-rust-game-hack-event-aug-12th&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bombercrab-rust-game-hack.peatix.com&#x2F;view&quot;&gt;Tokyo Rust Game Hack Event&lt;&#x2F;a&gt;: Aug 12th&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tokyo-rust-game-hack-event-aug-12th&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bombercrab.jpeg&quot; alt=&quot;pixelart ferris and bombs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The team at &lt;a href=&quot;http:&#x2F;&#x2F;tonari.no&quot;&gt;tonari.no&lt;&#x2F;a&gt; is back with the second edition
of the Tokyo Rust Game Hack event!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;For this edition of the Game Hack event, we&#x27;re dragging you back
through the mists of time, to the earlier days of arcade games.
We&#x27;ve built a Bevy-powered, simple reimagining of classic Bomberman,
with a modern twist.
Players don&#x27;t participate by taking turns on an arcade stick.
Instead, we will provide a crate that defines the character&#x27;s
interaction with the world through a Player trait.
By simply implementing that trait and compiling to a wasm target,
you&#x27;ll be able to upload your character to the game, live.
Adapt your strategy on the fly and bomb your way into the scoreboard!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tonarino&#x2F;bombercrab-player&quot;&gt;The player template repository&lt;&#x2F;a&gt; is open sourced
ahead of time so you can get a nice headstart.&lt;&#x2F;p&gt;
&lt;p&gt;If you decide to come please sign up on &lt;a href=&quot;https:&#x2F;&#x2F;bombercrab-rust-game-hack.peatix.com&#x2F;view&quot;&gt;the event&#x27;s page&lt;&#x2F;a&gt;.
You can participate physically or online, see the full announcement
for the details.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;w7bktx&#x2F;2022_tokyo_rust_game_hack_event&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n36&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n36&quot;&gt;&lt;img src=&quot;wor-capsule.jpg&quot; alt=&quot;way of rhea capsule image&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n36&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle adventure with hard puzzles and forgiving
mechanics being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; in a custom Rust
engine. You can support development by
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n36&quot;&gt;checking out the free demo and wishlisting on Steam&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea was selected to be part of &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;sale&#x2F;PAXRisingOnline&quot;&gt;PAX Rising online&lt;&#x2F;a&gt;! It
was also shown off in the June &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;sale&#x2F;nextfest_june2022&quot;&gt;Steam Game Festival&lt;&#x2F;a&gt;.
Other recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Kotaku mentioned Way of Rhea in an article about
&lt;a href=&quot;https:&#x2F;&#x2F;kotaku.com&#x2F;steam-indie-games-pc-wishlist-arctic-awakening-1849140770&quot;&gt;fascinating upcoming indie games&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.lostincult.co.uk&#x2F;&quot;&gt;Lost In Cult&lt;&#x2F;a&gt;, a gaming journal, announced &lt;a href=&quot;https:&#x2F;&#x2F;www.lostincult.co.uk&#x2F;?aff=18&quot;&gt;preorders&lt;&#x2F;a&gt; for
a new edition of Lock On containing a card game containing a card with a character
from Way of Rhea featured&lt;&#x2F;li&gt;
&lt;li&gt;Mason posted a video interview covering &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;H0sIsrLWojs&quot;&gt;why he became an indie dev&lt;&#x2F;a&gt;,
among other things&lt;&#x2F;li&gt;
&lt;li&gt;Work has begun on puzzles for the final level of the game. This area combines the
puzzle elements from all previous biomes for a final set of challenging puzzles.&lt;&#x2F;li&gt;
&lt;li&gt;A weather system with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1546207348259266560&quot;&gt;rain&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1546320074923024384&quot;&gt;snow&lt;&#x2F;a&gt; was added to the game&lt;&#x2F;li&gt;
&lt;li&gt;More progress was made on the unreleased Linux platform layer&lt;&#x2F;li&gt;
&lt;li&gt;More wildlife was added to the game&lt;&#x2F;li&gt;
&lt;li&gt;Some logging and editor improvements were made&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;flesh&quot;&gt;Flesh&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.gif&quot; alt=&quot;flesh preview&quot; &#x2F;&gt;
&lt;em&gt;3rd area&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&#x2F;&quot;&gt;Flesh&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_oab&quot;&gt;@im_oab&lt;&#x2F;a&gt; is a 2D-horizontal shmup game with hand-drawn animation and
an organic&#x2F;fleshy theme. It is implemented using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;. This month&#x27;s updates
include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The game has BGM.&lt;&#x2F;li&gt;
&lt;li&gt;Support global leaderboard.&lt;&#x2F;li&gt;
&lt;li&gt;Integrate steam SDK using &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;steamworks&quot;&gt;steamworks&lt;&#x2F;a&gt; crate.&lt;&#x2F;li&gt;
&lt;li&gt;Add new enemy types for the 3rd area.&lt;&#x2F;li&gt;
&lt;li&gt;Add squeezing effect when the enemy gets hit.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cybergate&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UClrsOso3Xk2vBWqcsHC3Z4Q&quot;&gt;CyberGate&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cybergate&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cybergate.jpg&quot; alt=&quot;hundreds of colliding colored balls in the air&quot; &#x2F;&gt;
&lt;em&gt;The server and clients are able to smoothly handle
over a thousand balls rained from above&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;CyberGate (&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UClrsOso3Xk2vBWqcsHC3Z4Q&quot;&gt;YouTube&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;R7DkHqw7zJ&quot;&gt;Discord&lt;&#x2F;a&gt;) by CyberSoul
is a new multiplayer project that aims at procedurally generating distinct
universes and gameplay experiences. CyberGate is the name of the main world
where universes can be created and accessed by quantum portals.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Bandwidth became 16 times smaller by implementing entity prioritization
+ other techniques.&lt;&#x2F;li&gt;
&lt;li&gt;Interpolation and Jitter prediction makes entities way smoother.&lt;&#x2F;li&gt;
&lt;li&gt;Automatic and Reliable Spawn and Despawn of entities.&lt;&#x2F;li&gt;
&lt;li&gt;Many other features and optimizations to do with rapier 3d physics,
wgpu renderer, and quinn (quic) protocol.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;R7DkHqw7zJ&quot;&gt;Join the Discord server&lt;&#x2F;a&gt; to participate in tests.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vy7vms&#x2F;multiplayer_stress_test_1_million_balls&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;botnet&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;botnet&quot;&gt;Botnet&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#botnet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;botnet.png&quot; alt=&quot;A grid with dots and arrows&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;botnet&quot;&gt;Botnet&lt;&#x2F;a&gt; is an upcoming programming-based multiplayer game, where you write
scripts (compiled to WebAssembly) to control robots. Coordinate your network
of bots to gather resources, build new industry, and expand your control of
the server!&lt;&#x2F;p&gt;
&lt;p&gt;This month was primarily spent on BotnetReplayViewer - a visual program to
watch matches and inspect entity data.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, the antenna structure was added. Building an antenna gives you
control over the bay (room) it&#x27;s in, letting you build additional structures,
and increasing the total number of bots you can control. Bots can also use
antennas to store resources.&lt;&#x2F;p&gt;
&lt;p&gt;Interested in contributing? Head over to the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;botnet&#x2F;discussions&#x2F;categories&#x2F;ideas&quot;&gt;Github discussion page&lt;&#x2F;a&gt; and suggest some ideas!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;re-rolling&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mystal.itch.io&#x2F;re-rolling&quot;&gt;Re-Rolling!&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#re-rolling&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;re-rolling_gameplay.png&quot; alt=&quot;Re-rolling gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mystal.itch.io&#x2F;re-rolling&quot;&gt;Re-Rolling!&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mystalice&quot;&gt;@mystalice&lt;&#x2F;a&gt; is a top-down 2D
survival shooter where you fight off a horde of rats using weapons you randomly
rolled.&lt;&#x2F;p&gt;
&lt;p&gt;The game was created for &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;gmtk-jam-2022&quot;&gt;GMTK Jam 2022&lt;&#x2F;a&gt; in 48 hours and was
heavily inspired by &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1966900&#x2F;20_Minutes_Till_Dawn&#x2F;&quot;&gt;20 Minutes Till Dawn&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Re-Rolling! was made with Bevy using heron for physics, bevy_egui for in-game
UI, and a handful of other helpful crates and plugins. You can browse the source
on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mystal&#x2F;re-rolling&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;robo-instructus-3-years-old&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2022&#x2F;07&#x2F;16&#x2F;3-years-old.html&quot;&gt;Robo Instructus: 3 Years Old&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus-3-years-old&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;robo-os.jpg&quot; alt=&quot;game logo + OS logos&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In 2019 the programming puzzler &lt;a href=&quot;https:&#x2F;&#x2F;www.roboinstruct.us&quot;&gt;Robo Instructus&lt;&#x2F;a&gt; was released
on &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Steam&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;bigabgames.itch.io&#x2F;robo-instructus&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2022&#x2F;07&#x2F;16&#x2F;3-years-old.html&quot;&gt;&amp;quot;Robo Instructus: 3 Years Old&amp;quot;&lt;&#x2F;a&gt;
about how well the game did in the last year &amp;amp; to date: Sales by
platform&#x2F;country&#x2F;OS, player feedback, reviews &amp;amp; game updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;simon-arcade&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Vrixyz&#x2F;simon&quot;&gt;Simon Arcade&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#simon-arcade&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;simon.gif&quot; alt=&quot;Simon arcade gameplay with arrows and buttons in different colors&quot; &#x2F;&gt;
&lt;em&gt;a Simon Arcade gameplay with cheats enabled&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Based on &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Simon_(game)&quot;&gt;Simon (Original)&lt;&#x2F;a&gt;, made with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt;,
the goal of this game is to push buttons in the correct order,
in an ever-increasing sequence.&lt;&#x2F;p&gt;
&lt;p&gt;This game was made to fit with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-arcade&#x2F;bevy-rust-arcade&quot;&gt;Rust Arcade Cabinet&lt;&#x2F;a&gt;
and was showcased at &lt;a href=&quot;https:&#x2F;&#x2F;rustconf.com&quot;&gt;RustConf Portland&lt;&#x2F;a&gt; on August 5th 2022.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Gliding above a forest&quot; &#x2F;&gt;
&lt;em&gt;New cave systems to explore&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In July, Veloren released 0.13! You can &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;release-0-13&quot;&gt;read the full blog post&lt;&#x2F;a&gt;
that includes a trailer for the release party, and information about the new
features in the release. This release party set a new record for most players on
the server at once, going from 195 to now 277! This version brings modular
weapons, real-time weather, cliff towns, cave biomes, level of detail trees, and
much more.&lt;&#x2F;p&gt;
&lt;p&gt;Other than the release party, July saw lots of work getting done. The
translation system is undergoing an overhaul. Work is being done on the
Scrolling Combat Text system, which gives some visual indicator to how much
damage or healing you&#x27;re taking. Though is going into how to better handle
server-side physics to reduce latency.&lt;&#x2F;p&gt;
&lt;p&gt;July&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-179&quot;&gt;#179&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-180&quot;&gt;#180&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-181&quot;&gt;#181&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-182&quot;&gt;#182&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;agma&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TuckerBMorgan&#x2F;Agma&quot;&gt;Agma&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#agma&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;agma.gif&quot; alt=&quot;an animated black-colored character runs around and attacks anoter one&quot; &#x2F;&gt;
&lt;em&gt;Moving around&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TuckerBMorgan&#x2F;Agma&quot;&gt;Agma&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;T_B_Morgan&quot;&gt;@TuckerBMorgan&lt;&#x2F;a&gt; is a 3D game built in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mooman219&#x2F;Storm&quot;&gt;Storm Engine&lt;&#x2F;a&gt; that is based
on games like Lost Ark and Diablo. The author has been writing about their experience
with changing how they approach working on personal projects &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@tucker.bull.morgan&#x2F;summoning-a-devil-544b130c8889&quot;&gt;here&lt;&#x2F;a&gt;.
It is built using a custom UDP-based networking stack, a custom ECS,
and a custom-skinned mesh renderer to maximize what the author could learn.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;combine-conquer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer.html&quot;&gt;Combine&amp;amp;Conquer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#combine-conquer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cnc.gif&quot; alt=&quot;zoomin gout from individual tiles to the whole space system&quot; &#x2F;&gt;
&lt;em&gt;Seamless transition between planet and space views&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martinbucksoftware.itch.io&quot;&gt;Combine&amp;amp;Conquer&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;I3ck&quot;&gt;Martin Buck&lt;&#x2F;a&gt; is a WIP strategy game
about automation similar to Satisfactory or Factorio.
This month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer&#x2F;2022-07-06-v0.0.8.html&quot;&gt;Audio support, a new space view, colonization of planets,
inventory overlay, and better notifications&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer&#x2F;2022-07-31-v0.0.9.html&quot;&gt;New textures for structures, info box, updated overlays and modles&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;life-code&quot;&gt;Life Code&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#life-code&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=a6ZnhXGp3JI&quot;&gt;&lt;img src=&quot;lifecode.jpg&quot; alt=&quot;Youtube video preview: lowpoly raccoon, &amp;quot;crazy eco dong game&amp;quot; text and logos of Bevy, Rust and WebAssembly&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=a6ZnhXGp3JI&quot;&gt;Bytellation shared the first video devlog&lt;&#x2F;a&gt; of a WIP ecosystem
coding game &amp;quot;Life Code&amp;quot;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The game is intended to run in the browser and will be written
in Rust which will be compiled to WASM.
I&#x27;m using a very new and not yet matured game engine called Bevy.
I will be creating the art and models in the game using Blender.&lt;&#x2F;p&gt;
&lt;p&gt;This will be a coding game which means players will have to use languages
such as Python, Javascript, Rust, C++, and hopefully many more.
It will be possible to play even if you don&#x27;t know how to code but the game
will try to guide you to use real code instead of predefined behavior sets.
Follow my journey where I try to create an impossible solo indie game
with little to no game dev experience.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-v0-8&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&quot;&gt;Bevy v0.8&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-v0-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_terrain.jpg&quot; alt=&quot;bevy terrain&quot; &#x2F;&gt;
&lt;em&gt;Bevy-shaped mountains in a Bevy-based Witcher 3 terrain texturing tool built by
rmemr&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; is a refreshingly simple data-driven game engine built in Rust. It
is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;free and open source&lt;&#x2F;a&gt; forever!&lt;&#x2F;p&gt;
&lt;p&gt;Bevy 0.8 was a massive community effort. You can check out the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&quot;&gt;full release
blog post here&lt;&#x2F;a&gt;, but here are some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#new-material-system&quot;&gt;New Material System&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#camera-driven-rendering&quot;&gt;Camera-driven Rendering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#built-in-shader-modularization&quot;&gt;Built-in Shader Modularization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#spotlights&quot;&gt;Spot Lights&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#visibility-inheritance&quot;&gt;Visibility Inheritance&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#wgpu-0-13-new-wgsl-shader-syntax&quot;&gt;Upgraded to wgpu 0.13&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#automatic-mesh-tangent-generation&quot;&gt;Automatic Mesh Tangent Generation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#render-phase-sorting-optimization&quot;&gt;Renderer Optimizations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#scene-bundle&quot;&gt;Scene Bundle&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#scripting-modding-progress-untyped-ecs-apis&quot;&gt;Scripting &#x2F; Modding Progress&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#query-intoiter&quot;&gt;ECS Query Ergonomics and Usability&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#ecs-lifetimed-pointers&quot;&gt;ECS Internals Refactors&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#bevy-reflection-improvements&quot;&gt;Reflection Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#hierarchy-commands&quot;&gt;Hierarchy Commands&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-8&#x2F;#taffy-migration-a-refreshed-ui-layout-library&quot;&gt;Bevy UI Now Uses Taffy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;wc0sqc&#x2F;bevy_08&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32287828&quot;&gt;Hacker News&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1553411157662187521&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dims&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&quot;&gt;Dims&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dims&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dims-concept-art.jpg&quot; alt=&quot;Concept art of a player creating a world in Dims&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&quot;&gt;Dims&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DimsWorlds&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Z5CAVmNE57&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCR5gOwS7uSl0a0dl7MLQoqg&quot;&gt;YouTube&lt;&#x2F;a&gt;) is a pre-alpha collaborative open-world
creation platform.
Users can hop in sessions and build a game together, allowing everyone
to bring out their inner game-maker.&lt;&#x2F;p&gt;
&lt;p&gt;In July, development continued to make great strides. Some of the highlights
include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Continued work on the audio system, including in-game graphs of attenuation
and other audio-related functions&lt;&#x2F;li&gt;
&lt;li&gt;The introduction of an intent system that allows for user actions to be
undone and replayed arbitrarily&lt;&#x2F;li&gt;
&lt;li&gt;A complete UI facelift using Material UI icons and a new design language&lt;&#x2F;li&gt;
&lt;li&gt;A new scripting system using WebAssembly + WASI and Rust as a guest language
(look forward to an article on this soon!)&lt;&#x2F;li&gt;
&lt;li&gt;The beginnings of a shared asset database that lets you and your team easily
share assets amongst each other and with other projects&lt;&#x2F;li&gt;
&lt;li&gt;Various infrastructural and rendering fixes, including more accurate PBR&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Want to try Dims out for yourself? Come join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Z5CAVmNE57&quot;&gt;Discord&lt;&#x2F;a&gt; to be
notified of future public tests, see the latest features before everyone else,
and to talk to the devs personally.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot-rust.png&quot; alt=&quot;godot-rust logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;godot-rust (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;FNudpBD&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a Rust library that provides bindings for the Godot game engine.&lt;&#x2F;p&gt;
&lt;p&gt;The last few months have been a bit quieter around godot-rust. A lot of this
can be attributed to developers exploring the &lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&#x2F;article&#x2F;introducing-gd-extensions&quot;&gt;GDExtension API&lt;&#x2F;a&gt;, the
successor of GDNative for Godot 4. At this point, a lot of the foundation is
still being built, however, some more concrete plans are outlined in
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;issues&#x2F;824&quot;&gt;#824&lt;&#x2F;a&gt;. Further updates will be posted in that issue or on Twitter.&lt;&#x2F;p&gt;
&lt;p&gt;Nevertheless, several improvements have been integrated to godot-rust since
0.10, with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;issues&#x2F;907&quot;&gt;version 0.10.1 on the horizon&lt;&#x2F;a&gt;. Some notable examples:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;GDScript utility functions like lerp, ease or linear2db (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;issues&#x2F;901&quot;&gt;#901&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Property support for standard collection types (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;issues&#x2F;883&quot;&gt;#883&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Methods for Rect2 and Aabb (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;issues&#x2F;867&quot;&gt;#867&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gamercade&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamercade.io&quot;&gt;Gamercade&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gamercade&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gamercade.gif&quot; alt=&quot;Gamercade preview&quot; &#x2F;&gt;
&lt;em&gt;WASM 3d CPU Rendering On a 2d Fantasy Console?&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamercade.io&quot;&gt;Gamercade&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Qafv2Fpt5j&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamercade-io&quot;&gt;Github&lt;&#x2F;a&gt;)
by @RobDavenport is a WASM-powered fantasy console focused
on building multiplayer neo-retro games.&lt;&#x2F;p&gt;
&lt;p&gt;After over half a year in development, Gamercade and related tools are ready
for pre-alpha testing. This includes the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamercade-io&#x2F;gamercade_console&quot;&gt;console&lt;&#x2F;a&gt; itself,
as well as the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamercade-io&#x2F;gamercade_editor&quot;&gt;editor&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Gamercade&#x27;s killer feature is the ease of developing multiplayer games.
The console is able to simplify networked game development process
in the best way possible: build a local multiplayer game, and get full online
play for free!&lt;&#x2F;p&gt;
&lt;p&gt;The WASM Api features powerful but simple built-in features like input,
2d graphics, random number generation, and more. Limitations do exist, but are
flexible, such as resolutions up to 1920 x 1080, and a maximum of 256 color
palettes with up to 64 colors each.&lt;&#x2F;p&gt;
&lt;p&gt;The community around the project is small, but is looking to expand.
Come on over to the [subreddit][Gamercade-Subreddit], or hang out and chat
on &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Qafv2Fpt5j&quot;&gt;Discord&lt;&#x2F;a&gt;, where the developers interact with members
and post updates daily. The project is newly &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamercade-io&quot;&gt;open source&lt;&#x2F;a&gt;
and looking for contributors, suggestions, as well as awesome game demos.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;w8idew&#x2F;announcing_gamercade_a_new_wasm_powered_fantasy&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;fantasyconsoles&#x2F;comments&#x2F;w8ics8&#x2F;announcing_gamercade_a_new_wasm_powered_fantasy&quot;&gt;&#x2F;r&#x2F;fantasyconsoles&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;sand-fall-with-compute-shaders-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;okkohakola.com&#x2F;posts&#x2F;sandfall_tutorial&quot;&gt;Sand Fall With Compute Shaders in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sand-fall-with-compute-shaders-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;draw_sand.gif&quot; alt=&quot;sandfall_8k&quot; &#x2F;&gt;
&lt;em&gt;Drawing Sand&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hakolao&quot;&gt;@hakolao&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;okkohakola.com&#x2F;posts&#x2F;sandfall_tutorial&quot;&gt;tutorial&lt;&#x2F;a&gt; about creating
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Conway%27s_Game_of_Life&quot;&gt;cellular automata&lt;&#x2F;a&gt; sand fall simulations with compute shaders.&lt;&#x2F;p&gt;
&lt;p&gt;Typically, cellular automata sand fall is done with the CPU due to the two-way
relationship between the cells on a grid. This article shows a way to tackle
sand fall creation using compute shaders to achieve massive parallelism.&lt;&#x2F;p&gt;
&lt;p&gt;Additional to compute shaders, this tutorial is a great introduction to the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vulkano-rs&#x2F;vulkano&quot;&gt;Vulkano&lt;&#x2F;a&gt; library. It also works as a
good base for learning how to create simple graphics pipelines. You will also
get to use Bevy and Egui.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vmynrq&#x2F;sand_fall_with_compute_shaders_in_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pathfinding-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.logrocket.com&#x2F;pathfinding-rust-tutorial-examples&quot;&gt;Pathfinding in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pathfinding-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;astar-search.png&quot; alt=&quot;Example of the results of doing an A* search from a start node to a goal node&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.logrocket.com&#x2F;pathfinding-rust-tutorial-examples&quot;&gt;Pathfinding in Rust: A tutorial with examples&lt;&#x2F;a&gt;
is an article with examples of how to use the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;pathfinding&quot;&gt;pathfinding&lt;&#x2F;a&gt;
crate to do breadth-first, Dijkstra&#x27;s, and A* search. It links to the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gregstoll&#x2F;rust-pathfinding&quot;&gt;gregstoll&#x2F;rust-pathfinding&lt;&#x2F;a&gt; repo which has working code for all of these.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;creating-mountains-from-planes-with-vertex-shaders-and-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=85uJc81SQZ4&quot;&gt;Creating Mountains From Planes with Vertex Shaders and Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#creating-mountains-from-planes-with-vertex-shaders-and-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=85uJc81SQZ4&quot;&gt;&lt;img src=&quot;creating-mountains-from-planes-with-vertex-shaders-and-bevy.png&quot; alt=&quot;vertex shaders example&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Creating mountains from planes with vertex shaders and Bevy&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&quot;&gt;@chrisbiscardi&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=85uJc81SQZ4&quot;&gt;video&lt;&#x2F;a&gt;
about using the new Material shader APIs in Bevy 0.8 to transform the
vertex positions in a custom mesh plane using a vertex shader.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&#x2F;status&#x2F;1549089599971938304&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-s-in-a-wgsl-fragment-shader-ft-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=SOOOc9-joVo&quot;&gt;What&#x27;s in a wgsl fragment shader? ft Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-s-in-a-wgsl-fragment-shader-ft-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=SOOOc9-joVo&quot;&gt;&lt;img src=&quot;whats-in-a-wgsl-fragment-shader-with-bevy.png&quot; alt=&quot;vertex shaders example&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;What&#x27;s in a wgsl fragment shader? ft Bevy&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&quot;&gt;@chrisbiscardi&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=SOOOc9-joVo&quot;&gt;video&lt;&#x2F;a&gt;
that introduces the new Material APIs in Bevy 0.8. It covers AsBindGroup,
uniforms, and using Perlin Noise in a fragment shader to render different
colors onto a cube in a variety of ways.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&#x2F;status&#x2F;1546909993726726144&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rusteroids&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLFOS-Gn3aXROnSfl26esPExssd-rQw6jD&quot;&gt;Rusteroids&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusteroids&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLFOS-Gn3aXROnSfl26esPExssd-rQw6jD&quot;&gt;&lt;img src=&quot;rusteroids-screenshot-tutorial15.png&quot; alt=&quot;A screenshot of the latest Rusteroids tutorial&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;filtoid&#x2F;rusteroids&quot;&gt;Rusteroids&lt;&#x2F;a&gt; is a tutorial recreating a clone of Asteroids
in Rust, using SDL2 and the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;specs&#x2F;latest&#x2F;specs&#x2F;&quot;&gt;Specs&lt;&#x2F;a&gt; library.&lt;&#x2F;p&gt;
&lt;p&gt;New episodes are released weekly and added to the playlist. The most
recent video shows how to safely create global state to store global values,
such as the high score. The most recent code has been released for Windows, on
&lt;a href=&quot;https:&#x2F;&#x2F;filtoid.itch.io&#x2F;rusteroids&quot;&gt;Itch.io&lt;&#x2F;a&gt; (with other platforms coming soon).&lt;&#x2F;p&gt;
&lt;p&gt;You can subscribe to the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC1m6P72nySpB3lKWDYGVipw&quot;&gt;YouTube Channel&lt;&#x2F;a&gt;,
to never miss an episode, or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ecatstudios&quot;&gt;@ecatstudios&lt;&#x2F;a&gt; on
Twitter!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ruggrogue-source-code-guide&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;ruggrogue&#x2F;source-code-guide&quot;&gt;RuggRogue Source Code Guide&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ruggrogue-source-code-guide&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ruggrogue.png&quot; alt=&quot;A screenshot from RuggRogue: a tiled view on a dungeon and a classic textual UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tung&quot;&gt;@tung&lt;&#x2F;a&gt; has been working on a simple web-playable roguelike &lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;ruggrogue&quot;&gt;RuggRogue&lt;&#x2F;a&gt;
inspired by the &lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;
and documented the source code structure in a guide:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want to learn about the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tung&#x2F;ruggrogue&quot;&gt;source code&lt;&#x2F;a&gt;, you&#x27;ll also want
to check out the &lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;ruggrogue&#x2F;source-code-guide&quot;&gt;RuggRogue Source Code Guide&lt;&#x2F;a&gt;:
a 23-chapter technical web book about the ideas,
algorithms and structure of the code.
It covers topics such as rendering, event handling, game states,
the hand-rolled field of view and pathfinding calculations,
game balance and more.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikes&#x2F;comments&#x2F;vluuud&#x2F;ruggrogue_a_simple_webplayable_roguelike_inspired&quot;&gt;&#x2F;r&#x2F;roguelikes&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vluy7u&#x2F;ruggrogue_a_simple_webplayable_roguelike_made&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;nes-bundler&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tedsteen&#x2F;nes-bundler&quot;&gt;NES Bundler&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nes-bundler&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nes-bundler.png&quot; alt=&quot;NES Bundler running Data Man with GUI showing&quot; &#x2F;&gt;
&lt;em&gt;NES Bundler in action&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tedsteen&#x2F;nes-bundler&quot;&gt;NES Bundler&lt;&#x2F;a&gt; is a NES ROM packaging tool by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tedsteen&quot;&gt;@tedsteen&lt;&#x2F;a&gt;.
Did you make a NES-game but none of your friends own a Nintendo? Don&#x27;t worry.
Put your ROM and configuration in NES Bundler and build an executable for Mac,
Windows or Linux. What you get is a single executable with&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simple UI for settings&lt;&#x2F;li&gt;
&lt;li&gt;Re-mappable Keyboard and Gamepad input (you bundle your default mappings).&lt;&#x2F;li&gt;
&lt;li&gt;Save&#x2F;Restore state&lt;&#x2F;li&gt;
&lt;li&gt;Netplay!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It&#x27;s early days, but the key features are there, and work is ongoing
to make it more mature!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blackjack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;blackjack&quot;&gt;Blackjack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#blackjack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;blackjack.gif&quot; alt=&quot;Blackjack: A procedural bridge being edited in real-time&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;blackjack&quot;&gt;Blackjack&lt;&#x2F;a&gt; by @setzer22 is a new procedural modeling application made in Rust,
using rend3, wgpu, and egui. It follows the steps of applications like
Houdini, or Blender&#x27;s geometry nodes project and provides a node-based
environment to compose procedural recipes to create 3d models.&lt;&#x2F;p&gt;
&lt;p&gt;The focus for the past few months has been on evolving Blackjack from a proof
of concept into a usable application. Its current status is not yet production
ready, but it can now be used to build complex procedural models editable inside
a game engine thanks to its new engine integration system.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the new features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A better data model for meshes, based on groups and channels.&lt;&#x2F;li&gt;
&lt;li&gt;Game engine integration with Godot, more engines coming soon.&lt;&#x2F;li&gt;
&lt;li&gt;Introduce Lua as an extension language.&lt;&#x2F;li&gt;
&lt;li&gt;Add many new nodes: Extrude along curve, Copy to points...&lt;&#x2F;li&gt;
&lt;li&gt;Add experimental support for L-Systems.&lt;&#x2F;li&gt;
&lt;li&gt;Reworked Look &amp;amp; Feel&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A talk about Blackjack&#x27;s vision and a tour of its features was shared at the
start of July in the &lt;a href=&quot;https:&#x2F;&#x2F;onrendering.com&#x2F;data&#x2F;papers&#x2F;catmark&#x2F;HalfedgeCatmullClark.pdf&quot;&gt;Rust gamedev meetup&lt;&#x2F;a&gt;. Interested
developers are encouraged to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;blackjack&quot;&gt;check the project out on GitHub&lt;&#x2F;a&gt; and
post on the Discussion boards!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-shadertoy-wgsl-and-glsl2wgsl&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eliotbo&#x2F;bevy_shadertoy_wgsl&quot;&gt;bevy_shadertoy_wgsl&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;eliotbo.github.io&#x2F;glsl2wgsl&#x2F;&quot;&gt;GLSL2WGSL&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-shadertoy-wgsl-and-glsl2wgsl&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shadertoy_wgsl_leon.gif&quot; alt=&quot;Shaders courtesy of @leondenise.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eliotbo&#x2F;bevy_shadertoy_wgsl&quot;&gt;bevy_shadertoy_wgsl&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;www.shadertoy.com&quot;&gt;Shadertoy&lt;&#x2F;a&gt; clone for the Bevy game engine,
where the GLSL shader language is replaced by WGSL. It already comes
with a dozen examples and plenty more to go. Feel free to add your own
shaders to the list!&lt;&#x2F;p&gt;
&lt;p&gt;Plus, &lt;a href=&quot;https:&#x2F;&#x2F;eliotbo.github.io&#x2F;glsl2wgsl&#x2F;&quot;&gt;GLSL2WGSL&lt;&#x2F;a&gt; is a new translator tool that should help migrate the
vast majority of GLSL code to WGSL.&lt;&#x2F;p&gt;
&lt;p&gt;The above GIF showcases the new additions to the examples for
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eliotbo&#x2F;bevy_shadertoy_wgsl&quot;&gt;bevy_shadertoy_wgsl&lt;&#x2F;a&gt;: two shaders originally written in &lt;a href=&quot;https:&#x2F;&#x2F;www.shadertoy.com&quot;&gt;Shadertoy&lt;&#x2F;a&gt; by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;leondenise&quot;&gt;@leondenise&lt;&#x2F;a&gt;, and translated to WGSL with the help of &lt;a href=&quot;https:&#x2F;&#x2F;eliotbo.github.io&#x2F;glsl2wgsl&#x2F;&quot;&gt;GLSL2WGSL&lt;&#x2F;a&gt;.
The first part is a reproduction of Joe Gardner from the movie Soul,
and the second part is a lightweight fluid shader.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite.png&quot; alt=&quot;Graphite logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;website&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a free,
in-development raster and vector 2D graphics editor that will be based around a
Rust-powered node graph compositing engine.&lt;&#x2F;p&gt;
&lt;p&gt;July&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;milestone&#x2F;17&quot;&gt;sprint&lt;&#x2F;a&gt; focused on editor-centric
refactors upgrading stopgap measures to more robust systems.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Making a splash: The default document is replaced by a welcome splash screen
following a refactor allowing for zero open documents.&lt;&#x2F;li&gt;
&lt;li&gt;Modifying for Macs: Input handling supports the nonstandard modifier keys on
Mac keyboards, including labels in the UI.&lt;&#x2F;li&gt;
&lt;li&gt;Setting a high bar: The menu bar cleans up actions and supports new ones like
&amp;quot;File&amp;quot; &amp;gt; &amp;quot;Import&amp;quot;. Displayed hotkeys are based on the actual key mapping
source, varying by OS.&lt;&#x2F;li&gt;
&lt;li&gt;Keeping organized: The editor codebase is restructured to cut away technical
debt and create consistency for new contributors and better docs going forward.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Open the &lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Graphite editor&lt;&#x2F;a&gt; in your browser to give it a try
and share your creations with #MadeWithGraphite on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nintendo-switch-will-be-a-tier-3-target-in-rust-1-64&quot;&gt;Nintendo Switch Will Be a Tier 3 Target in Rust 1.64&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nintendo-switch-will-be-a-tier-3-target-in-rust-1-64&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;88991&quot;&gt;The pull request by @jam1garner&lt;&#x2F;a&gt; that adds a no_std support for
the aarch64-nintendo-switch-freestanding target was merged this month
after a lengthy legal investigation.
This is the first step towards working on incrementally adding support
for the Nintendo Switch.
Check out &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jam1garner&#x2F;status&#x2F;1547814292107378695&quot;&gt;this Twitter thread&lt;&#x2F;a&gt; for more details
about the changes.&lt;&#x2F;p&gt;
&lt;p&gt;And btw, speaking of Nintendo targets: the std support for the Nintendo 3DS
(armv6k-nintendo-3ds) was &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;95897&quot;&gt;also merged this month&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;vzr6oq&#x2F;nintendo_switch_target_merged&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-godot&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rand0m-cloud&#x2F;bevy_godot&quot;&gt;bevy_godot&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-godot&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rand0m-cloud&#x2F;bevy_godot&quot;&gt;bevy_godot&lt;&#x2F;a&gt; is an in-development library that offers a familiar Bevy environment
inside of the &lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot Engine&lt;&#x2F;a&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rand0m-cloud&#x2F;bevy_godot&quot;&gt;bevy_godot&lt;&#x2F;a&gt; currently features Scene
Tree integration, collision detection, spawning Godot scenes from Bevy, and
included examples to demonstrate the API. The upcoming update will feature Godot
signal events, Bevy assets integration, and a full implementation of the Dodge
the Creeps example game.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rand0m-cloud&#x2F;bevy_godot&quot;&gt;bevy_godot&lt;&#x2F;a&gt; is looking for contributors to help grow the library to fit all
Godot Engine game development needs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt; is a fast, lightweight, and unopinionated archetypal ECS library.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#080&quot;&gt;Version 0.8&lt;&#x2F;a&gt; marks a breaking change to most methods that
previously took a generic type parameter &lt;code&gt;T: Component&lt;&#x2F;code&gt;, replacing them with
methods taking type parameters which must be &lt;em&gt;references to&lt;&#x2F;em&gt; component types
instead. This resolves a long-standing footgun where users accustomed to writing
&lt;code&gt;&amp;amp;T&lt;&#x2F;code&gt; in queries might write &lt;code&gt;world.get::&amp;lt;&amp;amp;T&amp;gt;&lt;&#x2F;code&gt;, interpreted by rustc as
referencing the valid component type &lt;code&gt;&amp;amp;&#x27;static T&lt;&#x2F;code&gt;, resulting in code that
compiles but fails to access the intended component.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-mod-wanderlust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_mod_wanderlust&quot;&gt;bevy_mod_wanderlust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-mod-wanderlust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_mod_wanderlust&quot;&gt;bevy_mod_wanderlust&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PROMETHIA-27&#x2F;bevy_mod_wanderlust&quot;&gt;GitHub&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PROMETHIA-27&quot;&gt;@PROMETHIA-27&lt;&#x2F;a&gt; is a character controller plugin for Bevy engine.&lt;&#x2F;p&gt;
&lt;p&gt;Inspired by &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=qdskE8PJy6Q&quot;&gt;this excellent video&lt;&#x2F;a&gt;,
it is implemented on top of &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier physics&lt;&#x2F;a&gt; and highly
customizable. Wanderlust includes a variety of settings to target many different
character controller types, including 2D&#x2F;3D platformers, spacecraft, and
first&#x2F;third person games.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lyon&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;Lyon&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lyon&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;lyon.png&quot; alt=&quot;Variable width stroke in action&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;Lyon&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;GitHub&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&quot;&gt;Nical&lt;&#x2F;a&gt;
is a collection of crates providing various 2D vector graphics utilities, including
fast tessellation algorithms, easy to integrate in typical GPU accelerated rendering
engines.&lt;&#x2F;p&gt;
&lt;p&gt;Lyon made its symbolic &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;lyon&#x2F;1.0.0&quot;&gt;1.0.0 release&lt;&#x2F;a&gt;
reflecting the stability of the project. Highlights in this release include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Initial support for variable line width in the stroke tessellator.&lt;&#x2F;li&gt;
&lt;li&gt;An efficient algorithm to query positions at given distances along a path.&lt;&#x2F;li&gt;
&lt;li&gt;Improved support for specifying custom endpoint attributes in paths and algorithms.&lt;&#x2F;li&gt;
&lt;li&gt;And more. You can read the &lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&#x2F;posts&#x2F;lyon-1-0.html&quot;&gt;announcement blog post here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;vwdxim&#x2F;announcing_lyon_100&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nicalsilva&#x2F;status&#x2F;1546424285442473987?s=20&amp;amp;t=S1fXSoh2zWHbfTImCGYpPQ&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;renet&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucaspoffo&#x2F;renet&quot;&gt;Renet&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#renet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;renet_bevy_demo.gif&quot; alt=&quot;3D capsles shooting red dots at each other&quot; &#x2F;&gt;
&lt;em&gt;Demo using renet and bevy&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucaspoffo&#x2F;renet&quot;&gt;Renet&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucaspoffo&quot;&gt;@lucaspoffo&lt;&#x2F;a&gt; is a network library to create
games with the Server-Client architecture.&lt;&#x2F;p&gt;
&lt;p&gt;Built on top of UDP, it has its own protocol to send and receive reliable messages
more suited for fast-paced games than TCP. Some other features are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Connection management&lt;&#x2F;li&gt;
&lt;li&gt;Authentication and encrypted connections&lt;&#x2F;li&gt;
&lt;li&gt;Communication through multiple types of channels:
&lt;ul&gt;
&lt;li&gt;Reliable Ordered: guarantee ordering and delivery of all messages&lt;&#x2F;li&gt;
&lt;li&gt;Unreliable Unordered: no guarantee of delivery or ordering of messages&lt;&#x2F;li&gt;
&lt;li&gt;Block Reliable: for bigger messages, such as level initialization&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Packet fragmentation and reassembly&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Renet comes with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucaspoffo&#x2F;renet&#x2F;tree&#x2F;master&#x2F;bevy_renet&quot;&gt;bevy_renet&lt;&#x2F;a&gt;, a plugin for the Bevy engine, and also with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucaspoffo&#x2F;renet&#x2F;tree&#x2F;master&#x2F;renet_visualizer&quot;&gt;renet_visualizer&lt;&#x2F;a&gt;, an egui interface to visualize network metrics.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;miniquad_gl2.gif&quot; alt=&quot;miniquad fileopen&quot; &#x2F;&gt;
&lt;em&gt;VirtualBox, gl2 as the only GPU acceleration available&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt; is a safe and cross-platform rendering library
focused on portability and low-end platform support.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;pull&#x2F;305&quot;&gt;OpenGl 2.1&#x2F;GLESv2&lt;&#x2F;a&gt; PR got merged, adding support for old
android phones, virtual machines, and just old computers.
While the PR itself is quite small, it solved a very old design issue:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;pull&#x2F;176&quot;&gt;compatibilities proposal&lt;&#x2F;a&gt;. Fixing this issue opened the door for
both lower-end backends, like gl1, and higher-level backends. Metal is the
next in line.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-mod-fbx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HeavyRain266&#x2F;bevy_mod_fbx&quot;&gt;bevy_mod_fbx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-mod-fbx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_fbx_maya_pbr.jpg&quot; alt=&quot;A model using a PBR shader featuring roughness and metalicness texture maps&quot; &#x2F;&gt;
&lt;em&gt;model courtesy of &lt;a href=&quot;https:&#x2F;&#x2F;www.artstation.com&#x2F;artwork&#x2F;bKJ0EE&quot;&gt;Samuel Rosario&lt;&#x2F;a&gt;, rendered in bevy&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HeavyRain266&#x2F;bevy_mod_fbx&quot;&gt;bevy_mod_fbx&lt;&#x2F;a&gt; is a pre-alpha library to load FBX (Autodesk Filmbox) files
into &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt; 0.8, based on &lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;crates&#x2F;fbxcel-dom&quot;&gt;fbxcel-dom&lt;&#x2F;a&gt;.
It currently:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Loads geometry and meshes&lt;&#x2F;li&gt;
&lt;li&gt;Loads mesh attributes such as color&lt;&#x2F;li&gt;
&lt;li&gt;Loads default material diffuse textures, normal maps, and emissive maps&lt;&#x2F;li&gt;
&lt;li&gt;Loads the custom Maya PBR materials, including all material textures&lt;&#x2F;li&gt;
&lt;li&gt;Load the scene tree and translate it to bevy&#x27;s hierarchy&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Planned features include providing a basic Lambert&#x2F;Phong shader
to better handle more standard materials,
loading animations and skinned mesh skeletons&#x2F;rigs.&lt;&#x2F;p&gt;
&lt;p&gt;The project is poorly tested and is looking for testers. It will soon be
available on crates.io.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shame&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&#x2F;shame&quot;&gt;shame&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shame&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;raymarch_shame.jpg&quot; alt=&quot;logo of shame - shader metaprogramming&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&#x2F;shame&quot;&gt;shame&lt;&#x2F;a&gt; lets you author shaders and pipeline layouts
in a single seamless piece of rust code. It offers:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a simple and lightweight setup,&lt;&#x2F;li&gt;
&lt;li&gt;type checks from input assembly all the way to fragment output,&lt;&#x2F;li&gt;
&lt;li&gt;(re)generate different shaders&#x2F;pipelines based on runtime parameters,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&#x2F;shame&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;shader hot reloading&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&#x2F;shame&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;examples using wgpu&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A Discord channel for questions&#x2F;feedback is linked in the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&#x2F;shame&quot;&gt;Github readme&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;!-- i am unable to generate a permanent discord invite link,
thats why i link to the project github, where i can update the
link once it is outdated --&gt;
&lt;h3 id=&quot;bonsai-bt&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sollimann&#x2F;bonsai&quot;&gt;bonsai-bt&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonsai-bt&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bonsai.png&quot; alt=&quot;A behavior tree visualization that starts with a &amp;quot;root&amp;quot; node and branches into leafs like &amp;quot;run&amp;quot; and &amp;quot;get in cover&amp;quot;&quot; &#x2F;&gt;
&lt;em&gt;A visualization of a simple NPC behavior tree&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sollimann&#x2F;bonsai&quot;&gt;bonsai-bt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sollimann&quot;&gt;@Sollimann&lt;&#x2F;a&gt; is a Rust implementation of behavior trees.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Behavior Tree (BT) is a data structure in which we can set the rules of how
certain behaviors can occur and the order in which they would execute.
BTs are a very efficient way of creating complex systems that
are both modular and reactive.
These properties are crucial in many applications,
which has led to the spread of BT from computer game programming
to many branches of AI and Robotics.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vxk8h9&#x2F;bonsaibt_a_behavior_tree_lib&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shades-and-shades-edsl&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;shades&quot;&gt;shades&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;shades-edsl&quot;&gt;shades-edsl&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shades-and-shades-edsl&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shades-edsl.png&quot; alt=&quot;a source code that uses shades and a running app with the result: a gradient from green to red&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phaazon.net&quot;&gt;@phaazon&lt;&#x2F;a&gt; has published &lt;a href=&quot;https:&#x2F;&#x2F;phaazon.net&#x2F;blog&#x2F;shades-edsl&quot;&gt;a detailed article&lt;&#x2F;a&gt; that introduces
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;shades&quot;&gt;shades&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;shades-edsl&quot;&gt;shades-edsl&lt;&#x2F;a&gt; - two Rust crates to write shaders by writing pure Rust:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;shades&quot;&gt;shades&lt;&#x2F;a&gt; crate provides all needed types and other building blocks&lt;&#x2F;li&gt;
&lt;li&gt;while &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;shades-edsl&quot;&gt;shades-edsl&lt;&#x2F;a&gt; provides a proc-macro &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Domain-specific_language#External_and_Embedded_Domain_Specific_Languages&quot;&gt;EDSL&lt;&#x2F;a&gt;
for transforming regular Rust code into the API from shades.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This crate provides an EDSL to build shaders, leveraging the Rust compiler (rustc)
and its type system to ensure soundness and typing.
Because shaders are written in Rust, this crate is completely language agnostic:
it can in theory target any shading language - the current tier-1 language
being GLSL. The EDSL allows to statically type shaders while still generating
the actual shading code at runtime.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;fdg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grantshandy&#x2F;fdg&quot;&gt;fdg&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fdg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fdg.png&quot; alt=&quot;black dots connected with ed lines in #d space&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grantshandy&#x2F;fdg&quot;&gt;fdg&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;grantshandy.github.io&quot;&gt;@grantshandy&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Force-directed_graph_drawing&quot;&gt;force-directed graph&lt;&#x2F;a&gt; drawing framework.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The goal of this project is to provide a force-directed graph framework
and algorithms for Rust, as well as 2D and 3D visualizers
that work on the web and desktop.
It sits on top of &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;petgraph&quot;&gt;petgraph&lt;&#x2F;a&gt; and manages the positions of your nodes.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can view all the examples online &lt;a href=&quot;https:&#x2F;&#x2F;grantshandy.github.io&#x2F;fdg&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The project consists of three parts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grantshandy&#x2F;fdg&#x2F;tree&#x2F;main&#x2F;fdg-sim&quot;&gt;fdg-sim&lt;&#x2F;a&gt; - the underlying force simulation framework that handles your
dataset&#x27;s positions based on a physics engine of your choice (or creation).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grantshandy&#x2F;fdg&#x2F;blob&#x2F;main&#x2F;fdg-macroquad&quot;&gt;fdg-macroquad&lt;&#x2F;a&gt; - a visualizer that uses macroquad for rendering.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grantshandy&#x2F;fdg&#x2F;tree&#x2F;main&#x2F;fdg-img&quot;&gt;fdg-img&lt;&#x2F;a&gt; - a SVG visualizer for your graphs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;w92aya&#x2F;fdg&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;HydrofoilG&quot;&gt;Hydrofoil Generation devs shared&lt;&#x2F;a&gt;
a bunch of screenshots and videos with a new boat.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;epcc10&quot;&gt;@epcc10&lt;&#x2F;a&gt; shared a few videos about Idu getting a
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;epcc10&#x2F;status&#x2F;1545918011185549313&quot;&gt;better water rendering and physics&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;epcc10&#x2F;status&#x2F;1547723415015919622&quot;&gt;better interaction with soil&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sov_gott_games&quot;&gt;Felix Windström&lt;&#x2F;a&gt; shared a couple of
Paddlepunks updates: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sov_gott_games&#x2F;status&#x2F;1543227926052847616&quot;&gt;a wizard leveling up their walls&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sov_gott_games&#x2F;status&#x2F;1548340577233580035&quot;&gt;increased the active time on witch&#x27;s doritos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;w2508b&#x2F;legend_of_worlds_1&quot;&gt;Legend of Worlds released their first devlog&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;cryscan.itch.io&#x2F;bounce-up&quot;&gt;Bounce Up!&lt;&#x2F;a&gt; block breaker game
shared a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=ohNQgahuj6U&quot;&gt;video preview of the practice mode&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;w4h4ad&#x2F;thetawave_play_itch&quot;&gt;Theta Wave is now is now playable in the browser on itch.io&lt;&#x2F;a&gt;.
Give it a try and let the author know what you think!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;FishFolly&quot;&gt;Fish Folly&lt;&#x2F;a&gt; posted a couple videos of
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=YRE5g57aZEg&quot;&gt;their new AI&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=RuoLInE34dM&quot;&gt;the falling over mechanic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;vt44wq&#x2F;media_punchy_v002&quot;&gt;Punchy v0.0.2&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;waltwb&#x2F;media_fish_fight_punchy_v003&quot;&gt;v0.0.3&lt;&#x2F;a&gt; were released, featuring
scenes, egui UI, AI, playable web build,
new enemy variants, controller remapping, and throwable bottles.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other tooling updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dagit&#x2F;annelid&quot;&gt;annelid&lt;&#x2F;a&gt; is a speedrun timer with autosplitter for fxpak&#x2F;sd2snes written
using egui.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulfigiel&#x2F;unitypacker&quot;&gt;unitypacker&lt;&#x2F;a&gt; is a tool for creating .unitypackages from the command line.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;c&#x2F;PhaestusFox&quot;&gt;@PhaestusFox&lt;&#x2F;a&gt; released a bunch of Bevy tutorial videos covering:
gamepads, touch input, bevy 0.8 update &amp;amp; migration, and hierarchy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;news&#x2F;0.13&quot;&gt;The &amp;quot;Learn WGPU&amp;quot; tutorial was updated to wgpu v0.13&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;KyleMayes &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;w2g16h&#x2F;another_vulkan_tutorial&quot;&gt;has ported vulkan-tutorial.com to vulkanalia&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomuxmon&#x2F;bevy_roguelike&quot;&gt;bevy_roguelike&lt;&#x2F;a&gt; is a project that implements reusable Bevy ECS
systems and components for writing roguelike games.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vp571t&#x2F;release_of_wgpu_v013_and_call_for_testing&quot;&gt;wgpu v0.13 and naga v0.9&lt;&#x2F;a&gt; bring the newest WGSL spec support,
improved presentation and pipelining, and lots of performance
and correctness improvements. The devs also decided to make the DX12 backend
default on Windows and are looking for testers.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;bevy_pancam&quot;&gt;bevy_pancam&lt;&#x2F;a&gt; is a 2d-camera plugin for Bevy that works with orthographic cameras.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to handpicked reddit&#x2F;twitter&#x2F;urlo&#x2F;etc threads that provide
useful information --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;vruvxx&#x2F;are_these_misconceptions_about_rust&quot;&gt;&amp;quot;Are these misconceptions about rust?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vrfjw2&#x2F;using_wgpu_crates_directly_or_bevy&quot;&gt;&amp;quot;Using WGPU + crates directly or Bevy?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;w9l1um&#x2F;a_2d_lightweight_graphics_library_rustonly&quot;&gt;&amp;quot;A 2D, lightweight graphics library, Rust-only?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;wbg7xg&#x2F;framework_or_libraries_for_developing_androidios&quot;&gt;&amp;quot;Framework or libraries for developing Android&#x2F;iOS games&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet#contribute&quot;&gt;&#x27;Are We Game Yet?&#x27; wants to know about projects&#x2F;games&#x2F;resources that
aren&#x27;t listed yet&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&#x2F;contribute&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help build the
new node graph and 2D rendering systems.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;wm0rl8&#x2F;this_month_in_rust_gamedev_36_july_2022&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1557819704684716035&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #35 - June 2022</title>
            <pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/035/</link>
            <guid>https://gamedev.rs/news/035/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 35th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#announcements&quot;&gt;Announcements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;035&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;announcements&quot;&gt;Announcements&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#announcements&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-gamedev-podcast&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-podcast&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;podcast.jpeg&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Rust Gamedev Podcast features interviews with indie game developers creating
titles with the Rust programming language. It covers technical topics as well as
the business of open source and commercial indie games development.&lt;&#x2F;p&gt;
&lt;p&gt;In June, &lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-carter-anderson-bevy&quot;&gt;the ninth episode&lt;&#x2F;a&gt; was released. It&#x27;s a chat with Carter
Anderson about the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy engine&lt;&#x2F;a&gt;, and a dive into its history.&lt;&#x2F;p&gt;
&lt;p&gt;Listen and Subscribe from the following platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast (simplecast)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.apple.com&#x2F;gb&#x2F;podcast&#x2F;rust-game-dev&#x2F;id1526304768&quot;&gt;Apple Podcasts&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;show&#x2F;7HRfGnTcXkLkQd9fxJbDGj&quot;&gt;Spotify&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feeds.simplecast.com&#x2F;C6NQglnL&quot;&gt;RSS Feed&lt;&#x2F;a&gt;,
or &lt;a href=&quot;https:&#x2F;&#x2F;podcasts.google.com&#x2F;feed&#x2F;aHR0cHM6Ly9mZWVkcy5zaW1wbGVjYXN0LmNvbS9DNk5RZ2xuTA&quot;&gt;Google Podcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 17th Rust Gamedev Meetup took place in June. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;drcX3dCS5MY&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. Here was the schedule from
the meetup:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Choir - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kvark&quot;&gt;@kvark&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;RustConf Arcade Cabinet - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;retime - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZKpot&quot;&gt;@Togg&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Graphite - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;graphiteeditor&quot;&gt;@GraphiteEditor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The meetups take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev
Discord server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;92d2228b&quot;&gt;July 9th&lt;&#x2F;a&gt;, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this
form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rusty-jam-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;blog&#x2F;rustyjam-02&quot;&gt;Rusty Jam 2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-jam-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;aaron.png&quot; alt=&quot;Aaron: a drawing of a humanoid fox&quot; &#x2F;&gt;
&lt;em&gt;Aaron, &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;blog&#x2F;rustyjam-02&quot;&gt;the mascot of the jam&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;blog&#x2F;rustyjam-02&quot;&gt;second Rusty Jam&lt;&#x2F;a&gt; just ended!
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam-2&#x2F;entries&quot;&gt;17 games&lt;&#x2F;a&gt; were completed and submitted
over the one-week jam. The games were rated by the community
and the top three games are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🥇 &lt;a href=&quot;https:&#x2F;&#x2F;uriopass.itch.io&#x2F;chick-the-dog&quot;&gt;&amp;quot;Chick the Dog&amp;quot;&lt;&#x2F;a&gt; by Uriopass&lt;&#x2F;li&gt;
&lt;li&gt;🥈 &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;a-walk-around-the-block&quot;&gt;&amp;quot;A walk around the block&amp;quot;&lt;&#x2F;a&gt; by ramirezmike&lt;&#x2F;li&gt;
&lt;li&gt;🥉 &lt;a href=&quot;https:&#x2F;&#x2F;logicprojects.itch.io&#x2F;fight-for-the-frontier&quot;&gt;&amp;quot;Fight for the Frontier&amp;quot;&lt;&#x2F;a&gt; by rand0m and logicprojects&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The Rusty Jam will be back, so stay tuned on
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;jZtz6y9gCJ&quot;&gt;the Rusty Jam Discord Server&lt;&#x2F;a&gt; for future updates!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rustconf-arcade-cabinet&quot;&gt;RustConf Arcade Cabinet&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustconf-arcade-cabinet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;arcade_cabinet.jpg&quot; alt=&quot;arcade cabinet&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo&lt;&#x2F;a&gt; is building a custom arcade cabinet that will be at
RustConf 2022 in Portland. It is an opportunity for Rust game developers to
share their games with the broader community. If you are interested in getting
your game on the cabinet, read &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1523715837726961664&quot;&gt;this Twitter thread&lt;&#x2F;a&gt; and
fill out the &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;onFm5fCygdbiArqJ7&quot;&gt;interest form&lt;&#x2F;a&gt;.
The arcade cabinet has been assembled and painted. He is currently in the process
of helping developers get their games playable on the machine. If you have a Bevy
game, you can use the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy-rust-arcade&quot;&gt;bevy-rust-arcade crate&lt;&#x2F;a&gt; to quickly get
your game compatible. Deadline is the end of July!
You can find the latest update &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1539032439284240386&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hydrofoil-generation&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hydrofoil-generation&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hgs_35.jpg&quot; alt=&quot;hgs_screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1448820&#x2F;Hydrofoil_Generation&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;facebook.com&#x2F;HydrofoilGenerationSailing&#x2F;&quot;&gt;Facebook&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;DtKgt2duAy&#x2F;&quot;&gt;Discord&lt;&#x2F;a&gt;)
is a realistic sailing&#x2F;foiling inshore simulator in development for PC&#x2F;Steam
that will put you in the driving seat of modern competitive sailing.
Hydrofoil Generation is based on a custom-made DirectX 11 based engine in
Rust.&lt;&#x2F;p&gt;
&lt;p&gt;June saw a lot of features added to the game, most notables being &amp;quot;New TV
Overlays&amp;quot;, &amp;quot;Control Assists&amp;quot;, &amp;quot;Ropes Rendering&amp;quot; plus several physics
improvements. Stefano Casillo, the developer went through all of them in
a recent &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;AqwqyL9RqAk&quot;&gt;devlog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Work in July will focus on the physics implementation of a new boat, a
foiling multihull coming with her own set of new challenges.&lt;&#x2F;p&gt;
&lt;p&gt;Hydrofoil Generation is targeting a Q4 2022 Early Access release on Steam.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ruggrogue&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;ruggrogue&#x2F;&quot;&gt;RuggRogue&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ruggrogue&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ruggrogue.png&quot; alt=&quot;RuggRogue gameplay screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;ruggrogue&#x2F;&quot;&gt;RuggRogue&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tung&#x2F;&quot;&gt;@tung&lt;&#x2F;a&gt; is a simple web-playable roguelike, inspired by the
&lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt; and made using Rust and SDL.
It can be played natively on Windows and Linux,
and in the browser thanks to Emscripten.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Discover new monsters and equipment the deeper you go.&lt;&#x2F;li&gt;
&lt;li&gt;Hunger and regeneration: stay fed and stay healed!&lt;&#x2F;li&gt;
&lt;li&gt;Choose between graphical tiles and ASCII display.&lt;&#x2F;li&gt;
&lt;li&gt;Menu-based UI with hotkeys.&lt;&#x2F;li&gt;
&lt;li&gt;Auto-run to quickly follow corridors and cross open space.&lt;&#x2F;li&gt;
&lt;li&gt;Save and load system.&lt;&#x2F;li&gt;
&lt;li&gt;New Game Plus mode!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The source code is complemented by the
&lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;ruggrogue&#x2F;source-code-guide&#x2F;&quot;&gt;RuggRogue Source Code Guide&lt;&#x2F;a&gt;,
a 23-chapter technical web book covering the ideas, algorithms, and structure of
the code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vluy7u&#x2F;ruggrogue_a_simple_webplayable_roguelike_made&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikes&#x2F;comments&#x2F;vluuud&#x2F;ruggrogue_a_simple_webplayable_roguelike_inspired&#x2F;&quot;&gt;&#x2F;r&#x2F;roguelikes&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-game-ports&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;64kramsystem&#x2F;rust-game-ports&quot;&gt;Rust Game Ports&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-game-ports&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust_game_ports.jpg&quot; alt=&quot;games collage&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rust Game Ports is a port of several games to Rust&#x2F;pure-Rust game engines.&lt;&#x2F;p&gt;
&lt;p&gt;This month the last planned port has been completed; the games are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Boing (Pong clone, ported to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Cavern (Bubble Bobble clone, ported to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Rusty Roguelike (from the &lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&quot;&gt;Hands-on Rust book&lt;&#x2F;a&gt;;
ECS ported to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Soccer (Sensible Soccer clone, ported to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FyroxEngine&#x2F;Fyrox&quot;&gt;Fyrox&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A Bevy ECS tutorial, based on Rusty Roguelike, has been published, and it&#x27;s
announced in this newsletter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vetovoima&quot;&gt;vetovoima&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vetovoima&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vetovoima.gif&quot; alt=&quot;vetovoima gravity manipulation GIF&quot; &#x2F;&gt;
&lt;em&gt;vetovoima gravity manipulation&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yourmagicisworking.itch.io&#x2F;vetovoima&quot;&gt;vetovoima&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MatiasKlemola&quot;&gt;@MatiasKlemola&lt;&#x2F;a&gt; is an arcade game
where you control gravity!&lt;&#x2F;p&gt;
&lt;p&gt;The world is a hollow circle with a star in the center. You&#x27;re the Yellow
Block and your goal is to navigate through shifting debris to the Tall Blue
Block before the time runs out. The challenge is to survive the chaos that
ensues from changes to gravity.&lt;&#x2F;p&gt;
&lt;p&gt;vetovoima is built with the Bevy engine using Rapier for physics and Lyon for
rendering (via Bevy plugins).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MatiasKlemola&#x2F;status&#x2F;1541338040521707521&quot;&gt;The alpha 1 build was recently released.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Source available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klemola&#x2F;vetovoima&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;botnet&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;botnet&quot;&gt;Botnet&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#botnet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;botnet.svg&quot; alt=&quot;botnet logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;botnet&quot;&gt;Botnet&lt;&#x2F;a&gt; is an upcoming programming-based multiplayer game,
where you write scripts (compiled to WebAssembly) to control robots.
Coordinate your bots to gather resources, build new industries,
and expand your control of the server.&lt;&#x2F;p&gt;
&lt;p&gt;This month saw the start of the project, and a majority of the foundational
code was written. Next month we&#x27;ll be adding more features, and aim to flesh out
the game beyond &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;botnet&#x2F;blob&#x2F;master&#x2F;example_bot&#x2F;src&#x2F;lib.rs&quot;&gt;basic pathfinding and resource harvesting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Interested in contributing? Head over to the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;botnet&#x2F;discussions&#x2F;categories&#x2F;ideas&quot;&gt;github discussion page&lt;&#x2F;a&gt; and suggest some ideas!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;star-machine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Seldom_SE&#x2F;status&#x2F;1532909654681849856&quot;&gt;Star Machine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#star-machine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;star_machine.png&quot; alt=&quot;Screenshot of a level in Star Machine&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Seldom_SE&#x2F;status&#x2F;1532909654681849856&quot;&gt;Star Machine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Seldom_SE&quot;&gt;@Seldom_SE&lt;&#x2F;a&gt; is a puzzle game built in Bevy, where
you wire together components to escape each level.&lt;&#x2F;p&gt;
&lt;p&gt;Although its development is currently inactive, the developer
recently made &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Seldom_SE&#x2F;status&#x2F;1532909654681849856&quot;&gt;a video demo&lt;&#x2F;a&gt; of the early levels.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;quoridor-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;baehyunsol&#x2F;Quoridor-rs&quot;&gt;Quoridor-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#quoridor-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;Quoridor-screenshot.png&quot; alt=&quot;Screenshot of a Quoridor-rs gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;baehyunsol&#x2F;Quoridor-rs&quot;&gt;Quoridor-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;baehyunsol&quot;&gt;@baehyunsol&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Quoridor&quot;&gt;Quoridor&lt;&#x2F;a&gt; game implemented in
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Quoridor is a 2-4 player strategy board game. Each player has a pawn.
They move the pawn or place a wall each round. The objective of the
game is to move the pawn to the opposite side of the board.&lt;&#x2F;p&gt;
&lt;p&gt;The game implements most of the basic Quoridor features, but it only
supports 2 players, not 3 or 4. It also doesn&#x27;t have AI players or
network games.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Gliding above a forest&quot; &#x2F;&gt;
&lt;em&gt;A glider ride above the woods at night&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In June, a memory issue was found within the graphics stack. Weather is also
getting closer to completion. There is a large write-up about it in one of &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-176&quot;&gt;this
month&#x27;s blog posts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Lots of work has also gone into optimizing the Site2 system. Site2 is used to
create many different shapes around the world, such as houses in towns, or
citadels around the world. With these optimizations, it will be significantly
easier to render chunks, which will have a dramatic effect on their load time.
You can read more about these optimizations in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-178&quot;&gt;this blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;June&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-175&quot;&gt;#175&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-176&quot;&gt;#176&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-177&quot;&gt;#177&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-178&quot;&gt;#178&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;harvest-hero-origins-summer-heat-update&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&#x2F;&quot;&gt;Harvest Hero Origins - Summer Heat Update!&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero-origins-summer-heat-update&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hho_summer.png&quot; alt=&quot;hho summer banner&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GemdropGames&quot;&gt;Gemdrop Games&lt;&#x2F;a&gt; have worked with their friends at &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RenaineGame&quot;&gt;Octosoft&lt;&#x2F;a&gt;
to bring Shroomella to Harvest Hero Origins!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;662340&#x2F;Renaine&#x2F;&quot;&gt;Renaine&lt;&#x2F;a&gt; is an upcoming Action Platformer game about Aine,
an immortal Phoenix Knight.&lt;&#x2F;p&gt;
&lt;p&gt;Shroomella is a Mushroom Shroom witch aiding Aine on her quest!
In Harvest Hero Origins, she uses her variety of magical mushrooms
to fight off the endless Grooble hordes.&lt;&#x2F;p&gt;
&lt;p&gt;On top of that, they&#x27;re adding:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new map&lt;&#x2F;li&gt;
&lt;li&gt;Two new cards&lt;&#x2F;li&gt;
&lt;li&gt;Two new enemies&lt;&#x2F;li&gt;
&lt;li&gt;A revised story boss fight&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The game is built on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald Game Engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chimera-rancher&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nightlyside.itch.io&#x2F;chimera-rancher&quot;&gt;Chimera Rancher&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#chimera-rancher&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;chimera_rancher.png&quot; alt=&quot;Chimera Rancher cover art&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nightlyside.itch.io&#x2F;chimera-rancher&quot;&gt;Chimera Rancher&lt;&#x2F;a&gt; is a game where you must defend your ranch
from an angry hoard of villagers with the help of your chimera friends!&lt;&#x2F;p&gt;
&lt;p&gt;Submitted as part of &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam-2&quot;&gt;Rusty jam #2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;cdsupina.itch.io&#x2F;&quot;&gt;cdsupina&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;nightlyside.itch.io&#x2F;&quot;&gt;Nightly Side&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;hedgein.itch.io&#x2F;&quot;&gt;hedgein&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;tigleym.itch.io&#x2F;&quot;&gt;tigleym&lt;&#x2F;a&gt;. This
game was developed using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;bevy&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ggez-0-8-0-rc0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; 0.8.0-rc0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggez-0-8-0-rc0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;..&#x2F;005&#x2F;ggez-logo-maroon-full.svg&quot; alt=&quot;ggez logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nobbele&quot;&gt;@nobbele&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PSteinhaus&quot;&gt;@PSteinhaus&lt;&#x2F;a&gt; is a cross-platform game
framework for making 2D games with minimum friction. It aims to implement an
API based on the LÖVE game framework.&lt;&#x2F;p&gt;
&lt;p&gt;This version has finally moved ggez away from pre-ll gfx and into the world
of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;! This hopefully means fewer bugs, greater stability, and easier
maintainability at the cost of some low-performance devices such as the
Raspberry Pi.&lt;&#x2F;p&gt;
&lt;p&gt;As for the user-facing API:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Instead of module functions, you now have methods on sub-contexts, which
look like &lt;code&gt;ctx.keyboard.is_key_pressed(key)&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;You are now required to pass around an explicit canvas to draw onto.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;DrawParam&lt;&#x2F;code&gt; now has a Z (aka layer) parameter, so you don&#x27;t have to draw
objects in order.&lt;&#x2F;li&gt;
&lt;li&gt;Shaders are far easier to use, via normal Rust structs with a simple derive.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As this is a rather large update and a first release candidate, there are plenty
of bugs that are currently being fixed - please send any issues you encounter
to their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues&quot;&gt;issue tracker&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v6a3kn&#x2F;ggez_080rc0_is_out&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dims&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&quot;&gt;Dims&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dims&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=piEAGSFx-QU&quot;&gt;&lt;img src=&quot;dims-recreating-rhodes.jpg&quot; alt=&quot;Video preview: Recreating Rhodes But In Our Own Game Engine&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&quot;&gt;Dims&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DimsWorlds&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Z5CAVmNE57&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCR5gOwS7uSl0a0dl7MLQoqg&quot;&gt;YouTube&lt;&#x2F;a&gt;) is a pre-alpha collaborative open-world
creation platform.
Users can hop in sessions and build a game together, allowing everyone
to bring out their inner game-maker.&lt;&#x2F;p&gt;
&lt;p&gt;June brought about several developments for the platform, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Several development and testing streams, with the latest being
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=piEAGSFx-QU&quot;&gt;a recreation of Rhodes from Red Dead Redemption 2&lt;&#x2F;a&gt; within
the engine&lt;&#x2F;li&gt;
&lt;li&gt;A new audio engine with advanced real-time synthesis and composition
capabilities, including network synchronisation&lt;&#x2F;li&gt;
&lt;li&gt;Improved terrain manipulation tools, including new brushes, biome presets,
and more intuitive UI
&lt;ul&gt;
&lt;li&gt;Choose between &amp;quot;Nordic Mountains&amp;quot; ⛰ and &amp;quot;Colorado Deserts&amp;quot; 🏜&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Various improvements to the rendering engine, including decal and billboard
rendering, FBX loading, macOS support, and more&lt;&#x2F;li&gt;
&lt;li&gt;Initial work on a versatile new scripting system, with independent threads of
execution for every object&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Want to try Dims out for yourself? Come join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Z5CAVmNE57&quot;&gt;Discord&lt;&#x2F;a&gt; to be
notified of future public tests, see the latest features before everyone else,
and to talk to the devs personally.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fileopen.gif&quot; alt=&quot;miniquad fileopen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt; is a safe and cross-platform rendering library
focused on portability and low-end platform support.&lt;&#x2F;p&gt;
&lt;p&gt;In versions prior to 0.3, it was virtually impossible to integrate, for
example, a big in-app payments or advertisement SDK into a Miniquad Android
game. 0.3 has solved this, giving the possibility to interop with any Java code.
The developer has posted &lt;a href=&quot;https:&#x2F;&#x2F;macroquad.rs&#x2F;articles&#x2F;java&#x2F;&quot;&gt;a write-up of this functionality&lt;&#x2F;a&gt; on
the macroquad site.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;brontefy-me-devlog-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oNxMN47tKxs&quot;&gt;Brontefy Me Devlog #3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#brontefy-me-devlog-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;brontefyme.png&quot; alt=&quot;Brontefy Me Devlog #3&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hedgein&quot;&gt;@hedgein&lt;&#x2F;a&gt; continues the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oNxMN47tKxs&quot;&gt;Brontefy Me&lt;&#x2F;a&gt; series!
In this latest devlog, she gives an update on where Brontefy Me will be
heading and why it slowed down. During a recent &lt;a href=&quot;https:&#x2F;&#x2F;www.twitch.tv&#x2F;hedgein&quot;&gt;stream&lt;&#x2F;a&gt;, it
was also mentioned that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hedgein&quot;&gt;@hedgein&lt;&#x2F;a&gt; is leaning towards hosting
a monthly Brontefy Me Game Jam for her community, as game jams give her
better accountability. Further updates will be given in her &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;FnU6hxNGaP&quot;&gt;Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;learn-bevy-s-ecs-by-ripping-off-someone-else-s-project&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;saveriomiroddi.github.io&#x2F;learn_bevy_ecs_by_ripping_off&quot;&gt;Learn Bevy&#x27;s ECS by ripping off someone else&#x27;s project&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learn-bevy-s-ecs-by-ripping-off-someone-else-s-project&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;learn_bevys_ecs_by_ripping_off.png&quot; alt=&quot;Learn Bevy&#x27;s ECS by ripping off&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Learn Bevy&#x27;s ECS by ripping off someone else&#x27;s project&amp;quot; is a mini-book that uses
the game Rusty Roguelike from the book &lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&quot;&gt;Hands-on Rust&lt;&#x2F;a&gt;
as a base, in order to explain Bevy&#x27;s ECS.&lt;&#x2F;p&gt;
&lt;p&gt;The idea is for a beginner to learn ECS concepts from the base book, then apply
them using Bevy; the structure of the game is ideal for a gentle introduction to
ECS architecture.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-basics&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PL6uRoaCCw7GN_lJxpKS3j-KXuThRiSXc6&quot;&gt;Bevy Basics&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-basics&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;PhaestusFox&quot;&gt;@PhaestusFox&lt;&#x2F;a&gt; is close to finishing the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PL6uRoaCCw7GN_lJxpKS3j-KXuThRiSXc6&quot;&gt;Bevy Basics&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PL6uRoaCCw7GMWzJ-L2cU5ZruWkEld6a_N&quot;&gt;User Input&lt;&#x2F;a&gt; mini-series.&lt;&#x2F;p&gt;
&lt;p&gt;In this 5 part mini-series, they cover how a developer can go about collecting
user input using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;pB3ERI5JtrA&quot;&gt;Episode 1&lt;&#x2F;a&gt; is an overview of Bevy&#x27;s various input structs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;G37yUGL3e1U&quot;&gt;Episode 2&lt;&#x2F;a&gt; covers keyboard presses&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;1q5iQsLVGJA&quot;&gt;Episode 3&lt;&#x2F;a&gt; covers mouse clicks and movement&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;PjLozjlOgJ4&quot;&gt;Episode 4&lt;&#x2F;a&gt; covers gamepad buttons and joysticks&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;PhaestusFox&quot;&gt;Episode 5&lt;&#x2F;a&gt; covers touchscreen or drawing pad strokes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;noumenal&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noumenal.app&quot;&gt;Noumenal&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#noumenal&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;noumenal.gif&quot; alt=&quot;Screen recording showing the construction of a heart shape using the Noumenal app.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noumenal.app&quot;&gt;Noumenal&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;noumenal&#x2F;id1584884105&quot;&gt;App Store&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;PFeZQE48gG&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;noumenal_app&quot;&gt;Twitter&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;hackerfoo.com&quot;&gt;@HackerFoo&lt;&#x2F;a&gt; is an elegant 3D solid modeling app for iOS.&lt;&#x2F;p&gt;
&lt;p&gt;After a final stretch of performance improvements, bug fixes, and even some new
features, Noumenal was released and is available on Apple&#x27;s App Store!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;vj40qq&#x2F;noumenal_my_3d_modeling_app_for_ios&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;website&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a free,
in-development raster and vector 2D graphics editor. It will be powered by a
node graph compositing engine that supercharges your layer stack, providing a
completely non-destructive editing experience.&lt;&#x2F;p&gt;
&lt;p&gt;June&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;milestone&#x2F;16&quot;&gt;sprint 16&lt;&#x2F;a&gt; focused mainly on bug fixes and big
under-the-hood changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ahead of the curve: A long-awaited refactor replaces the underlying
Bézier curve data structure in alignment with requirements for Pen tool
improvements and the upcoming node system.&lt;&#x2F;li&gt;
&lt;li&gt;Sending mixed messages: The internal messaging system was upgraded to
sequence the message processing in a more predictable stack-based order. A new
subscription-based event broadcaster was integrated as well.&lt;&#x2F;li&gt;
&lt;li&gt;Back on the menu: The application menu bar content definitions were moved
from the JS frontend to a permanent home in the Rust backend.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Open the &lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Graphite editor&lt;&#x2F;a&gt; in your browser to give it a try
and share your creations with #MadeWithGraphite on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;quad-gif&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollej&#x2F;quad-gif&quot;&gt;quad-gif&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#quad-gif&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;quad-gif.png&quot; alt=&quot;quad-gif screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollej&#x2F;quad-gif&quot;&gt;quad-gif&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ollej&quot;&gt;@ollej&lt;&#x2F;a&gt; is a tiny library that can be used in a Macroquad game
to show a looping GIF animation. It also includes a small example binary that
displays a GIF in the middle of a window. The library can also be used as a
simple way to make an animation from a list of textures.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;psf2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;psf2&quot;&gt;psf2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#psf2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;psf2&quot;&gt;psf2&lt;&#x2F;a&gt; is a minimal, unopinionated, no-std parser for the v2
&lt;a href=&quot;https:&#x2F;&#x2F;www.win.tue.nl&#x2F;%7Eaeb&#x2F;linux&#x2F;kbd&#x2F;font-formats-1.html&quot;&gt;PC Screen Font&lt;&#x2F;a&gt; bitmap font format.&lt;&#x2F;p&gt;
&lt;p&gt;PSF2 fonts are simple, compact, and readily available due to their use as Linux
console fonts. They are extremely fast to draw at their intended resolution,
making them a great choice to quickly get text on the screen, especially when a
low-resolution, fixed-width aesthetic is desired.&lt;&#x2F;p&gt;
&lt;p&gt;The psf2 crate parses font data, exposing font size, glyph lookup, and iterators
to traverse a glyph&#x27;s bitmap for easy rendering. Due to its limited scope, it is
much smaller and faster than conventional text rasterizers but cannot support
variable-width, anti-aliased, or shaped text.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ezinput&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ezinput&#x2F;versions&quot;&gt;ezinput&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ezinput&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ezinput&#x2F;versions&quot;&gt;ezinput&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eexsty&quot;&gt;@eexsty&lt;&#x2F;a&gt; is a powerful input-agnostic library,
targeting complete support for axis and button handling in the Bevy game
engine.&lt;&#x2F;p&gt;
&lt;p&gt;EZInput strives to be simple as possible using the nifty ECS features that Bevy
offers, while still being powerful and flexible without using any unsafe code.
This and the previous 0.3.* releases were targeted for performance and
ergonomics improvements, including a new declarative macro to allow for
cleaner and smaller code.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;glam-v0-21&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt; v0.21&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glam-v0-21&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt; is a simple and fast linear algebra crate for games and graphics.&lt;&#x2F;p&gt;
&lt;p&gt;This month version 0.21 of glam was released. Because glam is not a generic
library, when support was added for &lt;code&gt;f64&lt;&#x2F;code&gt;, &lt;code&gt;i32&lt;&#x2F;code&gt;, and &lt;code&gt;u32&lt;&#x2F;code&gt; types back in glam
0.12, macros were used internally to avoid a lot of code duplication. This
unfortunately obfuscated the internals of glam for anyone who needed to view the
source.&lt;&#x2F;p&gt;
&lt;p&gt;As of the 0.21 release the majority of glam code is now generated using an
offline tool and committed to the repo. The macros that were used to define
glam&#x27;s internal implementation are gone. This means what users see when reading
docs or stepping through glam in the debugger is plain old Rust code. Many
functions have also been made &lt;code&gt;const fn&lt;&#x2F;code&gt; removing the need for macros to create
&lt;code&gt;const&lt;&#x2F;code&gt; values.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kajiya&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;kajiya&#x2F;&quot;&gt;kajiya&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kajiya&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kajiya.jpg&quot; alt=&quot;A rendering of a fancy loft apartment&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;kajiya&#x2F;&quot;&gt;kajiya&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;h3r2tic&quot;&gt;@h3r2tic&lt;&#x2F;a&gt; is an experimental real-time global illumination
renderer.&lt;&#x2F;p&gt;
&lt;p&gt;In June, a long-standing branch landed, bringing with it a complete
overhaul of indirect lighting. The new implementation uses spatiotemporal
reservoir resampling (ReSTIR) and a novel irradiance cache, bringing forth
larger scenes, quicker response to lighting changes, and less noise.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;kajiya&#x2F;blob&#x2F;main&#x2F;docs&#x2F;gi-overview.md&quot;&gt;detailed overview&lt;&#x2F;a&gt; of the new global illumination
techniques is available, complete with animated diagrams!&lt;&#x2F;p&gt;
&lt;p&gt;June has also seen the addition of texture compression, automatic exposure,
a new display rendering transform, and a simplification of the interface.
The viewer app now supports drag-and-drop of scene files, glTF models,
and HDRI backdrops.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&#x2F;status&#x2F;1532829918194806784&quot;&gt;twitter (0.2 release)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&#x2F;status&#x2F;1537212390982524929&quot;&gt;twitter (texture compression)&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;notan-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan v0.5&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#notan-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notan.gif&quot; alt=&quot;Notan texture to file&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; is a simple and portable layer designed to create your own multimedia
apps on top of it without worrying about platform-specific code.&lt;&#x2F;p&gt;
&lt;p&gt;The main goal is to provide a set of APIs and tools that can be used to create
your project in an ergonomic manner without enforcing any structure or pattern,
always trying to stay out of your way. The idea is that you can use it as a
foundation layer or backend for your next app, game engine, or game.&lt;&#x2F;p&gt;
&lt;p&gt;The latest version &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&#x2F;releases&#x2F;tag&#x2F;v0.5.0&quot;&gt;v0.5&lt;&#x2F;a&gt; fixes multiple bugs, improves &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;EGUI&lt;&#x2F;a&gt; support and adds
a new feature to export texture &lt;a href=&quot;https:&#x2F;&#x2F;nazariglez.github.io&#x2F;notan-web&#x2F;examples&#x2F;texture_to_file.html&quot;&gt;to png&lt;&#x2F;a&gt; easily.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;FiresOfEschaton&#x2F;status&#x2F;1534119771045826567&quot;&gt;Fires of Eschaton&lt;&#x2F;a&gt; is a PvP focused turn-based fantasy game, currently under
development.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;epcc10&#x2F;status&#x2F;1532889644165120001&quot;&gt;Idu&lt;&#x2F;a&gt; is testing out some new water physics.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer&#x2F;2022-06-16-sound.html&quot;&gt;Combine and Conquer&lt;&#x2F;a&gt; has a new devlog about its sound support.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vi5jok&#x2F;media_fish_folly_a_fyrox_showcase_game_inspired&#x2F;&quot;&gt;Fish Folly&lt;&#x2F;a&gt; is a new Fyrox showcase game, inspired by Fall Guys.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;spicylobsterfam&#x2F;status&#x2F;1540105977810255872&quot;&gt;Punchy&lt;&#x2F;a&gt; is a beat-em-up spin off of &lt;a href=&quot;https:&#x2F;&#x2F;fishfight.org&#x2F;&quot;&gt;Fish Fight&lt;&#x2F;a&gt;, built with Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v3btkk&#x2F;browser_jungle_chess_with_rust_wasm&#x2F;&quot;&gt;Jungle Chess&lt;&#x2F;a&gt; is a WASM implementation of a Chinese board game.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;gocroquet&#x2F;status&#x2F;1531336194725797889&quot;&gt;Croquet&lt;&#x2F;a&gt; is working on synchronized physics, using Rapier.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mungbungo.itch.io&#x2F;bevy-city&quot;&gt;Bevy City&lt;&#x2F;a&gt; is a voxel city generator, built with Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;robtfm.github.io&#x2F;measure_once&#x2F;&quot;&gt;Measure Once&lt;&#x2F;a&gt; is a game about cutting wood into the right shapes.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DO8vwehkr38&quot;&gt;Galactic Mess&lt;&#x2F;a&gt; has added new outfits and weapons.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;emil-ernerfeldt&#x2F;&quot;&gt;Rustacean Station&lt;&#x2F;a&gt; interviewed the developer of egui.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLFOS-Gn3aXROnSfl26esPExssd-rQw6jD&quot;&gt;Rusteroids&lt;&#x2F;a&gt; is a video tutorial series, building an asteroids
clone with Rust and SDL2.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;simbleau.github.io&#x2F;blog&#x2F;gpu-profiling-with-rust&#x2F;&quot;&gt;NVIDIA GPU Profiling with Rust&lt;&#x2F;a&gt; is an introduction on how to use
NVIDIA&#x27;s NSight tools with Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;vmpjcr&#x2F;rust_wgpu_graphics_programming_tutorial_youtube&#x2F;&quot;&gt;Practical Programming with Dr. Xu&lt;&#x2F;a&gt; has continued their WGPU
tutorial series.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=H0sIsrLWojs&quot;&gt;Anthropic Studios&lt;&#x2F;a&gt; (developers of Way of Rhea) posted a dev interview video.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_PNiRGIAfY4&quot;&gt;Lyrapuff&lt;&#x2F;a&gt; posted a video showing how to render a triangle with
Vulkan and Rust.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other engine updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pufferfish-rs&#x2F;pufferfish&quot;&gt;pufferfish&lt;&#x2F;a&gt; is a new, opinionated 2D game framework.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other tooling updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;p4ddy1&#x2F;gbemulator&quot;&gt;GBemulator&lt;&#x2F;a&gt; is a Game Boy emulator written from scratch.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aevyrie&#x2F;bevy_mod_picking&#x2F;releases&#x2F;tag&#x2F;v0.7.0&quot;&gt;bevy_mod_picking&lt;&#x2F;a&gt; released version 0.7 of their Bevy mouse
picking plugin.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;komadori&#x2F;bevy_mod_outline&quot;&gt;bevy_mod_outline&lt;&#x2F;a&gt; is a Bevy plugin for drawing outlines around
meshes.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;idanarye&#x2F;bevy-yoleck&quot;&gt;Bevy YOLECK&lt;&#x2F;a&gt; is a crate that allows Bevy games to be their own
level editor.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aevyrie&#x2F;bevy_mod_raycast&#x2F;releases&#x2F;tag&#x2F;v0.5&quot;&gt;bevy_mod_raycast&lt;&#x2F;a&gt; released version 0.5 of their raycasting plugin.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DioxusLabs&#x2F;taffy&quot;&gt;taffy&lt;&#x2F;a&gt; is a cross-platform UI layout library.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v8tx37&#x2F;shopping_list&#x2F;&quot;&gt;&amp;quot;Shopping list&amp;quot;&lt;&#x2F;a&gt; (a list of things that
are missing from the ecosystem)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v4q4pr&#x2F;handson_rust_further_reading&quot;&gt;&amp;quot;Hands-on Rust: Further reading&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v3z4i1&#x2F;how_can_i_start_developing_a_3d_game_engine&quot;&gt;&amp;quot;How can I start developing a 3D game engine?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v7svhg&#x2F;bevy_or_fyrox_for_3d_game_dev&quot;&gt;&amp;quot;Bevy or Fyrox for 3D Game Development?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet#contribute&quot;&gt;&#x27;Are We Game Yet?&#x27; wants to know about projects&#x2F;games&#x2F;resources that
aren&#x27;t listed yet&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&#x2F;contribute&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help build the
new node graph and 2D rendering systems.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&#x2F;jobs&quot;&gt;DIMS&lt;&#x2F;a&gt;
(Stockholm&#x2F;Remote): Various roles, open applications accepted&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;careers.embark-studios.com&#x2F;jobs&quot;&gt;Embark Studios&lt;&#x2F;a&gt;
(Stockholm&#x2F;Hybrid Remote): Various roles, open applications accepted&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustjobs.dev&#x2F;featured-jobs&#x2F;Mutate-Rust-Backend-Software-Engineer-7kfTlQFSagzwHhugw1p0&quot;&gt;Mutate&lt;&#x2F;a&gt;
(Remote): Rust Backend Software Engineer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;vtrelw&#x2F;this_month_in_rust_gamedev_35_june_2022&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1545135032334950403&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Rusty Jam 2</title>
            <pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/blog/rustyjam-02/</link>
            <guid>https://gamedev.rs/blog/rustyjam-02/</guid>
            <description>&lt;p&gt;&lt;img src=&quot;aaron.png&quot; alt=&quot;Aaron: a drawing of a humanoid fox&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Hey everyone, we&#x27;re finally announcing the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam-2&quot;&gt;Rusty Jam #2&lt;&#x2F;a&gt;!
It&#x27;s a great chance to try out some new Rusty tech,
form a team of like-minded rustaceans, and feel what
a full cycle of making a game in Rust feels like in miniature!&lt;&#x2F;p&gt;
&lt;p&gt;Submissions will be open from June 18th to June 26th.
Voting on submissions will begin as soon as the jam ends and will run for a week.&lt;&#x2F;p&gt;
&lt;p&gt;This jam focuses more on using Rust than anything else.
That means you aren&#x27;t restricted on your design, music, or graphics,
as long as you use Rust to make it!&lt;&#x2F;p&gt;
&lt;p&gt;The optional-to-use theme for the jam is going to be announced
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;8dUQJFFmxG&quot;&gt;in the Rusty Jam Discord&lt;&#x2F;a&gt; and pinned in the community section.
While you&#x27;re waiting for the theme, you can start looking for a team
in the #looking-for-team Discord channel.
If you want to solo jam though, that&#x27;s fine too.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam-2&quot;&gt;See the itch.io page for more details about dates, rules, modifiers, etc!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;This jam&#x27;s mascot is Aaron the Rust-loving fox (&lt;a href=&quot;https:&#x2F;&#x2F;vsmiles.itch.io&#x2F;aaron-the-rust-loving-fox&quot;&gt;submitted&lt;&#x2F;a&gt; by vSmiles)!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aaron is a proud supporter of Rust and loves spreading this love
around the world.&lt;&#x2F;p&gt;
&lt;p&gt;He hands out little red flags as he marks the places he&#x27;s reached,
and with his big furry smile, he wants Rust to be an approachable
programming language that&#x27;s suitable for anyone!&lt;&#x2F;p&gt;
&lt;p&gt;He also has a very special bandana that features his little friend Ferris.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #34 - May 2022</title>
            <pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/034/</link>
            <guid>https://gamedev.rs/news/034/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 34th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#announcements&quot;&gt;Announcements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;034&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;announcements&quot;&gt;Announcements&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#announcements&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-graphics-meetup-2&quot;&gt;Rust Graphics Meetup 2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-graphics-meetup-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=DDG4bcGs7zM&amp;amp;list=PLYiOdhpKxxXJwaocrJcOCoBhlV6foaO8F&amp;amp;index=4&quot;&gt;&lt;img src=&quot;graphics-meetup.jpg&quot; alt=&quot;Graphics meetup speakers&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 2nd Rust Graphics Meetup took place on the 21st of May. The videos of the
talks have been released:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=0IsllXP7_pY&quot;&gt;Vismut&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukors&quot;&gt;Lukas Orsvärn&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=ywZznsCXUjs&quot;&gt;Screen-13&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;attackgoat&#x2F;screen-13&quot;&gt;John Wells&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=DDG4bcGs7zM&quot;&gt;Optimizing wgpu with Data Driven Design&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cwfitzgerald&quot;&gt;Connor Fitzgerald&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 16th Rust Gamedev Meetup took place in May. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;XOpZIzmFifk&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. Here was the schedule from
the meetup:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;RustConf Arcade Cabinet - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Puzzle platformer - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Veloren - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AngelOnFira&quot;&gt;@AngelOnFira&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Graphite - &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;graphiteeditor&quot;&gt;@GraphiteEditor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The meetups take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev
Discord server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;ffc60181&quot;&gt;June 11th&lt;&#x2F;a&gt;, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this
form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3d-ferris&quot;&gt;3D Ferris&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#3d-ferris&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;raymarch_ferris_3d.jpg&quot; alt=&quot;colorful render of a 3d model of Ferris with additional wireframe view&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ray__March&quot;&gt;@RayMarch&lt;&#x2F;a&gt; is
creating a game-ready 3D model of &lt;a href=&quot;https:&#x2F;&#x2F;rustacean.net&#x2F;&quot;&gt;Ferris the Rustacean&lt;&#x2F;a&gt;. These links
provide a more detailed look:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ray__March&#x2F;status&#x2F;1512907700740444163&quot;&gt;360 overview&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ray__March&#x2F;status&#x2F;1523717266730151936&quot;&gt;Ferris dancing&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Once the model is finished, it will be published under a permissive license on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RayMarch&quot;&gt;Github&lt;&#x2F;a&gt;, so you can use it in your 3D game,
rendering demo, v-tuber avatar, you name it!&lt;&#x2F;p&gt;
&lt;p&gt;If you have any feedback feel free to share on &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;channels&#x2F;676678179678715904&#x2F;974371568975216700&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ray__March&#x2F;status&#x2F;1523717266730151936&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rustconf-arcade-cabinet&quot;&gt;RustConf Arcade Cabinet&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustconf-arcade-cabinet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;arcade_cabinet.png&quot; alt=&quot;arcade cabinet&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo&lt;&#x2F;a&gt; is building a custom arcade cabinet that will be at
RustConf 2022 in Portland. It is an opportunity for Rust game developers to
share their games with the broader community. If you are interested in getting
your game on the cabinet, read &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1523715837726961664&quot;&gt;this Twitter thread&lt;&#x2F;a&gt; and
fill out the &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;onFm5fCygdbiArqJ7&quot;&gt;interest form&lt;&#x2F;a&gt;.
All of the parts for the cabinet are currently in production,
and art for the sides is in progress.
Check out the latest update &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1532717151240323072&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;battleship&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orhun&#x2F;battleship-rs&quot;&gt;Battleship&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#battleship&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;battleship.gif&quot; alt=&quot;Gameplay demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orhun&#x2F;battleship-rs&quot;&gt;Battleship&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orhun&#x2F;&quot;&gt;@orhun&lt;&#x2F;a&gt; is the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Battleship_(game)&quot;&gt;battleship game&lt;&#x2F;a&gt; implemented in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Fully playable between 2 players on the terminal.&lt;&#x2F;li&gt;
&lt;li&gt;No installation required.&lt;&#x2F;li&gt;
&lt;li&gt;Works over TCP sockets.&lt;&#x2F;li&gt;
&lt;li&gt;Very lightweight to host your own server (only has 1 dependency).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;room4doom&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;flukejones&#x2F;room4doom&quot;&gt;ROOM4DOOM&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#room4doom&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;flukejones&#x2F;room4doom&quot;&gt;&lt;img src=&quot;room4doom.jpg&quot; alt=&quot;A screenshot of gameplay action in ROOM4DOOM.&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;flukejones&#x2F;room4doom&quot;&gt;ROOM4DOOM&lt;&#x2F;a&gt; is a rewrite of the classic Doom engine in Rust with some
modernisation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;flukejones&quot;&gt;@flukejones&lt;&#x2F;a&gt; has been very busy in the last 4 months completing
many parts of ROOM4DOOM; rendering, subsystems for menus, status bar, intermissions,
and of course the actual gameplay - you can now complete Doom 1 in ROOM4DOOM.&lt;&#x2F;p&gt;
&lt;p&gt;A recent Twitter thread has been cleaned up and expanded into a blog post providing
context to the project and a walk-through of the history.
You can view that &lt;a href=&quot;https:&#x2F;&#x2F;ljones.dev&#x2F;blog&#x2F;room4doom-20220529&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;limbo-pass&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shnewto&#x2F;limbo_pass&quot;&gt;limbo_pass&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#limbo-pass&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;limbo-pass.png&quot; alt=&quot;a ghost, stuck in limbo, on a mountain pass&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shnewto&#x2F;limbo_pass&quot;&gt;limbo_pass&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shnewto&#x2F;&quot;&gt;@shnewto&lt;&#x2F;a&gt; is a little 3D walking sim in Bevy that uses
scenes, meshes, and materials exported directly from Blender.&lt;&#x2F;p&gt;
&lt;p&gt;Features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Blender assets exported to glTF&lt;&#x2F;li&gt;
&lt;li&gt;Collision detection with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;bevy_rapier&quot;&gt;bevy_rapier3d&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Looping audio with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more info, see the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;shnewto&#x2F;status&#x2F;1520897809968340992&quot;&gt;announcement post&lt;&#x2F;a&gt; and the
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;gxUesnuTBBI&quot;&gt;gameplay video&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hydrofoil-generation&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hydrofoil-generation&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hgs34.jpg&quot; alt=&quot;hgs_screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1448820&#x2F;Hydrofoil_Generation&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;facebook.com&#x2F;HydrofoilGenerationSailing&#x2F;&quot;&gt;Facebook&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;DtKgt2duAy&#x2F;&quot;&gt;Discord&lt;&#x2F;a&gt;)
is a realistic sailing&#x2F;foiling inshore simulator in development for PC&#x2F;Steam
that will put you in the driving seat of modern competitive sailing.
Hydrofoil Generation is based on a custom made DirectX 11 based engine.&lt;&#x2F;p&gt;
&lt;p&gt;A new &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;oFtFdmnkkSI&quot;&gt;trailer&lt;&#x2F;a&gt; just landed showcasing new animations, the new
Hong Kong location, and camera modes.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, private beta-testing is well underway with good feedback regarding
boat controls and physics, netcode, and software stability, Rust for sure
delivered on all the promises here.&lt;&#x2F;p&gt;
&lt;p&gt;The first set of Sailing rules has also been implemented and part of the
current beta testing process with more rules to be added in the next months.&lt;&#x2F;p&gt;
&lt;p&gt;Sadly the target Q2 2022 Early Access release on Steam couldn&#x27;t be hit and
now the team is aiming at a Q4 2022 release.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;country-slice&quot;&gt;Country Slice&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#country-slice&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;country_slice.gif&quot; alt=&quot;Country_slice_gif&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Country Slice (WIP name) is a relaxing building game being made by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&quot;&gt;@anastasiaopara&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month, she added an animated undo system. You can find more details in this
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1530473522224582656&quot;&gt;Twitter thread&lt;&#x2F;a&gt;, and follow the &lt;a href=&quot;https:&#x2F;&#x2F;dashboard.mailerlite.com&#x2F;forms&#x2F;10395&#x2F;51067704544593017&#x2F;share&quot;&gt;newsletter&lt;&#x2F;a&gt;
for more updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n34&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n34&quot;&gt;&lt;img src=&quot;wor-capsule.jpg&quot; alt=&quot;way of rhea capsule image&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n34&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle adventure with hard puzzles and forgiving
mechanics being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; in a custom Rust
engine. You can support development by &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n34&quot;&gt;wishlisting the game on Steam&lt;&#x2F;a&gt;, and
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1110620&#x2F;discussions&#x2F;0&#x2F;3275817732933009791&#x2F;&quot;&gt;giving feedback&lt;&#x2F;a&gt; on the Steam demo.&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea was selected to be part of the Cerebral Puzzle Showcase! The event
is over, you can still find the
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;sale&#x2F;CerebralPuzzleShowcase&quot;&gt;list of games and some of the demos here&lt;&#x2F;a&gt;. Recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;More work was done on the &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;news&#x2F;app&#x2F;1110620?emclan=103582791465120432&amp;amp;emgid=3180116240852440293&quot;&gt;Jungle Biome visuals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Dynamic gradient overlays were added to the engine to give a sense of depth&lt;&#x2F;li&gt;
&lt;li&gt;Fixed bug where Nvidia drivers would incorrectly trigger the crash dump writer&lt;&#x2F;li&gt;
&lt;li&gt;Fixed a long-running draw call sorting problem that could lead to popping&lt;&#x2F;li&gt;
&lt;li&gt;Fixed an audio failure when unplugging the active speaker&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Flying down a mountain&quot; &#x2F;&gt;
&lt;em&gt;A glorious flight to distant lands&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In May, work was done on Wyvern models. Smoke was improved from houses, and now
has different colours and strengths. A rib cage generator was added, so now
there are large bone structures from ancient times around the world. Level of
detail objects were added, so trees can now be seen on far-off mountains. This
makes the world feel significantly more alive. A lot of work was done on the
performance of the game server, as Veloren has been seeing over 100 concurrent
players at peak on the server nearly every day for the past few weeks.&lt;&#x2F;p&gt;
&lt;p&gt;Lots of work was done on balancing items and drop rates. Water caves have been
worked on, which now means that you might need to enter them from underwater.
Modular weapons were merged, which was a change several months in the making.
NPCs are now able to pick up items that are on the ground. Work was done on
taming and mounting various animals. Weather is still in the works, with
improvements to the ambient SFX system for rain. A new UI concept was created
for what Airshipper might be able to look like in the future.&lt;&#x2F;p&gt;
&lt;p&gt;May&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-170&quot;&gt;#170&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-171&quot;&gt;#171&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-172&quot;&gt;#172&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-173&quot;&gt;#173&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-174&quot;&gt;#174&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hug-with-me&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hug.hihaheho.com&quot;&gt;Hug With Me?&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hug-with-me&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hug.jpg&quot; alt=&quot;Screenshot: one human hugs another&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hug.hihaheho.com&quot;&gt;The Hug Game&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;hihaheho.com&quot;&gt;the HIHAHEHO Studio&lt;&#x2F;a&gt;
is an active ragdoll remote hugging simulator made with Bevy and rapier.&lt;&#x2F;p&gt;
&lt;p&gt;The arms are individually controlled using a keyboard on desktop
and touch controls on mobile to make various hugs.
You can click &amp;quot;Random” to play with a random person or “Room”
to share a link to someone you want to play with.&lt;&#x2F;p&gt;
&lt;p&gt;The source code of the game is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Hihaheho&#x2F;Hug&quot;&gt;available on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;combine-conquer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer.html&quot;&gt;Combine&amp;amp;Conquer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#combine-conquer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;IndieDev&#x2F;comments&#x2F;uxcc7v&#x2F;connect_different_planets&quot;&gt;&lt;img src=&quot;cnc-preview.png&quot; alt=&quot;Preview: a factory&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;IndieDev&#x2F;comments&#x2F;uxcc7v&#x2F;connect_different_planets&quot;&gt;Connect factories on different planets via spaceships&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martinbucksoftware.itch.io&quot;&gt;Combine&amp;amp;Conquer&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;I3ck&quot;&gt;Martin Buck&lt;&#x2F;a&gt; is a WIP strategy game
about automation similar to Satisfactory or Factorio.
This month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer&#x2F;2022-05-05-ship-view.html&quot;&gt;a new view to see in-flight spaceships&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer&#x2F;2022-05-04-single-node-notification-bg.html&quot;&gt;single render node&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer&#x2F;2022-05-07-itch-io-release.html&quot;&gt;and the first public prototype release on itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;uzpojz&#x2F;cnc&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;fyrox&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FyroxEngine&#x2F;Fyrox&quot;&gt;Fyrox&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fyrox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fyrox.png&quot; alt=&quot;Fyroxed&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FyroxEngine&#x2F;Fyrox&quot;&gt;Fyrox&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a game engine that
aims to be easy to use and provide a large set of out-of-the-box features. In May
it hit version 0.25 which added a lot of new functionality:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Static plugin system.&lt;&#x2F;li&gt;
&lt;li&gt;User-defined scripts.&lt;&#x2F;li&gt;
&lt;li&gt;Play mode for the editor.&lt;&#x2F;li&gt;
&lt;li&gt;Animation blending state machine editor.&lt;&#x2F;li&gt;
&lt;li&gt;Prefab inheritance improvements.&lt;&#x2F;li&gt;
&lt;li&gt;Layout and render transform support for widgets.&lt;&#x2F;li&gt;
&lt;li&gt;Shortcuts improvements in the editor.&lt;&#x2F;li&gt;
&lt;li&gt;UI performance improvements.&lt;&#x2F;li&gt;
&lt;li&gt;Double click support in &lt;code&gt;fyrox-ui&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Better serializer error recovery.&lt;&#x2F;li&gt;
&lt;li&gt;Tons of small improvements and fixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Sometime after, the engine hit version 0.26 which was primarily focused on bug fixing,
but also added some interesting features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Project template generator.&lt;&#x2F;li&gt;
&lt;li&gt;Script API improvements.&lt;&#x2F;li&gt;
&lt;li&gt;Shader cache fixes.&lt;&#x2F;li&gt;
&lt;li&gt;Skybox validator.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;See full list of changes in respective blog posts - &lt;a href=&quot;https:&#x2F;&#x2F;fyrox.rs&#x2F;blog&#x2F;post&#x2F;feature-highlights-0-25&#x2F;&quot;&gt;0.25&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;fyrox.rs&#x2F;blog&#x2F;post&#x2F;feature-highlights-0-26&#x2F;&quot;&gt;0.26&lt;&#x2F;a&gt;. Everybody,
who wants to learn how to use the engine should check the new
&lt;a href=&quot;https:&#x2F;&#x2F;fyrox-book.github.io&#x2F;fyrox&#x2F;tutorials&#x2F;platformer&#x2F;part1.html&quot;&gt;2D Platformer Tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;pull&#x2F;278&quot;&gt;&lt;img src=&quot;miniquad_pr.png&quot; alt=&quot;diff&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;&quot;&gt;miniquad&lt;&#x2F;a&gt; is a pure Rust, cross-platform graphics library.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;pull&#x2F;278&quot;&gt;The biggest PR in miniquad&#x27;s history&lt;&#x2F;a&gt; landed this month, finishing
the effort of removing all the &lt;code&gt;sapp&lt;&#x2F;code&gt; legacy.&lt;&#x2F;p&gt;
&lt;p&gt;Changes include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;No more &lt;code&gt;sapp-*&lt;&#x2F;code&gt; crates. Now it&#x27;s just one crate, miniquad!
No mess with individual crates anymore, no FFI for
miniquad - sapp communication.&lt;&#x2F;li&gt;
&lt;li&gt;On Linux, miniquad does not depend&#x2F;statically link with lib*-dev packages.
Miniquad can choose between glx&#x2F;egl, x11&#x2F;wayland at runtime.&lt;&#x2F;li&gt;
&lt;li&gt;MacOS implementation does not depend on any Objective C code anymore.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dims&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&quot;&gt;Dims&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dims&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=rKgv38zkey0&quot;&gt;&lt;img src=&quot;dims-video-preview.jpg&quot; alt=&quot;Video preview: terrain and some red barrels&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&quot;&gt;Dims&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DimsWorlds&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;Z5CAVmNE57&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCR5gOwS7uSl0a0dl7MLQoqg&quot;&gt;YouTube&lt;&#x2F;a&gt;) is a WIP open-world creation platform.
Some highlights from the project&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;dims.co&#x2F;post&#x2F;up-next&quot;&gt;latest dev log&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=jgkhsY8aZO8&quot;&gt;A terrain tool&lt;&#x2F;a&gt; that allows
quick landscape creation while still making sure that the biomes
are unique and diverse.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=rKgv38zkey0&quot;&gt;A tool to let creators script gameplay events&lt;&#x2F;a&gt;
without having ever done any programming.&lt;&#x2F;li&gt;
&lt;li&gt;The pre-alpha is now open for a limited time,
so &lt;a href=&quot;https:&#x2F;&#x2F;dims.co&quot;&gt;come and try building your own open world games&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, a bunch of feature videos and tutorials were
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCR5gOwS7uSl0a0dl7MLQoqg&quot;&gt;uploaded on the YouTube channel&lt;&#x2F;a&gt; -
make sure to take a look if you&#x27;re interested in Dims.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v0zij3&#x2F;were_super_excited&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;worldbuilding&#x2F;comments&#x2F;v102hp&#x2F;what_do_you_think_of_our_world_building_tool&quot;&gt;&#x2F;r&#x2F;worldbuilding&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;intro-to-material-shaders-in-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLT_D88-MTFOMNRPAC-62Hz096aIjT4Noy&quot;&gt;Intro to Material&#x2F;Shaders in Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#intro-to-material-shaders-in-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-material-series.png&quot; alt=&quot;Bevy Materials video series thumbnail&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC7v3YEDa603x_84PgCPytzA&quot;&gt;Matthew Bryant&lt;&#x2F;a&gt; has created
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLT_D88-MTFOMNRPAC-62Hz096aIjT4Noy&quot;&gt;a series about Bevy&#x27;s Material abstraction&lt;&#x2F;a&gt;,
showing how to use custom WGSL shaders in Bevy.&lt;&#x2F;p&gt;
&lt;p&gt;The series walks through the documentation to understand why steps are done in
order to build a clear theoretical understanding of Bevy&#x27;s high-level abstractions.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The first of the three videos covers the bare minimum needed
to render a material;&lt;&#x2F;li&gt;
&lt;li&gt;the second introduces bind groups to use textures and generic data in
the shader;&lt;&#x2F;li&gt;
&lt;li&gt;and the final video ties into Bevy&#x27;s ECS to copy game data onto the
graphics card every frame.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;He will be releasing videos about UI in Bevy and Rapier physics next month.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kubecon-2022-lightning-talk-wasmcloud-bevy-ecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloudnativewasmdayeu22.sched.com&#x2F;event&#x2F;zgbG&#x2F;lightning-talk-wasmcloud-bevy-ecs-solution-to-woe-of-indie-game-developers-alan-poon-yong-quan-shopee?iframe=no&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no&quot;&gt;Kubecon 2022, Lightning Talk: Wasmcloud + Bevy ECS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kubecon-2022-lightning-talk-wasmcloud-bevy-ecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;lightingtalk.jpeg&quot; alt=&quot;A picture of speakers&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alanpoon&#x2F;qq_party&quot;&gt;QQparty&lt;&#x2F;a&gt; is a serverless multiplayer game built with Bevy ECS
and &lt;a href=&quot;https:&#x2F;&#x2F;wasmcloud.dev&#x2F;&quot;&gt;Wasmcloud&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rustropy_gaming&quot;&gt;@rustropy_gaming&lt;&#x2F;a&gt; joined Cosmonic to give
a series of Wasmcloud talks in Kubecon 2022 VLC. They demonstrated
how Bevy can be added into Wasmcloud&#x27;s actors as a serverless
game server.&lt;&#x2F;p&gt;
&lt;p&gt;You can check out a recording of the talk on &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=8q2sPPX5aXY&amp;amp;list=PLj6h78yzYM2Ni0u-ONljTkv4uOutyjwq9&amp;amp;index=3&quot;&gt;YouTube&lt;&#x2F;a&gt;,
as well as viewing the &lt;a href=&quot;https:&#x2F;&#x2F;static.sched.com&#x2F;hosted_files&#x2F;cloudnativewasmdayeu22&#x2F;3c&#x2F;lightingtalk-alan_pdf.pdf&quot;&gt;slides&lt;&#x2F;a&gt;. For updates on QQparty,
follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rustropy_gaming&quot;&gt;@rustropy_gaming&lt;&#x2F;a&gt; on Twitter!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rusteroids&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLFOS-Gn3aXROnSfl26esPExssd-rQw6jD&quot;&gt;Rusteroids&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusteroids&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;rusteroids-screenshot.png&quot; alt=&quot;A screenshot of the latest Rusteroids tutorial&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;filtoid&#x2F;rusteroids&quot;&gt;Rusteroids&lt;&#x2F;a&gt; is a tutorial recreating a clone of Asteroids
in Rust, using SDL2 and the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;specs&#x2F;latest&#x2F;specs&#x2F;&quot;&gt;Specs&lt;&#x2F;a&gt; library.&lt;&#x2F;p&gt;
&lt;p&gt;New episodes are released weekly and added to the playlist. Most recently,
collision detection was added to reset the game state when the asteroid
and player collide. The latest episode is &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=KTDdlWErmYU&amp;amp;list=PLFOS-Gn3aXROnSfl26esPExssd-rQw6jD&amp;amp;index=9&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can subscribe to the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC1m6P72nySpB3lKWDYGVipw&quot;&gt;YouTube Channel&lt;&#x2F;a&gt;,
to never miss an episode, or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ecatstudios&quot;&gt;@ecatstudios&lt;&#x2F;a&gt; on
Twitter!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;starting-a-new-2d-platformer-with-bevy-ecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=gjeEYntkvoY&quot;&gt;Starting a new 2d platformer with Bevy ECS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#starting-a-new-2d-platformer-with-bevy-ecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=gjeEYntkvoY&quot;&gt;&lt;img src=&quot;starting-a-new-2d-platformer-with-bevy-ecs.jpg&quot; alt=&quot;Thumbnail: Hollow Knight screenshot with added Ferrises and Bevy logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&quot;&gt;@chrisbiscardi&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=gjeEYntkvoY&quot;&gt;video&lt;&#x2F;a&gt;
on setting up a new 2D platformer project using Bevy. The video covers
integrating with LDTK, Rapier, and becy_ecs_tilemap to get a working
character controller with collisions in a sandbox. It also touches on
staple crates such as bevy_asset_loader and iyes_loopless.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v0keg2&#x2F;starting_a_new_2d_platformer_with_bevy_ecs&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&#x2F;status&#x2F;1524008901028421632&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;comparing-a-voxel-game-in-f-and-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cragwind.com&#x2F;blog&#x2F;posts&#x2F;comparing-voxel-game-fsharp-rust&#x2F;&quot;&gt;Comparing a Voxel Game in F# and Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#comparing-a-voxel-game-in-f-and-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;robocave.jpg&quot; alt=&quot;Robocave screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cragwind.com&#x2F;blog&#x2F;posts&#x2F;comparing-voxel-game-fsharp-rust&#x2F;&quot;&gt;This article&lt;&#x2F;a&gt; walks through the process of rewriting an F#
game in Rust. It explores the similarities between the languages and talks
about using simple code constructs where possible. It talks about the Rust
crates used to help with the process. Finally, it goes over a conclusion
comparing the speed of both versions of the games, and the sizes of the
codebases.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rustacean-station-66-eric-smith&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;066-eric-smith&quot;&gt;Rustacean Station 66: Eric Smith&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustacean-station-66-eric-smith&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustacean-station.jpeg&quot; alt=&quot;Rustacean Station Logo: rusty Ferris&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In May the &lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&quot;&gt;Rustacean Station&lt;&#x2F;a&gt; podcast
&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;066-eric-smith&quot;&gt;interviewed Eric Smith&lt;&#x2F;a&gt;, the author
of &lt;a href=&quot;https:&#x2F;&#x2F;packtpub.com&#x2F;product&#x2F;game_development&#x2F;9781801070973&quot;&gt;&amp;quot;Game Development with Rust and WebAssembly&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In this episode, lots is discussed about
why Rust is becoming a good language for game development,
different game engines, is Rust web-ready,
insights on Rust game development, and Eric&#x27;s writing process.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gamesfromscratch-rust-game-development-in-2022&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=mLXwR88Dzkc&quot;&gt;GamesFromScratch: Rust Game Development in 2022&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gamesfromscratch-rust-game-development-in-2022&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=mLXwR88Dzkc&quot;&gt;&lt;img src=&quot;gfs-youtube-preview.jpg&quot; alt=&quot;YouTube preview: title&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=mLXwR88Dzkc&quot;&gt;GamesFromScratch shared a YouTube video&lt;&#x2F;a&gt; with an overview of
the most popular engines, frameworks, and libraries for Rust game development,
including: Amethyst, Piston, Bevy, Fyrox, ggez, godot-rust, raylib, SDL2, and SFML.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;new-book-multiplayer-game-development-in-rust&quot;&gt;New Book: &lt;a href=&quot;https:&#x2F;&#x2F;manning.com&#x2F;books&#x2F;multiplayer-game-development-in-rust&quot;&gt;Multiplayer Game Development in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#new-book-multiplayer-game-development-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;book-multiplayer.png&quot; alt=&quot;Book cover with a MEAP mark&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;manning.com&#x2F;books&#x2F;multiplayer-game-development-in-rust&quot;&gt;&amp;quot;Multiplayer Game Development in Rust&amp;quot;&lt;&#x2F;a&gt; book by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Extrawurst&quot;&gt;@Extrawurst&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;lyonbeckers&quot;&gt;@lyonbeckers&lt;&#x2F;a&gt; is now available in Manning Early Access Program.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multiplayer Game Development in Rust teaches you to construct
your own multiplayer game. You’ll build a simple game client,
but the real work happens on the backend. Chapter-by-chapter,
you’ll add scalability, persistence, benchmarking, and tracing
to support game features like real-time multiplayer scorekeeping,
leader boards, and server-to-client messaging. Along the way,
you’ll get pro tips about what makes Rust so great for game development,
and you’ll work with state-of-the-art technologies that
take full advantage of the cloud. Best of all, everything you learn
will apply to any application that requires real-time server technology.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;At the moment, 4 of 12 chapters are available:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Introducing Rust in Games&lt;&#x2F;li&gt;
&lt;li&gt;Building a Game Client&lt;&#x2F;li&gt;
&lt;li&gt;Building a Game Server&lt;&#x2F;li&gt;
&lt;li&gt;Making a Multiplayer Client&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The book is estimated to be finished in early 2023.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;audio-libraries-considered-challenging&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tesselode.github.io&#x2F;articles&#x2F;audio-libraries-considered-challenging&quot;&gt;Audio Libraries Considered Challenging&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#audio-libraries-considered-challenging&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt; shared &lt;a href=&quot;https:&#x2F;&#x2F;tesselode.github.io&#x2F;articles&#x2F;audio-libraries-considered-challenging&quot;&gt;an article&lt;&#x2F;a&gt; about
the difficulties of making audio libraries:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I develop a game audio library called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt;.
Here&#x27;s some of the hard parts I&#x27;ve figured out.
If you decide to make an audio library for some reason,
learn from my experimentation!
&amp;lt;...&amp;gt;
Making audio libraries is hard. I don&#x27;t know the best way to do it.
This is just what I&#x27;ve tried and how it went for me.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ur93w8&#x2F;audio_libraries&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bloom3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bloom3d.com&quot;&gt;Bloom3D&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bloom3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bloom3d.com&quot;&gt;&lt;img src=&quot;bloom.jpg&quot; alt=&quot;A screenshot of Bloom3D&#x27;s interface. A geometric tree is next to a building.&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;bloom3d&quot;&gt;Bloom3D&lt;&#x2F;a&gt; is a minimalist web app for 3D modeling that&#x27;s built in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Bloom is powered by a custom game engine called &lt;a href=&quot;koi&quot;&gt;&lt;code&gt;koi&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; that is open-sourced
on GitHub.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kettlecorn&quot;&gt;@kettlecorn&lt;&#x2F;a&gt; released a new version of
&lt;a href=&quot;https:&#x2F;&#x2F;bloom3d.com&quot;&gt;Bloom3D&lt;&#x2F;a&gt; that adds a variety of new features including a
rectangle tool, move tool, and OBJ export.
Check out the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kettlecorn&#x2F;status&#x2F;1529193509462360065&quot;&gt;Twitter announcement thread&lt;&#x2F;a&gt; for an overview
and videos of all the new features.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;website&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a free,
in-development raster and vector 2D graphics editor. It will be powered by a
node graph compositing engine that supercharges your layer stack, providing a
completely non-destructive editing experience.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Spring cleaning: The past month&#x27;s Sprint 15 work has focused mostly on
technical debt cleanup, documentation, and bug fixes around the frontend. That
continues with the Rust backend next month.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A radiant gradient: The Gradient tool now supports radial styles in
addition to linear.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;New blog post: &lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&#x2F;blog&#x2F;distributed-computing-in-the-graphene-runtime&#x2F;&quot;&gt;Learn about the plans&lt;&#x2F;a&gt; for
distributed computing across many CPUs and GPUs with Graphene, the Rust-based
node graph engine and renderer that will power Graphite.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Open the &lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Graphite editor&lt;&#x2F;a&gt; in your browser to give it a try
and share your creations with #MadeWithGraphite on Twitter.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-mod-scripting&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;makspll&#x2F;bevy_mod_scripting&quot;&gt;bevy_mod_scripting&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-mod-scripting&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;logo_bevy_scripting.svg&quot; alt=&quot;bevy_mod_scripting logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;makspll&#x2F;bevy_mod_scripting&quot;&gt;bevy_mod_scripting&lt;&#x2F;a&gt; by @makspll is a brand new Bevy plugin
enabling multi-language scripting (currently in Lua and Rhai).&lt;&#x2F;p&gt;
&lt;p&gt;The plugin is in early stages but as of now supports:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Handling events at multiple points of your stage pipeline.&lt;&#x2F;li&gt;
&lt;li&gt;Sending events to specific, or all scripts.&lt;&#x2F;li&gt;
&lt;li&gt;Setting event priority to order your callbacks.&lt;&#x2F;li&gt;
&lt;li&gt;Defining custom state and APIs at initialization.&lt;&#x2F;li&gt;
&lt;li&gt;Sending run-time error events (to for example show them in an in-game console).&lt;&#x2F;li&gt;
&lt;li&gt;One-shot scripts.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;General Bevy API support is under-way so stay tuned!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-silk&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ManevilleF&#x2F;bevy_silk&quot;&gt;bevy_silk&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-silk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_silk.png&quot; alt=&quot;bevy_silk logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ManevilleF&#x2F;bevy_silk&quot;&gt;bevy_silk&lt;&#x2F;a&gt; by @&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ManevilleF&quot;&gt;ManevilleF&lt;&#x2F;a&gt; is a cloth physics plugin for Bevy.&lt;&#x2F;p&gt;
&lt;p&gt;Apply cloth physics to any mesh, by adding a single component to your entity!&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Collision support using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;bevy_rapier&quot;&gt;bevy_rapier&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Global and per-entity physics customization&lt;&#x2F;li&gt;
&lt;li&gt;Dynamic smooth and flat normals&lt;&#x2F;li&gt;
&lt;li&gt;Wind forces&lt;&#x2F;li&gt;
&lt;li&gt;Custom cloth anchors&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The library is fully documented and the repository provides various usage examples.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ManevilleF&#x2F;status&#x2F;1527313861199527937&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-asset-loader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-asset-loader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; is a Bevy plugin that helps with asset
loading and asset organisation. It greatly reduces boilerplate code for
loading states and can resolve asset configuration at run time.&lt;&#x2F;p&gt;
&lt;p&gt;This month, version &lt;code&gt;0.11.0&lt;&#x2F;code&gt; was released. It supports loading lists of files
as &lt;code&gt;Vec&amp;lt;HandleUntyped&amp;gt;&lt;&#x2F;code&gt; or &lt;code&gt;Vec&amp;lt;Handle&amp;lt;T&amp;gt;&amp;gt;&lt;&#x2F;code&gt;. This is an alternative to loading
folders, which is not supported on the web. You can now track the loading
progress of your assets with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IyesGames&#x2F;iyes_progress&quot;&gt;iyes_progress&lt;&#x2F;a&gt; and build loading bars.
Integrating with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IyesGames&#x2F;iyes_loopless&quot;&gt;iyes_loopless&lt;&#x2F;a&gt; gives you some benefits of stageless
scheduling in current Bevy. Additionally, the loading of assets fields
without attributes was improved. It now uses the &lt;code&gt;FromWorld&lt;&#x2F;code&gt; trait
instead of &lt;code&gt;Default&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;More improvements will likely follow for the dynamic asset story. One goal
is to allow loading any custom values as dynamic assets.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-kira-audio&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-kira-audio&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; is an alternative audio
plugin for Bevy. It uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt; to play and control
game audio.&lt;&#x2F;p&gt;
&lt;p&gt;This month saw the release of version &lt;code&gt;0.10.0&lt;&#x2F;code&gt;. The plugin
now uses the latest Kira release, which was a major rewrite.
The audio channel API is improved by making all channels
resources in Bevy&#x27;s ECS and sounds can be directly loaded
from asset files with settings like their volume, playback
rate, or panning. Additionally, the audio backend can now
be configured before creation through a settings resource.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sparsey&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sparsey&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&quot;&gt;@LechintanTudor&lt;&#x2F;a&gt; is a sparse set-based Entity Component System
with beautiful and concise syntax.&lt;&#x2F;p&gt;
&lt;p&gt;The latest release, 0.8.0, adds some convenience panicking functions for
borrowing resources and a method for resetting a &lt;code&gt;World&lt;&#x2F;code&gt; to its default state
without having to recreate it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;notan-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#notan-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; is a simple and portable layer designed to create your own multimedia
apps on top of it without worrying about platform-specific code.&lt;&#x2F;p&gt;
&lt;p&gt;The main goal is to provide a set of APIs and tools that can be used to create
your project in an ergonomic manner without enforcing any structure or pattern,
always trying to stay out of your way. The idea is that you can use it as a
foundation layer or backend for your next app, game engine, or game.&lt;&#x2F;p&gt;
&lt;p&gt;The latest version &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&#x2F;releases&#x2F;tag&#x2F;v0.4.0&quot;&gt;v0.4&lt;&#x2F;a&gt; adds &lt;a href=&quot;https:&#x2F;&#x2F;nazariglez.github.io&#x2F;notan-web&#x2F;examples&#x2F;input_touches.html&quot;&gt;touch support&lt;&#x2F;a&gt; and fixes some minor bugs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;carrier-pigeon&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MitchellMarinoDev&#x2F;carrier-pigeon&quot;&gt;carrier-pigeon&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#carrier-pigeon&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MitchellMarinoDev&#x2F;carrier-pigeon&quot;&gt;carrier-pigeon&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MitchellMarinoDev&quot;&gt;@MitchellMarinoDev&lt;&#x2F;a&gt; is a rusty networking library for games.
It builds on the standard library&#x27;s TcpStream and UdpSocket types
and handles all the serialization, sending, receiving, and deserialization.
This way you can worry about what to send,
and pigeon will worry about how to send it.
This also allows you to send and receive different types of messages independently.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MitchellMarinoDev&#x2F;bevy-pigeon&quot;&gt;bevy-pigeon&lt;&#x2F;a&gt; is a Bevy plugin for carrier-pigeon.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MitchellMarinoDev&#x2F;bong&quot;&gt;bong&lt;&#x2F;a&gt; is a combination of breakout and pong
that showcases bevy-pigeon and carrier-pigeon.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;124&quot;&gt;#124 &amp;quot;Wanted: a good JPEG 2000 decoder for Rust&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;After the initial release of &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&quot;&gt;BITGUN&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;loglog.games&quot;&gt;LogLogGames&lt;&#x2F;a&gt; released a
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;news&#x2F;app&#x2F;1673940&quot;&gt;bunch of updates packed with various bugfixes and improvements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;gravity_well&quot;&gt;Gravity Well&lt;&#x2F;a&gt;
is a simple two-player (shared keyboard) game in which
you collect salvage and try not to fall into a black hole
that can be played online &lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;gravity_well&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&quot;&gt;Flesh&lt;&#x2F;a&gt;
got a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;status&#x2F;1523210359045206017&quot;&gt;new enemy type&lt;&#x2F;a&gt;,
new &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;status&#x2F;1525249464562491393&quot;&gt;UI&#x27;s fade in&#x2F;out&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;status&#x2F;1529400914364465153&quot;&gt;damage animation for enemies&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;uxz0oz&#x2F;grocery_bagger&quot;&gt;Grocery Bagger 9000&lt;&#x2F;a&gt;
is a WIP Tetris-like puzzler built with Bevy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other tooling updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucas-miranda&#x2F;clymene&quot;&gt;clymene&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LukeRaccoon&quot;&gt;@LukeRaccoon&lt;&#x2F;a&gt; is a CLI atlas generation tool
that doesn&#x27;t just outputs a packed image, but also a data set
about its sources, which can be either static images or animations.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;The Unofficial Bevy Cheatbook by got
&lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;gpu&#x2F;intro.html&quot;&gt;a WIP chapter about rendering&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;scvalex&quot;&gt;@scvalex&lt;&#x2F;a&gt; shared a &lt;a href=&quot;https:&#x2F;&#x2F;scvalex.net&#x2F;posts&#x2F;63&quot;&gt;blog post&lt;&#x2F;a&gt;
about how the NixOS flake for Rust&#x2F;egui&#x2F;eframe&#x2F;glutin&#x2F;OpenGL
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;scvalex&#x2F;sixty-two&#x2F;-&#x2F;tree&#x2F;flake-blogpost&quot;&gt;looks like&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ychshn&quot;&gt;@ychshn&lt;&#x2F;a&gt; shared a live-stream recording
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;iR7Q_6quwSI&quot;&gt;&amp;quot;Let&#x27;s Code Snake with Rust and WASM&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;PhaestusFox added a bunch of new videos
to their &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PL6uRoaCCw7GN_lJxpKS3j-KXuThRiSXc6&quot;&gt;&amp;quot;Bevy Basics&amp;quot;&lt;&#x2F;a&gt; YouTube series.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;mmap-cache&quot;&gt;mmap_cache&lt;&#x2F;a&gt; is a low-level API
for a memory-mapped cache of a read-only key-value store.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;crevice&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#0100---2022-05-26&quot;&gt;crevice v0.10&lt;&#x2F;a&gt;
brings mint integration and a couple of API improvements.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;glyphon&quot;&gt;glyphon&lt;&#x2F;a&gt; provides
a simple way to render 2D text with wgpu.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ugefgv&#x2F;egui_018&quot;&gt;egui 0.18&lt;&#x2F;a&gt; was released,
with the ability to embed 3D inside egui, table and date picker widgets,
better text contrast in bright mode, and more.&lt;&#x2F;li&gt;
&lt;li&gt;Following the release of egui v0.18,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;penicillin_duck&#x2F;status&#x2F;1520703733755166720&quot;&gt;bevy_egui 0.14&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&#x2F;status&#x2F;1524368923931590657&quot;&gt;puffin_egui 0.15.0&lt;&#x2F;a&gt;
were published.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_puffin&quot;&gt;bevy_puffin&lt;&#x2F;a&gt; integrates the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;puffin&quot;&gt;puffin&lt;&#x2F;a&gt; instrumentation profiler with Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DrLuke&#x2F;bevy_rosc&quot;&gt;bevy_rosc&lt;&#x2F;a&gt; integrates &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klingtnet&#x2F;rosc&quot;&gt;rosc&lt;&#x2F;a&gt; - an Open Sound Control library - into Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NemuiSen&#x2F;bustsuri&quot;&gt;bustsuri&lt;&#x2F;a&gt; is a Bevy asset
that provides 2D collision detector and kinematics.&lt;&#x2F;li&gt;
&lt;li&gt;The Bevy engine &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;umwjt4&#x2F;bevy_and_dioxus_are_collaborating_on_stretch2&quot;&gt;started collaborating&lt;&#x2F;a&gt; with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dioxuslabs&quot;&gt;@dioxuslabs&lt;&#x2F;a&gt;
on a flexible, high-performance, cross-platform UI layout library
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DioxusLabs&#x2F;sprawl&quot;&gt;sprawl&lt;&#x2F;a&gt;
(based on abandoned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vislyhq&#x2F;stretch&quot;&gt;stretch&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ujk2s6&#x2F;choosing_a_networking_library_for_my_game&#x2F;&quot;&gt;&amp;quot;Choosing a networking library for my game&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help build the
new node graph and 2D rendering systems.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dims.co&#x2F;jobs&quot;&gt;DIMS&lt;&#x2F;a&gt;
(Stockholm&#x2F;Remote): Various roles, open applications accepted.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;careers.embark-studios.com&#x2F;jobs&quot;&gt;Embark Studios&lt;&#x2F;a&gt;
(Stockholm&#x2F;Hybrid Remote): Various roles, open applications accepted.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;v7xxr7&#x2F;this_month_in_rust_gamedev_34&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1534619187477467138&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Rust Graphics Meetup 2</title>
            <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/blog/graphics-meetup-02/</link>
            <guid>https://gamedev.rs/blog/graphics-meetup-02/</guid>
            <description>&lt;!-- markdownlint-disable single-title heading-increment no-blanks-blockquote --&gt;
&lt;!-- markdownlint-configure-file {&quot;line-length&quot;: {&quot;heading_line_length&quot;: 120}} --&gt;
&lt;p&gt;&lt;img src=&quot;rust-graphics-meetup-2.jpg&quot; alt=&quot;Rust Graphics Meetup&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The second Rust Graphics Meetup will take place on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;b6ec5c17&quot;&gt;May 21st at 16:00
UTC+0&lt;&#x2F;a&gt;. This meetup is a chance to see what others have been
working on in the Rust graphics community. You can see the videos from the
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLYiOdhpKxxXJwaocrJcOCoBhlV6foaO8F&quot;&gt;first meetup here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The meetup will take place on the Rust Gamedev &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=aIdsrZDActM&quot;&gt;YouTube&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;www.twitch.tv&#x2F;RustGameDev&quot;&gt;Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;schedule&quot;&gt;Schedule&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#schedule&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;vismut-lukas-orsvarn&quot;&gt;Vismut | &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukors&quot;&gt;Lukas Orsvärn&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vismut-lukas-orsvarn&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;16-00-16-20&quot;&gt;16:00 - 16:20&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#16-00-16-20&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Vismut will be a procedural texturing tool for Windows and Linux, allowing for
a 100% non-destructive material creation workflow. This means you build
textures from scratch using procedural nodes, allowing for changes to any step
in the process at any time, including changing the texture&#x27;s resolution.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;screen-13-john-wells&quot;&gt;Screen-13 | &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;attackgoat&#x2F;screen-13&quot;&gt;John Wells&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#screen-13-john-wells&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;16-20-16-30&quot;&gt;16:20 - 16:30&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#16-20-16-30&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Screen 13 is an easy-to-use Vulkan rendering engine in the spirit of QBasic.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;optimizing-wgpu-with-data-driven-design-connor-fitzgerald&quot;&gt;Optimizing wgpu with Data Driven Design | &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cwfitzgerald&quot;&gt;Connor Fitzgerald&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#optimizing-wgpu-with-data-driven-design-connor-fitzgerald&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;16-30-17-00&quot;&gt;16:30 - 17:00&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#16-30-17-00&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;A look into how Data Driven Design is the key to the performance increases
coming in wgpu 0.13 and what the future holds for solving long standing
performance bottlenecks in the codebase. wgpu is the graphics abstraction at
the core of many rust projects and ensuring it is as fast as possible will
push the boundary of what is possible in safe Rust today.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #33 - April 2022</title>
            <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/033/</link>
            <guid>https://gamedev.rs/news/033/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 33rd issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#announcements&quot;&gt;Announcements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;033&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;announcements&quot;&gt;Announcements&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#announcements&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 15th Rust Gamedev Meetup took place in April. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;okWFrfaaADs&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups take place on
the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;1baaa280&quot;&gt;May 14th&lt;&#x2F;a&gt;, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this
form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-graphics-meetup-2&quot;&gt;Rust Graphics Meetup 2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-graphics-meetup-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;The 2nd Rust Graphics Meetup will take place on the &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;b6ec5c17&quot;&gt;21st of May, at 16:00
UTC+0&lt;&#x2F;a&gt;. This meetup is a chance to show off what you&#x27;ve
been working on in the graphics community, or see what other people have been
doing!&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re interested in speaking, please fill out the
&lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;DyvZ4WFZanTaLGGa7&quot;&gt;form&lt;&#x2F;a&gt;. You can also &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=F0wGz5UJTrY&quot;&gt;watch one of the
talks&lt;&#x2F;a&gt; from the first meetup.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rustconf-arcade-cabinet&quot;&gt;RustConf Arcade Cabinet&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustconf-arcade-cabinet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;arcade_cabinet.gif&quot; alt=&quot;arcade cabinet&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo&lt;&#x2F;a&gt; is building a custom arcade cabinet that will be at
RustConf 2022 in Portland. It is an opportunity for Rust game developers to
share their games with the broader community. If you are interested in getting
your game on the cabinet, read &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1523715837726961664&quot;&gt;this Twitter thread&lt;&#x2F;a&gt; and
fill out the &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;onFm5fCygdbiArqJ7&quot;&gt;interest form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n33&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor-capsule.jpg&quot; alt=&quot;way of rhea capsule image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n33&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle adventure with hard puzzles and forgiving
mechanics being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; in a custom Rust
engine. It has a demo available &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n33&quot;&gt;on Steam&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea was recently &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1517129411790843905&quot;&gt;shown off at PAX East!&lt;&#x2F;a&gt; A &lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;games&#x2F;1110620&#x2F;announcements&#x2F;detail&#x2F;3175611379276019942?utm_campaign=tmirgd&amp;amp;utm_source=n32&amp;amp;utm_content=news&quot;&gt;minor
patch&lt;&#x2F;a&gt; has been released to the demo with post-PAX fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;An issue that made the last puzzle in the third forest level difficult to
navigate with a controller was worked around&lt;&#x2F;li&gt;
&lt;li&gt;Colliders in the Hermes puzzle were fixed (previously you could land on top of
a gate if you held left while sliding)&lt;&#x2F;li&gt;
&lt;li&gt;The attract mode that was used at PAX has been merged (not in demo)&lt;&#x2F;li&gt;
&lt;li&gt;More jungle biome scenery has been placed (not in demo)&lt;&#x2F;li&gt;
&lt;li&gt;A crash at startup on CPUs that don&#x27;t support the &lt;code&gt;andn&lt;&#x2F;code&gt; instruction was fixed
(part of the BMI extension to x64)&lt;&#x2F;li&gt;
&lt;li&gt;The game can now generate mini dumps on Windows and Linux in the event that it
crashes and if given consent, forward them to the developer for analysis&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can stay up to date with the latest Way of Rhea developments by &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n33&quot;&gt;following
it on Steam&lt;&#x2F;a&gt;, signing up for &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;newsletter&#x2F;signup&quot;&gt;their mailing list&lt;&#x2F;a&gt;, or
joining &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;JGeVt5XwPP&quot;&gt;their Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bitgun&quot;&gt;BITGUN&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bitgun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bitgun-release-optimized.gif&quot; alt=&quot;BITGUN gameplay&quot; &#x2F;&gt;
&lt;em&gt;BITGUN gameplay&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;BITGUN&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;XrGZQkq&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&quot;&gt;Twitter&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;darthdeus&quot;&gt;@darth&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shosanna&quot;&gt;@shosanna&lt;&#x2F;a&gt; is an action
roguelite zombie shooter with difficult and satisfying combat you can learn and
master. Guns break quickly and you lose all your gear when you die.&lt;&#x2F;p&gt;
&lt;p&gt;The game was just released on Steam! It has been developed by a programming duo
called LogLog Games. They have been working on it for the past year and it is
their biggest game so far (they also have 2 smaller games). &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;BITGUN&lt;&#x2F;a&gt; is written
in Godot Engine but it is using Rust language extensively (it has around 7500
lines of Rust and 4200 lines of GDScript).&lt;&#x2F;p&gt;
&lt;p&gt;The main changes from the demo version of the game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New missions added with extra difficulty&lt;&#x2F;li&gt;
&lt;li&gt;Improved AI which doesn&#x27;t just chase the player but behaves unpredictably&lt;&#x2F;li&gt;
&lt;li&gt;New zombie types - ranged zombie, big spider, zombie spawner&lt;&#x2F;li&gt;
&lt;li&gt;Added comic-book style story&lt;&#x2F;li&gt;
&lt;li&gt;Improved tutorial and new player experience&lt;&#x2F;li&gt;
&lt;li&gt;Reworked inventory system with simplified armor&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussion: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;uepde7&#x2F;after_working_on_our_godot_rust_game_fulltime_for&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Riding at night&quot; &#x2F;&gt;
&lt;em&gt;Out for a ride at night&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;For April Fool&#x27;s day, Veloren made a post about a new direction; &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;veloren-direction&#x2F;&quot;&gt;Need for
Voxels: Veloren Cart&lt;&#x2F;a&gt;. Enjoy the read! Veloren also participated
in Reddit&#x27;s &#x2F;r&#x2F;place, and got a small place right below &#x2F;r&#x2F;rust. Several months
of project finances were processed, and &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-167#finances-by-angelonfira&quot;&gt;discussed in a blog
post&lt;&#x2F;a&gt;. The &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ff9EXhCXmFY&quot;&gt;Veloren Reading Club saw its 8th
episode&lt;&#x2F;a&gt;, which was on the topic of graphics and
particles. A &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=keI0VpjkgZg&quot;&gt;second Veloren Code Review session&lt;&#x2F;a&gt; was
held, in which two developers went through a merge request that focused on
combat numbers.&lt;&#x2F;p&gt;
&lt;p&gt;Work was done to improve how loadouts work, specifically surrounding inheritance
from other configs. Tweaks were made to arthropods, which should make them more
fun to fight. Work is being done to prepare for the 0.13 release, with a custom
map being built, and a special treasure map being created for the launch party.
Player bank storages are being developed, which will allow players to store
excess items in towns.&lt;&#x2F;p&gt;
&lt;p&gt;April&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-166&quot;&gt;#166&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-167&quot;&gt;#167&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-168&quot;&gt;#168&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-169&quot;&gt;#169&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oasis-of-lost-hope&quot;&gt;Oasis of Lost Hope&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oasis-of-lost-hope&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oasis-of-lost-hope.jpg&quot; alt=&quot;Oasis of Lost Hope&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Oasis of Lost Hope is a game where fertile ground is steadily consumed by dark,
barren land called blight. Water helps defend an area from being consumed, but
reserves are finite. The player needs to collect ore to build more irrigation
towers and delay doom for a few more seconds. Yet one thing is certain: the days
of fertile land are counted.&lt;&#x2F;p&gt;
&lt;p&gt;The game is an entry for the Ludum Dare 50 Jam, the theme of which was &amp;quot;Delay
the Inevitable&amp;quot;. It has been developed by setzer22 and Bromeon and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bromeon&#x2F;LudumDare50&quot;&gt;open-sourced
on GitHub&lt;&#x2F;a&gt;. The game is built on top of godot-rust alongside GDScript.
The Rust language is not exactly known for fast prototyping, but with a slightly
less safety-conservative fork of godot-rust, the game jam experience was
surprisingly smooth. When modeling mechanics such as the expanding blight or the
water pipe network, Rust really showed its strength as a strongly typed and fast
language.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;extremely-extreme-sports&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kuviman.itch.io&#x2F;extremely-extreme-sports&quot;&gt;Extremely Extreme Sports&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#extremely-extreme-sports&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;extremely-extreme-sports.gif&quot; alt=&quot;Extremely Extreme Sports&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kuviman.itch.io&#x2F;extremely-extreme-sports&quot;&gt;Extremely Extreme Sports&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&#x2F;extremely-extreme-sports&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;DZaEMPpANY&quot;&gt;Discord&lt;&#x2F;a&gt;) is a multiplayer online downhill racing game &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;50&#x2F;extremely-exteme-sports&quot;&gt;made for
Ludum Dare 50 game jam&lt;&#x2F;a&gt;, scored top 3 in fun. Explode the mountain,
and race against the avalanche as well as your friends.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Online multiplayer&lt;&#x2F;li&gt;
&lt;li&gt;Character customization&lt;&#x2F;li&gt;
&lt;li&gt;Emoting&lt;&#x2F;li&gt;
&lt;li&gt;A little bit of gameplay&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Developed by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&quot;&gt;@kuviman&lt;&#x2F;a&gt; using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&#x2F;geng&quot;&gt;custom engine&lt;&#x2F;a&gt;. A &lt;a href=&quot;https:&#x2F;&#x2F;kuviman.itch.io&#x2F;extremely-extreme-sports&#x2F;devlog&#x2F;372532&#x2F;extremely-extreme-sports-postmortem&quot;&gt;postmortem blog
post&lt;&#x2F;a&gt; was written about the jam experience, and it includes
postjam updates.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;u9zqrc&#x2F;scored_top_3_in_fun_with_my_ludum_dare_game&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-v0-7&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&quot;&gt;Bevy v0.7&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-v0-7&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_mushroom.jpg&quot; alt=&quot;bevy mushroom&quot; &#x2F;&gt;
&lt;em&gt;Creative Commons &#x27;Stylized mushrooms&#x27; scene by QumoDone rendered in Bevy.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; is a refreshingly simple data-driven game engine built in Rust. It
is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;free and open source&lt;&#x2F;a&gt; forever!&lt;&#x2F;p&gt;
&lt;p&gt;Bevy 0.7 was a massive community effort. You can check out the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&quot;&gt;full release
blog post here&lt;&#x2F;a&gt;, but here are some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#skeletal-animation&quot;&gt;Skeletal animation and mesh skinning&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#gltf-animation-importing&quot;&gt;GLTF animation importing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#unlimited-point-lights&quot;&gt;Unlimited* point lights in a scene&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#light-clustering-features-and-optimizations&quot;&gt;Improved clustered forward rendering: dynamic&#x2F;adaptive clustering and faster,
more accurate cluster assignment&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#compressed-gpu-textures&quot;&gt;Compressed texture support (KTX2 &#x2F; DDS &#x2F; .basis): load more textures in a
scene, faster&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#bevy-native-compute-shaders&quot;&gt;Compute shader &#x2F; pipeline specialization: Bevy&#x27;s flexible shader system was
ported to compute shaders, enabling hot-reloading, shader defs, and shader
imports&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#render-to-texture&quot;&gt;Render to texture: cameras can now be configured to render to a texture
instead of a window&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#flexible-mesh-vertex-layouts&quot;&gt;Flexible mesh vertex layouts in shaders&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#ergonomic-system-ordering&quot;&gt;ECS improvements: Order systems using their names, Query::many_mut, use
conflicting parameters in systems via ParamSets, WorldQuery derives&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#documentation-improvements&quot;&gt;Documentation improvements: better examples, more doc tests, and more
coverage&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#audio-control&quot;&gt;More audio control: pause, volume, speed, and looping&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-7&#x2F;#eventloop-power-saving-modes&quot;&gt;Power usage options to enable only updating Bevy Apps when input
occurs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;u4e63h&#x2F;bevy_07&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31043668&quot;&gt;Hacker News&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1515031150313443332&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dims&quot;&gt;Dims&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dims&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dims.jpg&quot; alt=&quot;dims foliage&quot; &#x2F;&gt;
&lt;em&gt;Foliage rendering in Dims&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Dims is an open-world creation platform.&lt;&#x2F;p&gt;
&lt;p&gt;In their latest &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=jgkhsY8aZO8&quot;&gt;dev log&lt;&#x2F;a&gt; they demonstrate a new foliage rendering
and spawning system, which automatically spawns foliage and trees based on
&amp;quot;habitat rules&amp;quot;. This means a user can simply &amp;quot;paint&amp;quot; a world and it will get
populated with plants and rocks automatically.&lt;&#x2F;p&gt;
&lt;p&gt;They are also planning to host a screenshot competition in the next few weeks
for anyone who would like to try out the platform and create their own
landscapes. Sign up for the newsletter on their website to get notified when it
starts!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ujhr3c&#x2F;the_start_of_a_tool_that_lets_you_tweak_how_and&#x2F;&quot;&gt;Foliage rendering on reddit&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;tuj9dg&#x2F;far_from_finished_but_heres_our_terrain_tool&#x2F;&quot;&gt;Erosion tool on reddit&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;eldiron&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.eldiron.com&quot;&gt;Eldiron&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#eldiron&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;eldiron_screen.png&quot; alt=&quot;Eldiron Image&quot; &#x2F;&gt;
&lt;em&gt;Behavior Nodes of Eldiron&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.eldiron.com&quot;&gt;Eldiron&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;markusmoenig&#x2F;Eldiron&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;ZrNj6baSZU&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MarkusMoenig&quot;&gt;Twitter&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;markusmoenig&quot;&gt;@markusmoenig&lt;&#x2F;a&gt; is a creator for classic role
playing games (RPGs) written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Eldiron v0.5 features inbuild tilemaps, a node-based behavior system and region
editors.&lt;&#x2F;p&gt;
&lt;p&gt;Development Updates in April:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support for 4 layers of tiles for game regions. This enables transparency and
support for top-down and isometric views.&lt;&#x2F;li&gt;
&lt;li&gt;Game regions can now contain named areas.&lt;&#x2F;li&gt;
&lt;li&gt;Areas can contain behavior nodes to spawn monsters, lay traps, or displace
tiles (for example to open a door).&lt;&#x2F;li&gt;
&lt;li&gt;New &amp;quot;Systems&amp;quot; module to create behavior for Combat and soon for Crafting,
Magic and more. System behavior trees can be called from any character.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Eldiron v1 will be able to create any kind of RPG utilizing square tiles, like
the classical Ultima series.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hotham&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leetvr&#x2F;hotham&quot;&gt;Hotham&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hotham&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hotham.png&quot; alt=&quot;Hotham Image&quot; &#x2F;&gt;
&lt;em&gt;Screenshot from The Station, an upcoming space station simulation game, built
with Hotham&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leetvr&#x2F;hotham&quot;&gt;Hotham&lt;&#x2F;a&gt; is a game engine for standalone VR devices, trying to make VR
development just a little bit less painful.&lt;&#x2F;p&gt;
&lt;p&gt;0.2 has been released with some &lt;em&gt;breathtaking&lt;&#x2F;em&gt; maintenance and performance
improvements that make Hotham marginally easier to use. If you&#x27;re interested in
Rust and VR and haven&#x27;t checked out the project already, now is an excellent
time to do so.&lt;&#x2F;p&gt;
&lt;p&gt;A huge thank you to our sponsors and contributors (big hat-tip to @jmgao) and
the wonderful members of the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;SZEZUX6ZsQ&quot;&gt;Hotham discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;game-development-with-rust-and-webassembly&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;subscription.packtpub.com&#x2F;product&#x2F;game_development&#x2F;9781801070973&quot;&gt;Game Development with Rust and WebAssembly&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-development-with-rust-and-webassembly&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;game-development-rust-webassembly.png&quot; alt=&quot;Game Development with Rust and WebAssembly Book Cover&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;subscription.packtpub.com&#x2F;product&#x2F;game_development&#x2F;9781801070973&quot;&gt;Game Development with Rust and WebAssembly&lt;&#x2F;a&gt; by Eric Smith (a.k.a
&lt;a href=&quot;https:&#x2F;&#x2F;www.twitter.com&#x2F;paytonrules&quot;&gt;@paytonrules&lt;&#x2F;a&gt;) was published in April. It takes a
tutorial approach to lead the reader through building an endless runner using
Rust and WebAssembly. You can play the completed game &lt;a href=&quot;https:&#x2F;&#x2F;rust-games-webassembly.netlify.app&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;From the summary: This book is an easy-to-follow reference to help you develop
your own games, teaching you all about game development and how to create an
endless runner from scratch. You&#x27;ll begin by drawing simple graphics in the
browser window, and then learn how to move the main character across the screen.
You&#x27;ll also create a game loop, a renderer, and more, all written entirely in
Rust. After getting simple shapes onto the screen, you&#x27;ll scale the challenge by
adding sprites, sounds, and user input. As you advance, you&#x27;ll discover how to
implement a procedurally generated world. Finally, you&#x27;ll learn how to keep your
Rust code clean and organized so you can continue to implement new features and
deploy your app on the web.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.twitter.com&#x2F;paytonrules&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;EjAunSbpdV&quot;&gt;Discord&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-i-choose-to-build-my-game-from-scratch&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;uewu9h&#x2F;reasons_why_i_choose_to_build_my_game_from&#x2F;&quot;&gt;Why I choose to build my game from scratch&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#why-i-choose-to-build-my-game-from-scratch&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HeavyRain266&quot;&gt;@HeavyRain266&lt;&#x2F;a&gt; published an article, &#x27;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;uewu9h&#x2F;reasons_why_i_choose_to_build_my_game_from&#x2F;&quot;&gt;Why I choose to build my game from
scratch&lt;&#x2F;a&gt;&#x27;, a short story about their implementation of the game
&#x27;Forbidden Valley&#x27; from scratch in Rust. The author aims to show how much you
can learn from building your dream game without the help of any game engine.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;uewu9h&#x2F;reasons_why_i_choose_to_build_my_game_from&#x2F;&quot;&gt;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;brontefy-me&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DdD6VhmEIiU&quot;&gt;Brontefy Me&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#brontefy-me&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;brontefy-me.jpg&quot; alt=&quot;devlog logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;@hedgein (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hedgein&quot;&gt;Github&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;hedgein&quot;&gt;Twitch&lt;&#x2F;a&gt;) started a devlog
series called Brontefy Me. This series walks through the development of games in
the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy engine&lt;&#x2F;a&gt;. There are two episodes released so far. The &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DdD6VhmEIiU&quot;&gt;first
episode&lt;&#x2F;a&gt; focuses on getting up and running with the
engine, and the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=tx31BKX0yIA&quot;&gt;second episode&lt;&#x2F;a&gt; starts expanding into
game mechanics.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;vismut-0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;vismut-org&#x2F;vismut&#x2F;-&#x2F;releases&#x2F;v0.5.0&quot;&gt;Vismut 0.5&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vismut-0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vismut.png&quot; alt=&quot;Logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;vismut-org&#x2F;vismut&quot;&gt;Vismut&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;vismut-org&#x2F;vismut&quot;&gt;GitLab&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;vismut.zulipchat.com&quot;&gt;Zulip&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;lukors&quot;&gt;@lukors&lt;&#x2F;a&gt; will be a
procedural texturing tool.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;vismut-org&#x2F;vismut&#x2F;-&#x2F;releases&#x2F;v0.5.0&quot;&gt;Version 0.5&lt;&#x2F;a&gt; contains a brand new backend to create a better base
for future improvements. A &lt;a href=&quot;https:&#x2F;&#x2F;orsvarn.com&#x2F;vismut-architecture&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; describes the differences
between the old and the new architecture.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;website&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a free
in-development raster and vector 2D graphics editor. It will be powered by a
node graph compositing engine that supercharges your layer stack, providing a
completely non-destructive editing experience.&lt;&#x2F;p&gt;
&lt;p&gt;The past month&#x27;s Sprint 14 has focused on further editor features and UX
improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;It&#x27;s your type:&lt;&#x2F;strong&gt; The Text tool now provides over 1400 fonts with
bold&#x2F;italic styles from the Google Fonts library.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Oh snap!:&lt;&#x2F;strong&gt; A refactor and polish pass on the snapping system provides
better clarity and consistency. And shapes now have outlines on hover and
selection for easier targeting.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Have a dialog:&lt;&#x2F;strong&gt; Supported by a refactor that moved dialog layouts into the
Rust backend, users can now create new documents of specified sizes and export
artwork as PNG&#x2F;JPG with new File menu dialogs.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pack it up:&lt;&#x2F;strong&gt; The web component of the stack was finally upgraded to Webpack
5 which cleans up a mess of outdated dependencies.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Open the editor&lt;&#x2F;a&gt; in your browser and give it a try.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;notan-v0-3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan v0.3.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#notan-v0-3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notan.jpeg&quot; alt=&quot;notan&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; is a simple and portable layer designed to create your own multimedia
apps on top of it without worrying about platform-specific code.&lt;&#x2F;p&gt;
&lt;p&gt;The main goal is to provide a set of APIs and tools that can be used to create
your project in an ergonomic manner without enforcing any structure or pattern,
always trying to stay out of your way. The idea is that you can use it as a
foundation layer or backend for your next app, game engine, or game.&lt;&#x2F;p&gt;
&lt;p&gt;The latest version &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&#x2F;releases&#x2F;tag&#x2F;v0.3.0&quot;&gt;v0.3.0&lt;&#x2F;a&gt; comes with audio support for all platforms using as
default backend &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;oddio&quot;&gt;oddio&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pdeljanov&#x2F;Symphonia&quot;&gt;symphonia&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ianjk.com&#x2F;ld50&quot;&gt;Last of the Sky Folk&lt;&#x2F;a&gt; is a grapple-hook based
platformer created for LD50.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eira-hx.itch.io&#x2F;heute-nicht&quot;&gt;Heute Nicht&lt;&#x2F;a&gt; rythm game is another LD50 submission.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates
&lt;ul&gt;
&lt;li&gt;PhaestusFox started a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;tz75eb&#x2F;bevy_game_engine_tutorial_series&quot;&gt;Bevy tutorial servies&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;u4uhs2&#x2F;bevy_06_to_07_migration_guide&quot;&gt;0.6 to
0.7 Migration Guide&lt;&#x2F;a&gt; YouTube series.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;TantanDev&quot;&gt;@TantanDev&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=jkHqrkcEHRc&quot;&gt;&amp;quot;Rust multi-threading code review&amp;quot;&lt;&#x2F;a&gt;
video.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanbox-irl&#x2F;tween&quot;&gt;tween&lt;&#x2F;a&gt; is an std-optional tweening
library, designed for use in games and animations.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanbox-irl&#x2F;cosync&quot;&gt;cosync&lt;&#x2F;a&gt; provides a single-threaded,
sequential, parameterized async runtime.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sorenon&#x2F;Action-System&quot;&gt;SuInput&lt;&#x2F;a&gt; is an input system
designed to give pancake and XR applications access to a huge range of input
devices while minimizing the amount of complexity needed to support them.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;u7acfc&#x2F;update_on_bevy_blender_releasing_v02_and_inquiry&quot;&gt;bevy_blender v0.2&lt;&#x2F;a&gt; with lots of new features is out.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help build the
new node graph and 2D rendering systems.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dims.co&#x2F;jobs&quot;&gt;DIMS&lt;&#x2F;a&gt;
(Stockholm&#x2F;Remote)
&lt;ul&gt;
&lt;li&gt;Tools Programmer&lt;&#x2F;li&gt;
&lt;li&gt;Internship: Game Design&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;careers.embark-studios.com&#x2F;jobs&quot;&gt;Embark Studios&lt;&#x2F;a&gt;
(Stockholm&#x2F;Hybrid Remote)
&lt;ul&gt;
&lt;li&gt;Various roles&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;!--
TODO: Add real links and un-comment once this post is published
**Discuss this post on**:
[&#x2F;r&#x2F;rust_gamedev](TODO),
[Twitter](TODO),
[Discord](https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2).
--&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #32 - March 2022</title>
            <pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/032/</link>
            <guid>https://gamedev.rs/news/032/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 32nd issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#rust-gamedev-podcast&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;032&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-podcast&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-podcast&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;podcast.jpeg&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Rust Gamedev Podcast features interviews with indie game developers creating
titles with the Rust programming language. It covers technical topics as well as
the business of open source and commercial indie games development.&lt;&#x2F;p&gt;
&lt;p&gt;In March, two episodes were released:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-fish-fight&quot;&gt;The seventh episode&lt;&#x2F;a&gt; is a chat with Erlend and Ole about
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fish Fight&lt;&#x2F;a&gt;, open source games development, and future game spin-offs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-dustin-a-b-street&quot;&gt;In the eighth episode&lt;&#x2F;a&gt;, Forest chats to Dustin about &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Listen and Subscribe from the following platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast (simplecast)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.apple.com&#x2F;gb&#x2F;podcast&#x2F;rust-game-dev&#x2F;id1526304768&quot;&gt;Apple Podcasts&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;show&#x2F;7HRfGnTcXkLkQd9fxJbDGj&quot;&gt;Spotify&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feeds.simplecast.com&#x2F;C6NQglnL&quot;&gt;RSS Feed&lt;&#x2F;a&gt;,
or &lt;a href=&quot;https:&#x2F;&#x2F;podcasts.google.com&#x2F;feed&#x2F;aHR0cHM6Ly9mZWVkcy5zaW1wbGVjYXN0LmNvbS9DNk5RZ2xuTA&quot;&gt;Google Podcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 14th Rust Gamedev Meetup took place in March. You can watch the
recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;dQPkyjbd36Y&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups
take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-jam&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-1&#x2F;results&quot;&gt;Bevy Jam&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-jam&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-jam.png&quot; alt=&quot;Bevy Jam&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Voting on the first-ever &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-1&#x2F;&quot;&gt;Bevy Jam&lt;&#x2F;a&gt; just finished! It was a
week-long event, where the goal was to make a game in
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;, the free and open-source game engine
built in Rust. The theme was &#x27;Unfair Advantage&#x27;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-1&#x2F;results&quot;&gt;full results can be found on itch.io&lt;&#x2F;a&gt;, and you can read
an &lt;a href=&quot;https:&#x2F;&#x2F;techgeneral.org&#x2F;bevy-jam-1-data-exploration&#x2F;&quot;&gt;exploration of the entries&lt;&#x2F;a&gt; to find out about how
these entries used different asset formats, crates, and Bevy features.&lt;&#x2F;p&gt;
&lt;p&gt;Here are the top five games:&lt;&#x2F;p&gt;
&lt;h4 id=&quot;first-place-medal-first-place-petty-party&quot;&gt;🥇 First Place: &lt;a href=&quot;https:&#x2F;&#x2F;jabuwu.itch.io&#x2F;petty-party&quot;&gt;Petty Party&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#first-place-medal-first-place-petty-party&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;pettyparty.png&quot; alt=&quot;Petty Party logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jabuwu.itch.io&#x2F;petty-party&quot;&gt;Petty Party&lt;&#x2F;a&gt; is a Mario Party inspired board game,
in which you play against the world&#x27;s worst opponent, who&#x27;s
actively rigging the game against you.&lt;&#x2F;p&gt;
&lt;p&gt;The game was originally very hard to beat, so the devs balanced
the jam release fairly heavily in the player&#x27;s favour - however,
if you beat the game, you can unlock the original difficulty
as a &#x27;hard mode&#x27;!&lt;&#x2F;p&gt;
&lt;p&gt;The source for the game is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jabuwu&#x2F;petty-party&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;second-place-medal-second-place-quien-es-el-mechaburro&quot;&gt;🥈 Second Place: &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;quien-es-el-mechaburro&quot;&gt;¿Quién es el MechaBurro?&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#second-place-medal-second-place-quien-es-el-mechaburro&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;mechaburro.gif&quot; alt=&quot;¿Quién es el MechaBurro?&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;quien-es-el-mechaburro&quot;&gt;¿Quién es el MechaBurro?&lt;&#x2F;a&gt; is a singleplayer&#x2F;local
multiplayer game (up to 4 players) with bots (8 total burros)
inspired by twin-stick shooters and aspects of Mario Kart. Players
choose to play as one of the burro piñatas and then attempt to be
the last burro standing in each level of the game. At the start
of each round, one burro is chosen randomly to be upgraded to the
Mechaburro, giving them an unfair advantage.&lt;&#x2F;p&gt;
&lt;p&gt;A postmortem devlog detailing the process of making the game during the
jam can be found &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;quien-es-el-mechaburro&#x2F;devlog&#x2F;354715&#x2F;bevy-jam-1-postmortem&quot;&gt;here&lt;&#x2F;a&gt;, a trailer for the game is
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=YQeb2ffm_TI&quot;&gt;viewable on YouTube&lt;&#x2F;a&gt; and the source code for the game
is available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&#x2F;quien_es_el_mechaburro&quot;&gt;on Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;third-place-medal-third-place-chaz&quot;&gt;🥉 Third Place: &lt;a href=&quot;https:&#x2F;&#x2F;luizchagasjardim.itch.io&#x2F;chaz&quot;&gt;Chaz&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#third-place-medal-third-place-chaz&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;chaz.png&quot; alt=&quot;Chaz screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;luizchagasjardim.itch.io&#x2F;chaz&quot;&gt;Chaz&lt;&#x2F;a&gt; is a platform racing game, where you have to stay close to your
opponent in order to see where you&#x27;re going. Beat them to the floating
heart to win - but be warned, once you do, they&#x27;ll steal your moves!&lt;&#x2F;p&gt;
&lt;p&gt;The source code is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lcjgames&#x2F;chaz&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fourth-place-warlock-s-gambit&quot;&gt;Fourth Place: &lt;a href=&quot;https:&#x2F;&#x2F;gibonus.itch.io&#x2F;warlocks-gambit&quot;&gt;Warlock&#x27;s Gambit&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fourth-place-warlock-s-gambit&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;warlocks_gambit.jpg&quot; alt=&quot;Warlock&#x27;s Gambit Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gibonus.itch.io&#x2F;warlocks-gambit&quot;&gt;Warlock&#x27;s Gambit&lt;&#x2F;a&gt; is a puzzle game constructed like a
card game, playable in the browser. You are given a static deck and have to play
your cards carefully to beat your opponent. In keeping with the theme of the
jam, the decks are stacked against you. In fact, it&#x27;s impossible to win by
default. But you have a trick up your sleeve, literally. You can drag a card in
your sleeve to play it later.&lt;&#x2F;p&gt;
&lt;p&gt;The jam release was limited and confusing, but a post-jam update fixed the
most annoying bugs, clarified the game rules, enabled importing custom decks,
and added great code documentation (including a flow diagram demonstrating the
game state changes).&lt;&#x2F;p&gt;
&lt;p&gt;The game code is licensed under MIT or Apache-2 and is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;team-plover&#x2F;warlocks-gambit&quot;&gt;available on
Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;fifth-place-cheaters-never-win&quot;&gt;Fifth Place: &lt;a href=&quot;https:&#x2F;&#x2F;cdsupina.itch.io&#x2F;cheaters-never-win&quot;&gt;Cheaters Never Win&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fifth-place-cheaters-never-win&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;cheatersneverwin.gif&quot; alt=&quot;Clip of Cheaters Never Win gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cdsupina.itch.io&#x2F;cheaters-never-win&quot;&gt;Cheaters Never Win&lt;&#x2F;a&gt; is an unfairly difficult
infinite runner set in a cyberpunk world.&lt;&#x2F;p&gt;
&lt;p&gt;Collect keycaps in order to unlock cheat codes, which will give
you access to forbidden powers - like jumping, and moving left!&lt;&#x2F;p&gt;
&lt;p&gt;Since the jam, the team has begun work on a full release for the game.&lt;&#x2F;p&gt;
&lt;p&gt;The source for this game is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Corrosive-Games&#x2F;Cheaters-Never-Win&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;v-racer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;vracer&quot;&gt;V-Racer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#v-racer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vracer_screenshot.gif&quot; alt=&quot;VRacer screenshot&quot; &#x2F;&gt;
&lt;em&gt;Screenshot of V-Racer&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;V-Racer (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;vracer&quot;&gt;GitHub&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Syn9Dev&quot;&gt;@Syn-Nine&lt;&#x2F;a&gt; is a retro
drift racing game inspired by Atari
Battlezone and Wipeout, created using
Syn9&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;mgfw&quot;&gt;Rust Mini Game Framework&lt;&#x2F;a&gt;.
The game is part of an open source
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;&quot;&gt;repository&lt;&#x2F;a&gt; of several
mini-games that use this framework.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;harvest-hero-origins-spring-fever&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&#x2F;&quot;&gt;Harvest Hero Origins - Spring Fever&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero-origins-spring-fever&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;spring_update_banner.png&quot; alt=&quot;hho screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Harvest Hero Origins by Gemdrop Games is an Arcade Wave Defense game featuring
a co-op survival mode.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GemdropGames&quot;&gt;Gemdrop Games&lt;&#x2F;a&gt; collaborated with &lt;a href=&quot;https:&#x2F;&#x2F;www.pixadome.com&#x2F;&quot;&gt;Pixadome&lt;&#x2F;a&gt; to bring
their featured character Blue
from &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1454730&#x2F;Chenso_Club&#x2F;&quot;&gt;Chenso Club&lt;&#x2F;a&gt; to the survival roster. Please go wishlist Chenso Club
to support the developers!&lt;&#x2F;p&gt;
&lt;p&gt;Blue is an android who wields a chainsaw to rip and tear through her enemies.
Slice and dice, then ride through enemies
in the new &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;news&#x2F;app&#x2F;1651500&#x2F;view&#x2F;3112556530755817232&quot;&gt;Spring Fever expansion&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren-steamdeck.jpg&quot; alt=&quot;Veloren on the Steam Deck&quot; &#x2F;&gt;
&lt;em&gt;Veloren on the Steam Deck!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In March, Veloren was tested on the SteamDeck, which you can read about in
detail in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-162#veloren-on-steamdeck-by-angelonfira&quot;&gt;the weekly devblog&lt;&#x2F;a&gt;. Lots of work was done
with Airshipper, Veloren&#x27;s launcher, including some bug fixes, but mainly the
switch to Github Releases as the download backend. This will make game updates
significantly faster and more reliable for players. Work is also being done to
make use of Github&#x27;s HTTP range requests to do partial patches where possible.
Audio work was done to improve swimming sounds playing unevenly, and more sounds
to gliding.&lt;&#x2F;p&gt;
&lt;p&gt;Veloren was also mentioned &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=30667022&quot;&gt;on Hacker News&lt;&#x2F;a&gt;, and lots of great
discussions happened in the comment section. In 2021, Veloren spoke at Rust in
Arts, and &lt;a href=&quot;https:&#x2F;&#x2F;rustfest.global&#x2F;session&#x2F;53-directors-commentary-veloren&#x2F;&quot;&gt;the recording has recently been posted&lt;&#x2F;a&gt;. The
0.13 release map is in the works, with a jungle theme. CliffTowns are being
developed, as a new town located in the mountains. Veloren recorded another
reading club episode, this time about &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=-w0yTCjsV0k&quot;&gt;Tracy and
optimizations&lt;&#x2F;a&gt;. A new series was also started, and the
first &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=gomKwQnEGA8&quot;&gt;Veloren Code Review was recorded&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;March&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-162&quot;&gt;#162&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-163&quot;&gt;#163&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-164&quot;&gt;#164&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-165&quot;&gt;#165&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-nonogram&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;henryksloan&#x2F;rust-nonogram&quot;&gt;rust-nonogram&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-nonogram&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust-nonogram.png&quot; alt=&quot;rust-nonogram screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Nonograms (AKA Picross) are logic puzzles that involve filling in cells on a
grid. The goal of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;henryksloan&#x2F;rust-nonogram&quot;&gt;rust-nonogram&lt;&#x2F;a&gt; is to be a quick and engaging time-killer.
Featuring random puzzles and simple controls, it is a great way to have some
fun and test your skills.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;terrain-generator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ianjk.com&#x2F;terrain_generator&#x2F;&quot;&gt;Terrain Generator&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#terrain-generator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;terrain_generator.jpg&quot; alt=&quot;A screenshot looking down on mountainous terrain and an ocean&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Terrain Generator&amp;quot; is a website made by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kettlecorn&quot;&gt;@kettlecorn&lt;&#x2F;a&gt; that
generates procedural island landscapes. It uses WebAssembly SIMD and multithreading
via WebWorkers to speed up generation.&lt;&#x2F;p&gt;
&lt;p&gt;The terrain is generated with multi-octave simplex noise using the new
simplex-noise crate &lt;a href=&quot;https:&#x2F;&#x2F;ianjk.com&#x2F;terrain_generator&#x2F;&quot;&gt;&lt;code&gt;clatter&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Terrain Generator&#x27;s code is open-sourced on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kettle11&#x2F;open_world_game&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n32&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor-spotlight.jpg&quot; alt=&quot;way of rhea capsule image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n32&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle adventure with hard puzzles and forgiving
mechanics being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; in a custom Rust
engine. It has a demo available &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n32&quot;&gt;on Steam&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Latest developments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n32&quot;&gt;new demo&lt;&#x2F;a&gt; was pushed to Steam for PAX East&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;cdn.cloudflare.steamstatic.com&#x2F;steamcommunity&#x2F;public&#x2F;images&#x2F;clans&#x2F;35599024&#x2F;f356b295d6d71dcaebf4727eca0317269172b1d7.png&quot;&gt;mushroom biome&lt;&#x2F;a&gt; art was completed&lt;&#x2F;li&gt;
&lt;li&gt;All puzzles for the main game are complete&lt;&#x2F;li&gt;
&lt;li&gt;More secrets have been added&lt;&#x2F;li&gt;
&lt;li&gt;Four out of the five &lt;a href=&quot;https:&#x2F;&#x2F;cdn.cloudflare.steamstatic.com&#x2F;steamcommunity&#x2F;public&#x2F;images&#x2F;clans&#x2F;35599024&#x2F;4dbe4158059559176d25f4d9326280d83ec6c745.png&quot;&gt;characters&lt;&#x2F;a&gt; are now in the game&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;SDL_mixer&lt;&#x2F;code&gt; was replaced with a custom Rust mixer built on top of
&lt;a href=&quot;http:&#x2F;&#x2F;libsound.io&#x2F;&quot;&gt;libsoundio&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Numerous minor bug fixes and quality of life improvements, you can find
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;news&#x2F;app&#x2F;1110620&#x2F;view&#x2F;3180112431320346739?utm_campaign=tmirgd&amp;amp;utm_source=n32&amp;amp;utm_content=news&quot;&gt;more details here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can stay up to date with the latest Way of Rhea developments by
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n32&quot;&gt;following it on Steam&lt;&#x2F;a&gt;, signing up for &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;newsletter&#x2F;signup&quot;&gt;their mailing list&lt;&#x2F;a&gt;,
or joining &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;JGeVt5XwPP&quot;&gt;their Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;godot-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot-rust.png&quot; alt=&quot;godot-rust logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;godot-rust (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;FNudpBD&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a Rust library that provides bindings for the Godot game engine.&lt;&#x2F;p&gt;
&lt;p&gt;We are pleased to announce the release of godot-rust version 0.10.0.
This update brings many new quality-of-life features, such as basic
async and serde support, more flexible exporting of Rust symbols to
Godot, better CI and doc integration, among many more features that
have previously been exclusive to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;GitHub repo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This release also makes the API much more user-friendly than
previous versions with more consistent naming, flatter module structure
and fewer redundancies.&lt;&#x2F;p&gt;
&lt;p&gt;Thank you to all of the contributors who made this possible!&lt;&#x2F;p&gt;
&lt;p&gt;A full list of the changes is available in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;notan-v0-2-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan v0.2.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#notan-v0-2-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notan.jpg&quot; alt=&quot;notan&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; is a simple and portable layer designed to create your own multimedia
apps on top of it without worrying about platform-specific code.&lt;&#x2F;p&gt;
&lt;p&gt;The main goal is to provide a set of APIs and tools that can be used to create
your project in an ergonomic manner without enforcing any structure or pattern,
always trying to stay out of your way. The idea is that you can use it as a
foundation layer or backend for your next app, game engine, or game.&lt;&#x2F;p&gt;
&lt;p&gt;Version &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;v0.2.1&lt;&#x2F;a&gt; improves and adds features focusing on the creation of apps,
like select mouse cursor or lazy loop among other things. The main focus was
to improve the integration with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; supporting all its features.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra-0-7&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; 0.7&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra-0-7&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. This
month, Tetra 0.7 was released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support for a wider variety of texture formats&lt;&#x2F;li&gt;
&lt;li&gt;A more powerful API for blending&lt;&#x2F;li&gt;
&lt;li&gt;Lots of bug fixes, cleanups, and improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As mentioned in previous newsletters, this is likely to be the final release of
Tetra, as &lt;a href=&quot;https:&#x2F;&#x2F;www.seventeencups.net&#x2F;posts&#x2F;three-years-of-tetra&#x2F;&quot;&gt;the developer has decided to move onto other projects&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;intro-to-bevy-video-tutorial-series&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=WnUzWuaMzuM&amp;amp;list=PLT_D88-MTFOPPl75g4WshL1Gx2bnGTUkz&amp;amp;index=1&quot;&gt;Intro to Bevy Video Tutorial Series&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#intro-to-bevy-video-tutorial-series&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-video-series.jpg&quot; alt=&quot;Bevy video series title&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Matthew Bryant (&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UC7v3YEDa603x_84PgCPytzA&quot;&gt;Youtube&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mwbryant&quot;&gt;Github&lt;&#x2F;a&gt;) has been working on a video series on using
Bevy to create a Pokemon-style RPG, and just released four episodes. The goal is
to show and explain all the core features of Bevy while creating a real game
over ten 10-15 minute videos, currently releasing once per week. There is also
an accompanying &lt;a href=&quot;https:&#x2F;&#x2F;www.logicprojects.net&#x2F;2022&#x2F;03&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; for the first video in the
series.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-cheatbook&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&quot;&gt;Bevy Cheatbook&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-cheatbook&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&quot;&gt;Bevy Cheatbook&lt;&#x2F;a&gt; by Ida Iyes is an unofficial reference-style book
teaching the Bevy game engine. It got many improvements over the past month.&lt;&#x2F;p&gt;
&lt;p&gt;There is a new &lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;tutorial.html&quot;&gt;guided tutorial page&lt;&#x2F;a&gt;, to help you navigate
the book in an order that makes sense for learning, starting from beginner
topics and progressing towards more advanced! There is also a new &amp;quot;getting
started&amp;quot; page, as an alternative to Bevy&#x27;s official instructions.&lt;&#x2F;p&gt;
&lt;p&gt;New topics added to the book: working with Bevy Time&#x2F;Timers&#x2F;Stopwatches, ECS
data storage kinds, exclusive systems, direct World access, non-Send types,
and more…&lt;&#x2F;p&gt;
&lt;p&gt;Many pages have been overhauled for correctness and the quality of various
code examples improved.&lt;&#x2F;p&gt;
&lt;p&gt;If you would like to support the project, donate to the author via
her &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;inodentry&quot;&gt;GitHub Sponsors&lt;&#x2F;a&gt;. Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;IyesGames&quot;&gt;@IyesGames on
Twitter&lt;&#x2F;a&gt; for updates.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bloom3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bloom3d.com&quot;&gt;Bloom3D&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bloom3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bloom3d.jpg&quot; alt=&quot;A screenshot of Bloom3D&#x27;s interface and a simple low-polygon building.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bloom3d.com&quot;&gt;Bloom3D&lt;&#x2F;a&gt; is an extremely minimalist in-browser 3D modeling tool made
by &lt;a href=&quot;kettlecorn_twitter&quot;&gt;@kettlecorn&lt;&#x2F;a&gt;
that released earlier this month.&lt;&#x2F;p&gt;
&lt;p&gt;Bloom3D is built completely with Rust from the user interface to core algorithms.
The game engine and many of the libraries powering Bloom3D are open-sourced on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kettle11&#x2F;koi&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;noumenal&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noumenal.app&quot;&gt;Noumenal&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#noumenal&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;noumenal.jpg&quot; alt=&quot;The logo for Noumenal, a colorful cube with spheres on each corner and a spherical hole in the center, and &amp;quot;Noumenal&amp;quot; written underneath.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noumenal.app&quot;&gt;Noumenal&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;PFeZQE48gG&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;noumenal_app&quot;&gt;Twitter&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;hackerfoo.com&quot;&gt;@HackerFoo&lt;&#x2F;a&gt; is a beautiful
and fast 3D modeling app for iOS.&lt;&#x2F;p&gt;
&lt;p&gt;Noumenal officially went into &lt;a href=&quot;https:&#x2F;&#x2F;testflight.apple.com&#x2F;join&#x2F;I6x5Yksx&quot;&gt;public beta&lt;&#x2F;a&gt; this week, and so was
presented to a larger audience for the first time.&lt;&#x2F;p&gt;
&lt;p&gt;The goals of Noumenal are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Enjoyable to use on a mobile device&lt;&#x2F;li&gt;
&lt;li&gt;Accessible to as many people as possible&lt;&#x2F;li&gt;
&lt;li&gt;Real-time solid modeling with boolean operations&lt;&#x2F;li&gt;
&lt;li&gt;Non-destructive editing and robustness to prevent data loss&lt;&#x2F;li&gt;
&lt;li&gt;Intuitive manipulation by projecting from the screen glass into 3D space&lt;&#x2F;li&gt;
&lt;li&gt;Export to the most widely used formats, such as glTF, USDZ, and STL for 3D
printing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These goals have led to a unique interface.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite-node-graph.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite is an in-development raster and vector 2D graphics editor that is free
and open source. It will be powered by a node graph compositing engine that
supercharges your layer stack, providing a completely non-destructive editing
experience.&lt;&#x2F;p&gt;
&lt;p&gt;With the completion of the node graph UX design, work has begun building the
frontend and backend systems for the big leap to node-driven vector editing.
This works by composing groups of Rust functions together at runtime and&#x2F;or
compile time. &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;okWFrfaaADs?t=4014&quot;&gt;Watch the (brief) talk&lt;&#x2F;a&gt; about how
the backend implementation works around challenges imposed by Rust.&lt;&#x2F;p&gt;
&lt;p&gt;New editor features this month include importing bitmap image layers and
customizing stroke styling with dashed lines and rounded or beveled corners.
The &lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;project website&lt;&#x2F;a&gt; is also now mostly content-complete,
including new node graph mockups.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;new website&lt;&#x2F;a&gt;, try the
&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Graphite editor&lt;&#x2F;a&gt; right now in your browser, star on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, follow on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;, and join the
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt; to chat or get involved!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-match3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_match3&quot;&gt;bevy_match3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-match3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_match3_example.gif&quot; alt=&quot;An animated gif depicting a simple match 3 game where gems are matched in sets of 3 or more and new gems drop down to take their place&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_match3&quot;&gt;bevy_match3&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sheepyhead&#x2F;bevy_match3&quot;&gt;GitHub&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;devsheepy&quot;&gt;@Sheepyhead&lt;&#x2F;a&gt;
is an event-based Bevy crate for handling the logic side of match 3 games so
you can worry about making everything else!&lt;&#x2F;p&gt;
&lt;p&gt;This was recently released in its first public version, so there are several
parts to improve, and it could really use some battle testing.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dos-like-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Enet4&#x2F;dos-like-rs&quot;&gt;dos-like-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dos-like-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;doslike.png&quot; alt=&quot;Screenshot of example &amp;quot;rotozoom&amp;quot; from dos-like-rs, depicting a rotating tile grid of Ferris.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Enet4&#x2F;dos-like-rs&quot;&gt;dos-like-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;E_net4&quot;&gt;@E_net4&lt;&#x2F;a&gt;
provides Rust bindings to Mattias Gustavsson&#x27;s &lt;code&gt;dos-like&lt;&#x2F;code&gt;,
a cross-platform framework for writing modern applications
with the look &amp;amp; feel of MS-DOS programs from the early 90&#x27;s.&lt;&#x2F;p&gt;
&lt;p&gt;A few technical details about the conception of these bindings
are presented in a &lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;e_net4&#x2F;writing-bindings-to-dos-like-for-rust-some-lessons-learned-2p6k&quot;&gt;blog post on Dev.to&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kira-v0-6-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;kira v0.6.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kira-v0-6-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt; is a backend-agnostic library to create expressive audio
for games. It provides parameters for smoothly adjusting properties of sounds, a
flexible mixer for applying effects to audio, and a clock system for precisely
timing audio events.&lt;&#x2F;p&gt;
&lt;p&gt;v0.6.0 is a complete rewrite with a more elegant API, support for streaming sounds,
swappable backends, and more flexible mixer routing. See the full &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&#x2F;releases&#x2F;tag&#x2F;v0.6.0&quot;&gt;changelog&lt;&#x2F;a&gt; for
more details.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;t984ss&#x2F;kira_game_audio_library_v060_complete_rewrite&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&#x2F;status&#x2F;1501213862988849152&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;screen-13-v0-2-1-alpha&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;attackgoat&#x2F;screen-13&quot;&gt;screen-13 v0.2.1-alpha&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#screen-13-v0-2-1-alpha&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;attackgoat&#x2F;screen-13&quot;&gt;Screen 13&lt;&#x2F;a&gt; is an easy-to-use 2D&#x2F;3D rendering engine in the spirit of QBasic. The
library provides a thin Vulkan 1.1 driver using smart pointers and a fully-generic
render graph structure.&lt;&#x2F;p&gt;
&lt;p&gt;Earlier this year &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;attackgoat&#x2F;screen-13&quot;&gt;Screen 13&lt;&#x2F;a&gt; was updated with a dynamic graph pattern, but there
was no good starter documentation and a few bugs. There is a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;attackgoat&#x2F;screen-13&#x2F;blob&#x2F;master&#x2F;examples&#x2F;getting-started.md&quot;&gt;getting started&lt;&#x2F;a&gt;
guide now! Also, a ton of new features have been added in the last month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;ImGui support&lt;&#x2F;li&gt;
&lt;li&gt;Mac support&lt;&#x2F;li&gt;
&lt;li&gt;Shader specialization&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;attackgoat&#x2F;screen-13&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starwolves&#x2F;space&quot;&gt;Space Frontiers&lt;&#x2F;a&gt; posted &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=EF5iUJNFz94&quot;&gt;a video&lt;&#x2F;a&gt; of their Atmospherics update.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=qufQVtlYqrQ&quot;&gt;Hedgein&lt;&#x2F;a&gt; started a &#x27;making one game per week&#x27; YouTube series.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help build the
new node graph and 2D rendering systems.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- An optional section for new jobs related to Rust gamedev --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dims.co&#x2F;jobs&quot;&gt;DIMS&lt;&#x2F;a&gt;
(Stockholm&#x2F;Remote)
&lt;ul&gt;
&lt;li&gt;Tools Programmer&lt;&#x2F;li&gt;
&lt;li&gt;Internship: Game Design&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;careers.embark-studios.com&#x2F;jobs&quot;&gt;Embark Studios&lt;&#x2F;a&gt;
(Stockholm&#x2F;Hybrid Remote)
&lt;ul&gt;
&lt;li&gt;Various roles&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;u1hfpf&#x2F;this_month_in_rust_gamedev_32_march_2022&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1513623277427728389&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #31 - February 2022</title>
            <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/031/</link>
            <guid>https://gamedev.rs/news/031/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 31st issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#bevy-jam-1&quot;&gt;Bevy Jam&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#rust-gamedev-showcase&quot;&gt;Rust GameDev Showcase&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;031&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;bevy-jam-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-1&#x2F;&quot;&gt;Bevy Jam #1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-jam-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;bevy-jam.png&quot; alt=&quot;Bevy Jam&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The first-ever &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-1&#x2F;&quot;&gt;Bevy Jam&lt;&#x2F;a&gt; just finished! Bevy Jam is a week-long event,
where the goal is to make a game in &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;, the free and open-source
game engine built in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The theme was Unfair Advantage. 431 people joined the jam and 75 teams submitted
entries. A ten-day &amp;quot;voting period&amp;quot; has started, which will end on March 14th.
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-1&#x2F;entries&quot;&gt;Anyone can play and vote on the submissions&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The winning team will receive any two items from the &lt;a href=&quot;https:&#x2F;&#x2F;merch.bevyengine.org&#x2F;&quot;&gt;Bevy Merch&lt;&#x2F;a&gt; store.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The 13th Rust Gamedev Meetup took place in February. You can watch the
recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;adt63Gqt6yA&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups
take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-gamedev-showcase&quot;&gt;Rust GameDev Showcase&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-showcase&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;The Rust Gamedev Working Group is working on a showcase of games made in Rust!
If you&#x27;re interested in submitting your own footage, fill out &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;forms&#x2F;d&#x2F;1MpA7J9BFXAgoCJZJrxi8r4sqzhhYCzCtFo5kXGVOZj4&#x2F;edit&quot;&gt;this
form&lt;&#x2F;a&gt;. You can also read more about the process of creating the
showcase in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;discussions&#x2F;121&quot;&gt;showcase discussion on Github&lt;&#x2F;a&gt;. The
deadline for submissions has been extended until the 19th of March 2022. Hope to
see your game in there!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;name-needed&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&#x2F;name-needed&quot;&gt;Name Needed&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#name-needed&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;name-needed.gif&quot; alt=&quot;The player orders a selection of blocks to be broken, and a brick wall to be built.&quot; &#x2F;&gt;
&lt;em&gt;The player orders a selection of blocks to be broken, and a brick wall to be
built.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&#x2F;name-needed&quot;&gt;Name Needed&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&quot;&gt;@DomWilliams0&lt;&#x2F;a&gt; is a one-man
effort to produce an open source, intuitive, and high-performance Dwarf
Fortress-esque game with a custom engine.&lt;&#x2F;p&gt;
&lt;p&gt;Recent progress has been on procedural terrain generation, the player UI, item
stacks, and build jobs. A major refactor of the AI system integrated Rust&#x27;s
superb &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; support, which is documented in the most recent devlog.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;domwillia.ms&#x2F;devlog5&#x2F;&quot;&gt;Devlog #5: voxel world goals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;domwillia.ms&#x2F;devlog6&#x2F;&quot;&gt;Devlog #6: async activities&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;domwillia.ms&#x2F;devlog7&#x2F;&quot;&gt;Devlog #7: custom async runtime&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;this-is-fine-sokoban&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;sokoban&quot;&gt;This is Fine Sokoban&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-is-fine-sokoban&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sokoban_screenshot.gif&quot; alt=&quot;This is Fine Sokoban screenshot&quot; &#x2F;&gt;
&lt;em&gt;Screenshot of This is Fine Sokoban&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is Fine Sokoban (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;sokoban&quot;&gt;GitHub&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Syn9Dev&quot;&gt;@Syn-Nine&lt;&#x2F;a&gt; is a Sokoban game inspired by the This is Fine
meme created for the &lt;a href=&quot;https:&#x2F;&#x2F;noop.rocks&#x2F;gdr&#x2F;viewtopic.php?f=2&amp;amp;t=84&quot;&gt;Game Developers Refuge 4x4x4 Challenge&lt;&#x2F;a&gt; in February
2022. Use the arrow keys to push the TPS reports into the file folders while
the room is burning down and you&#x27;re surrounded by clocks - a metaphor for
the developer&#x27;s work life.&lt;&#x2F;p&gt;
&lt;p&gt;The 4x4x4 Challenge was to create a game based on four emojis. In
this case the chosen emoji combination was: :nerd_face: :open_file_folder:
:clock830: :fire:&lt;&#x2F;p&gt;
&lt;p&gt;The game is part of an open source repository of several mini-games that use
Syn9&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;mgfw&quot;&gt;Rust Mini Game Framework&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;build-a-better-buddy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cart.itch.io&#x2F;build-a-better-buddy&quot;&gt;Build A Better Buddy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#build-a-better-buddy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cart.itch.io&#x2F;build-a-better-buddy&quot;&gt;&lt;img src=&quot;build-a-better-buddy.png&quot; alt=&quot;Build A Better Buddy Screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Build A Better Buddy is a cute auto-battler built by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&quot;&gt;@cart_cart&lt;&#x2F;a&gt; using
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt; for &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bevy-jam-1&#x2F;&quot;&gt;Bevy Jam #1&lt;&#x2F;a&gt;. The source
code is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cart&#x2F;build_a_better_buddy&quot;&gt;available here&lt;&#x2F;a&gt;. It runs on Windows, Mac, Linux, and
the Web.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;weegames&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weegames&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;weegames.jpg&quot; alt=&quot;Grid of Weegames minigames&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt; is a fast-paced minigame collection available on web and Windows.
The latest release:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Uses &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;quad-storage&quot;&gt;quad-storage&lt;&#x2F;a&gt; on WASM to save high scores
and a record of how games the player has played&lt;&#x2F;li&gt;
&lt;li&gt;Fixes bug where the game was being played at an incorrect speed
when the player&#x27;s monitor was not 60hz&lt;&#x2F;li&gt;
&lt;li&gt;Adds 8 more minigames&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dis-order&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jhelsing.itch.io&#x2F;dis-order&quot;&gt;Dis-order&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dis-order&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dis-order.jpg&quot; alt=&quot;Screenshot of Dis-order&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Dis-order by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jkhelsing&quot;&gt;@jkhelsing&lt;&#x2F;a&gt; is a short sokoban-esque puzzle game made in 72 hours
for MiniJam 100. In Dis-order you&#x27;re making chaos instead of order, you win when
there are no patterns or order in the level.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s made using &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; and uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;bevy_smud&quot;&gt;bevy_smud&lt;&#x2F;a&gt; for shape
rendering, and a compute pass for the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jkhelsing&#x2F;status&#x2F;1495604656164282374&quot;&gt;particle
effects&lt;&#x2F;a&gt;. The levels are made with ldtk and loaded
using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trouv&#x2F;bevy_ecs_ldtk&quot;&gt;bevy_ecs_ldtk&lt;&#x2F;a&gt;. Read more about this in the
&lt;a href=&quot;https:&#x2F;&#x2F;johanhelsing.studio&#x2F;posts&#x2F;dis-order&quot;&gt;post-mortem&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jhelsing.itch.io&#x2F;dis-order&quot;&gt;Download the game on itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;molecoole&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;Molecoole&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#molecoole&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;&lt;img src=&quot;molecoole.png&quot; alt=&quot;A molecoole and some enemies&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Molecoole is a top-down shooter roguelike where you build your character from
different atoms. Each atom has a unique ability to provide tons of variety
between playthroughs. It&#x27;s made using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month Molecoole launched on &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;, making it the first
game made with Bevy Engine there! It&#x27;s available on Windows and Linux. You can
check out its gameplay on &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bwbVplq03ew&quot;&gt;youtube&lt;&#x2F;a&gt;, or on the Steam page.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Gnarling looking out over a fort&quot; &#x2F;&gt;
&lt;em&gt;Looking out over the Gnarling fort&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In February, &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;release-0-12&#x2F;&quot;&gt;Veloren 0.12 was released&lt;&#x2F;a&gt;. For the
release, a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=604JC5QdYQE&quot;&gt;trailer with some of the changes&lt;&#x2F;a&gt; was
posted. This release was 5 months in the making, so the changelog is quite
large. During the release party, the official server reached a cap of 195
players online at once, which is another record for Veloren. Changes were made
to allow server owners to handle IPv4 and IPv6 connections.
Improvements were also made to trading price calculations to properly normalize
loot tables.&lt;&#x2F;p&gt;
&lt;p&gt;Two Veloren Reading Clubs were held in February. &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=f9PXtKEwedQ&quot;&gt;The first
one&lt;&#x2F;a&gt; explored using Git to contribute, and how to add
some new NPC characters. &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=MbiLZvuBLzc&quot;&gt;The second one&lt;&#x2F;a&gt; explored how
some of Git&#x27;s more intricate features worked, as well as how economy simulations
are done. Work was done to allow species to defend others of the same species,
to allow for more realistic combat in the wild. A &lt;a href=&quot;https:&#x2F;&#x2F;mastodon.technology&#x2F;@veloren&quot;&gt;Mastodon
page&lt;&#x2F;a&gt; was also created for Veloren. Gnarlings forts were also
added, which adds a whole new area for players to fight in.&lt;&#x2F;p&gt;
&lt;p&gt;February&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-158&quot;&gt;#158&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-159&quot;&gt;#159&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-160&quot;&gt;#160&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-161&quot;&gt;#161&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;dims&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dims.co&#x2F;&quot;&gt;DIMS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dims&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=58HS-PN71Mw&quot;&gt;&lt;img src=&quot;dims.jpg&quot; alt=&quot;dims screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;@jfnoren (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jfnoren&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FredrikNoren&quot;&gt;Github&lt;&#x2F;a&gt;) posted a
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=58HS-PN71Mw&quot;&gt;video&lt;&#x2F;a&gt; about a first look into their engine, DIMS. DIMS allows
you to create open worlds, script gameplay, and mess around with physics. DIMS
has been in the works for several months, but you can now sign up for early
access on &lt;a href=&quot;https:&#x2F;&#x2F;www.dims.co&#x2F;&quot;&gt;their website&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;snhi5u&#x2F;some_months_into_building_and_wed_never_have&#x2F;&quot;&gt;Reddit&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jfnoren&#x2F;status&#x2F;1491077331850776576&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-minesweeper&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;qongzi&#x2F;bevy-minesweeper-introduction-4l7f&quot;&gt;Bevy Minesweeper&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-minesweeper&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_minesweeper.png&quot; alt=&quot;screenshot&quot; &#x2F;&gt;
&lt;em&gt;Demo Screenshot&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ManevilleF&quot;&gt;@ManevilleF&lt;&#x2F;a&gt; published a 12 step &lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;qongzi&#x2F;bevy-minesweeper-introduction-4l7f&quot;&gt;course&lt;&#x2F;a&gt; on how to make a
simple 2D Minesweeper using &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt; 0.6.
A &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;qonfucius&#x2F;minesweeper-tutorial&quot;&gt;public repository&lt;&#x2F;a&gt; is
available, as well as a live &lt;a href=&quot;https:&#x2F;&#x2F;qonfucius.gitlab.io&#x2F;minesweeper-tutorial&#x2F;&quot;&gt;demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The tutorial showcases:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;essential features of the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt; engine&lt;&#x2F;li&gt;
&lt;li&gt;important ECS notions for beginners&lt;&#x2F;li&gt;
&lt;li&gt;WASM build&lt;&#x2F;li&gt;
&lt;li&gt;and soon, android native APK build&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ManevilleF&#x2F;status&#x2F;1495787155280510977?s=20&amp;amp;t=omNFCI2cWgDFNC0MC7NWTg&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;qongzi&#x2F;bevy-minesweeper-introduction-4l7f&quot;&gt;dev.to&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;computing-image-filters-with-wgpu-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.redwarp.app&#x2F;image-filters&#x2F;&quot;&gt;Computing image filters with wgpu-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#computing-image-filters-with-wgpu-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;redwarp&quot;&gt;@Redwarp&lt;&#x2F;a&gt; posted a &lt;a href=&quot;https:&#x2F;&#x2F;blog.redwarp.app&#x2F;image-filters&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; that goes
through the process of creating a simple image processing pipeline with compute
shaders, using wgpu-rs. The post takes you through several steps in this
process:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Wgpu basics&lt;&#x2F;li&gt;
&lt;li&gt;Loading a texture&lt;&#x2F;li&gt;
&lt;li&gt;A simple shader&lt;&#x2F;li&gt;
&lt;li&gt;Bind group&lt;&#x2F;li&gt;
&lt;li&gt;Workgroup and dispatch&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;actor-pattern-with-async-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eo-rs.dev&#x2F;blog&#x2F;the-actor-pattern-with-async-rust&#x2F;&quot;&gt;Actor Pattern with Async Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#actor-pattern-with-async-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;@Sorokya (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sorokya&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sorokya&quot;&gt;Github&lt;&#x2F;a&gt;) &lt;a href=&quot;https:&#x2F;&#x2F;eo-rs.dev&#x2F;blog&#x2F;the-actor-pattern-with-async-rust&#x2F;&quot;&gt;published a blog
post&lt;&#x2F;a&gt; about how they improved their game server
by switching over to an actor pattern approach. This method allowed the server
to be refactored to be more modular and cleaner.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-rust-to-android-without-android-studio&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffeecodechem.com&#x2F;2022&#x2F;02&#x2F;exporting-godot-rust-android-apk-windows&#x2F;&quot;&gt;Godot-Rust to Android without Android Studio&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust-to-android-without-android-studio&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot-rust-android-via-windows.jpg&quot; alt=&quot;working godot-rust on an android phone&quot; &#x2F;&gt;
&lt;em&gt;Proof of concept Godot app running on Android&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;coffeecodechem&quot;&gt;@coffeecodechem&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;coffeecodechem.com&#x2F;2022&#x2F;02&#x2F;exporting-godot-rust-android-apk-windows&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; on how to
export godot-rust as an Android APK on Windows without using Android Studio. It
goes beyond the godot-rust book that specifies &amp;quot;steps are tested and confirmed
to work on Linux only&amp;quot;, and details what is needed to make it work on Windows.&lt;&#x2F;p&gt;
&lt;p&gt;The post shows how to set up the JDK and Rust, set up the keystore, and how to
build the required GDNative libraries.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;supercharging-your-web-with-rust-and-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.barrage.net&#x2F;blog&#x2F;technology&#x2F;how-to-supercharge-your-web-with-3d-capabilities-by&quot;&gt;Supercharging your Web with Rust and Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#supercharging-your-web-with-rust-and-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Bruno Lipovac &lt;a href=&quot;https:&#x2F;&#x2F;www.barrage.net&#x2F;blog&#x2F;technology&#x2F;how-to-supercharge-your-web-with-3d-capabilities-by&quot;&gt;released a blog post&lt;&#x2F;a&gt;
that detailed building 3D applications for use on the web with Bevy. It walks
through setting up a Bevy project and importing some models. It also details
some more fine-detail items, such as lighting and sky. It then shows how to
compile the project and serve it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;vismut&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;vismut.org&quot;&gt;Vismut&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vismut&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vismut.png&quot; alt=&quot;Vismut&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;vismut.org&quot;&gt;Vismut&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;vismut-org&#x2F;vismut&quot;&gt;GitLab&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;vismut.zulipchat.com&quot;&gt;Zulip&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;lukors&quot;&gt;@lukors&lt;&#x2F;a&gt;
will be a procedural texturing tool.&lt;&#x2F;p&gt;
&lt;p&gt;This application saw its first public release a month ago, where it added
support for its first use case: manual channel shuffling.&lt;&#x2F;p&gt;
&lt;p&gt;The latest version, &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;vismut-org&#x2F;vismut&#x2F;-&#x2F;releases&#x2F;v0.4.0&quot;&gt;v0.4.0&lt;&#x2F;a&gt;, brings an all-new interface that&#x27;s
not only prettier but also much easier to use thanks to &lt;code&gt;bevy_egui&lt;&#x2F;code&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Upcoming versions will turn it into a fully-featured node-based procedural
texturing tool. &lt;a href=&quot;https:&#x2F;&#x2F;orsvarn.com&#x2F;introducing-vismut&#x2F;&quot;&gt;Read the introduction&lt;&#x2F;a&gt;
on the author&#x27;s blog for more information.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blackjack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;blackjack&quot;&gt;Blackjack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#blackjack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;blackjack.gif&quot; alt=&quot;Blackjack: Showcase of the new catmull-clark subdivision&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;blackjack&quot;&gt;Blackjack&lt;&#x2F;a&gt; by @setzer22 is a new procedural modeling application made in Rust,
using rend3, wgpu, and egui. It follows the steps of applications like
Houdini, or Blender&#x27;s geometry nodes project and provides a node-based
environment to compose procedural recipes to create 3d models.&lt;&#x2F;p&gt;
&lt;p&gt;The last two months have been quite busy for Blackjack. After an initial open
source release, several new features have been added:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added a resizeable viewport system, with node graph pan and zoom.&lt;&#x2F;li&gt;
&lt;li&gt;Built an initial implementation for a properties inspector and geometry
spreadsheet panels.&lt;&#x2F;li&gt;
&lt;li&gt;Added a subdivision node, with a fast catmull-clark subdivision technique
based on
&lt;a href=&quot;https:&#x2F;&#x2F;onrendering.com&#x2F;data&#x2F;papers&#x2F;catmark&#x2F;HalfedgeCatmullClark.pdf&quot;&gt;this recent paper&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Separated the node graph functionality into
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;egui_node_graph&quot;&gt;its own crate&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;srgd41&#x2F;your_rusty_procedural_3d_modeler_blackjack_just&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;sfqung&#x2F;media_blackjacks_eguibased_node_graph_now&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite is an in-development raster and vector 2D graphics editor that is free
and open source. It will be powered by a node graph compositing engine that
supercharges your layer stack, providing a completely non-destructive editing
experience.&lt;&#x2F;p&gt;
&lt;p&gt;After officially launching the alpha version last month, work has progressed
in designing the node graph system. Also, the team has spent this month adding
polish to the application and continuing work on more website content.&lt;&#x2F;p&gt;
&lt;p&gt;A new editor feature is the Gradient tool which makes it possible to add some
colorful pizzazz. This means that finally all vector editing tools are
implemented, but some can still use improvement. (Ask how you can help with
that!) Additional work has gone into visual changes to help aid in clarity and
discoverability for new users.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;new website&lt;&#x2F;a&gt;, try the
&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Graphite editor&lt;&#x2F;a&gt; right now in your browser, star on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, follow on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;, and join the
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt; to chat or get involved!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;vach&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zeskeertwee&#x2F;vach&quot;&gt;vach&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vach&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zeskeertwee&#x2F;vach&quot;&gt;vach&lt;&#x2F;a&gt; is an archiving file format developed from the ground up for games and
other real-time applications by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zeskeertwee&quot;&gt;@zeskeertwee&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sokorototo&quot;&gt;@sokorototo&lt;&#x2F;a&gt;. It is
written in pure Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Its primary objectives (in no particular order) are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Have a simple, yet complete API.&lt;&#x2F;li&gt;
&lt;li&gt;Fine control over each individual entry in an archive, i.e. neighbouring
entries can have vastly different compression schemes.&lt;&#x2F;li&gt;
&lt;li&gt;Support compression (with multiple compression schemes), encryption,
and signatures for data authentication&lt;&#x2F;li&gt;
&lt;li&gt;Efficient fetching of data by avoiding unnecessary traversal of the file.
Once a file is parsed, locations of every entry are known to the loader.&lt;&#x2F;li&gt;
&lt;li&gt;Be as compact as possible - the smallest valid archive is only 13 bytes.&lt;&#x2F;li&gt;
&lt;li&gt;Each entry has some metadata attached to it - this is implemented using
bitflags and up to 8 bits are free to the user.&lt;&#x2F;li&gt;
&lt;li&gt;Has multithreaded implementations of both the loader and the writer.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;vach-cli&quot;&gt;CLI&lt;&#x2F;a&gt; is allowing one to use vach as a general-purpose archive
format. The CLI is fully multithreaded, allowing for insane un&#x2F;packing speeds.&lt;&#x2F;p&gt;
&lt;p&gt;Feel free to drop into the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zeskeertwee&#x2F;vach&quot;&gt;repo&lt;&#x2F;a&gt; and open an issue, pull request, or
drop a star 🌟. It helps maintain momentum in the project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sparsey-0-7&quot;&gt;Sparsey 0.7&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sparsey-0-7&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sparsey.png&quot; alt=&quot;Sparsey&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&quot;&gt;@LechintanTudor&lt;&#x2F;a&gt; is a sparse set-based Entity Component System
with a beautiful and concise syntax.&lt;&#x2F;p&gt;
&lt;p&gt;The biggest change in this release was the removal of component change detection
which had a significant impact on performance and memory usage. As a result,
Sparsey performs much better in all benchmarks and the codebase is easier to
maintain.&lt;&#x2F;p&gt;
&lt;p&gt;The systems module received a major overhaul with an improved scheduling
algorithm, allowing more systems to run in parallel, and an important usability
improvement allowing systems to be added to schedules without having to call
&lt;code&gt;.system()&lt;&#x2F;code&gt; on the system functions.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;encase&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;teoxoy&#x2F;encase&quot;&gt;Encase&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#encase&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;encase.svg&quot; alt=&quot;Encase Logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;teoxoy&#x2F;encase&quot;&gt;Encase&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;encase&#x2F;latest&#x2F;encase&quot;&gt;docs.rs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;encase&quot;&gt;crates.io&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;teoxoy&quot;&gt;@teoxoy&lt;&#x2F;a&gt; is a new library
that provides a mechanism to layout data into GPU buffers
according to &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;wgsl&#x2F;#memory-layouts&quot;&gt;WGSL&#x27;s memory layout&lt;&#x2F;a&gt; rules.&lt;&#x2F;p&gt;
&lt;p&gt;Features&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;supports all WGSL &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;wgsl&#x2F;#host-shareable-types&quot;&gt;host-shareable types&lt;&#x2F;a&gt; + wrapper types
(&lt;code&gt;&amp;amp;T&lt;&#x2F;code&gt;, &lt;code&gt;&amp;amp;mut T&lt;&#x2F;code&gt;, &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;&#x2F;code&gt;, ...)&lt;&#x2F;li&gt;
&lt;li&gt;extensible by design; most traits can be easily implemented
for user-defined types via macros (see &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;encase&#x2F;latest&#x2F;encase&#x2F;#design&quot;&gt;design&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;built-in support for data types from a multitude of crates
(enabled via &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;crate&#x2F;encase&#x2F;latest&#x2F;features&quot;&gt;features&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;covers a wide area of use cases (see &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;encase&#x2F;latest&#x2F;encase&#x2F;#examples&quot;&gt;examples&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Example&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span&gt;encase::{WgslType, UniformBuffer};
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span&gt;(WgslType)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span&gt;AffineTransform2D {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;matrix&lt;&#x2F;span&gt;&lt;span&gt;: glam::Mat2,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;translate&lt;&#x2F;span&gt;&lt;span&gt;: glam::Vec2
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; transform = AffineTransform2D {
&lt;&#x2F;span&gt;&lt;span&gt;    matrix: glam::Mat2::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;IDENTITY&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    translate: glam::Vec2::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ZERO&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span&gt; buffer = UniformBuffer::new(Vec::new());
&lt;&#x2F;span&gt;&lt;span&gt;buffer.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;transform).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; byte_buffer = buffer.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;into_inner&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; write byte_buffer to GPU
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;notan&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#notan&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notan.png&quot; alt=&quot;Notan&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The first version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; was released.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; aims to be a simple and portable multimedia layer, designed to make
your own multimedia app on top of it without worrying too much about
platform-specific code.&lt;&#x2F;p&gt;
&lt;p&gt;The main goal is to provide a set of APIs and tools that can be used to create
your project ergonomically without enforcing any structure or pattern,
always trying to stay out of your way. The idea is that you can use it as a
foundation layer or backend for your next app, game engine, or game.&lt;&#x2F;p&gt;
&lt;p&gt;This first version comes with windowing, input, and rendering support on MacOS,
Linux, Windows, and Web. Behind feature flags, you can use a fast 2D renderer,
text rendering, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; integration.&lt;&#x2F;p&gt;
&lt;p&gt;You can try &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nazariglez&#x2F;notan&quot;&gt;Notan&lt;&#x2F;a&gt; by adding it to your &lt;code&gt;Cargo.toml&lt;&#x2F;code&gt; -&amp;gt; &lt;code&gt;notan = &amp;quot;0.1.0&amp;quot;&lt;&#x2F;code&gt; or
checking the &lt;a href=&quot;https:&#x2F;&#x2F;nazariglez.github.io&#x2F;notan-web&#x2F;&quot;&gt;online demos&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-asset-loader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-asset-loader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dynamic-assets.png&quot; alt=&quot;Dynamic assets&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; plugin that aims to reduce
boilerplate for asset handling in Bevy apps.&lt;&#x2F;p&gt;
&lt;p&gt;Last month saw the release of version &lt;code&gt;0.9&lt;&#x2F;code&gt; which added support for loading
asset configurations from &lt;code&gt;.ron&lt;&#x2F;code&gt; files like the one shown above. This allows for
resolving asset configurations like their file path or sprite sheet dimensions
at run time. The feature is called &amp;quot;dynamic assets&amp;quot; and enables use cases like
internationalised assets.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; wrote a &lt;a href=&quot;https:&#x2F;&#x2F;www.nikl.me&#x2F;blog&#x2F;2022&#x2F;dynamic-assets-in-bevy_asset_loader&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; about dynamic assets in
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt;. The post outlines the idea of the feature and describes
current and planned functionality.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to handpicked reddit&#x2F;twitter&#x2F;urlo&#x2F;etc threads that provide
useful information --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;bevy&#x2F;&quot;&gt;&#x2F;r&#x2F;bevy&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;bevy&#x2F;comments&#x2F;sikrv1&#x2F;recommended_bevyecs_project_structureconventions&quot;&gt;&amp;quot;Recommended Bevy&#x2F;ECS Project Structure&#x2F;Conventions&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;stcnx0&#x2F;which_is_a_better_game_engine_to_start_with&quot;&gt;&amp;quot;Which is a better game engine to start with as a beginner&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;gamedev wg&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;discussions&#x2F;121&quot;&gt;#121 Rust Gamedev Showcase&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;discussions&#x2F;122&quot;&gt;#122 Length of meetups&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;discussions&#x2F;119&quot;&gt;#119 Engine benchmark repo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;sokjon&#x2F;fish_fight_v041_mod_loading&quot;&gt;Fish Fight&lt;&#x2F;a&gt; introduced mod loading.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;caiiiycuk.medium.com&#x2F;vangers-3d-example-of-using-emscripten-in-rust-720ee8099d72&quot;&gt;vange-rs&lt;&#x2F;a&gt; published a blog post about using Emscripten with Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;makiomino&#x2F;status&#x2F;1496252771909218308&quot;&gt;makiomino.fun&lt;&#x2F;a&gt; introduced a new level-up animation.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1492429686294683653&quot;&gt;country-slice&lt;&#x2F;a&gt; added shadows and the ability to adjust wall height.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;status&#x2F;1490576387589427200&quot;&gt;flesh&lt;&#x2F;a&gt; has a new animation for the mid-boss.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tech.nextroll.com&#x2F;blog&#x2F;dev&#x2F;2022&#x2F;02&#x2F;02&#x2F;rustenstein.html&quot;&gt;Rustenstein 3D: Game programming like it&#x27;s 1992&lt;&#x2F;a&gt; is an article walking
through creating a Wolfenstein-like game in Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=oee3Z69sE-8&quot;&gt;Making a 3D Super Munchers Clone with Bevy&lt;&#x2F;a&gt; is a video walkthrough of
creating a 3D game in Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nikitablack.github.io&#x2F;post&#x2F;vulkan_with_rust_by_example_6_fixing_depth&#x2F;&quot;&gt;Vulkan with Rust by example&lt;&#x2F;a&gt; is the latest post in a series about using Vulkan
with Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;sm34s6&#x2F;media_finally_got_assets_hot_reloading_working_in&quot;&gt;Fyrox&lt;&#x2F;a&gt; got assets to hot-reload.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;st4vp1&#x2F;media_hotham_vr_engine_demo&quot;&gt;Hotham&lt;&#x2F;a&gt; released a video demo of the engine.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&#x2F;status&#x2F;1490282777039753218&quot;&gt;godot-rust&lt;&#x2F;a&gt; introduced C#-style properties.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanbox-irl&#x2F;cosync&quot;&gt;cosync&lt;&#x2F;a&gt; is a single-threaded executor for deferred async code for games.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;sr7nnr&#x2F;spirq_v05_cleaner_api&quot;&gt;SPIR-Q v0.5&lt;&#x2F;a&gt; was released after two years of v0.4 maintenance.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&#x2F;status&#x2F;1496200805212475396&quot;&gt;egui 0.17.0&lt;&#x2F;a&gt; was released, with custom text styles, any-sized fonts, and
much more.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=dyxlfOyW90Q&quot;&gt;sparticles-rs&lt;&#x2F;a&gt; is a particle system generator.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;sredt1&#x2F;blender_bevy_pipeline_progress&quot;&gt;blender_bevy_toolkit&lt;&#x2F;a&gt; is making process in opening Blender files in Bevy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help build the
new node graph and 2D rendering systems.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- An optional section for new jobs related to Rust gamedev --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;careers.embark-studios.com&#x2F;jobs&quot;&gt;Embark Studios&lt;&#x2F;a&gt;
(Stockholm&#x2F;Hybrid Remote) - Various roles&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;Veloren&#x2F;comments&#x2F;tbcs3d&#x2F;this_month_in_rust_gamedev_31_february_2022&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1503474733572100096&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #30 - January 2022</title>
            <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/030/</link>
            <guid>https://gamedev.rs/news/030/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 30th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;030&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The twelfth Rust Gamedev Meetup happened in January. You can watch the
recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;BIMsBFbPV-c&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups
take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;flesh&quot;&gt;Flesh&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.gif&quot; alt=&quot;flesh preview&quot; &#x2F;&gt;
&lt;em&gt;the second level&#x27;s background + new enemy&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&#x2F;&quot;&gt;Flesh&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_oab&quot;&gt;@im_oab&lt;&#x2F;a&gt; is a 2D-horizontal shmup game with hand-drawn animation and
an organic&#x2F;fleshy theme. It is implemented using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;. This month&#x27;s updates
include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The completed first level, with a mid-boss and main boss.&lt;&#x2F;li&gt;
&lt;li&gt;The second level of the game with new enemies.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rusty-vangers&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vange.rs&quot;&gt;Rusty Vangers&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-vangers&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vangers-integrated.jpg&quot; alt=&quot;Rust engine powering original game&quot; &#x2F;&gt;
&lt;em&gt;Rusty Vangers engine in action within the original game&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vange.rs&quot;&gt;Rusty Vangers&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;&quot;&gt;@kvark&lt;&#x2F;a&gt; is a modern re-implementation of the original
&lt;a href=&quot;https:&#x2F;&#x2F;www.gog.com&#x2F;en&#x2F;game&#x2F;vangers&quot;&gt;Vangers&lt;&#x2F;a&gt; game from the last century.
It&#x27;s in Rust, and uses GPU and multiple threads heavily.&lt;&#x2F;p&gt;
&lt;p&gt;Something incredible has been brewing within the small but dedicated community
of the original game. They prototyped a pluggable rendering interface in order
to support rendering the game via &lt;a href=&quot;https:&#x2F;&#x2F;vange.rs&quot;&gt;Rusty Vangers&lt;&#x2F;a&gt; instead of the default
CPU-based rasterizer. The plugin is made as a static library sub-crate with a
bunch of C-exported functions.
The approach worked for the terrain, so the mini working group transitioned
to moving more visual features off the old path and into the Rust-based plugin.&lt;&#x2F;p&gt;
&lt;p&gt;At the same time, &lt;a href=&quot;https:&#x2F;&#x2F;vange.rs&quot;&gt;Rusty Vangers&lt;&#x2F;a&gt; engine got a number of important
fixes and additions:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;water is rendered fair as transparent surfaces&lt;&#x2F;li&gt;
&lt;li&gt;lighting evaluation on the second layer is fixed&lt;&#x2F;li&gt;
&lt;li&gt;dynamic terrain and palette modification is supported&lt;&#x2F;li&gt;
&lt;li&gt;custom viewport support&lt;&#x2F;li&gt;
&lt;li&gt;can render menu screens, not just the game levels&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n30&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor-capsule.jpg&quot; alt=&quot;way of rhea capsule image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n30&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle adventure with hard puzzles and forgiving
mechanics being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; in a custom Rust
engine. It has a demo available &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n30&quot;&gt;on Steam&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Latest developments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2022&#x2F;01&#x2F;13&#x2F;asking-windows-nicely&#x2F;&quot;&gt;Making Your Game Go Fast by Asking Windows Nicely&lt;&#x2F;a&gt; was published,
discussing Windows-specific performance tweaks in Way of Rhea&#x27;s engine&lt;&#x2F;li&gt;
&lt;li&gt;Work started on the Snowcrab + Teleporter puzzles, completing nearly all the
puzzles in the main game&lt;&#x2F;li&gt;
&lt;li&gt;Work began on art for The Professor (pictured left), Shrew, and Hermes&lt;&#x2F;li&gt;
&lt;li&gt;Work began on artwork for the Mushroom Biome, and continued on the Hub World&lt;&#x2F;li&gt;
&lt;li&gt;The narrative was reworked, and the dialogue system was improved&lt;&#x2F;li&gt;
&lt;li&gt;The main menu, pause menu, and option screen UIs were replaced&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can stay up to date with the latest Way of Rhea developments by
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n30&quot;&gt;following it on Steam&lt;&#x2F;a&gt;, signing up for &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;newsletter&#x2F;signup&quot;&gt;their mailing list&lt;&#x2F;a&gt;,
or joining &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;JGeVt5XwPP&quot;&gt;their Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-of-the-centaur&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;centaur&quot;&gt;Garden of the Centaur&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-of-the-centaur&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;centaur-screenshot.png&quot; alt=&quot;Garden of the Centaur screenshot&quot; &#x2F;&gt;
&lt;em&gt;Screenshot of Garden of the Centaur&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Garden of the Centaur (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;centaur&quot;&gt;GitHub&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Syn9Dev&quot;&gt;@Syn-Nine&lt;&#x2F;a&gt; is an action-puzzle mini game where you navigate a
garden maze and steal the Centaur&#x27;s gems. Getting caught spells certain doom.&lt;&#x2F;p&gt;
&lt;p&gt;The game was created using Syn9&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;mgfw&quot;&gt;Rust Mini Game Framework&lt;&#x2F;a&gt; and is
part of an open source &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;&quot;&gt;repository&lt;&#x2F;a&gt; of several mini-games
that use this framework.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kataster&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bobox214&#x2F;Kataster&quot;&gt;Kataster&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kataster&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kataster.jpg&quot; alt=&quot;Kataster screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bobox214&#x2F;Kataster&quot;&gt;Kataster&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bobox214&quot;&gt;@Bobox214&lt;&#x2F;a&gt; is a single-screen space shooter mini-game,
using &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;bevy&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jcornaz&#x2F;heron&quot;&gt;heron&lt;&#x2F;a&gt; (powered by &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;rapier&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Its goal is to be a simple demonstration game for &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;bevy&lt;&#x2F;a&gt;, and provide newcomers
another example to look into when they begin their journey with the engine.&lt;&#x2F;p&gt;
&lt;p&gt;The latest version includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support for &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;bevy&lt;&#x2F;a&gt; 0.6&lt;&#x2F;li&gt;
&lt;li&gt;A new shader background to showcase integration with the new renderer.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Bright lantern&quot; &#x2F;&gt;
&lt;em&gt;A light to keep the night away&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In January, another &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=nR2WDBMjkh8&quot;&gt;Veloren Reading Club was
recorded&lt;&#x2F;a&gt;! The &lt;code&gt;entity_sync&lt;&#x2F;code&gt; system was refactored to
be parallel. This was the largest bottleneck during the last release party, and
this fix will allow us to more easily surpass the 200 player mark on the server.
Work has been done to improve dagger animations. Sounds for flowing rivers are
now more bubbly sounding. Work is happening to get the OpenGL renderer to work
with WGPU for Veloren, as the project transitioned to Vulkan, but wants to keep
backward compatibility for older GPUs.&lt;&#x2F;p&gt;
&lt;p&gt;Skiing and ice skating have gotten to a playable state. The mounts system was
overhauled to make it more ergonomic to work with, you can &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=fJpeOJT78TI&quot;&gt;watch a video of
that here&lt;&#x2F;a&gt;. Several experimental shaders have been
added, along with a &amp;quot;point glow&amp;quot; which help lanterns look better. With these new
shaders, swimming underwater is a whole new experience! A tracking issue was
created for worldgen issues that will help coordinate direction for some large
systems in the future.&lt;&#x2F;p&gt;
&lt;p&gt;January&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-152&quot;&gt;#152&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-153&quot;&gt;#153&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-154&quot;&gt;#154&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-155&quot;&gt;#155&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-156&quot;&gt;#156&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;not-snake&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;Not Snake&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#not-snake&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notsnake.gif&quot; alt=&quot;Editor for Not Snake&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Not Snake (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&#x2F;not_snake_game&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;Itch&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&quot;&gt;Michael Ramirez&lt;&#x2F;a&gt; is a
3D snake game where you don&#x27;t play as the snake.&lt;&#x2F;p&gt;
&lt;p&gt;Not Snake is being developed using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy game engine&lt;&#x2F;a&gt;. The
first version can be played &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;here&lt;&#x2F;a&gt;. An updated version
is now being worked on since the 0.6 release of &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The bulk of the work this month was spent on creating a level editor
using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aevyrie&#x2F;bevy_mod_picking&quot;&gt;bevy_mod_picking&lt;&#x2F;a&gt; crates to
make it easier to add new features&#x2F;modes to the game.&lt;&#x2F;p&gt;
&lt;p&gt;Current features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Able to create, customize, and delete game entities&lt;&#x2F;li&gt;
&lt;li&gt;Multi-select entities for bulk changes&lt;&#x2F;li&gt;
&lt;li&gt;Can play-test levels in the editor&lt;&#x2F;li&gt;
&lt;li&gt;Camera controls&lt;&#x2F;li&gt;
&lt;li&gt;Save&#x2F;Load levels&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More details on the initial editor work and a retrospective of the first
version of the game can be read &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&#x2F;devlog&#x2F;333283&#x2F;retrospective-working-on-new-features&quot;&gt;here&lt;&#x2F;a&gt; and a video of
the save&#x2F;load feature can be seen &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=cwI00pXDc6Q&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;harvest-hero-origins-is-now-available&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&#x2F;&quot;&gt;Harvest Hero Origins&lt;&#x2F;a&gt; is now available&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero-origins-is-now-available&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hho.jpg&quot; alt=&quot;harvest_hero&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&#x2F;&quot;&gt;Harvest Hero Origins&lt;&#x2F;a&gt; is an Arcade Wave Defense game that has been
in development by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;gemdropgames&quot;&gt;Gemdrop Games&lt;&#x2F;a&gt; for the past 10 months.&lt;&#x2F;p&gt;
&lt;p&gt;It is the studio&#x27;s first commercial release, developed in
the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;p&gt;The game is available now on Windows and Linux for $2.99 with
a launch discount of 10%!&lt;&#x2F;p&gt;
&lt;p&gt;The studio plans to provide free updates for a period of time,
before moving on to focusing 100% of their efforts on the sequel,
Harvest Hero.&lt;&#x2F;p&gt;
&lt;p&gt;Features&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Story Mode&lt;&#x2F;li&gt;
&lt;li&gt;Survival Mode
&lt;ul&gt;
&lt;li&gt;Competitive Leaderboards&lt;&#x2F;li&gt;
&lt;li&gt;Infinitely Replayable&lt;&#x2F;li&gt;
&lt;li&gt;3 unique heroes&lt;&#x2F;li&gt;
&lt;li&gt;3 skins per hero&lt;&#x2F;li&gt;
&lt;li&gt;Local co-op (online through steam remote play)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;hydrofoil-generation&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hydrofoil-generation&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hgs6.jpg&quot; alt=&quot;hgs_screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1448820&#x2F;Hydrofoil_Generation&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;HydrofoilGenerationSailing&#x2F;&quot;&gt;Facebook&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;DtKgt2duAy&#x2F;&quot;&gt;Discord&lt;&#x2F;a&gt;)
is a realistic sailing&#x2F;foiling inshore simulator in development for PC&#x2F;Steam
that will put you in the driving seat of modern competitive sailing.&lt;&#x2F;p&gt;
&lt;p&gt;The last couple of months saw great disappointment for the failed port to WGPU
due to unexpected performance losses compared to the old renderer. The game is
now back to its original DirectX 11 renderer.&lt;&#x2F;p&gt;
&lt;p&gt;February will see the beginning of the private alpha testing program, an
exciting opportunity to gather the first feedback about boat handling and
controls before diving into one of the most challenging tasks of the game:
sailing rules implementation.&lt;&#x2F;p&gt;
&lt;p&gt;Content-wise, Hong Kong will soon join Den Haag as a race location while the
racecourse is becoming more and more alive with the addition of spectators
boats. The playable foiling catamaran Jx50 is also constantly getting graphical
updates and physics tweaks.&lt;&#x2F;p&gt;
&lt;p&gt;Hydrofoil Generation is scheduled to release on Steam Early Access in Summer&lt;&#x2F;p&gt;
&lt;ol start=&quot;2022&quot;&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;country-slice&quot;&gt;Country Slice&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#country-slice&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;country_slice_7_delete_brush.gif&quot; alt=&quot;country_slice&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;anopara&#x2F;country-slice&quot;&gt;Country Slice&lt;&#x2F;a&gt; is
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;&quot;&gt;@anastasiaopara&lt;&#x2F;a&gt;&#x27;s hobby project, where users can draw a
small procedurally assembled scene.&lt;&#x2F;p&gt;
&lt;p&gt;The newest addition is an erase brush and an ability to continue existing walls.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;&quot;&gt;@anastasiaopara&lt;&#x2F;a&gt; also shared &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1477570256180817924&quot;&gt;a Twitter thread&lt;&#x2F;a&gt;
about doing procedural generation in Houdini vs Rust &amp;amp; OpenGL.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;godot-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;godot-rust (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;FNudpBD&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a Rust library that provides bindings for the Godot game engine.&lt;&#x2F;p&gt;
&lt;p&gt;The start of 2022 is a good opportunity to showcase a few godot-rust games in
development. More info is available in &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;book&#x2F;projects&#x2F;games.html&quot;&gt;the book&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;godot-rust-games.jpg&quot; alt=&quot;godot-rust example games&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Using custom builds of the Godot engine involved quite a bit of ceremony in the
past: manual CLI invocations, code replacement, and re-wiring of the
&lt;code&gt;gdnative-bindings&lt;&#x2F;code&gt; subcrate. The approach has been fundamentally overhauled,
and is now as simple as specifying the crate feature &lt;code&gt;custom-godot&lt;&#x2F;code&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;833&quot;&gt;#833&lt;&#x2F;a&gt;). The library will automatically look for a &lt;code&gt;godot&lt;&#x2F;code&gt; executable
in the system path (or a &lt;code&gt;GODOT_BIN&lt;&#x2F;code&gt; environment variable), and regenerate
&lt;code&gt;api.json&lt;&#x2F;code&gt;. This makes using older or module-extended Godot versions a breeze.&lt;&#x2F;p&gt;
&lt;p&gt;The latest &lt;code&gt;master&lt;&#x2F;code&gt; branch has now been updated to support Godot 3.4 out of the
box (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;829&quot;&gt;#829&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Upcoming godot-rust version 0.10 seems to be finally on the horizon, with only a
handful of tasks left (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;issues&#x2F;842&quot;&gt;#842&lt;&#x2F;a&gt;). A changelog since v0.9.3 is now
available. The continuous stream of small improvements here and there has led to
a sizable list! (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;845&quot;&gt;#845&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rusty-engine-4-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&#x2F;rusty_engine&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#400---2022-01-29&quot;&gt;Rusty Engine 4.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-engine-4-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rusty_engine4.png&quot; alt=&quot;An example Rusty Engine game&quot; &#x2F;&gt;
&lt;em&gt;The updated collider visualization (white outlines) in Rusty Engine 4.0&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&#x2F;rusty_engine&quot;&gt;Rusty Engine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&quot;&gt;Nathan Stocks&lt;&#x2F;a&gt; is a game engine built on top of Bevy
for people who are learning Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Notable new features in Version 4.0 include: no need for an &lt;code&gt;init!&lt;&#x2F;code&gt; macro, new
collider visualization, text can now be rotated and scaled, and an updated
&lt;a href=&quot;https:&#x2F;&#x2F;cleancut.github.io&#x2F;rusty_engine&#x2F;&quot;&gt;online tutorial&lt;&#x2F;a&gt;. See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&#x2F;rusty_engine&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#400---2022-01-29&quot;&gt;the changelog for 4.0&lt;&#x2F;a&gt; for the full details. On the
back end Bevy has been updated to 0.6 and &lt;code&gt;bevy_prototype_debug_lines&lt;&#x2F;code&gt; was
replaced with &lt;code&gt;bevy_prototype_lyon&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;sg2cdg&#x2F;rusty_engine_40&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nathanstocks&#x2F;status&#x2F;1487667704118988803&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-v0-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&quot;&gt;Bevy v0.6&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-v0-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_bistro_night.jpg&quot; alt=&quot;bevy bistro night&quot; &#x2F;&gt;
&lt;em&gt;The Lumberyard Bistro scene rendered in the new Bevy Renderer.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt; is a refreshingly simple data-driven game engine built in Rust. It is
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;free and open source&lt;&#x2F;a&gt; forever!&lt;&#x2F;p&gt;
&lt;p&gt;Bevy 0.6 was a massive community effort. You can check out the
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&quot;&gt;full release blog post here&lt;&#x2F;a&gt;, but here are some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#the-new-bevy-renderer&quot;&gt;A brand new modern renderer that is prettier, faster, and simpler to extend&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#directional-shadows&quot;&gt;Directional and point light shadows&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#clustered-forward-rendering&quot;&gt;Clustered forward rendering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#visibility-and-frustum-culling&quot;&gt;Frustum culling&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#sprite-batching&quot;&gt;Significantly faster sprite rendering with less boilerplate&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#webgl2-support&quot;&gt;Native WebGL2 support&lt;&#x2F;a&gt;. You can test this out by running the
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;examples&quot;&gt;Bevy Examples in your browser&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#materials&quot;&gt;High level custom Materials&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#wgsl-shaders&quot;&gt;More powerful shaders: preprocessors, imports, WGSL support&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-6&#x2F;#bevy-ecs&quot;&gt;Bevy ECS ergonomics and performance improvements. No more .system()!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;rz612l&#x2F;bevy_06&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=29854416&quot;&gt;Hacker News&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1479879242347270145&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;three-d-0-10&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&#x2F;three-d&quot;&gt;&lt;code&gt;three-d&lt;&#x2F;code&gt; 0.10&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#three-d-0-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;three-d.jpg&quot; alt=&quot;three-d example of environment lighting&quot; &#x2F;&gt;
&lt;em&gt;Environment lighting example&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&#x2F;three-d&quot;&gt;&lt;code&gt;three-d&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
is a 2D&#x2F;3D renderer targeting both desktop and web
that aims to make rendering simple and give the user full control.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;three-d&lt;&#x2F;code&gt; 0.10 has been released featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Environment lighting (image-based lighting)&lt;&#x2F;li&gt;
&lt;li&gt;HDR environment map&lt;&#x2F;li&gt;
&lt;li&gt;Headless graphics context&lt;&#x2F;li&gt;
&lt;li&gt;Tangent vertex attributes&lt;&#x2F;li&gt;
&lt;li&gt;Texture transform&lt;&#x2F;li&gt;
&lt;li&gt;Cube map render targets&lt;&#x2F;li&gt;
&lt;li&gt;f16 and u16 texture data types&lt;&#x2F;li&gt;
&lt;li&gt;and more...&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;See &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AsgerNyman&#x2F;status&#x2F;1482711259673944067&quot;&gt;this Twitter thread&lt;&#x2F;a&gt; for videos.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. This
month, an alpha version of Tetra 0.7 was released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support for a wider variety of texture formats&lt;&#x2F;li&gt;
&lt;li&gt;A more powerful API for blending&lt;&#x2F;li&gt;
&lt;li&gt;Lots of bug fixes, cleanups, and improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Alongside the release of this version, it was also &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1479601522661109764&quot;&gt;announced&lt;&#x2F;a&gt;
that Tetra is no longer under active development. The developer
has written a &lt;a href=&quot;https:&#x2F;&#x2F;www.seventeencups.net&#x2F;posts&#x2F;three-years-of-tetra&#x2F;&quot;&gt;retrospective blog post&lt;&#x2F;a&gt;, explaining what went well
and what didn&#x27;t go so well with the engine&#x27;s development, and giving some
rationale for why they decided to move on from the project.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;making-your-game-go-fast-by-asking-windows-nicely&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2022&#x2F;01&#x2F;13&#x2F;asking-windows-nicely&#x2F;&quot;&gt;Making Your Game Go Fast by Asking Windows Nicely&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#making-your-game-go-fast-by-asking-windows-nicely&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2022&#x2F;01&#x2F;13&#x2F;asking-windows-nicely&#x2F;&quot;&gt;&lt;img src=&quot;awn-header.jpg&quot; alt=&quot;A speed limit sign labeled 45 FPS&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;Mason Remaley&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2022&#x2F;01&#x2F;13&#x2F;asking-windows-nicely&#x2F;&quot;&gt;a blog post&lt;&#x2F;a&gt; covering
Windows-specific performance tweaks employed in his Rust game engine:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Normally, to make your software go faster, it has to do less work. This
usually involves improving your algorithms, skipping work the user won&#x27;t see,
factoring your target hardware into the design process, or modifying your
game&#x27;s content.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re not talking about any of that today. This post is a list of ways to make
your game run faster on Windows–without making any major changes to your
game&#x27;s content, code, or algorithms.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can read more &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2022&#x2F;01&#x2F;13&#x2F;asking-windows-nicely&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;s393sx&#x2F;making_your_game_go_fast_by_asking_windows_nicely&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;refactoring-from-legion-to-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justinryanh.github.io&#x2F;post&#x2F;refactoring_from_legion_to_bevy&#x2F;&quot;&gt;Refactoring from Legion to Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#refactoring-from-legion-to-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;justin_rhw&quot;&gt;Justin Hurstwright&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;justinryanh.github.io&#x2F;post&#x2F;refactoring_from_legion_to_bevy&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; describing
how to migrate from Legion ECS into Bevy ECS without giving up on
the other frameworks one might rely on.&lt;&#x2F;p&gt;
&lt;p&gt;You can read it &lt;a href=&quot;https:&#x2F;&#x2F;justinryanh.github.io&#x2F;post&#x2F;refactoring_from_legion_to_bevy&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;writing-an-ah-scanner-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;digitalfrontiers&#x2F;taking-rust-for-a-ride-to-azeroth-what-writing-an-ah-scanner-in-rust-taught-me-58edc936cbb&quot;&gt;Writing an AH Scanner in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#writing-an-ah-scanner-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;digitalfrontiers&#x2F;taking-rust-for-a-ride-to-azeroth-what-writing-an-ah-scanner-in-rust-taught-me-58edc936cbb&quot;&gt;&lt;img src=&quot;ah-scanner.png&quot; alt=&quot;AH scanner workflow&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Trimoq (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trimoq&quot;&gt;Github&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;amann_dev&quot;&gt;Twitter&lt;&#x2F;a&gt;) wrote &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;digitalfrontiers&#x2F;taking-rust-for-a-ride-to-azeroth-what-writing-an-ah-scanner-in-rust-taught-me-58edc936cbb&quot;&gt;a blog
post&lt;&#x2F;a&gt; about writing a game client for a popular MMORPG. It
focuses on some negative parts of Rust and its ecosystem. There are three key
takeaways from this post:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Stay away from low-level libraries if you are not aware of how deep the rabbit
hole goes.&lt;&#x2F;li&gt;
&lt;li&gt;Evaluate the library ecosystem of Rust thoroughly before using it for a
project that requires somewhat exotic functionality.&lt;&#x2F;li&gt;
&lt;li&gt;Rust forces you to care about the details, regardless of whether you want to.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The remainder of the article goes into depth on these three points.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-cheatbook&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&quot;&gt;Bevy Cheatbook&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-cheatbook&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&quot;&gt;Bevy Cheatbook&lt;&#x2F;a&gt; focused on refactors to improve navigation,
usefulness, and make maintenance easier going forward.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Updated for Bevy 0.6&lt;&#x2F;li&gt;
&lt;li&gt;Chapters reorganized to present content better and make things easy to find&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;builtins.html&quot;&gt;New page summarizing all the useful built-in types in Bevy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Better info about &lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;platforms&#x2F;wasm.html&quot;&gt;working with WASM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Info about &lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;setup&#x2F;cross&#x2F;linux-windows.html&quot;&gt;cross-compiling for Windows from Linux&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Internal refactor for easy management of links, easier to avoid old&#x2F;stale links&lt;&#x2F;li&gt;
&lt;li&gt;Can link everything from everywhere! All pages are now full of links!&lt;&#x2F;li&gt;
&lt;li&gt;All mentions of Bevy APIs now link to &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;bevy&quot;&gt;docs.rs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The next priority for the project is to provide at least some coverage of
the areas of Bevy still not in the book: 2D, 3D, UI, scenes, rendering...&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;d like to support the project, donate to the author via
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;inodentry&quot;&gt;GitHub Sponsors&lt;&#x2F;a&gt;. Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;IyesGames&quot;&gt;@IyesGames on
Twitter&lt;&#x2F;a&gt; for updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;extreme-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;helsing.studio&#x2F;posts&#x2F;extreme-bevy&quot;&gt;Extreme Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#extreme-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;extreme-bevy.png&quot; alt=&quot;Screenshot of Extreme Bevy&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Extreme Bevy is a &lt;a href=&quot;https:&#x2F;&#x2F;helsing.studio&#x2F;posts&#x2F;extreme-bevy&quot;&gt;tutorial series&lt;&#x2F;a&gt; on how to create a low-latency
P2P web game.&lt;&#x2F;p&gt;
&lt;p&gt;It covers how to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&quot;https:&#x2F;&#x2F;helsing.studio&#x2F;posts&#x2F;introducing-matchbox&quot;&gt;Matchbox&lt;&#x2F;a&gt; for setting up P2P connections using WebRTC data
channels.&lt;&#x2F;li&gt;
&lt;li&gt;Implement rollback using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;And using &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; with the above&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The game itself is also live &lt;a href=&quot;https:&#x2F;&#x2F;helsing.studio&#x2F;extreme&quot;&gt;here&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;extreme_bevy&quot;&gt;its source is on
GitHub&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;nodus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;r4gus&#x2F;nodus&quot;&gt;Nodus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nodus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flipflop.png&quot; alt=&quot;Demo that shows a simple circuit&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Nodus (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;r4gus&#x2F;nodus&quot;&gt;GitHub&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;r4gus&quot;&gt;@r4gus&lt;&#x2F;a&gt; is a digital circuit simulator
built with the Bevy game engine. The project is in an early stage of
development but, most of the basic features are implemented. That includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Insert components like gates, switches, clocks, or light bulbs into
the world using a radial context menu.&lt;&#x2F;li&gt;
&lt;li&gt;Build digital circuits by connecting inputs and outputs of components
with each other.&lt;&#x2F;li&gt;
&lt;li&gt;Save projects to a .ron file and reload them later.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite_alpha.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;Graphite&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-development
raster and vector 2D graphics editor that is free and open source. It is
powered by a node graph compositing engine that supercharges your layer stack,
providing a completely non-destructive editing experience.&lt;&#x2F;p&gt;
&lt;p&gt;The team is proud and excited to announce Graphite alpha, the minimum viable
product release for a web-based vector graphics editor. After one year in
pre-alpha development by Rust Gamedev community members, this first milestone
of alpha is here.&lt;&#x2F;p&gt;
&lt;p&gt;Graphite alpha launches &lt;strong&gt;Saturday, February 12&lt;&#x2F;strong&gt; together with a new
&lt;a href=&quot;https:&#x2F;&#x2F;graphite.rs&quot;&gt;project website&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Work now commences on the second alpha milestone, focused on building the node
graph system and vector render engine. You are invited to join the team and
help make this exciting endeavor possible. &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.rs&quot;&gt;Join the Discord&lt;&#x2F;a&gt;
and get involved!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.rs&quot;&gt;Try Graphite right now in your browser&lt;&#x2F;a&gt; and please
&lt;a href=&quot;graphite-repo&quot;&gt;star the GitHub repo&lt;&#x2F;a&gt; to build momentum. Thank you for helping
reach 1000⭐!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;leafwing-input-manager&quot;&gt;leafwing-input-manager&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#leafwing-input-manager&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;leafwing-input-manager&lt;&#x2F;code&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Leafwing-Studios&#x2F;leafwing-input-manager&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;leafwing-input-manager&quot;&gt;crates.io&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AliceICecile&quot;&gt;@alice-i-cecile&lt;&#x2F;a&gt;
is an ergonomic, featureful and fully documented Bevy library
for expressively abstracting over user input.&lt;&#x2F;p&gt;
&lt;p&gt;Supports local multiplayer, enables input rebinding, integrates with &lt;code&gt;bevy_ui&lt;&#x2F;code&gt;,
and handles chords!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rafx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;rafx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rafx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=iWYpX7RGUSA&quot;&gt;&lt;img src=&quot;rafx-screenshot.jpg&quot; alt=&quot;Rafx Screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Sci-fi base demo scene, &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=iWYpX7RGUSA&quot;&gt;watch TAA demo on youtube&lt;&#x2F;a&gt;!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;Rafx&lt;&#x2F;a&gt; is a multi-backend renderer that optionally integrates with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;distill&lt;&#x2F;a&gt; asset pipeline.&lt;&#x2F;p&gt;
&lt;p&gt;Since the previous rafx update in this newsletter (6 months ago!), many new
features have been introduced to improve performance and image quality. The
main rendering pipeline has also been split into &amp;quot;modern&amp;quot; and &amp;quot;basic&amp;quot;
pipelines. Unlike the basic pipeline which focuses on wide compatibility,
the modern pipeline uses forward-clustered lighting and handles hundreds
of shadow-casting lights. It is targeting compute shaders and will be adding
bindless and GPU-driven rendering soon.&lt;&#x2F;p&gt;
&lt;p&gt;Since the last update, the modern pipeline adds GPU-accelerated light binning,
SSAO, shadow map atlasing&#x2F;caching, TAA with sharpening, and auto-exposure&#x2F;HDR.
In addition, both modern and basic pipelines now support transparency. A
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=iWYpX7RGUSA&quot;&gt;video demonstrating TAA&lt;&#x2F;a&gt; (temporal anti-aliasing) is
available on youtube.&lt;&#x2F;p&gt;
&lt;p&gt;With these performance improvements, &lt;code&gt;rafx&lt;&#x2F;code&gt; is now able to render challenging
scenes with photorealistic style at 60FPS&#x2F;1440p on modern, mid-range GPUs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erupt-bootstrap&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Friz64&#x2F;erupt-bootstrap&quot;&gt;erupt-bootstrap&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#erupt-bootstrap&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;erupt-bootstrap.svg&quot; alt=&quot;erupt-bootstrap logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Friz64&#x2F;erupt-bootstrap&quot;&gt;erupt-bootstrap&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;blog.friz64.de&#x2F;about&quot;&gt;@Friz64&lt;&#x2F;a&gt; is a Vulkan Bootstrapping library for Rust.&lt;&#x2F;p&gt;
&lt;p&gt;When starting a new Vulkan project, there&#x27;s always the struggle of writing a
whole bunch of boilerplate code in order to, e.g., get your first triangle on
the screen. You have to create a &lt;code&gt;VkInstance&lt;&#x2F;code&gt;, with the validation layers
set up and working for development. Then select the best suited
&lt;code&gt;VkPhysicalDevice&lt;&#x2F;code&gt; for your app&#x27;s requirements. Use that to create a &lt;code&gt;VkDevice&lt;&#x2F;code&gt;
with the appropriate queue families chosen. Oh, and after that, you need
to struggle with managing and resizing a Vulkan swapchain.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s no fun — and this is where &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Friz64&#x2F;erupt-bootstrap&quot;&gt;erupt-bootstrap&lt;&#x2F;a&gt; comes in. It aims to
abstract over all of this to get you up and running in no time. It&#x27;s inspired by
the excellent &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;charles-lunarg&#x2F;vk-bootstrap&quot;&gt;vk-bootstrap&lt;&#x2F;a&gt; library for C++.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;edict&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#edict&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; is a new archetype-based ECS implementation by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&quot;&gt;@zakarumych&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The novel feature of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; is entity ownership implemented via reference counting.
This optional feature allows creating owned kind of &lt;code&gt;Entity&lt;&#x2F;code&gt; &amp;quot;reference&amp;quot;,
that ensures the entity is alive and despawns it on drop.
Storing owning &lt;code&gt;Entity&lt;&#x2F;code&gt; in the component of another entity
creates ownership relation between those entities.
Even though &lt;code&gt;Entity&lt;&#x2F;code&gt; is an owning reference,
components of the entity are can be queried from &lt;code&gt;World&lt;&#x2F;code&gt; as usual.
Shared ownership is also available.&lt;&#x2F;p&gt;
&lt;p&gt;Optimized for both high density &lt;code&gt;World&lt;&#x2F;code&gt;s with thousands of entities
and also for &lt;code&gt;World&lt;&#x2F;code&gt;s with a lower number of entities spread among many archetypes.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; is aimed at a wide range of game genres and use cases outside of games.&lt;&#x2F;p&gt;
&lt;p&gt;Built-in change detection with epochs allows systems to query for components
that were updated since the last run of that query,
or since any other epoch as defined by &lt;code&gt;Tracks&lt;&#x2F;code&gt; argument.
This opens the possibility to have multiple POV on changes even in a single system.
For example, server-side netcode can track changes individually
for each client and query for changes since the last ACK.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; optimizes iteration significantly when entities
with modified components are queried.&lt;&#x2F;p&gt;
&lt;p&gt;Although ECS abbreviation implies, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; does not come
with predefined &lt;code&gt;System&lt;&#x2F;code&gt; trait and systems scheduler.
We can call it ECQ (Entity-Component-Query) as an alternative to ECS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;edict&quot;&gt;Edict&lt;&#x2F;a&gt; is added to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&quot;&gt;ecs_bench_suite&lt;&#x2F;a&gt;
so anyone can compare performance in some trivial examples with other ECS.&lt;&#x2F;p&gt;
&lt;p&gt;Development focus for February is making more public API, including unsafe parts,
to allow writing custom queries, implement schedulers with parallel execution, etc.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-backroll-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&quot;&gt;bevy_backroll v0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-backroll-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&quot;&gt;Backroll&lt;&#x2F;a&gt; is a 100% type-safe native Rust implementation of the
&lt;a href=&quot;https:&#x2F;&#x2F;www.ggpo.net&#x2F;&quot;&gt;GGPO&lt;&#x2F;a&gt; rollback netcode library. The core library has gone through
superficial updates, but the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;bevy-backroll&quot;&gt;Bevy plugin&lt;&#x2F;a&gt; has been
massively overhauled. This update significantly improves the ergonomics of setting
up rollback netcode for your game (no more ugly turbofishes! No more generic type
parameter config type!), provides an automatic way of saving and loading Bevy
components and resources, and fully parallelizes the saving and loading of game
state when a rollback occurs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;s6uch9&#x2F;bevy_backroll_v030_is_now_available&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;james7132&#x2F;status&#x2F;1483373600115621889&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-smud&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;bevy_smud&quot;&gt;Bevy Smud&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-smud&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-smud.png&quot; alt=&quot;Bevy Smud screenshot&quot; &#x2F;&gt;
&lt;em&gt;A bevy drawn with Bevy Smud&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;bevy_smud&quot;&gt;Bevy Smud&lt;&#x2F;a&gt; is a new &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; plugin for drawing 2D
shapes using signed distance fields.&lt;&#x2F;p&gt;
&lt;p&gt;It contains ports of all of &lt;a href=&quot;https:&#x2F;&#x2F;iquilezles.org&#x2F;www&#x2F;articles&#x2F;distfunctions2d&#x2F;distfunctions2d.htm&quot;&gt;Inigo Quilez&#x27; 2D SDF
primitives&lt;&#x2F;a&gt;,
and allows easily composing said primitives together.&lt;&#x2F;p&gt;
&lt;p&gt;Shapes that share the same SDF and fill are automatically instanced, as shown in
the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jkhelsing&#x2F;status&#x2F;1486794339682508809&quot;&gt;demo video of 100k birds&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kiss_mrton&#x2F;status&#x2F;1477330931199496201&quot;&gt;Molecoole&lt;&#x2F;a&gt; has some new gameplay footage from #screenshotsaturday.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;s9kjoh&#x2F;wordlet_a_commandline_clone_of_wordle_written_in&#x2F;&quot;&gt;Wordlet&lt;&#x2F;a&gt; is a command-line clone of Wordle, written in Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1481358714170970115&quot;&gt;BITGUN&lt;&#x2F;a&gt; is looking for beta testers.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.lightsout.games&#x2F;news&#x2F;system-fault-early-access&quot;&gt;System Fault&lt;&#x2F;a&gt; is now in early access.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;qatoqat.itch.io&#x2F;lantern&quot;&gt;Lantern&lt;&#x2F;a&gt; is a cute adventure game about a cat taking a nap.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;spicylobster.itch.io&#x2F;fishfight&#x2F;devlog&#x2F;332434&#x2F;fish-fights-past-present-and-future&quot;&gt;Fish Fight&lt;&#x2F;a&gt; has a new devlog about their past, present and future.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;molentum.me&#x2F;blog&#x2F;starframe-ropes&#x2F;&quot;&gt;Starframe&lt;&#x2F;a&gt; has a new devlog about rope physics.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.GeTech.CakeThieves&quot;&gt;Cake Thieves&lt;&#x2F;a&gt; is a strategy game about protecting cake from ants...
with cannons!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1487924659693703169&quot;&gt;Idu&lt;&#x2F;a&gt; has released a new demo.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;macmv&#x2F;sugarcane&quot;&gt;Sugarcane&lt;&#x2F;a&gt; is a minigame-focused Minecraft server written in Rust.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;&#x27;&lt;a href=&quot;https:&#x2F;&#x2F;deterministic.space&#x2F;bevy-labels.html&quot;&gt;How Bevy Uses Traits For Labelling&lt;&#x2F;a&gt;&#x27; explains a cool usage of traits
in the Bevy game engine.&lt;&#x2F;li&gt;
&lt;li&gt;&#x27;&lt;a href=&quot;https:&#x2F;&#x2F;ianjk.com&#x2F;game-engine-in-rust&#x2F;&quot;&gt;Writing a Tiny Rust Game Engine For Web&lt;&#x2F;a&gt;&#x27; shows how to write a game
engine with zero Rust dependencies.&lt;&#x2F;li&gt;
&lt;li&gt;&#x27;&lt;a href=&quot;https:&#x2F;&#x2F;vaporsoft.net&#x2F;extending-states-in-bevy&#x2F;&quot;&gt;Extending States in Bevy&lt;&#x2F;a&gt;&#x27; shows how to make Bevy&#x27;s &lt;code&gt;State&lt;&#x2F;code&gt; system more powerful.&lt;&#x2F;li&gt;
&lt;li&gt;&#x27;Mastering Plugin Loadings in Bevy&#x27; (&lt;a href=&quot;https:&#x2F;&#x2F;maz.digital&#x2F;mastering-plugin-loadings-bevy-part-12&quot;&gt;part 1&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;maz.digital&#x2F;mastering-plugin-loadings-bevy-part-22&quot;&gt;part 2&lt;&#x2F;a&gt;) is an overview of how Bevy plugins work, and how
to write your own.&lt;&#x2F;li&gt;
&lt;li&gt;&#x27;&lt;a href=&quot;https:&#x2F;&#x2F;maz.digital&#x2F;bevy-stages-or-the-frames-lifecycle&quot;&gt;Bevy Stages or The Frames Lifecycle&lt;&#x2F;a&gt;&#x27; is an overview of the Bevy
engine&#x27;s game loop lifecycle.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other engine updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;general&#x2F;2022&#x2F;01&#x2F;07&#x2F;0.24-feature-highlights.html&quot;&gt;Fyrox 0.24&lt;&#x2F;a&gt; (formerly known as rg3d) has been released.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other tooling updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;sfdl5s&#x2F;fun_notation_guitar_tab_viewer&quot;&gt;Fun Notation&lt;&#x2F;a&gt; is a Bevy-based guitar tab viewer.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adamsoutar&#x2F;gbrs&quot;&gt;gbrs&lt;&#x2F;a&gt; is a Rust Game Boy emulator.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&#x2F;blog&#x2F;2022&#x2F;01&#x2F;02&#x2F;the-year-2021-in-dimforge&#x2F;&quot;&gt;Dimforge&lt;&#x2F;a&gt; posted a retrospective on their 2021, and goals for 2022.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;poll-promise&quot;&gt;poll-promise&lt;&#x2F;a&gt; is a crate for polling asynchronous operations.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;eexsty&#x2F;status&#x2F;1485942270981464065&quot;&gt;ezinput 0.2&lt;&#x2F;a&gt; was released, providing easier input handling for Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt; had several new releases.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_game_template&quot;&gt;bevy_game_template&lt;&#x2F;a&gt; was published.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zkat&#x2F;big-brain&#x2F;releases&#x2F;tag&#x2F;v0.10.0&quot;&gt;big-brain 0.10&lt;&#x2F;a&gt; (a library for Utility AI in Bevy) was released.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to handpicked reddit&#x2F;twitter&#x2F;urlo&#x2F;etc threads that provide
useful information --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ru86vu&#x2F;rust_alternative_for_pygame&quot;&gt;&amp;quot;Rust alternative for PyGame?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help build the
new node graph and 2D rendering systems.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- An optional section for new jobs related to Rust gamedev --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;careers.embark-studios.com&#x2F;jobs&quot;&gt;Embark Studios&lt;&#x2F;a&gt;
(Stockholm&#x2F;Hybrid Remote) - Various roles&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;spg3l1&#x2F;this_month_in_rust_gamedev_30_january_2022&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1491871330198818821&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #29 - December 2021</title>
            <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/029/</link>
            <guid>https://gamedev.rs/news/029/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 29th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;029&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The thirteenth Rust Gamedev Meetup happened in December. You can watch the
recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;S7aoi_4a2uE&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups
take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;tet-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;tet-rust&quot;&gt;Tet-Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tet-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tet-rust-1-sm.gif&quot; alt=&quot;Tet-Rust screenshot&quot; &#x2F;&gt;
&lt;em&gt;Screenshot of Tet-Rust&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tet-Rust (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;tet-rust&quot;&gt;GitHub&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Syn9Dev&quot;&gt;@Syn-Nine&lt;&#x2F;a&gt; is a mini game based on the famous falling puzzle
block game.&lt;&#x2F;p&gt;
&lt;p&gt;The game was created to exercise Syn9&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;mgfw&quot;&gt;Rust Mini Game Framework&lt;&#x2F;a&gt; and is
part of an open source &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;&quot;&gt;repository&lt;&#x2F;a&gt; of several mini-games
that use this framework.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-beast-of-monte-carlo&quot;&gt;The Beast of Monte Carlo&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-beast-of-monte-carlo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bomc-shots.png&quot; alt=&quot;The Beast of Monte Carlo Screenshot&quot; &#x2F;&gt;
&lt;em&gt;Screenshot of The Beast of Monte Carlo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Beast of Monte Carlo by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Syn9Dev&quot;&gt;@Syn-Nine&lt;&#x2F;a&gt; is a mini role-playing
game in development to help work out new features for Syn9&#x27;s
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;mgfw&quot;&gt;Rust Mini Game Framework&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s progress included:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;prototyping tilemap and frame-based animation to make a simple walkaround
engine&lt;&#x2F;li&gt;
&lt;li&gt;creating a general purpose maze generation algorithm and porting random world
map generation from C++ to Rust&lt;&#x2F;li&gt;
&lt;li&gt;creating new sprite artwork and animation, as well as mocking up the battle
system&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The gameplay and art are influenced by games such as Final Fantasy VI and Lufia
II with a heavy focus on procedural content generation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;10x-sprint-master&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;e-net4.itch.io&#x2F;10x-sprint-master&quot;&gt;10x Sprint Master&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#10x-sprint-master&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;10xsprintmaster.png&quot; alt=&quot;In-game screenshot of 10x Sprint Master, depicting a project workboard and two team members.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;e-net4.itch.io&#x2F;10x-sprint-master&quot;&gt;10x Sprint Master&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Enet4&#x2F;10xSprintMaster&quot;&gt;GitHub&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;E_net4&quot;&gt;@E_net4&lt;&#x2F;a&gt;
is a simulation game where you play the role of
a software development lead engineer.
Write tasks, coordinate a team of developers,
fix bugs and manage feature delivery,
while trying to mitigate the torments of technical debt.&lt;&#x2F;p&gt;
&lt;p&gt;The game was submitted to GitHub Game Off 2021,
and was written using &lt;a href=&quot;https:&#x2F;&#x2F;yew.rs&quot;&gt;Yew&lt;&#x2F;a&gt; with graphics done in pure HTML and CSS.&lt;&#x2F;p&gt;
&lt;p&gt;The author also published a &lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;e_net4&#x2F;10x-sprint-master-a-technical-and-social-experiment-ahp&quot;&gt;blog post on Dev.to&lt;&#x2F;a&gt;
about the game&#x27;s technical and social dimensions.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;molecoole&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;Molecoole&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#molecoole&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;&lt;img src=&quot;molecoole1.png&quot; alt=&quot;A molecoole with tons of cannons&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Molecoole is a top-down shooter roguelike where you build your character
from different atoms. Each atom has a unique ability providing
tons of variety between playthroughs.
It&#x27;s made using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month Molecoole devs focused on
adding more &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kiss_mrton&#x2F;status&#x2F;1473725282918014977&quot;&gt;variety&lt;&#x2F;a&gt;: different enemies, atoms etc...&lt;&#x2F;p&gt;
&lt;p&gt;They also launched their first teaser &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kiss_mrton&#x2F;status&#x2F;1467242884927614976&quot;&gt;video&lt;&#x2F;a&gt;,
it gives us a glimpse into 3 different bioms, bosses, enemies and more.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Winter in a town&quot; &#x2F;&gt;
&lt;em&gt;A peaceful winter night&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In December, Veloren ran a Christmas week. From the 20th to the 30th of
December, there were several winter-themed changes on the main server. Snow was
everywhere, decorations were added to locations, and NPC wore Christmas hats!
The 150th Veloren blog was also released in December. An experimental new
section of the newsletter gives video recaps of the last week&#x27;s blog post.&lt;&#x2F;p&gt;
&lt;p&gt;The ability to edit the appearance of characters was added to the game. Work was
done on armor tooltips to make them more clear. Skiing is in the works, with
some work to still be done on animations and physics. New images were created
for item displays, which are now stored as .vox files.&lt;&#x2F;p&gt;
&lt;p&gt;December&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-149&quot;&gt;#149&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-150&quot;&gt;#150&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-151&quot;&gt;#151&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-152&quot;&gt;#152&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;country-slice&quot;&gt;Country Slice&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#country-slice&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;country_slice.gif&quot; alt=&quot;Country Slice&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;anopara&#x2F;country-slice&quot;&gt;Country Slice&lt;&#x2F;a&gt; is
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;&quot;&gt;@anastasiaopara&lt;&#x2F;a&gt;&#x27;s hobby project, where users can draw a
small scene, and their input is amplified with real-time procedural
generation.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s biggest update was adding an ability to draw
paths that, if intersected with walls, automatically generate arches. You can
read a Twitter thread that briefly covers how it
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1472627194409230343&quot;&gt;was optimized to run in 1-2ms&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fish-fight&quot;&gt;Fish Fight&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fish-fight&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fishfight-poster.jpg&quot; alt=&quot;Fish demo scene&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Fish Fight (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fishfight&#x2F;FishFight&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;4smxjcheE5&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;fishfight.org&#x2F;&quot;&gt;website&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;Fish Fight is a tactical 2D shooter, played by up to 4 players.
It is also a 2D-pixels-platformer game engine optimized for modding.&lt;&#x2F;p&gt;
&lt;p&gt;In-game level editor was &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fishfight&#x2F;FishFight&#x2F;releases&#x2F;tag&#x2F;v0.3&quot;&gt;released&lt;&#x2F;a&gt;, along with an &lt;a href=&quot;https:&#x2F;&#x2F;fishfight.github.io&#x2F;FishFight&#x2F;editor.html&quot;&gt;editor tutorial&lt;&#x2F;a&gt;.
A retrospective devlog was posted: &lt;a href=&quot;https:&#x2F;&#x2F;spicylobster.itch.io&#x2F;fishfight&#x2F;devlog&#x2F;332434&#x2F;fish-fights-past-present-and-future&quot;&gt;Fish Fight&#x27;s past, present, and future&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bitgun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;BITGUN&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bitgun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;&lt;img src=&quot;bitgun-cutscene.jpg&quot; alt=&quot;survivors talking in a cutscene: &amp;quot;You! Don&#x27;t move! Are you infected?&amp;quot;&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;BITGUN (&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logloggames&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;XrGZQkq&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logloggames&quot;&gt;@LogLogGames&lt;&#x2F;a&gt; is an action
roguelike zombie shooter with lots of blood. The game is built using Godot
and Rust (via &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;&quot;&gt;godot-rust&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;They are now heading to a public playtest via Steam and you can signup
&lt;a href=&quot;https:&#x2F;&#x2F;airtable.com&#x2F;shrMUw2Xz98tdj8gW&quot;&gt;here&lt;&#x2F;a&gt; to play the game for free in exchange for a short feedback.
They recently added &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1479752293306273792&quot;&gt;cutscenes&lt;&#x2F;a&gt;, which are telling a bit more
story about this post-apocalyptic zombie world where people are scared of getting
infected and supplies are rare. They also launched a project &lt;a href=&quot;https:&#x2F;&#x2F;loglog.games&#x2F;pages&#x2F;name-your-zombie&#x2F;&quot;&gt;Name your zombie&lt;&#x2F;a&gt;
where you can get your Twitter or TikTok username as a name of a random zombie
and a tombstone in the game!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vange-rs-webassembly-port&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;caiiiycuk.medium.com&#x2F;vange-rs-webassembly-in-rust-498e2f960a04&quot;&gt;vange-rs WebAssembly Port&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vange-rs-webassembly-port&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vangers.jpeg&quot; alt=&quot;Cars, some terrain with roads and lava&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vange.rs&quot;&gt;vange.rs&lt;&#x2F;a&gt; is the project of re-implementing the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Vangers&quot;&gt;Vangers&lt;&#x2F;a&gt; game (from 1998)
in Rust using modern development practices, parallel computations, and GPU.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;caiiiycuk&quot;&gt;@caiiiycuk&lt;&#x2F;a&gt; ported it to the &amp;quot;wasm32-unknown-emscripten&amp;quot; target
via wgpu&#x27;s GLES3 backend and &lt;a href=&quot;https:&#x2F;&#x2F;caiiiycuk.medium.com&#x2F;vange-rs-webassembly-in-rust-498e2f960a04&quot;&gt;posted an article&lt;&#x2F;a&gt;
about the process and observations.&lt;&#x2F;p&gt;
&lt;p&gt;The web version of vange-rs can be &lt;a href=&quot;https:&#x2F;&#x2F;caiiiycuk.github.io&#x2F;vangers-web&#x2F;vange-rs&#x2F;&quot;&gt;played online here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;rdbl7u&#x2F;vangers_running_on_webgl&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-combat&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ElliotB256&#x2F;bevy_combat&quot;&gt;Bevy Combat&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-combat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-combat.gif&quot; alt=&quot;planes shooting each other&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ElliotB256&#x2F;bevy_combat&quot;&gt;Bevy Combat&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ElliotB256&quot;&gt;@ElliotB256&lt;&#x2F;a&gt; is
a WIP sci-fi battle simulation written using Bevy.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Combat and targetting AI;&lt;&#x2F;li&gt;
&lt;li&gt;Simple weapons (instant hit), damage, health, shields, and mortality;&lt;&#x2F;li&gt;
&lt;li&gt;Death animations and explosions;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;elliotb256.github.io&#x2F;bevy_combat&quot;&gt;web demo here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-city&quot;&gt;Rust City&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-city&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust-city.jpg&quot; alt=&quot;road, buildings with various utilities and some GUI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; is working on a city building game.
Some of &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1473266319881654274&quot;&gt;this month&#x27;s updates&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic zoning placeholders when building roads.&lt;&#x2F;li&gt;
&lt;li&gt;Advanced zoning for residential, commercial, and industry.&lt;&#x2F;li&gt;
&lt;li&gt;Populating zoned areas based on demand.&lt;&#x2F;li&gt;
&lt;li&gt;Buildings don&#x27;t function unless they have utilities.&lt;&#x2F;li&gt;
&lt;li&gt;Finances and transactions&lt;&#x2F;li&gt;
&lt;li&gt;Population tracker.&lt;&#x2F;li&gt;
&lt;li&gt;pipes required for a house to receive water.&lt;&#x2F;li&gt;
&lt;li&gt;cables required for a house to receive electricity.&lt;&#x2F;li&gt;
&lt;li&gt;build mode for pipes and cables.&lt;&#x2F;li&gt;
&lt;li&gt;UI to toggle different layers visibility.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;antorum-isles-pka-antorum-online&quot;&gt;Antorum Isles (pka Antorum Online)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum-isles-pka-antorum-online&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum.jpg&quot; alt=&quot;isles!&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antorum.ratwizard.dev&quot;&gt;Antorum Isles&lt;&#x2F;a&gt; is a micro-multiplayer online role-playing game
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt;.
The game server is written in Rust, and the client is Unity-based.&lt;&#x2F;p&gt;
&lt;p&gt;Main highlights of the latest &lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;39&quot;&gt;@dooskington&#x27;s devlog&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antorum.ratwizard.dev&quot;&gt;Now you can download the client and play the game&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;li&gt;The project is mostly finished, it won&#x27;t receive more major new features
or updates.&lt;&#x2F;li&gt;
&lt;li&gt;The editor and the dedicated server binaries should be released soon.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rusty-engine-3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&#x2F;rusty_engine&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#300---2021-12-30&quot;&gt;Rusty Engine 3.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-engine-3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rusty_engine3.png&quot; alt=&quot;An example Rusty Engine game&quot; &#x2F;&gt;
&lt;em&gt;The &amp;quot;Road Race&amp;quot; game prototype running under Rusty Engine 3.0&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&#x2F;rusty_engine&quot;&gt;Rusty Engine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&quot;&gt;Nathan Stocks&lt;&#x2F;a&gt; is a game engine built on top of Bevy
for people who are learning Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Version 3.0 is a large release with many breaking changes. Notable new features
include: &lt;a href=&quot;https:&#x2F;&#x2F;cleancut.github.io&#x2F;rusty_engine&#x2F;&quot;&gt;a full tutorial&lt;&#x2F;a&gt;, custom asset loading (sprites, sounds, fonts),
customizable game state, an interactive collider creator, and much more.
See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CleanCut&#x2F;rusty_engine&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#300---2021-12-30&quot;&gt;the changelog for 3.0&lt;&#x2F;a&gt; for the full details.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;rwyrqx&#x2F;rusty_engine_30&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nathanstocks&#x2F;status&#x2F;1476724623903367168&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pyxel&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kitao&#x2F;pyxel&quot;&gt;Pyxel&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pyxel&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pyxel.png&quot; alt=&quot;Examples: drawing methods, sound, tilemap and music editors&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kitao&#x2F;pyxel&quot;&gt;Pyxel&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;FC7kUZJ&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kitao&quot;&gt;@kitao&lt;&#x2F;a&gt; is a retro game engine
(inspired by &lt;a href=&quot;https:&#x2F;&#x2F;lexaloffle.com&#x2F;pico-8.php&quot;&gt;PICO-8&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;tic80.com&quot;&gt;TIC-80&lt;&#x2F;a&gt;) that uses Python for scripting:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;16 color palette,&lt;&#x2F;li&gt;
&lt;li&gt;256x256 sized 3 image banks,&lt;&#x2F;li&gt;
&lt;li&gt;256x256 sized 8 tilemaps,&lt;&#x2F;li&gt;
&lt;li&gt;4 channels with 64 definable sounds,&lt;&#x2F;li&gt;
&lt;li&gt;8 peces of music which can combine arbitrary sounds,&lt;&#x2F;li&gt;
&lt;li&gt;Image and sound editor,&lt;&#x2F;li&gt;
&lt;li&gt;Keyboard, mouse, and gamepad inputs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kitao&#x2F;pyxel#try-pyxel-examples&quot;&gt;official&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kitao&#x2F;pyxel&#x2F;wiki&#x2F;Pyxel-User-Examples&quot;&gt;user-provided&lt;&#x2F;a&gt; examples.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-sfml-windows-setup&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=nnojR-8PT4M&quot;&gt;Rust SFML Windows Setup&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-sfml-windows-setup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=nnojR-8PT4M&quot;&gt;&lt;img src=&quot;youtube-sfml-win.jpg&quot; alt=&quot;youtube preview: ping pong window and some dev windows in background&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheFern2&quot;&gt;@TheFern2&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=nnojR-8PT4M&quot;&gt;video tutorial&lt;&#x2F;a&gt; on how to
set up Rust with &lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;sfml&quot;&gt;SFML bindings&lt;&#x2F;a&gt; for Windows users (using MSVC C++).&lt;&#x2F;p&gt;
&lt;p&gt;rust-sfml&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jeremyletang&#x2F;rust-sfml&#x2F;wiki&#x2F;Windows&quot;&gt;wiki page with instructions for Windows&lt;&#x2F;a&gt; was also updated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-and-unity-game-development&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;L7M_vbo1N2g&quot;&gt;Rust and Unity Game Development&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-and-unity-game-development&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;L7M_vbo1N2g&quot;&gt;&lt;img src=&quot;youtube-runity.jpg&quot; alt=&quot;Silly Youtube preview: TanTan&#x27;s photo, Rust&amp;amp;Unity logos&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;TanTanDev&quot;&gt;@TanTanDev&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;L7M_vbo1N2g&quot;&gt;video&lt;&#x2F;a&gt; about the process of adding Rust
support for the Unity game engine.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Is it really possible? YES it is! I managed to make a game 100% coded in Rust,
but using Unity as editor and runtime.
This has to be one of my craziest projects yet!&lt;&#x2F;p&gt;
&lt;p&gt;I utilized a library called Bevy game framework&#x2F;engine,
to handle the gameplay programming. Utilizing Bevy systems I was able
to hide the FFI code from the gameplay code.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The resulting source code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;runity&quot;&gt;can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetris-livecoding&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLBNbqulT6FWw9C39_WIT_dcCIj1AdxiAy&quot;&gt;Tetris Livecoding&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetris-livecoding&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLBNbqulT6FWw9C39_WIT_dcCIj1AdxiAy&quot;&gt;&lt;img src=&quot;youtube-tetris.jpg&quot; alt=&quot;YouTube preview slide: title &amp;quot;TETRIS 1&amp;quot;, author&#x27;s face, ferris&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLBNbqulT6FWw9C39_WIT_dcCIj1AdxiAy&quot;&gt;&amp;quot;Tetris in Rust from scratch&amp;quot;&lt;&#x2F;a&gt; is a series of livestreams
by &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCROob9baB-fRBDSyNq_8i4g&quot;&gt;Over Developed&lt;&#x2F;a&gt; that showcases beginner&#x2F;intermediate Rust concepts
using Tetris as an example.
Episodes:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=74UYWFNfR64&quot;&gt;In the first episode&lt;&#x2F;a&gt;,
we lay the groundwork for the project, creating the overall structure
and some of the primitives that will be used by the game engine.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=ZBO99zuD3HQ&quot;&gt;In the second episode&lt;&#x2F;a&gt;,
we flesh out some more behavior in the game engine, and fix some bugs
that were introduced in the previous session.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Ro-aPSb96RM&quot;&gt;In the third episode&lt;&#x2F;a&gt;,
we start writing the interface code for rendering the GUI.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=QLA0LqfhaoE&quot;&gt;In this episode&lt;&#x2F;a&gt;,
we connect the game logic to the GUI and finally see some interactivity.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;rk8zv5&#x2F;livecoding_tetris_clone&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;blackjack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;blackjack&quot;&gt;Blackjack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#blackjack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;blackjack.gif&quot; alt=&quot;Blackjack demo: Connecting visual nodes and tweaking various parameters to procedurally generate a beveled box in real-time&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;blackjack&quot;&gt;Blackjack&lt;&#x2F;a&gt; by @setzer22 is a new procedural modeling application made in Rust,
using rend3, wgpu and egui. It follows the steps of applications like
Houdini, or Blender&#x27;s geometry nodes project and provides a node-based
environment to compose procedural recipes to create 3d models.&lt;&#x2F;p&gt;
&lt;p&gt;The project was recently announced, and an official open-source release is
planned during the following month. Here&#x27;s a highlight of the upcoming features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A node-based editor to compose operations like 3d math, vertex&#x2F;edge&#x2F;face
selections and mesh edit operations.&lt;&#x2F;li&gt;
&lt;li&gt;Several polygon edit operations like bevel, chamfer and extrude.&lt;&#x2F;li&gt;
&lt;li&gt;Viewport display with support for displaying primitive ids and triangle
half-edge winding.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;rufvlc&#x2F;meet_blackjack&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;rug24x&#x2F;media_meet_blackjack&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite_splash.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-development vector and raster graphics
editor built on a non-destructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;The completion of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;milestone&#x2F;10?closed=1&quot;&gt;Sprint 10&lt;&#x2F;a&gt; wraps up a productive month
of features and stability improvements. Documents persist page reloads via
IndexedDB browser storage. The layer panel got some love. Vector anchor points
can be dragged (beginnings of the Path&#x2F;Pen Tools). Per-tool footer bar hints
teach possible user input actions. And a big code cleanup&#x2F;refactor took place
behind the scenes.&lt;&#x2F;p&gt;
&lt;p&gt;Additional new features and QoL improvements: artboards, panel resizing, the
Navigate Tool, outline view mode, support for touch input and non-Latin
keyboards, an &lt;em&gt;About Graphite&lt;&#x2F;em&gt; dialog with version info, plus dozens of bugs
and crashes were resolved.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.design&quot;&gt;Try it right now in your browser.&lt;&#x2F;a&gt; Graphite is making
steady progress towards becoming a non-destructive, procedural graphics editor
suitable for replacing traditional 2D DCC applications. &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Join the
Discord&lt;&#x2F;a&gt; and get involved!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fun-notation&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notation.fun&quot;&gt;Fun Notation&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fun-notation&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fun-notation.gif&quot; alt=&quot;Demo that shows colored chords, notes, and tabs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notation.fun&quot;&gt;Fun Notation&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notation-fun&#x2F;notation&quot;&gt;GitHub&lt;&#x2F;a&gt;) is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yjpark&quot;&gt;@yjpark&lt;&#x2F;a&gt;&#x27;s
experimentation on musical notations built on top of Bevy.
The idea is to help with music visualization, practicing,
and provide a nicer way to show scores or tabs.&lt;&#x2F;p&gt;
&lt;p&gt;Some of current ideas tried in the app:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;colors for notes (based on the relative notation),&lt;&#x2F;li&gt;
&lt;li&gt;color and shapes for chords,&lt;&#x2F;li&gt;
&lt;li&gt;guitar tabs to show both pitch and durations for notes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;r9erd2&#x2F;guitar_tab_viewer_bevy&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;assets-manager&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&#x2F;&quot;&gt;assets_manager&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#assets-manager&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&#x2F;&quot;&gt;assets_manager&lt;&#x2F;a&gt; provides a high-level API to load and cache external resources
with a focus on performance and hot-reloading.&lt;&#x2F;p&gt;
&lt;p&gt;In addition to built-in support for new formats like WebP, glTF and fonts,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&#x2F;releases&#x2F;tag&#x2F;0.7.0&quot;&gt;version 0.7&lt;&#x2F;a&gt; brings a few quality of life improvements. Additionally,
hot-reloading is now supported for custom asset sources.&lt;&#x2F;p&gt;
&lt;p&gt;These features led to a new crate: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;ggez-assets_manager&#x2F;&quot;&gt;ggez-assets_manager&lt;&#x2F;a&gt;, whose goal is to ease
use of assets_manager with ggez engine!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wgpu-0-12-release&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;-0.12 release&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-0-12-release&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-pathtracer.png&quot; alt=&quot;albedo pathtracer&quot; &#x2F;&gt;
&lt;em&gt;experimental pathtracer on wgpu from @llamajestic&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The team concluded 2021 with the release of wgpu-0.12 and naga-0.8.
Details can be found on the &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;12&#x2F;25&#x2F;this-year.html&quot;&gt;gfx-rs blog&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;rjci2n&#x2F;wgpu012_is_released&#x2F;&quot;&gt;wgpu reddit discussion&lt;&#x2F;a&gt;.
Lots of fixes are shipped alongside one much-awaited improvement:
the error messages from validating shaders were finally made readable:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;   ┌─ interpolate.wgsl:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;25
&lt;&#x2F;span&gt;&lt;span&gt;   │
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span&gt; │    out.linear_centroid = vec2&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f32&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;64.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;125.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;   │                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ naga::Expression [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Entry point vert_main at Vertex is invalid: 
&lt;&#x2F;span&gt;&lt;span&gt;        Expression [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;16&lt;&#x2F;span&gt;&lt;span&gt;] is invalid
&lt;&#x2F;span&gt;&lt;span&gt;        Composing expects &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt; components but &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt; were given
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;pixels-0-9-0-space-invader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt; 0.9.0 👾&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pixels-0-9-0-space-invader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt; is a tiny hardware-accelerated pixel frame buffer. It is popularly
used for emulators, software renderers, 2D pixel art games, and desktop
utilities.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.9.0 brings a few breaking changes. Notably, wgpu was updated to
0.12 and it now requires Edition 2021. Full details are available in the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&#x2F;releases&#x2F;tag&#x2F;0.9.0&quot;&gt;release notes&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-proto&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MrGVSV&#x2F;bevy_proto&quot;&gt;bevy_proto&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-proto&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_proto.png&quot; alt=&quot;YAML configuration files for bevy_proto&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MrGVSV&#x2F;bevy_proto&quot;&gt;bevy_proto&lt;&#x2F;a&gt; is a small plugin for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; game engine, allowing entities to
be defined in their own config files (called &amp;quot;Prototypes&amp;quot;). These config files
are then read into a resource that you can use to spawn their pre-defined
entities from within any Bevy system.&lt;&#x2F;p&gt;
&lt;p&gt;The recently released 0.2 version, adds a templating feature (as suggested
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chrisburnor&quot;&gt;@chrisburnor&lt;&#x2F;a&gt;). This new feature allows any
entity prototype to define one or more templates, from which it will inherit
additional component definitions (including those from a template&#x27;s templates).&lt;&#x2F;p&gt;
&lt;p&gt;This makes defining many entities with common functionality (such as enemy types
or weapons) much easier and reduces code duplication for an overall better
experience.&lt;&#x2F;p&gt;
&lt;p&gt;For more info, check out
the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MrGVSV&#x2F;bevy_proto&#x2F;pull&#x2F;2&quot;&gt;original PR&lt;&#x2F;a&gt;, or explore
the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MrGVSV&#x2F;bevy_proto&#x2F;tree&#x2F;main&#x2F;assets&quot;&gt;assets&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MrGVSV&#x2F;bevy_proto&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; folders.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-remote-devtools&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;reneeichhorn&#x2F;bevy-remote-devtools&quot;&gt;bevy-remote-devtools&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-remote-devtools&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-remote-devtools.gif&quot; alt=&quot;Demo of the Tauri based development app&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;reneeichhorn&#x2F;bevy-remote-devtools&quot;&gt;bevy-remote-devtools&lt;&#x2F;a&gt; is a plugin and UI application for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; game
engine allowing to view entities and their components, asset resources
like meshes, events from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-rs&#x2F;tracing&quot;&gt;tracing&lt;&#x2F;a&gt; crate and system timings using a
very basic profiler. It also supports all of that over network so
debugging can be done from any remote machine and vice versa.&lt;&#x2F;p&gt;
&lt;p&gt;The first release of the 0.1 version comes with basic support for the
aforementioned features. It contains a plugin for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; that will extend
you application with a small REST HTTP API that can be consumed by the
included &lt;a href=&quot;https:&#x2F;&#x2F;tauri.studio&#x2F;en&#x2F;&quot;&gt;Tauri&lt;&#x2F;a&gt; based UI application.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kajiya&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;kajiya&#x2F;&quot;&gt;kajiya&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kajiya&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kajiya.jpg&quot; alt=&quot;A rendering of a warmly-lit ruins environment&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;kajiya&#x2F;&quot;&gt;kajiya&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;dAuKfZS&quot;&gt;Discord&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;h3r2tic&quot;&gt;@h3r2tic&lt;&#x2F;a&gt; is an experimental real-time global illumination
renderer made with Vulkan, and utilizing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&quot;&gt;rust-gpu&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Last month the project was released into open source along with
a tiny sample: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;h3r2tic&#x2F;cornell-mcray&#x2F;&quot;&gt;Cornell McRay t&#x27;Racing&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The renderer is permissively licensed, and includes several cutting-edge
algorithms, including ray-traced effects.
It isn’t built to ship games (yet), but serves as a convenient
platform for learning and research.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;embarkstudios&#x2F;homegrown-rendering-with-rust-1e39068e56a7&quot;&gt;medium&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;rkqmk3&#x2F;homegrown_rendering_with_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&#x2F;status&#x2F;1472957370972127233&quot;&gt;twitter (kajiya)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&#x2F;status&#x2F;1473856011941425155&quot;&gt;twitter (cornell-mcray)&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shard&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HindrikStegenga&#x2F;Shard&quot;&gt;Shard&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shard&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HindrikStegenga&#x2F;Shard&quot;&gt;Shard&lt;&#x2F;a&gt; by @HindrikStegenga is an Archetype-based Entity Component System.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.2 is a complete rewrite of the ECS, with the main new feature
that it supports no_std environments.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;r6mn0g&#x2F;shard_020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rapid-qoi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;rapid-qoi&quot;&gt;rapid-qoi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rapid-qoi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;rapid-qoi&quot;&gt;rapid-qoi&lt;&#x2F;a&gt; by @zakarumych is an implementation of QOI format written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;QOI format can fit nicely as a replacement for PNG
and other common loseless image formats
for game engines given its simplicity and blazing fast encoding and decoding.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;rapid-qoi&quot;&gt;rapid-qoi&lt;&#x2F;a&gt; has a simple API, zero unsafe, zero dependencies,
fast build times and high performance.
It is compatible with finalized QOI spec published in December.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ash-v0-34&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;ash&quot;&gt;ash&lt;&#x2F;a&gt; v0.34&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ash-v0-34&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;ash&quot;&gt;ash&lt;&#x2F;a&gt; is lightweight wrapper around Vulkan.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;ash&#x2F;releases&#x2F;tag&#x2F;0.34.0&quot;&gt;v0.34 was released&lt;&#x2F;a&gt;. Highlights include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Now ash defaults to linking Vulkan directly, which saves the libloading dep
and is more idiomatic for apps that don&#x27;t have a fallback.&lt;&#x2F;li&gt;
&lt;li&gt;Debug impls can be disabled for a faster build.&lt;&#x2F;li&gt;
&lt;li&gt;More extensions and lots of miscellaneous API cleanup.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bauxite.itch.io&#x2F;bendyworm&quot;&gt;BENDYWORM&lt;&#x2F;a&gt; now &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&#x2F;status&#x2F;1467817606111498240&quot;&gt;runs on Linux natively&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;rj5lut&#x2F;rust_shooter_another_update&quot;&gt;Rust Shooter progress report&lt;&#x2F;a&gt;:
enemies are proper player entities with rudimentry AI now,
new indoor environment.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vleue.itch.io&#x2F;aous&quot;&gt;aous&lt;&#x2F;a&gt; is a Game Off&#x27;21 game about the survival of a mutating ant colony.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;repi&#x2F;status&#x2F;1469324284619337728&quot;&gt;Embark&#x27;s Arc Raiders game is using some Rust on the server side&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other engine updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;@DmitryNStepanov&lt;&#x2F;a&gt; did a few more &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; live-coding streams, here&#x27;re
the recordings: &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=TQaCyC_tGko&quot;&gt;second&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=OsZCusri1Nw&quot;&gt;third&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=FGi8evJFdnw&quot;&gt;fourth&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&#x2F;status&#x2F;1472269798641971200&quot;&gt;godot-rust was upgraded&lt;&#x2F;a&gt; to support Godot 3.4 out of the box,
so the manual api.json is not needed.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; v0.26 brings: different image types (2D, 2D Array, 3D),
samplers instead of textures, render target fixes,
and also an &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;r5xobe&#x2F;oxygengine_rpg_game_template&quot;&gt;RPG template&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&#x2F;bevy_midi&quot;&gt;bevy_midi&lt;&#x2F;a&gt; v0.2 is now using crossbeam-channels meaning
it is more responsive.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;rrantt&#x2F;egui_016&quot;&gt;egui 0.16&lt;&#x2F;a&gt; brings:
context menus, rich text (colors, underline, etc) in all widgets,
bar charts and box plots.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to handpicked reddit&#x2F;twitter&#x2F;urlo&#x2F;etc threads that provide
useful information --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;r8jh5z&#x2F;should_i_use_a_syncawait_threads_or_both_to_make_server&quot;&gt;&amp;quot;Should I use a sync&#x2F;await, threads, or both to make a game server?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;rhd8ou&#x2F;rust_server_for_unreal_engine_client&quot;&gt;&amp;quot;Rust server for Unreal Engine Client? Is this a bad idea for any reason?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help reach
the 0.1 Alpha release.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;s82gcd&#x2F;this_month_in_rust_gamedev_29_december_2021&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1483927872532271107&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #28 - November 2021</title>
            <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/028/</link>
            <guid>https://gamedev.rs/news/028/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 28th issue of the Rust GameDev Workgroup&#x27;s monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta: safety, concurrency, and
speed. These goals are well-aligned with game development. We hope to build an
inviting ecosystem for anyone wishing to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination
issues&lt;&#x2F;a&gt;. Want something mentioned in the next newsletter? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us
a pull request&lt;&#x2F;a&gt;. Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;028&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The eleventh Rust Gamedev Meetup happened in November. You can watch the
recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;nLyiLnC5mn4&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups
take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;bb9cdaec&quot;&gt;December 11th&lt;&#x2F;a&gt;, fill out
&lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;flesh&quot;&gt;Flesh&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.gif&quot; alt=&quot;flesh preview&quot; &#x2F;&gt;
&lt;em&gt;The melee weapon in action&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&#x2F;&quot;&gt;Flesh&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_oab&quot;&gt;@im_oab&lt;&#x2F;a&gt; is a 2D-horizontal shmup game with hand-drawn animation and
an organic&#x2F;fleshy theme. It is implemented using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;. This month&#x27;s updates
include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support different types of ships that players can choose.&lt;&#x2F;li&gt;
&lt;li&gt;Add a melee weapon.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;one-click-ninja&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fluffysquirrels&#x2F;one-click-ninja&quot;&gt;One-Click Ninja&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#one-click-ninja&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;one-click-ninja.png&quot; alt=&quot;Screenshot of One-Click Ninja&quot; &#x2F;&gt;
&lt;em&gt;Screenshot of One-Click Ninja&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One-Click Ninja is a rhythm game made in 10 days for &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;1-button-jam-2021&quot;&gt;1-Button Jam 2021&lt;&#x2F;a&gt;,
written in Rust using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; engine.&lt;&#x2F;p&gt;
&lt;p&gt;The source is available MIT licensed on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fluffysquirrels&#x2F;one-click-ninja&quot;&gt;GitHub&lt;&#x2F;a&gt;, and you can
&lt;a href=&quot;https:&#x2F;&#x2F;fluffysquirrels.itch.io&#x2F;one-click-ninja&quot;&gt;play in your browser on itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fish-fight-the-prequel&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1771640&#x2F;Fish_Fight_The_Prequel&#x2F;&quot;&gt;Fish Fight: The Prequel&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fish-fight-the-prequel&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1771640&#x2F;Fish_Fight_The_Prequel&#x2F;&quot;&gt;&lt;img src=&quot;fishfight.gif&quot; alt=&quot;fishfight&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Fish Fight is a fast-paced 2D brawler game, played by 1-4 players online or on a
shared screen, built with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;p&gt;This month it got a trailer, and the game is now available to wishlist on
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1771640&#x2F;Fish_Fight_The_Prequel&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bitgun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;BITGUN&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bitgun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;&lt;img src=&quot;bitgun-zombies.jpeg&quot; alt=&quot;Gameplay screenshot with lots of zombies in a tunnel&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;BITGUN (&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logloggames&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;XrGZQkq&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logloggames&quot;&gt;@LogLogGames&lt;&#x2F;a&gt; is an action
roguelike zombie shooter with lots of blood. The game is built using Godot and
Rust (via &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;&quot;&gt;godot-rust&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;They recently implemented a mission system, where you can select one of &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1464009563976392713?s=20&quot;&gt;three
types of missions&lt;&#x2F;a&gt; to go to from the central camp. One is to
defend supplies from a horde of zombies, the second is to search a facility for some
object or clear all the zombies and the last one is to fight your way through a
tunnel full of spiders and other enemies! They also worked on a
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1461898845810348033?s=20&quot;&gt;tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;halloween-mahjong-solitaire&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;mahjong&quot;&gt;Halloween Mahjong Solitaire&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#halloween-mahjong-solitaire&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mahjong-screenshot.png&quot; alt=&quot;Halloween Mahjong Solitaire screenshot&quot; &#x2F;&gt;
&lt;em&gt;Screenshot of Halloween Mahjong Solitaire&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Halloween Mahjong Solitaire (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;rust-mini-games&#x2F;tree&#x2F;main&#x2F;2d-games&#x2F;mahjong&quot;&gt;GitHub&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Syn9Dev&quot;&gt;@Syn-Nine&lt;&#x2F;a&gt; is a game created for the &lt;a href=&quot;http:&#x2F;&#x2F;noop.rocks&#x2F;gdr&#x2F;viewtopic.php?f=2&amp;amp;t=70&quot;&gt;Game Developers
Refuge 4x4x4 Challenge&lt;&#x2F;a&gt; in October 2021.&lt;&#x2F;p&gt;
&lt;p&gt;The challenge was to create a Halloween-themed game based on four emojis. In
this case the chosen emoji combination was: skull_and_crossbones, bat, game_die,
and shinto_shrine (☠️ 🦇 🎲 ⛩️).&lt;&#x2F;p&gt;
&lt;p&gt;The game is part of an open source repository of several mini-games that use
Syn9&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syn-Nine&#x2F;mgfw&quot;&gt;Rust Mini Game Framework&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;country-slice&quot;&gt;Country Slice&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#country-slice&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;country_slice_gif.gif&quot; alt=&quot;country-slice-gif&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;anopara&#x2F;country-slice&quot;&gt;Country Slice&lt;&#x2F;a&gt; is
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;&quot;&gt;@anastasiaopara&lt;&#x2F;a&gt;&#x27;s hobby project, where users can draw a
small scene, and their input is amplified with real-time procedural geometry
generation.&lt;&#x2F;p&gt;
&lt;p&gt;Country Slice uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy Engine&lt;&#x2F;a&gt; for entity management, and has
recently &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1464304076074672144?s=20&quot;&gt;been ported to OpenGL&lt;&#x2F;a&gt; (using
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brendanzab&#x2F;gl-rs&#x2F;tree&#x2F;master&#x2F;gl&quot;&gt;gl-rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt;). It is being developed openly on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;anopara&#x2F;country-slice&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the development of Country Slice on
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Travelling merchant&quot; &#x2F;&gt;
&lt;em&gt;A merchant paused in their travels&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In November, Veloren started a new initiative to help new developers learn more
about the codebase; the Veloren Reading Club. You can watch the
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DpXwYEe_LWo&quot;&gt;first&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=n8XayRvVBEs&quot;&gt;second&lt;&#x2F;a&gt; sessions
now. Hats were merged, and a major rewrite of the server-hosting section of the
book happened. New textures were made for item drops. Some concept art was
created for what massive cities could look like. Dynamic weather was added, and
you can &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=MZwfaohynvc&quot;&gt;watch that in action&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Experience sharing went through a large overhaul to evenly distribute EXP gained
across groups. The difficulty of dungeons was adjusted to be more balanced for
new players. Persistence was added to skills, and measures were put in place to
help with future migrations to new skill trees. Work was done on site2, the
system that is used to generate structures procedurally. This will help
make the variance more dynamic by adding more parameters that can be adjusted.
In December, Veloren will release 0.12, hopefully with some holiday spirit!&lt;&#x2F;p&gt;
&lt;p&gt;November&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-144&quot;&gt;#144&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-145&quot;&gt;#145&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-146&quot;&gt;#146&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-147&quot;&gt;#147&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-148&quot;&gt;#148&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bendyworm&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bauxite.itch.io&#x2F;bendyworm&quot;&gt;BENDYWORM&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bendyworm&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bendyworm.gif&quot; alt=&quot;An animation of a platformer where the entire world bends around you&quot; &#x2F;&gt; &lt;em&gt;Watch out! The entire world bends around you!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;BENDYWORM (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bauxitedev&#x2F;bendyworm&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&#x2F;status&#x2F;1466034866122891266&quot;&gt;Twitter&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&quot;&gt;@bauxitedev&lt;&#x2F;a&gt; is a platformer with a twist: the entire
world bends and twists around you as your progress through the level. Why?
Because you&#x27;re inside of a gigantic worm, and worms are bendy.&lt;&#x2F;p&gt;
&lt;p&gt;The game was made for GitHub Game Off 2021, and uses &lt;code&gt;godot-rust&lt;&#x2F;code&gt; behind the
scenes.&lt;&#x2F;p&gt;
&lt;p&gt;The game is available for free on &lt;a href=&quot;https:&#x2F;&#x2F;bauxite.itch.io&#x2F;bendyworm&quot;&gt;itch.io&lt;&#x2F;a&gt;, and the source
code is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bauxitedev&#x2F;bendyworm&quot;&gt;GitHub&lt;&#x2F;a&gt;.  (Windows only for now, Linux
build available soon)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;r742z1&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&#x2F;&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&#x2F;status&#x2F;1466034866122891266&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;molecoole&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;Molecoole&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#molecoole&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;&lt;img src=&quot;molecoole.png&quot; alt=&quot;A molecoole and some enemies&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Molecoole is a top-down shooter roguelike where you build your character from
different atoms. Each atom has a unique ability to provide tons of variety
between playthroughs. It&#x27;s made using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy
Engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month Molecoole launched its &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;&quot;&gt;Steam page&lt;&#x2F;a&gt;! They also added
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kiss_mrton&#x2F;status&#x2F;1459567092995403776&quot;&gt;new weapons&lt;&#x2F;a&gt; and new &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kiss_mrton&#x2F;status&#x2F;1457022034949689351&quot;&gt;bosses&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In December their main focus will be on audio and polishing the game.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hydrofoil-generation&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hydrofoil-generation&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hgs5.jpg&quot; alt=&quot;hgs_screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hydrofoil-generation.com&#x2F;&quot;&gt;Hydrofoil Generation&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;HydrofoilGenerationSailing&#x2F;&quot;&gt;Facebook&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;DtKgt2duAy&#x2F;&quot;&gt;Discord&lt;&#x2F;a&gt;) is a
realistic sailing&#x2F;foiling inshore simulator in development for PC&#x2F;Steam that
will put you in the driving seat of modern competitive sailing.&lt;&#x2F;p&gt;
&lt;p&gt;November was dedicated to the launch of the &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1448820&#x2F;Hydrofoil_Generation&#x2F;&quot;&gt;Steam Store&lt;&#x2F;a&gt; page and
associated &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;CfmCLr19Hbs&quot;&gt;trailer&lt;&#x2F;a&gt; showcasing Hydrofoil Generation&#x27;s custom Rust
engine in motion for the first time. Constant tweaks to the boat behavior and
addition of gameplay features are ongoing as the planned Q2 2022 Steam Early
Access release gets closer and closer.&lt;&#x2F;p&gt;
&lt;p&gt;December 2021 will see an attempt to port the rendering backend of the game from
DirectX 11 to WGPU to widen the number of platforms reachable with a
particular interest in the Steam Deck that seems to offer the perfect controller
layout for such a demanding simulation as Hydrofoil Generation.&lt;&#x2F;p&gt;
&lt;p&gt;You will be able to follow the progress of the port Mondays and Fridays on
&lt;a href=&quot;https:&#x2F;&#x2F;www.twitch.tv&#x2F;kunosstefano&quot;&gt;Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;idu&quot;&gt;Idu&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#idu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;idu.gif&quot; alt=&quot;idu&#x27;s new sprinkler in action&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Idu (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;PR3GgYYkym&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;epcc10&quot;&gt;@epcc10&lt;&#x2F;a&gt; is an upcoming game
centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;In November, a new major update was released that overhauled the automatic
watering system. In addition, an automatic stair builder and a grass-cutting
tool was added to reduce the tediousness of these common tasks.&lt;&#x2F;p&gt;
&lt;p&gt;A free playable alpha demo is available at &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;PR3GgYYkym&quot;&gt;Idu&#x27;s Discord server&#x27;s
demo-download channel&lt;&#x2F;a&gt;! Updates are posted to their
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UC1JmPXgbR5R2dCsM_QJGe1w&quot;&gt;Youtube&lt;&#x2F;a&gt; as well.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;combine-conquer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer.html&quot;&gt;Combine&amp;amp;Conquer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#combine-conquer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cac-crossing.png&quot; alt=&quot;items moving through the belt&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Combine&amp;amp;Conquer by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;I3ck&quot;&gt;Martin Buck&lt;&#x2F;a&gt; is a WIP strategy game about automation
similar to Satisfactory or Factorio.&lt;&#x2F;p&gt;
&lt;p&gt;This month Martin finished &lt;a href=&quot;https:&#x2F;&#x2F;buckmartin.de&#x2F;combine-and-conquer.html&quot;&gt;writing a detailed devlog&lt;&#x2F;a&gt; for the project
from the first commit up until now. A few dozen short posts cover various topics
including simulation of arms and conveyor belts with moving items, blueprints,
testing, rendering, save and load, tech tree and research, and multiplayer.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;qj03ji&#x2F;cnc&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;paddlepunks&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sovgott.itch.io&#x2F;paddlepunks&quot;&gt;PaddlePunks&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#paddlepunks&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;paddlepunks-rewind.gif&quot; alt=&quot;Pong, but one of the characters rewinds time to figure out which of the other player&#x27;s ballusions is actually real&quot; &#x2F;&gt; &lt;em&gt;One of the
characters can spend super meter to rewind time, this is strong but pretty
situational.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;PaddlePunks is a versus tennis game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sov_gott_games&quot;&gt;Felix Windström&lt;&#x2F;a&gt;
with a diverse cast of characters and playstyles and online play with rollback
netcode.&lt;&#x2F;p&gt;
&lt;p&gt;Latest developments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Some engine work to improve performance on laptops with integrated GPUs&lt;&#x2F;li&gt;
&lt;li&gt;Balance updates to make the skeleton less overbearing&lt;&#x2F;li&gt;
&lt;li&gt;Presented the game at &lt;a href=&quot;https:&#x2F;&#x2F;watch.rustfest.global&#x2F;&quot;&gt;Rustfest&lt;&#x2F;a&gt; in an interactive
session.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can download and play the game now on &lt;a href=&quot;https:&#x2F;&#x2F;sovgott.itch.io&#x2F;paddlepunks&quot;&gt;itch.io&lt;&#x2F;a&gt;, or join
the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;cpPDeVcWxc&quot;&gt;Discord&lt;&#x2F;a&gt; to chat with the developer and other players.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shroom-kingdom&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shroomkingdom.net&#x2F;&quot;&gt;Shroom Kingdom&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shroom-kingdom&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Shroom Kingdom (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Shroom-Kingdom&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;SPZsgSe&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;shrm_kingdom&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an upcoming play-to-earn video game built with web
technologies running on the &lt;a href=&quot;https:&#x2F;&#x2F;near.org&quot;&gt;NEAR Blockchain&lt;&#x2F;a&gt;. It is a 2D
platformer, where players can also build their own levels and share them with
others.&lt;&#x2F;p&gt;
&lt;p&gt;Currently, a prototype of the game is in development. The game is written with
the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy game engine&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&#x2F;&quot;&gt;Rapier physics engine&lt;&#x2F;a&gt; and is
compiled to WebAssembly. The prototype is still very basic, but you can already
place and remove blocks and have a feeling about the physics recreation of the
original games.&lt;&#x2F;p&gt;
&lt;p&gt;In the past months, there also has been the SHRM token launch and a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;shrm_kingdom&#x2F;status&#x2F;1450362543608901634?s=20&quot;&gt;token
airdrop&lt;&#x2F;a&gt; for NEAR early adopters. The &lt;a href=&quot;https:&#x2F;&#x2F;whitepaper.shroomkingdom.net&#x2F;8_DAO.html&quot;&gt;Shroom Kingdom
DAO&lt;&#x2F;a&gt; is looking for people, who want to become involved and get paid
with their very own token.&lt;&#x2F;p&gt;
&lt;p&gt;To onboard new users to blockchain gaming, a &lt;a href=&quot;https:&#x2F;&#x2F;linkdrop.shroomkingdom.net&#x2F;&quot;&gt;linkdrop campaign&lt;&#x2F;a&gt;
is currently in development, where people can claim a small amount of NEAR token
to create their own wallet.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;tetra-0-6-7&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; 0.6.7&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra-0-6-7&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. This
month, version 0.6.7 was released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Updates to the gamepad backend, adding rumble support for a much wider variety
of controllers (including DualShock 4s)&lt;&#x2F;li&gt;
&lt;li&gt;Various bugfixes and docs improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, development has begun on version 0.7 - check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;issues&#x2F;297&quot;&gt;the planned
features and changes&lt;&#x2F;a&gt;, and feel free to suggest more!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine-v0-24-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; v0.24.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine-v0-24-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-overworld.gif&quot; alt=&quot;Oxygengine RPG game template&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The hottest HTML5 + WASM game engine for games written in Rust with web-sys.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt;, the creator of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;, spent the last two months on making:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;First few chapters of the book explaining how Oxygengine works in: &lt;a href=&quot;https:&#x2F;&#x2F;psichix.github.io&#x2F;Oxygengine&#x2F;&quot;&gt;Oxygengine
Essentials Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;New hardware-accelerated renderer based on Material Graphs (to allow making
faster and better quality game visuals - more about that in &lt;a href=&quot;https:&#x2F;&#x2F;psichix.github.io&#x2F;Oxygengine&#x2F;concepts&#x2F;ha-renderer&#x2F;introduction.html#material-graph-based-rendering&quot;&gt;Material Graph
based rendering&lt;&#x2F;a&gt; chapter).&lt;&#x2F;li&gt;
&lt;li&gt;New Overworld game module (which aims to provide all essential features needed
by RPG game developers, to let them focus on making an actual game).&lt;&#x2F;li&gt;
&lt;li&gt;New AI feature module (WIP) that integrates &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;emergent&quot;&gt;Emergent AI&lt;&#x2F;a&gt; crate with
the engine.&lt;&#x2F;li&gt;
&lt;li&gt;Plugin-based asset pipeline as well as support for LDtk software projects.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All of these changes mark the beginning of stabilizing phase of the engine. The
API more or less won&#x27;t change much - now the focus is put entirely on the
features that will push progress towards the Ignite visual game editor for
artists and game designers to use.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;the-raytracer-challenge&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakobwesthoff&#x2F;the_ray_tracer_challenge_in_rust&quot;&gt;The Raytracer Challenge&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-raytracer-challenge&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLy68GuC77sUTyOUvDhVboQoOlHoa4XrSO&quot;&gt;&lt;img src=&quot;the-raytracer-challenge.jpg&quot; alt=&quot;The Raytracer Challenge&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakobwesthoff&#x2F;the_ray_tracer_challenge_in_rust&quot;&gt;The Raytracer Challenge&lt;&#x2F;a&gt; is a project with the goal
to write a raytracer from scratch in Rust, while showing each step of the way
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLy68GuC77sUTyOUvDhVboQoOlHoa4XrSO&quot;&gt;as a weekly live coding session&lt;&#x2F;a&gt;. Everything is
documented, starting with implementing &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;xGEDQXBMdV4&quot;&gt;Vectors&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;RYALPW0pJr4&quot;&gt;Matrices&lt;&#x2F;a&gt; all the way to creating &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;HSgS_NQob2I&quot;&gt;Phong
Lighting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;November has been a busy month for the project with lots of visual changes in
the raytraced results:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;izzp4xZfcHI&quot;&gt;camera&lt;&#x2F;a&gt; was added to allow arbitrary views on
the &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;1l54RUGigtk&quot;&gt;World&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;3LinpB7ns60&quot;&gt;Basic animation support&lt;&#x2F;a&gt; came along allowing
the easy creation of video sequences.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;More realistic and life-like scenes due to &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;agqAUa1qgGo&quot;&gt;Shadow
Casting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;As a new basic body type &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;4y1aRPiH9Ko&quot;&gt;Planes&lt;&#x2F;a&gt; came to life.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rustacean-station-48&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;048-herbert-wolverson&#x2F;&quot;&gt;Rustacean Station 48&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustacean-station-48&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustacean-station.jpeg&quot; alt=&quot;Rustacean Station Logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;&quot;&gt;Rustacean Station&lt;&#x2F;a&gt; is a podcast about the Rust language.&lt;&#x2F;p&gt;
&lt;p&gt;In November, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;herberticus&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;048-herbert-wolverson&#x2F;&quot;&gt;was
interviewed&lt;&#x2F;a&gt; about game development in Rust. In this
episode, lots is discussed about existing game development engines, and how Rust
is breaking into this space with engines like Bevy, Amethyst, and RG3D. There is
also a discussion on the Entity Component System paradigm in comparison to
Object Oriented Programming.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-on-the-gpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raphlinus.github.io&#x2F;gpu&#x2F;2021&#x2F;11&#x2F;17&#x2F;prefix-sum-portable.html&quot;&gt;Rust on the GPU&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-on-the-gpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;In &lt;a href=&quot;https:&#x2F;&#x2F;raphlinus.github.io&#x2F;gpu&#x2F;2021&#x2F;11&#x2F;17&#x2F;prefix-sum-portable.html&quot;&gt;this blog post&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;levien.com&#x2F;&quot;&gt;Raph Levien&lt;&#x2F;a&gt; describes the current state
of coding on a graphics card. The post describes how going about writing custom
code still induces many issues in this day and age, and what modern technologies
can be used to help make this easier. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&quot;&gt;Rust-gpu&lt;&#x2F;a&gt; is mentioned as a possible way
to write compute shaders in a &amp;quot;real language&amp;quot;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-roguelike-tutorial&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rl-tut.jpg&quot; alt=&quot;ascii map and ui&quot; &#x2F;&gt;
&lt;em&gt;A nasty demon monster at the exit to Abyss&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;herberticus&quot;&gt;@herberticus&lt;&#x2F;a&gt; got a &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;chapter_75.html&quot;&gt;new 75th (!)
chapter&lt;&#x2F;a&gt; that shows how to generate a chaotic Voronoi-based city
plaza inhabited by dark elves and adds a new big demon enemy to guard the Abyss
portal.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can battle your way down to the Dark Elf Plaza,
and find the gateway to Abyss - but only if you can evade a hulking demon
and a horde of elves---with very little in the way of help offered.
Next up, we&#x27;ll begin to build the Abyss.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;hands-on-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hands-on-rust.com&quot;&gt;Hands-on Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hands-on-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hor-bonus.jpg&quot; alt=&quot;A screenshot of a game in a browser&quot; &#x2F;&gt;
&lt;em&gt;A Dungeon Crawler running in a browser&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Another update from &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;herberticus&quot;&gt;@herberticus&lt;&#x2F;a&gt; is a bonus article for the &lt;a href=&quot;https:&#x2F;&#x2F;hands-on-rust.com&quot;&gt;Hands-on
Rust&lt;&#x2F;a&gt; book: &lt;a href=&quot;https:&#x2F;&#x2F;hands-on-rust.com&#x2F;2021&#x2F;11&#x2F;06&#x2F;run-your-rust-games-in-a-browser-hands-on-rust-bonus-content&#x2F;&quot;&gt;&amp;quot;Run Your Rust Games in a Browser&amp;quot;&lt;&#x2F;a&gt; that guides the
reader through the basics of building and publishing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; games in
WebAssembly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;spv&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;SPV&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spv&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;spv-0.3.5.png&quot; alt=&quot;SPV-0.3.5 screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;SPV&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&quot;&gt;Albin Sjögren&lt;&#x2F;a&gt; is a calculator utility for working with astronomical
position and velocity data.&lt;&#x2F;p&gt;
&lt;p&gt;In the last month, a relative position and velocity calculation system has been
added. This is due to the inaccuracy of astronomic data. With this new method
that relies on the orbital elements of two body systems getting data for
multibody simulation is now possible.&lt;&#x2F;p&gt;
&lt;p&gt;Apart from this new equation set, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;SPV&lt;&#x2F;a&gt; now also has a more standard color
scheme based on the one GitHub uses. This month also came with numerous bug
fixes and a more concrete plan for future development.&lt;&#x2F;p&gt;
&lt;p&gt;For any feature requests, reach out to the developer on &lt;a href=&quot;https:&#x2F;&#x2F;discordapp.com&#x2F;users&#x2F;258254056185659392&quot;&gt;Discord&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pickpicpack-0-1-6&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.p43d.com&#x2F;pickpicpack&quot;&gt;PickPicPack&lt;&#x2F;a&gt; 0.1.6&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pickpicpack-0-1-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pickpicpack_0.1.6.gif&quot; alt=&quot;PickPicPack 0.1.6&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.p43d.com&#x2F;pickpicpack&quot;&gt;PickPicPack&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;p4ymak&#x2F;pickpicpack&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;p4ymak.gumroad.com&#x2F;l&#x2F;pickpicpack&quot;&gt;Gumroad&lt;&#x2F;a&gt;) by
&lt;a href=&quot;http:&#x2F;&#x2F;www.p43d.com&#x2F;p4ymak&quot;&gt;@p4ymak&lt;&#x2F;a&gt; is a tiny yet powerful utility for packing images into
rectangles with arbitrary aspect ratio.&lt;&#x2F;p&gt;
&lt;p&gt;It is useful for creating mood boards, daily art reports, presentations and
other collages.&lt;&#x2F;p&gt;
&lt;p&gt;Features so far:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Interactive loading&lt;&#x2F;li&gt;
&lt;li&gt;Scaling images to equal size&lt;&#x2F;li&gt;
&lt;li&gt;Optional margin between images&lt;&#x2F;li&gt;
&lt;li&gt;Custom aspect ratio; now you can set aspect ratio by text in any form&lt;&#x2F;li&gt;
&lt;li&gt;CLI; you can use it without GUI and embed it into your project manager tool&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite_splash.png&quot; alt=&quot;Graphite&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-development vector and raster graphics
editor built on a non-destructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;The previously announced Alpha release was delayed as core devs returned to
school - January is the new goal. Development now continues to pick up speed.
Design of the project website has continued for its launch soon, alongside the
Alpha release.&lt;&#x2F;p&gt;
&lt;p&gt;The project upgraded to the Rust 2021 edition and made big improvements to the
frontend TypeScript and web infrastructure. The editor UI is now fully
responsive at small window sizes. Unsaved document tabs display an &lt;code&gt;*&lt;&#x2F;code&gt; and warn
before closing the window. Ruler measurements now move and scale with the
document. And the new snapping system helps draw&#x2F;move shapes aligned with
others.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.design&quot;&gt;Try it right now in your browser.&lt;&#x2F;a&gt; Graphite is making
steady progress towards becoming a non-destructive, procedural graphics editor
suitable for replacing traditional 2D DCC applications. &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Join the
Discord&lt;&#x2F;a&gt; and get involved!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;solid-editor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;solidengine.org&#x2F;solid-editor&quot;&gt;Solid Editor&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#solid-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=GuVM3W9Pfdg&quot;&gt;&lt;img src=&quot;solid-editor.jpg&quot; alt=&quot;youtube preview: modelling tree&#x27;s branches using ball as a cursor&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=GuVM3W9Pfdg&quot;&gt;demo video&lt;&#x2F;a&gt; of using the editor&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;solidengine.org&#x2F;solid-editor&quot;&gt;Solid Editor&lt;&#x2F;a&gt; is &lt;a href=&quot;https:&#x2F;&#x2F;solidengine.org&quot;&gt;Solid Engine&lt;&#x2F;a&gt;&#x27;s custom-built voxel
graphics editor. It is designed to be a key part of the engine&#x27;s asset pipeline,
enabling the creation of game-ready voxel graphics assets. Since the engine part
is pretty far from being done, the author decided to release this editor as a
standalone application.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Besides being natively compatible with Solid Engine, the editor sports some
generally interesting and unique features.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;True WYSIWYG editing. The editor scene is rendered using Solid Engine&#x27;s path
tracer in real-time, yielding realistic lighting while editing.&lt;&#x2F;li&gt;
&lt;li&gt;The possibility to edit voxels directly in 3D, by using any brightly colored
ball as a 3D pointing device. Read more about the &lt;a href=&quot;https:&#x2F;&#x2F;solidengine.org&#x2F;ball-pointer&quot;&gt;Ball
Pointer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;A novel approach to editor tools. Instead of many different tools with
overlapping functionality (e.g. &amp;quot;draw square&amp;quot; vs. &amp;quot;select square&amp;quot;, or
&amp;quot;bucket fill&amp;quot; vs. &amp;quot;magic wand&amp;quot;) there is only one, a versatile Selection
tool. Different effects can be applied to the selected voxels, producing the
same results as regular editor tools. Combined with real-time effect
preview, the user experience is very similar to that of classic graphics
editors, with the added benefit of being able to tweak every edit before
applying it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;qrsu1n&#x2F;solid_editor_a_voxel_editor&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;pixels-0-8-0-space-invader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt; 0.8.0 👾&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pixels-0-8-0-space-invader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt; is a tiny hardware-accelerated pixel framebuffer. Its goals include
pixel-perfect rendering and custom shader pipelines for textures with direct
pixel access. It&#x27;s perfect for making 2D animations, games, and emulators.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.8.0 was released this month, bringing highly-anticipated support for
WASM targets, as well as support for Raspberry Pi 4. A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&#x2F;tree&#x2F;0.8.0&#x2F;examples&#x2F;minimal-web&quot;&gt;minimal example for web
browsers&lt;&#x2F;a&gt; is included to get you started. Full details are available
in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&#x2F;releases&#x2F;tag&#x2F;0.8.0&quot;&gt;release notes&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;quinn&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quinn-rs&#x2F;quinn&quot;&gt;Quinn&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#quinn&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quinn-rs&#x2F;quinn&quot;&gt;Quinn&lt;&#x2F;a&gt; is an async-enabled implementation of the state-of-the-art IETF QUIC
transport protocol, a robust foundation for real-time networking.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quinn-rs&#x2F;quinn&#x2F;releases&#x2F;tag&#x2F;0.8.0&quot;&gt;Quinn 0.8&lt;&#x2F;a&gt; introduces support for the final QUIC 1 specification
defined in &lt;a href=&quot;https:&#x2F;&#x2F;www.rfc-editor.org&#x2F;rfc&#x2F;rfc9000.html&quot;&gt;RFC 9000&lt;&#x2F;a&gt;. Other highlights include an improved CUBIC
congestion controller, a more ergonomic configuration API, and numerous
performance and robustness improvements.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt; is a fast, lightweight, and unopinionated archetypal ECS library.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#071&quot;&gt;Version 0.7&lt;&#x2F;a&gt; introduces several new features, including two new
query combinators, a &lt;code&gt;CommandBuffer&lt;&#x2F;code&gt; for recording operations to be applied to a
&lt;code&gt;World&lt;&#x2F;code&gt; at a future time, accessors for efficient random access within columns,
and a variant of &lt;code&gt;EntityBuilder&lt;&#x2F;code&gt; that clones its components and can therefore be
spawned from repeatedly. Other improvements include compatibility with 32-bit
MIPS and PPC, and introduction of a niche to &lt;code&gt;Entity&lt;&#x2F;code&gt; so that e.g.
&lt;code&gt;Option&amp;lt;Entity&amp;gt;&lt;&#x2F;code&gt; will not consume additional space.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot-rust-modules.png&quot; alt=&quot;module before&#x2F;after&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;godot-rust (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;FNudpBD&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a Rust library that provides bindings for the Godot game engine.&lt;&#x2F;p&gt;
&lt;p&gt;November has been a month of refactoring for godot-rust. The API was cleaned up
across different locations, reducing confusion and making the library more
accessible:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The module simplification (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;811&quot;&gt;#811&lt;&#x2F;a&gt;) continued initial efforts on the
module structure, such as shorter paths and avoidance of redundant re-exports.
Some differences between v0.9.3 and now can be seen in the above picture.&lt;&#x2F;li&gt;
&lt;li&gt;Several core symbols were renamed for consistency (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;815&quot;&gt;#815&lt;&#x2F;a&gt;):
&lt;code&gt;RefInstance&lt;&#x2F;code&gt; -&amp;gt; &lt;code&gt;TInstance&lt;&#x2F;code&gt; and &lt;code&gt;TypedArray&lt;&#x2F;code&gt; -&amp;gt; &lt;code&gt;PoolArray&lt;&#x2F;code&gt;, among others.&lt;&#x2F;li&gt;
&lt;li&gt;Another refactoring affects the &lt;code&gt;Variant&lt;&#x2F;code&gt; conversion methods (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;819&quot;&gt;#819&lt;&#x2F;a&gt;).
Instead of &lt;code&gt;Variant::to_i64()&lt;&#x2F;code&gt; which may silently fail and return a default
value (Godot behavior), the recommended method is now &lt;code&gt;Variant::to&amp;lt;T&amp;gt;()&lt;&#x2F;code&gt;. This
enables genericity and is more idiomatic in Rust, returning an &lt;code&gt;Option&lt;&#x2F;code&gt; to
indicate success or failure.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As a binding to a C++ library, one topic godot-rust has to deal with is the use
of &lt;code&gt;unsafe&lt;&#x2F;code&gt;, which sometimes boils down to a trade-off between safety and
ease-of-use. Even though Rust provides basic guidelines, there are different
philosophies on their execution, see &lt;a href=&quot;https:&#x2F;&#x2F;steveklabnik.com&#x2F;writing&#x2F;the-cxx-debate&quot;&gt;The CXX Debate&lt;&#x2F;a&gt; for an example. To
discuss how APIs interacting with Godot can be as ergonomic as possible while
preserving safety, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;808&quot;&gt;issue #808&lt;&#x2F;a&gt; was opened.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;navmesh-v0-12-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;navmesh&quot;&gt;NavMesh&lt;&#x2F;a&gt; v0.12.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#navmesh-v0-12-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;NavMesh crate is a pathfinding library for 2D and 3D games.&lt;&#x2F;p&gt;
&lt;p&gt;This month changes by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added NavGrid structure to find paths on grids.&lt;&#x2F;li&gt;
&lt;li&gt;Added NavFreeGrid structure to find paths on cells put in free layout manner
(used for example on clusters of cells rather than the condensed grid).&lt;&#x2F;li&gt;
&lt;li&gt;Added NavIslands structure to allow hierarchical pathfinding (used for
example with streamed navigation islands, such as other pathfinding
structures).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rust-cuda&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-GPU&#x2F;Rust-CUDA&quot;&gt;Rust CUDA&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-cuda&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-GPU&#x2F;Rust-CUDA&quot;&gt;Rust CUDA&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RDambrosio016&quot;&gt;Riccardo D&#x27;Ambrosio&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;qzv428&#x2F;announcing_the_rust_cuda_project_an_ecosystem_of&#x2F;&quot;&gt;newly-released
project&lt;&#x2F;a&gt; with the goal of making Rust a Tier-1 language
for fast GPU computing. There are still many bugs, and it&#x27;s in an early stage.&lt;&#x2F;p&gt;
&lt;p&gt;With this release comes a few crates. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;rustc_codegen_nvvm&quot;&gt;rustc_codegen_nvvm&lt;&#x2F;a&gt; for compiling Rust to
CUDA PTX code using rustc&#x27;s custom codegen mechanisms and the libnvvm CUDA
library. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;cust&quot;&gt;cust&lt;&#x2F;a&gt; for actually executing the PTX is a high-level wrapper for the
CUDA Driver API. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;cuda_builder&quot;&gt;cuda_builder&lt;&#x2F;a&gt; for easily building GPU crates. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;cuda_std&quot;&gt;cuda_std&lt;&#x2F;a&gt; is
the GPU-side standard library which complements rustc_codegen_nvvm. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;gpu_rand&quot;&gt;gpu_rand&lt;&#x2F;a&gt;
is a GPU-friendly random number generation. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;nvvm&quot;&gt;nvvm&lt;&#x2F;a&gt; is high-level bindings to
libnvvm, and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ptx_compiler&quot;&gt;ptx_compiler&lt;&#x2F;a&gt; is high-level bindings to the PTX compiler APIs,
which are currently incomplete. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;find_cuda_helper&quot;&gt;find_cuda_helper&lt;&#x2F;a&gt; is for finding CUDA on the
system. There are many other works in progress.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;r06n8o&#x2F;rust_shooter_another_update&quot;&gt;Rust Shooter progress report&lt;&#x2F;a&gt;:
GLTF import, more character animations and weapons, and underwater effects.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Z0lKsABSwME&quot;&gt;A video of the new record for speedrunning the Way of Rhea demo&lt;&#x2F;a&gt;
(spoilers!)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ql65sw&#x2F;alpha_release_of_necrophaser&quot;&gt;Necrophaser&lt;&#x2F;a&gt; is a recently alpha-released Top-Down Shooter made with Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1459493244648280071&quot;&gt;A new spaceship for Stellary 2&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;qw5e36&#x2F;endless_trial_simple_2d_bullethell_game&quot;&gt;Endless Trial&lt;&#x2F;a&gt; is a 2D bullet-hell game made in Tetra.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lokathor.github.io&#x2F;gba-from-scratch&#x2F;introduction.html&quot;&gt;GBA From Scratch&lt;&#x2F;a&gt; is a tutorial on how to code for the Game Boy Advance
using Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phychic-owl.medium.com&#x2F;rust-project-ping-pong-game-665766cc45ed&quot;&gt;Ping Pong Tutorial&lt;&#x2F;a&gt; is a walkthrough on creating a ping pong game in Rust.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other engine updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rg3d-book.github.io&quot;&gt;rg3d now has a cheat&#x2F;guide book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&#x2F;status&#x2F;1462804219719831552&quot;&gt;miniquad got a GL2 backend&lt;&#x2F;a&gt; for even better support
of old and&#x2F;or virtual systems.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ziyasal&#x2F;natura&quot;&gt;natura&lt;&#x2F;a&gt; is a simple and efficient spring animation library.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to handpicked reddit&#x2F;twitter&#x2F;urlo&#x2F;etc threads that provide
useful information --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;qkb77k&#x2F;ecs_as_general_container&quot;&gt;&amp;quot;Using an ECS as a general-purpose storage container?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;qmdw2a&#x2F;where_to_start&quot;&gt;&amp;quot;Where to start?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;qzhx8u&#x2F;status_of_wasm32_support&quot;&gt;&amp;quot;status of wasm32 support in existing game frameworks&#x2F;engines&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;qze1v0&#x2F;can_rust_do_what_c_server_can&quot;&gt;&amp;quot;Can Rust do what any C++ game server can at a similar speed?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;r0yia7&#x2F;crossplatform_game_browser_ios&quot;&gt;&amp;quot;Developing a cross-platform game for browser, Ios, and Android using rust?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help reach
the 0.1 Alpha release.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;rcmz17&#x2F;this_month_in_rust_gamedev_28_november_2021&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1469009470420398082&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #27 - October 2021</title>
            <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/027/</link>
            <guid>https://gamedev.rs/news/027/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 27th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#other-news&quot;&gt;Other News&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#meeting-minutes&quot;&gt;Meeting Minutes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;027&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The tenth Rust Gamedev Meetup happened in October. You can watch the recording
of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;ta2HY4lD3iM&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups take place on
the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;1f02d66b&quot;&gt;November 13th&lt;&#x2F;a&gt;, fill
out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hydrofoil-generation-sailing&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;HydrofoilGenerationSailing&#x2F;&quot;&gt;Hydrofoil Generation Sailing&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hydrofoil-generation-sailing&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hydrofoil1_1024.png&quot; alt=&quot;hgs_screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;HydrofoilGenerationSailing&#x2F;&quot;&gt;Hydrofoil Generation Sailing&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;HydrofoilGenerationSailing&quot;&gt;Facebook&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;DtKgt2duAy&quot;&gt;Discord&lt;&#x2F;a&gt;) is a realistic sailing&#x2F;foiling
inshore simulator in development for PC&#x2F;Steam that will put you in the
driving seat of modern competitive sailing.&lt;&#x2F;p&gt;
&lt;p&gt;The game is the brain child of industry veteran Stefano Casillo
(of Assetto Corsa fame) and features a custom made 3D engine based on DirectX11
via winapi-rs.&lt;&#x2F;p&gt;
&lt;p&gt;An engine conversion to WGPU is currently under evaluation in order to
guarantee an easier port to platform such as Steam Deck or even mobile in the
future.&lt;&#x2F;p&gt;
&lt;p&gt;Early Access release on Steam is expected in mid 2022.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-process&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-process&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;the_process.gif&quot; alt=&quot;An animated gif showing an engineer shooting rockets&quot; &#x2F;&gt;
&lt;em&gt;Firing Carrockets™!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt; by @setzer22 is an upcoming game about factory building, process
management, and carrot production, built with Rust using the Godot game engine!&lt;&#x2F;p&gt;
&lt;p&gt;For the past two months the project has seen some slow but steady progress. Work
has started towards a simple combat system that will have the engineers fighting
hordes of robots to defend their factories.&lt;&#x2F;p&gt;
&lt;p&gt;This month the game has seen the following changes and improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New assets like
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1436722776186966023&quot;&gt;a robot enemy&lt;&#x2F;a&gt;
(concept by @Kath_Art_ic, modelling by @mkdirsrc),
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1439970905220960259&quot;&gt;a shoulder mounted gun&lt;&#x2F;a&gt;
and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1455232744573788162&quot;&gt;new machine icons&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;A new system to attach armor-like models to in-game characters.&lt;&#x2F;li&gt;
&lt;li&gt;Foundations of a combat system.&lt;&#x2F;li&gt;
&lt;li&gt;Carrockets™! 🥕🚀 &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1445098719326658562&quot;&gt;(1)&lt;&#x2F;a&gt;
and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1454787650657951745&quot;&gt;(2)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;libracity-city-planning-on-a-needle&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;djeedai.github.io&#x2F;libracity&#x2F;&quot;&gt;LibraCity&lt;&#x2F;a&gt; - city planning on a needle!&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#libracity-city-planning-on-a-needle&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;libracity.png&quot; alt=&quot;LibraCity screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;djeedai.github.io&#x2F;libracity&#x2F;&quot;&gt;LibraCity&lt;&#x2F;a&gt; is a puzzle city planning game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;djeedai&quot;&gt;@djeedai&lt;&#x2F;a&gt; where you need to build
a city while balancing it on a needle (the center of the board). It was built for
&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;libra-city&quot;&gt;Ludum Dare 49&lt;&#x2F;a&gt; using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;, and is a first-time use of the engine.&lt;&#x2F;p&gt;
&lt;p&gt;Post-jam, a webassembly version was added and published, which now allows
&lt;a href=&quot;https:&#x2F;&#x2F;djeedai.github.io&#x2F;libracity&#x2F;&quot;&gt;playing the game online&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The code source is freely &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djeedai&#x2F;libracity&quot;&gt;available on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chaos-theory-gamified-double-pendulum-simulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;chaos-theory-1&quot;&gt;Chaos Theory&lt;&#x2F;a&gt; - gamified double pendulum simulator&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#chaos-theory-gamified-double-pendulum-simulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;chaos-theory.gif&quot; alt=&quot;Chaos Theory Gif&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;chaos-theory-1&quot;&gt;Chaos Theory&lt;&#x2F;a&gt; is a tiny HTML5 game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;necauqua&quot;&gt;@necauqua&lt;&#x2F;a&gt; where you can draw and
simulate pendulums with a few goals and restrictions per level.
It was done for &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;chaos-theory-1&quot;&gt;Ludum Dare 49&lt;&#x2F;a&gt; with a help of a small custom
engine with Rust being compiled to WASM and drawing shapes to an HTML5 canvas.&lt;&#x2F;p&gt;
&lt;p&gt;You can play the game &lt;a href=&quot;https:&#x2F;&#x2F;ld49.necauqua.dev&quot;&gt;online&lt;&#x2F;a&gt;, and the source code
is available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;necauqua&#x2F;chaos-theory&quot;&gt;here&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;necauqua&#x2F;ld-game-engine&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;me-and-my-unicycle&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;niklme.itch.io&#x2F;me-and-my-unicycle&quot;&gt;Me And My Unicycle&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#me-and-my-unicycle&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;me_and_my_unicycle_cover.png&quot; alt=&quot;Me And My Unicycle screenshot&quot; &#x2F;&gt;
&lt;em&gt;Can you handle this unstable ride?&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;niklme.itch.io&#x2F;me-and-my-unicycle&quot;&gt;Me And My Unicycle&lt;&#x2F;a&gt; is a 2D physics game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; submitted to Ludum
Dare 49. It is build with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;me_and_my_unicycle&quot;&gt;the code can be found on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Following the LD49 theme &amp;quot;unstable&amp;quot;, the game is about riding a unicycle
with challenging controls. Try making it through each level without falling.&lt;&#x2F;p&gt;
&lt;p&gt;All assets are self-made. The developer had a lot of fun recording audio and
sound effects!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crunda&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;crunda&quot;&gt;Crunda&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crunda&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;crunda.gif&quot; alt=&quot;image&#x2F;crunda gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;crunda&quot;&gt;Crunda&lt;&#x2F;a&gt; is a game created in 48 hours for Ludum Dare 49.&lt;&#x2F;p&gt;
&lt;p&gt;Its unique wobbly planets are controlled by a Rust library.&lt;&#x2F;p&gt;
&lt;p&gt;Crunda was created by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;SLCMB&#x2F;&quot;&gt;Dan Slocombe&lt;&#x2F;a&gt;, came third, and was rated the
most fun competition game! The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danslocombe&#x2F;crunda_ludum_dare_49&quot;&gt;sources can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;berry-run&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bombfuse.itch.io&#x2F;berry-run&#x2F;&quot;&gt;Berry Run&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#berry-run&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;berrycover.png&quot; alt=&quot;berry&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bombfuse.itch.io&#x2F;berry-run&#x2F;&quot;&gt;Berry Run&lt;&#x2F;a&gt; is a community stream meme game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;@bombfuse_dev&lt;&#x2F;a&gt; built on top of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald Engine&lt;&#x2F;a&gt;. It&#x27;s centered around the Twitch streamer &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;berrybebopboy&quot;&gt;@berrybebopboy&lt;&#x2F;a&gt; and
was built in about 2 days.&lt;&#x2F;p&gt;
&lt;p&gt;Help Berry run as far as they can without tripping and falling!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dodge the babies (no kids, no babies), evade the grannies
(they&#x27;re heading to the grand canyon),
and don&#x27;t touch belf (belf is sacred).
Also a bunch of dunces left their logs and rocks lying around,
better not to touch those, it would be rude to touch someone&#x27;s logs and rocks.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;lonely-star&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;Lonely Star&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lonely-star&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;lonely-star.png&quot; alt=&quot;Lonely Star screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;Lonely Star&lt;&#x2F;a&gt; is a 2D &#x27;endless runner&#x27; game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&quot;&gt;@17cupsofcoffee&lt;&#x2F;a&gt;, featuring
simple generative music. It was built with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; back in February 2020,
for Weekly Game Jam 135.&lt;&#x2F;p&gt;
&lt;p&gt;This month, it was made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;lonely-star&quot;&gt;open-source&lt;&#x2F;a&gt;, and received a
small update to improve the UI and fix a few bugs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;soldank&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;soldank&quot;&gt;Soldank&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#soldank&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;smokku&#x2F;soldank&#x2F;master&#x2F;sshot.png&quot; alt=&quot;Soldank&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;soldank&quot;&gt;Soldank&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;soldank&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;cTaC4UtqE6&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;smokkku&quot;&gt;@smokku&lt;&#x2F;a&gt;
is an open source clone of &lt;a href=&quot;http:&#x2F;&#x2F;soldat.pl&#x2F;&quot;&gt;Soldat&lt;&#x2F;a&gt; engine. It aims for full compatibility
with original game files, mods and gameplay with modernized
graphics engine and multiplayer networking code.&lt;&#x2F;p&gt;
&lt;p&gt;Recent developments include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Engine&#x2F;game code split&lt;&#x2F;li&gt;
&lt;li&gt;Command Line Interface&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;rhai.rs&#x2F;&quot;&gt;Rhai&lt;&#x2F;a&gt; scripting&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;hecs_rapier&lt;&#x2F;code&gt; integration&lt;&#x2F;li&gt;
&lt;li&gt;Key&#x2F;mouse-binding support&lt;&#x2F;li&gt;
&lt;li&gt;Soldat&#x27;s &lt;code&gt;.cfg&lt;&#x2F;code&gt; files support&lt;&#x2F;li&gt;
&lt;li&gt;Custom debug shapes rendering&lt;&#x2F;li&gt;
&lt;li&gt;Performance degradation fix&lt;&#x2F;li&gt;
&lt;li&gt;Refactored code to build on &lt;code&gt;hecs&lt;&#x2F;code&gt; ECS&lt;&#x2F;li&gt;
&lt;li&gt;ECS entities debug UI&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The developer have also written a blog post:
&#x27;&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abadcafe.wordpress.com&#x2F;2021&#x2F;11&#x2F;01&#x2F;engine-and-scripting&#x2F;&quot;&gt;Engine and scripting&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&#x27;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graph-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vrixyz.github.io&#x2F;graph_nav&#x2F;&quot;&gt;Graph Game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graph-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graph_game.gif&quot; alt=&quot;image&#x2F;gameplay of the game: circle and triangles&quot; &#x2F;&gt;
&lt;em&gt;Navigating the graph map can be stressful&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vrixyz.github.io&#x2F;graph_nav&#x2F;&quot;&gt;Graph Game&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Vrixyz&#x2F;graph_nav&quot;&gt;GitHub&lt;&#x2F;a&gt;)
uses &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt; as its engine. You can play it from your
&lt;a href=&quot;https:&#x2F;&#x2F;vrixyz.github.io&#x2F;graph_nav&#x2F;&quot;&gt;browser&lt;&#x2F;a&gt; - click on colored triangles,
guess the rules and survive as long as possible!&lt;&#x2F;p&gt;
&lt;p&gt;Development has just begun, and the future of the project is not clear -
the developer welcomes you to come and discuss next steps on the game&#x27;s
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;ZeRkj8pD4n&quot;&gt;Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n27&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor-capsule.jpg&quot; alt=&quot;way of rhea capsule image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n27&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle adventure with hard puzzles and forgiving
mechanics. It is being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Latest developments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Way of Rhea now has a &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n27&quot;&gt;free demo available on Steam&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Way of Rhea was shown at &lt;a href=&quot;https:&#x2F;&#x2F;west.paxsite.com&#x2F;&quot;&gt;PAX West&lt;&#x2F;a&gt; this year (as were a couple
other Rust games!), and will also be showcased at &lt;a href=&quot;https:&#x2F;&#x2F;www.magwest.org&#x2F;&quot;&gt;MAGWest&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;A new trailer showing off new level art &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=46ELQYaH0uw&quot;&gt;was published&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Additional animation work, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1448056148138119169&quot;&gt;visuals&lt;&#x2F;a&gt;, and puzzles have been
added to the game&lt;&#x2F;li&gt;
&lt;li&gt;Improvements were made to the undo system, the tutorial level, and the
dialogue system in response to user feedback&lt;&#x2F;li&gt;
&lt;li&gt;Some Proton compatibility problems were fixed, some visual glitches were
fixed, and support was added for adaptvie vsync&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can stay up to date on the latest developments of Way of Rhea by
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;?utm_campaign=tmirgd&amp;amp;utm_source=n27&quot;&gt;following it on Steam&lt;&#x2F;a&gt;, or signing up for
&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;newsletter&#x2F;signup&quot;&gt;the mailing list.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;paddlepunks&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sovgott.itch.io&#x2F;paddlepunks&quot;&gt;PaddlePunks&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#paddlepunks&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;paddlepunks-gameplay.gif&quot; alt=&quot;Animated gameplay that looks like pong mixed with an anime fighting game&quot; &#x2F;&gt;
&lt;em&gt;A round between a player and the AI set to Hard&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;PaddlePunks is a versus tennis game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sov_gott_games&quot;&gt;Felix Windström&lt;&#x2F;a&gt;
with a diverse cast of characters and playstyles and online play with rollback
netcode. The game takes cues from both fighting games and arcade classics, and
besides netplay supports local play against another human or several levels of
AI.&lt;&#x2F;p&gt;
&lt;p&gt;You can download and play the game now on &lt;a href=&quot;https:&#x2F;&#x2F;sovgott.itch.io&#x2F;paddlepunks&quot;&gt;itch.io&lt;&#x2F;a&gt;, or
join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;cpPDeVcWxc&quot;&gt;Discord&lt;&#x2F;a&gt; to chat with the developer and other
players. Updates are also posted to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sov_gott_games&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;An early-morning sunrise&quot; &#x2F;&gt;
&lt;em&gt;An early-morning sunrise&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In October, Veloren hit 10,000 commits, as well as 10,000 members on the Discord
server! Shrubs got added, along with improvements to rivers, and the
addition of waterfalls. There have been efforts to diagnose some network issues
that have been causing downloads to not work for some people. Crafting is going
through overhauls on the backend. &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=60kt915avjI&quot;&gt;New aurora shaders&lt;&#x2F;a&gt;
were added as well.&lt;&#x2F;p&gt;
&lt;p&gt;Initial ideas are being discussed to try and improve the
amount of asset files that have to be downloaded with each update of the game,
which will help improve the 200MB that has to be downloaded after each nightly
update. New jewelery has been added, and sneaking is being improved to make
agents in the game react better to it. Ongoing worldgen improvemnts are also
being made as we head into November.&lt;&#x2F;p&gt;
&lt;p&gt;October&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-140&quot;&gt;#140&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-141&quot;&gt;#141&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-142&quot;&gt;#142&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-143&quot;&gt;#143&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;amethyst-starting-fresh&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;amethyst--starting-fresh&quot;&gt;Amethyst - Starting Fresh&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-starting-fresh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;amethyst-logo.png&quot; alt=&quot;amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, the developers of the Amethyst game engine
&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;amethyst--starting-fresh&quot;&gt;announced that they would be winding down development&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The Amethyst Foundation, however, lives on! It will be shifting focus
to support the wider Rust game development ecosystem, through
engine-agnostic libraries, curated guides&#x2F;lists, and more inititives yet
to be announced.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;all-is-cubes-0-3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kpreid&#x2F;all-is-cubes&#x2F;&quot;&gt;All is Cubes&lt;&#x2F;a&gt; 0.3.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#all-is-cubes-0-3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;all-is-cubes.jpg&quot;&gt;&lt;img src=&quot;all-is-cubes.jpg&quot; alt=&quot;Screenshot of All is Cubes&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;All is Cubes (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kpreid&#x2F;all-is-cubes&#x2F;&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;all-is-cubes&quot;&gt;Crates.io&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kpreid&quot;&gt;kpreid&lt;&#x2F;a&gt;
is a game&#x2F;engine for worlds made of blocks made of voxels. It is intended to be
usable both as an engine or rendering library, or as a game with built-in
editor&#x2F;programming functionality (genre(s) to be determined). While the project
is still highly incomplete and API-unstable, the 0.3.0 release marks a lot of
now-usable functionality (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kpreid&#x2F;all-is-cubes&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#030-2021-10-09&quot;&gt;changelog&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;UI: mouselook, multiple example scenes, inventory with stacks, and rendering
to image files.&lt;&#x2F;li&gt;
&lt;li&gt;Simulation&#x2F;mechanics: character collision against arbitrary voxel shapes,
much-improved light propagation, transactional state updates (all-or-nothing,
internally order-independent), and “behaviors” attached to game objects for
scripting&#x2F;animation.&lt;&#x2F;li&gt;
&lt;li&gt;Rendering: high-voxel-count blocks (incomplete, but usable for text as seen in
the above screenshot), “smooth lighting” (interpolated across faces), frustum
culling, and correct sRGB-versus-linear color handling.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The next planned milestone is saving&#x2F;loading.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra-0-6-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; 0.6.6&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra-0-6-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. After
a few quiet months, version 0.6.6 has been released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A big overhaul of the keyboard API, with better support for international
layouts&lt;&#x2F;li&gt;
&lt;li&gt;Lots of new functions for manipulating the game window&lt;&#x2F;li&gt;
&lt;li&gt;A long-requested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;examples&#x2F;ecs.rs&quot;&gt;ECS example&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Bugfixes and docs improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gamedev-mini-symposium&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=OzUsPi4kHes&quot;&gt;GameDev Mini Symposium&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gamedev-mini-symposium&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=OzUsPi4kHes&quot;&gt;&lt;img src=&quot;gms-talk.png&quot; alt=&quot;An early-morning sunrise&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click the image to watch the talk&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Back in September, the University of Glasgow&#x27;s GameLab held a &#x27;GameDev Mini
Symposium&#x27; online. One of the featured speakers was
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;herberticus&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt;, writer of &#x27;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&#x2F;&quot;&gt;Hands-on Rust&lt;&#x2F;a&gt;&#x27;,
who gave a talk on using Rust for game development.&lt;&#x2F;p&gt;
&lt;p&gt;This talk is now available to &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=OzUsPi4kHes&quot;&gt;view on Herbert&#x27;s YouTube channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;spv&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;SPV&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spv&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;spv-0.1.0.png&quot; alt=&quot;SPV-0.1.0 screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;SPV&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&quot;&gt;Albin Sjögren&lt;&#x2F;a&gt;
is a calculator utility for working with astronomical position and velocity data.&lt;&#x2F;p&gt;
&lt;p&gt;What was added for the first alpha release:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new UI&lt;&#x2F;li&gt;
&lt;li&gt;Corrected vector normalizing&lt;&#x2F;li&gt;
&lt;li&gt;JSON and TXT exporting&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The primary features that are being worked on:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A crate version&lt;&#x2F;li&gt;
&lt;li&gt;Output file structure&lt;&#x2F;li&gt;
&lt;li&gt;Batch processing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For any feature requests, reach out to the developer on &lt;a href=&quot;https:&#x2F;&#x2F;discordapp.com&#x2F;users&#x2F;258254056185659392&quot;&gt;Discord&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wgpu-0-11-release&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;-0.11 release&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-0-11-release&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-webgl2.png&quot; alt=&quot;bevy webgl2 via wgpu&quot; &#x2F;&gt;
&lt;em&gt;experimental Bevy branch running on WebGL2 via wgpu&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The team is happy to announce the release of wgpu-0.11 and naga-0.7.
Details can be found on the &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;10&#x2F;07&#x2F;release-0.11.html&quot;&gt;gfx-rs blog&lt;&#x2F;a&gt;. The most exciting feature
is WebGL2 support. With some caveats, users no longer need to wait for
WebGPU in the browsers in order to deploy on the Web. Support is still
a bit rough, and patches come out regularly, but most examples work.&lt;&#x2F;p&gt;
&lt;p&gt;@kvark also visited &lt;a href=&quot;https:&#x2F;&#x2F;rustlang.la&#x2F;&quot;&gt;Rust LA Meetup&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;vimeo.com&#x2F;632377558&quot;&gt;talk about Naga&lt;&#x2F;a&gt;
and the history of processing shaders with Rust.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rend3-0-2-release&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&#x2F;rend3&quot;&gt;rend3&lt;&#x2F;a&gt;-0.2 Release&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rend3-0-2-release&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rend3-scifi.jpg&quot; alt=&quot;rend3-scifi&quot; &#x2F;&gt;
&lt;em&gt;Improved shadows and rendering with rend3 0.2&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;rend3 is a 3D rendering library that focuses on having an easy to use interface
without sacrificing performance or customizability.&lt;&#x2F;p&gt;
&lt;p&gt;As part of their monthly release schedule, the developers are excited to
announce the release of rend3-0.2. The most prominent change is the ability
to use fully customizable materials. Any combination of data and textures can
now be used as a material for custom render routines. This unties the user
from PBR-based materials.&lt;&#x2F;p&gt;
&lt;p&gt;Along with the customizability that comes with this change, the CPU time
required to render a complex scene is 7x less due to highly optimal data
structures. For more information see &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=F0wGz5UJTrY&quot;&gt;this talk&lt;&#x2F;a&gt; at the Rust
graphics meetup.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;rend3&quot;&gt;v0.2 version&lt;&#x2F;a&gt; was published on crates.io
(&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;rend3&quot;&gt;docs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&#x2F;rend3&#x2F;tree&#x2F;v0.2&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt;). The 0.3 release is
just a week away and further improves customizability.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hecs-rapier-0-11-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;hecs_rapier&quot;&gt;hecs_rapier&lt;&#x2F;a&gt; 0.11.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hecs-rapier-0-11-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;hecs_rapier&quot;&gt;hecs_rapier&lt;&#x2F;a&gt; is a physics engine for hecs ECS.
It is a direct port of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;bevy_rapier&quot;&gt;bevy_rapier2d&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Recent development added joints and physics_hooks support.
This makes &lt;code&gt;hecs_rapier&lt;&#x2F;code&gt; feature complete, with &lt;code&gt;bevy_rapier2d&lt;&#x2F;code&gt; feature parity.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-atmosphere-0-1-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JonahPlusPlus&#x2F;bevy_atmosphere&quot;&gt;bevy_atmosphere&lt;&#x2F;a&gt; 0.1.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-atmosphere-0-1-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_atmosphere.png&quot; alt=&quot;dawn in bevy_atmosphere&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JonahPlusPlus&#x2F;bevy_atmosphere&quot;&gt;bevy_atmosphere&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JonahPlusPlus&#x2F;bevy_atmosphere&quot;&gt;GitHub&lt;&#x2F;a&gt;) by @JonahPlusPlus
is a procedural sky plugin for Bevy.&lt;&#x2F;p&gt;
&lt;p&gt;By adding the &lt;code&gt;AtmospherePlugin&lt;&#x2F;code&gt;, users get a skybox around the camera in their scene.
Users can also set the appearance of the sky adding a &lt;code&gt;AtmosphereMat&lt;&#x2F;code&gt; resource.&lt;&#x2F;p&gt;
&lt;p&gt;0.1.0 and 0.1.1 have been released on &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_atmosphere&quot;&gt;crates.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;0.1.1 changes the default position of the sun to be in the sky,
so only the plugin is needed to get a Unity-like sky.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-kira-audio&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-kira-audio&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; plugin that integrates the audio library &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt;
into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; applications.&lt;&#x2F;p&gt;
&lt;p&gt;In the latest version &lt;code&gt;0.6.0&lt;&#x2F;code&gt;, you can load files with custom semantic
durations and play looped audio with an intro. The plugin now also cleans up
old sound instances. Following Bevy, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt; is now licensed under
dual MIT + Apache 2.0, and the library will no longer crash on systems without
an audio device.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-verlet&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ManevilleF&#x2F;bevy_verlet&quot;&gt;bevy_verlet&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-verlet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_verlet.gif&quot; alt=&quot;bevy_verlet&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ManevilleF&#x2F;bevy_verlet&quot;&gt;bevy_verlet&lt;&#x2F;a&gt; is a lib for projects using &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;
providing a plugin to use &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Verlet_integration&quot;&gt;verlet integration&lt;&#x2F;a&gt;
physics. Very useful for cloth simulation and joints, and less expensive than
complex physics engine, it is a nice addition to 2D or 3D projects. Making good
use of the Entity-Component-System architecture of the bevy engine, any entity
can become a &lt;code&gt;VerletPoint&lt;&#x2F;code&gt; and have physics applied to it.&lt;&#x2F;p&gt;
&lt;p&gt;The crate also provides &lt;em&gt;sticks&lt;&#x2F;em&gt; which constrains the points in order to create
strings or cloth. With its modularity, you may customize the physics precision
(iterations), the gravity, and the physics time step to use.&lt;&#x2F;p&gt;
&lt;p&gt;New features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Query parallel batching and custom batching size&lt;&#x2F;li&gt;
&lt;li&gt;Global documentation&lt;&#x2F;li&gt;
&lt;li&gt;Fixed issues with timesteps&lt;&#x2F;li&gt;
&lt;li&gt;Improved examples&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You may contact the author on Twitter at &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ManevilleF&quot;&gt;@ManevilleF&lt;&#x2F;a&gt; or join the
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ManevilleF&#x2F;status&#x2F;1437350669858611202?s=20&quot;&gt;discussion&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-pen-tool&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eliotbo&#x2F;bevy_pen_tool&quot;&gt;Bevy Pen Tool&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-pen-tool&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_pen_tool2.gif&quot; alt=&quot;bevy_pen_tool2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Bevy Pen Tool is a plugin that helps developers make 2D paths using
Bezier curves. Its user interface provides functionality for:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;spawning Bezier curves,&lt;&#x2F;li&gt;
&lt;li&gt;moving end points and control points of Bezier curves,&lt;&#x2F;li&gt;
&lt;li&gt;linking individual Bezier curves to each other,&lt;&#x2F;li&gt;
&lt;li&gt;grouping curves,&lt;&#x2F;li&gt;
&lt;li&gt;saving and loading paths as look-up tables
(typically for animations and agent movement),&lt;&#x2F;li&gt;
&lt;li&gt;generating arbitrary 2D meshes that fill the interior of a path
using the Lyon crate,&lt;&#x2F;li&gt;
&lt;li&gt;generating a mesh that follows a path like a road,&lt;&#x2F;li&gt;
&lt;li&gt;saving meshes and roads in &amp;quot;.obj&amp;quot; format,&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A stable version of Bevy Pen Tool should come out as a crate shortly
after Bevy 0.6 shows up. Here is a link to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eliotbo&#x2F;bevy_pen_tool&quot;&gt;repo for more
information&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sparsey&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sparsey&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&quot;&gt;@LechintanTudor&lt;&#x2F;a&gt; is a sparse set-based Entity Component System
(ECS) with component storage grouping, granular component change detection,
fallible systems and beautiful syntax.&lt;&#x2F;p&gt;
&lt;p&gt;The latest release (0.4) adds support for optional system parameters, which
allows &lt;code&gt;Option&amp;lt;Res&amp;lt;T&amp;gt;&amp;gt;&lt;&#x2F;code&gt; and &lt;code&gt;Option&amp;lt;ResMut&amp;lt;T&amp;gt;&amp;gt;&lt;&#x2F;code&gt; to be used in system functions.&lt;&#x2F;p&gt;
&lt;p&gt;This release also features a refactored &lt;code&gt;ComponentStorage&lt;&#x2F;code&gt; which makes adding,
removing and swapping components faster, swapping being especially important
since it enables component grouping, a features that makes certain queries
specified by the user extremely fast.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, some implementation details were hidden from the public API and the
&lt;code&gt;#[must_use]&lt;&#x2F;code&gt; attribute was added to functions whose results should not be
discarded.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot-rust.png&quot; alt=&quot;godot-rust logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;godot-rust (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;FNudpBD&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a Rust library that provides bindings for the Godot game engine.&lt;&#x2F;p&gt;
&lt;p&gt;Recent developments have added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;804&quot;&gt;foundational support to async&lt;&#x2F;a&gt;
that enables users to make use of the Rust async runtimes with the Godot Engine
(thanks to chitoyuu for the PR).&lt;&#x2F;p&gt;
&lt;p&gt;In addition to the foundational support, lyonbeckers was kind enough to
include a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;book&#x2F;pull&#x2F;44&quot;&gt;new recipe in the User Guide&lt;&#x2F;a&gt; that covers
how to configure async with &lt;code&gt;tokio&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The team also merged several smaller bug fixes in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;791&quot;&gt;#791&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;795&quot;&gt;#795&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;800&quot;&gt;#800&lt;&#x2F;a&gt; and is making steady progress towards version 0.10.0.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, the team has recently added a &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;book&#x2F;projects.html&quot;&gt;third party project&lt;&#x2F;a&gt;
section in the book to help promote games, applications, and libraries&#x2F;tools
that are working with godot-rust. If you have a project that you would like to
be included, please feel free to reach out to the godot-rust team.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- One-liners for plan items that haven&#x27;t got their own sections. --&gt;
&lt;ul&gt;
&lt;li&gt;Other game updates:
&lt;ul&gt;
&lt;li&gt;LD49 &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;unbalanced-brawl&quot;&gt;Unbalanced Brawl&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yopox&#x2F;LD49&quot;&gt;GitHub&lt;&#x2F;a&gt;)
is an autochess with ever-changing rules in the shop.&lt;&#x2F;li&gt;
&lt;li&gt;LD49 &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;chevalchemy-a-hoof-of-concept&quot;&gt;Chevalchemy&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xlambein&#x2F;ldjam49&quot;&gt;GitHub&lt;&#x2F;a&gt;) is a game where you play
as a horse alchemist working for the great Neighcolas Flamel.&lt;&#x2F;li&gt;
&lt;li&gt;LD49 &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;49&#x2F;procedural-spider&quot;&gt;Proc Spider&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;darthdeus&#x2F;procedural-spider&quot;&gt;GitHub&lt;&#x2F;a&gt;)
is a small game where you play a big spider chasing small spiders.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mk48.io&quot;&gt;mk48.io&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SoftbearStudios&#x2F;mk48&quot;&gt;GitHub&lt;&#x2F;a&gt;) is
an online multiplayer naval combat game, in which you take command
of a ship and sail your way to victory.&lt;&#x2F;li&gt;
&lt;li&gt;Tweets about &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&quot;&gt;Bitgun&lt;&#x2F;a&gt; progress:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1449485172114591749&quot;&gt;new inventory and weapon systems&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1449742242734772225&quot;&gt;new item pickup&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1450922044065992708&quot;&gt;jumping zombies&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1451088866052489218&quot;&gt;death animation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;pqbvv1&#x2F;sharing_saturday_380&#x2F;hdbx5xt&quot;&gt;An update about the progress of Rust version of Nox Futura&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;A Recall Singularity&lt;&#x2F;a&gt; shared a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=nsjnCZslNdg&quot;&gt;YouTube video&lt;&#x2F;a&gt;
that shows new shooting sounds, camera movement, and asteroid dragging.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other learning material updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=G-IuH6R-yD8&quot;&gt;A video by TanTan&lt;&#x2F;a&gt;
about rewriting a voxel game three times: in Unity, Rust (no engine) and Bevy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other engine updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;qena0b&#x2F;media_rg3d_game_engine_live_coding&quot;&gt;A recording of the first rg3d live-coding stream&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The first prototype of &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;porky11&#x2F;vngine-rs&quot;&gt;VNgine&lt;&#x2F;a&gt; - Visual Novel Engine -
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;pyvcen&#x2F;first_prototype_of_vngine&quot;&gt;was announced on &#x2F;r&#x2F;rust&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Also, a general purpose graphics engine &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ElhamAryanpur&#x2F;BlueEngine&quot;&gt;Blue Engine&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;q4rana&#x2F;blue_engine&quot;&gt;was announced on &#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other tooling updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TomasKralCZ&#x2F;Fearless-NES&quot;&gt;Fearless-NES&lt;&#x2F;a&gt; is a NES emulator written using egui, macroquad, and GilRs.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;FishFight-The-Prequel&#x2F;tree&#x2F;main&#x2F;fishsteam&quot;&gt;FishSteam&lt;&#x2F;a&gt; is a tool for deploying SteamWorks-enabled steam builds
for Windows&#x2F;macOS&#x2F;Linux without SteamWorks SDK on a CI.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Other library updates:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;crevice&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#080---2021-10-26&quot;&gt;Crevice v0.8&lt;&#x2F;a&gt;
brings a direct support for many math libraries
and allows to generate GLSL source from structs.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AlbinSjoegren&#x2F;SPV&quot;&gt;SPV&lt;&#x2F;a&gt; 0.0.6 is the second pre-alpha release of a celestial object position
and velocity calculator.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;thunderdome&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;Thunderdome&lt;&#x2F;a&gt; generational arena library released
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;thunderdome&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;0.4..0.5 versions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;qeue67&#x2F;announcing_egui_015&quot;&gt;egui 0.15&lt;&#x2F;a&gt; brings:
syntax highlighting, horizontal scrolling, new monospace font,
and a new opt-in glow backend for eframe.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&#x2F;status&#x2F;1447961523696066564&quot;&gt;New puffin-egui&#x2F;puffin-viewer&lt;&#x2F;a&gt;
allows selection and manipulation of multiple frames.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QodotPlugin&#x2F;shalrath&quot;&gt;Shalrath&lt;&#x2F;a&gt; is a fully-safe Rust representation and nom parser for Quake map files.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;There is currently discussion ongoing around bringing back the
Rust GameDev Working Group&#x27;s regular meetings.&lt;&#x2F;p&gt;
&lt;p&gt;If you are interested in getting involved, please join the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;discussions&#x2F;115&quot;&gt;discussion thread&lt;&#x2F;a&gt;
on the working group&#x27;s issue tracker!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;async-game-server-design&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;tokio-tungstenite-async-game-server-design&#x2F;65996&quot;&gt;Async Game Server Design&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#async-game-server-design&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;On the Rust user forum, there was &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;tokio-tungstenite-async-game-server-design&#x2F;65996&quot;&gt;a post&lt;&#x2F;a&gt;
asking how to use async&#x2F;await (more specifically, &lt;code&gt;tokio&lt;&#x2F;code&gt; and
&lt;code&gt;tokio_tungstenite&lt;&#x2F;code&gt;) to develop a multiplayer game server.
The responses contain some useful ideas and advice which
may be helpful for other people&#x27;s projects!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help reach
the 0.1 Alpha release.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;qoy5rv&#x2F;this_month_in_rust_gamedev_27_october_2021&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1457461009833238528&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #26 - September 2021</title>
            <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/026/</link>
            <guid>https://gamedev.rs/news/026/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;p&gt;Welcome to the 26th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#rust-graphics-meetup-1&quot;&gt;Rust Graphics Meetup #1&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#rust-gamedev-podcast-6&quot;&gt;Rust GameDev Podcast #6&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;026&#x2F;#discussions&quot;&gt;Discussions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The ninth Rust Gamedev Meetup happened in September. You can watch the recording
of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;TH3AErcNcTY&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups take place on
the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-graphics-meetup-1&quot;&gt;Rust Graphics Meetup #1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-graphics-meetup-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;graphics-meetup.png&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Rust Graphics Meetup is an online gathering where rustaceans share
technical details of their work related to graphics and compute,
not affiliated to any particular stack.
The pilot edition has happened on Oct 2nd! Check out the talks:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=m0JgF5Wb-dA&quot;&gt;gfx-rs Lessons Learned&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;@kvark&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;meetup&#x2F;blob&#x2F;main&#x2F;Meeting01&#x2F;GfxLessonsLearned.pdf&quot;&gt;slides&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=F0wGz5UJTrY&quot;&gt;rend3 Architecture: Efficient, Customizable Rendering&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cwfitzgerald&quot;&gt;@cwfitzgerald&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;meetup&#x2F;blob&#x2F;main&#x2F;Meeting01&#x2F;rend3s_Architecture_-_Efficient_Customizable_Rendering.pdf&quot;&gt;slides&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Yzr9va5UtiE&quot;&gt;Blub - Interactive GPU Fluid Solver&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wumpf&quot;&gt;@wumpf&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;meetup&#x2F;blob&#x2F;main&#x2F;Meeting01&#x2F;Blub_-_Quick_tour_through_a_GPU_fluid_solver.pdf&quot;&gt;slides&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Learn more at the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;meetup&quot;&gt;gfx meetup repo&lt;&#x2F;a&gt;.
Thanks everyone for tuning in and helping to make this happen!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;q08byh&#x2F;videos_from_rust_graphics_meetup_1&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1444326130035666953&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-gamedev-podcast-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-remco-and-basz&quot;&gt;Rust GameDev Podcast #6&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-podcast-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;podcast.jpeg&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-remco-and-basz&quot;&gt;The sixth episode&lt;&#x2F;a&gt; is an interview with Remco and Basz, creators of
&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;&quot;&gt;Mun&lt;&#x2F;a&gt;. Programming language creation is discussed, along with challenges
and what future developments are incoming from the &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;&quot;&gt;Mun project&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Listen and Subscribe from the following platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast (simplecast)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.apple.com&#x2F;gb&#x2F;podcast&#x2F;rust-game-dev&#x2F;id1526304768&quot;&gt;Apple Podcasts&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;show&#x2F;7HRfGnTcXkLkQd9fxJbDGj&quot;&gt;Spotify&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feeds.simplecast.com&#x2F;C6NQglnL&quot;&gt;RSS Feed&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.google.com&#x2F;feed&#x2F;aHR0cHM6Ly9mZWVkcy5zaW1wbGVjYXN0LmNvbS9DNk5RZ2xuTA&quot;&gt;Google Podcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bitgun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;BITGUN&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bitgun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;&lt;img src=&quot;bitgun.jpeg&quot; alt=&quot;Gameplay screenshot with lots of zombies and a zombie boss&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;BITGUN (&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1673940&#x2F;BITGUN&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logloggames&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;XrGZQkq&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logloggames&quot;&gt;@LogLogGames&lt;&#x2F;a&gt; is an action
roguelike zombie shooter with lots of blood and guns, similar to games like
Hotline Miami, Nuclear Throne, and Heat Signature. The game is built using Godot
and Rust (via &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;&quot;&gt;godot-rust&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;They recently re-worked the in-game UI using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;godot-egui&quot;&gt;godot-egui&lt;&#x2F;a&gt;, allowing much easier custom widgets such as
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1444072221681635333&quot;&gt;drag &amp;amp; drop on items between inventory slots&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LogLogGames&#x2F;status&#x2F;1444072221681635333&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;weegames&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weegames&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;weegames.jpg&quot; alt=&quot;Handful of minigames including hedgehogs and raspberries&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt; is a fast-paced minigame collection.
The Windows version of the game has been rewritten to use Macroquad,
so now the web and downloadable versions of the game share the same codebase.
Development for the web version has moved to the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yeahross0&#x2F;weegames&quot;&gt;Weegames Github&lt;&#x2F;a&gt; repository.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;An odd structure in the woods&quot; &#x2F;&gt; &lt;em&gt;An odd structure in the woods&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In September, Veloren hosted its largest release party ever! At peak, 181 players
were playing on the server together. You can read about all the changes to 0.11
in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;release-0-11&#x2F;&quot;&gt;the release blog&lt;&#x2F;a&gt;, and be sure to watch the
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=l1oOjvaWJlw&quot;&gt;release trailer&lt;&#x2F;a&gt;! During the release party, several devs
spoke about the changes, which you can watch &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=J5Xz-vbE27Q&quot;&gt;here&lt;&#x2F;a&gt;. This
release party was the first one to handle the high player load with no issues,
and give hope for much larger servers in the future.&lt;&#x2F;p&gt;
&lt;p&gt;Shaderc was replaced with Naga early on in the month. This was the result of
over a year of work. Hitboxes are in the process of being overhauled to handle
non-cylindrical targets better. Improvements were made to how the cursor selects
objects in game. As always, lots of experimental work is being done to the
economic system. Cultist raiders were added, which means that raiding parties
will now attack nearby settlements. This is a great example of how the realtime
simulation is starting to become more visible to players.&lt;&#x2F;p&gt;
&lt;p&gt;September&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-136&quot;&gt;#136&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-137&quot;&gt;#137&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-138&quot;&gt;#138&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-139&quot;&gt;#139&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;harvest-hero-origins-pax-west-2021&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&quot;&gt;Harvest Hero Origins&lt;&#x2F;a&gt; @ PAX West 2021&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero-origins-pax-west-2021&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hho_pax.jpg&quot; alt=&quot;hho @ pax&quot; &#x2F;&gt;
&lt;em&gt;Gemdrop Games booth at PAX West 2021&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&quot;&gt;Harvest Hero Origins&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CJRbxQn3d9&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GemdropGames&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is an arcade wave defense game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GemdropGames&quot;&gt;Gemdrop Games&lt;&#x2F;a&gt;,
built in Rust on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Gemdrop Games recently took Harvest Hero Origins to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GemdropGames&#x2F;status&#x2F;1433819047481659394&quot;&gt;PAX West 2021&lt;&#x2F;a&gt;
and had a very positive response from most of the players!
Being able to watch people play the game was extremely valuable,
the developers were able to see pain points in UI&#x2F;UX design
and can now fix them without worry.
They were also able to see what players find fun about controlling each hero,
which helps with the next hero planning in the full release of the game.&lt;&#x2F;p&gt;
&lt;p&gt;Harvest Hero Origins is still planned to release by the end of 2021,
please wishlist it on &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&quot;&gt;Steam&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;molecoole&quot;&gt;Molecoole&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#molecoole&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;molecoole_first.gif&quot; alt=&quot;Connecting to different atoms&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Molecoole is a topdown action roguelite where you connect with different atoms
to create the strongest Molecoole to defeat the baddies! Molecoole was created
by two brothers: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kiss_mrton&quot;&gt;Márton&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;FrenetiqDan&quot;&gt;Dániel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In Molecoole the strongest focus is about making different combos by connecting
atoms. The original version was made in Unity for a game jam, but they decided
to make an actual game out of it using the Bevy engine. It currently includes
their own implementation for 2D animation, collision detection, and particles.
In September, one of the main development areas was making the game nicer to
play, so they introduced the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelfairley&#x2F;ezing&quot;&gt;ezing&lt;&#x2F;a&gt; crate and also implemented slowing the
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kiss_mrton&#x2F;status&#x2F;1434189320865341444&quot;&gt;game time&lt;&#x2F;a&gt;. They are using the &lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&quot;&gt;LDtk&lt;&#x2F;a&gt; editor to make the level sections for the
procedural generation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;circle-race&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kuviman.itch.io&#x2F;circle-race&quot;&gt;Circle Race&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#circle-race&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;circle-race.jpg&quot; alt=&quot;circle race&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Circle Race was made by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&quot;&gt;@kuviman&lt;&#x2F;a&gt; for &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;trijam-135&quot;&gt;TriJam 135&lt;&#x2F;a&gt;, where you needed to create
a game in three hours. The theme was &amp;quot;Circles&amp;quot;. You are a circle, connected with
two other &amp;quot;thruster&amp;quot; circles. You play inside a circle, consisting of &amp;quot;tire&amp;quot;
circles. Circle around it to find your best circle time!&lt;&#x2F;p&gt;
&lt;p&gt;Made using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&quot;&gt;@kuviman&lt;&#x2F;a&gt;&#x27;s own engine &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&#x2F;geng&#x2F;&quot;&gt;geng&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;phyn7z&#x2F;circle_race_game_made_in_3_hours_for_trijam&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;monke-pizza&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kuviman.itch.io&#x2F;monke-pizza&quot;&gt;Monke Pizza&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#monke-pizza&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;monke-pizza.jpg&quot; alt=&quot;monke pizza&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Game made by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&quot;&gt;@kuviman&lt;&#x2F;a&gt; for &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;vimjam2&quot;&gt;VimJam 2&lt;&#x2F;a&gt;. The theme for this jam was &amp;quot;Boss&amp;quot; and
the limitation was &amp;quot;On The Edge&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Monke Pizza is an online multiplayer monke pizza restaurant simulator. You are
always on the edge of being fired. That is &lt;em&gt;if&lt;&#x2F;em&gt; you work here. Otherwise, you are
on the edge of being hired. Because that is how BOSS is bossing.&lt;&#x2F;p&gt;
&lt;p&gt;Made using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&quot;&gt;@kuviman&lt;&#x2F;a&gt;&#x27;s own engine &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&#x2F;geng&#x2F;&quot;&gt;geng&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;idu&quot;&gt;Idu&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#idu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;idu.jpg&quot; alt=&quot;idu&#x27;s titlescreen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Idu (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;PR3GgYYkym&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;epcc10&quot;&gt;@epcc10&lt;&#x2F;a&gt;
is an upcoming game centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;In September, the project previously codenamed &amp;quot;garden&amp;quot; has been renamed to
&amp;quot;idu&amp;quot;! In Idu, every plant is continuously formed by the simulation. There are
unique responses from a plant&#x27;s surroundings and your care. Simulated leaves and
shoots grow into plants with a mind of their own. Here is the changelog of Demo Version
4:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed freezing when help menu was displayed&lt;&#x2F;li&gt;
&lt;li&gt;Added support for all older Ubuntu versions from 16.04&lt;&#x2F;li&gt;
&lt;li&gt;Fixed crashing when roots extended over the world border&lt;&#x2F;li&gt;
&lt;li&gt;Pressing ESC in menus acts as a back button&lt;&#x2F;li&gt;
&lt;li&gt;Fixed the issue where pruning didn&#x27;t work on the first day after loading the game&lt;&#x2F;li&gt;
&lt;li&gt;Fixed the game choosing integrated GPU even when a discrete one was available&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A playable alpha demo has been released and is freely available
at &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;PR3GgYYkym&quot;&gt;Idu&#x27;s Discord server&#x27;s #demo-download channel&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum-online&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum Online&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum-online&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum.jpg&quot; alt=&quot;Some players fishing at the beach&quot; &#x2F;&gt;
&lt;em&gt;It&#x27;s a good day for fishing...&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum Online&lt;&#x2F;a&gt; is a micro-multiplayer online role-playing game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt;.
The game server is written in Rust, and the official client is being developed
in Unity.&lt;&#x2F;p&gt;
&lt;p&gt;A few new features and lots of fixes were released to players this month, including
item enchantments and the mining skill! Crafting has been expanded as well, and
there are a ton of new monsters to fight and gear pieces to create.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;36&quot;&gt;#36: Item Enchantments&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;37&quot;&gt;#37: Audio Sources And Other Stuff&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;38&quot;&gt;#38: Mining&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rpg-cli-v1-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facundoolano&#x2F;rpg-cli&quot;&gt;rpg-cli&lt;&#x2F;a&gt; v1.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rpg-cli-v1-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rpg-cli.png&quot; alt=&quot;agent stats and a fight with a spider in ~&#x2F;dev&#x2F;facundoolano&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facundoolano&#x2F;rpg-cli&quot;&gt;rpg-cli&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facundoolano&quot;&gt;@facundoolano&lt;&#x2F;a&gt; is a minimalist computer RPG written in Rust.
Its command-line interface can be used as a cd replacement
where you randomly encounter enemies as you change directories.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the v1.0 version was released.
Some of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facundoolano&#x2F;rpg-cli&#x2F;releases&quot;&gt;updates&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New magic rings.&lt;&#x2F;li&gt;
&lt;li&gt;A bunch of new quests including ring-related ones.&lt;&#x2F;li&gt;
&lt;li&gt;Stat increasing stones.&lt;&#x2F;li&gt;
&lt;li&gt;Sorcerer enemy class.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;good-web-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;good-web-game&quot;&gt;good-web-game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#good-web-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;supported_platforms.svg&quot; alt=&quot;supported platforms&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;good-web-game&quot;&gt;good-web-game&lt;&#x2F;a&gt; has been released on crates.io, together with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; 0.6.1!
ggez is a lightweight cross-platform game framework for making 2D games
with minimum friction, with an API inspired by Love2D. good-web-game is a
subset of ggez, which is based upon &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; and can therefore run natively
on the web, mobile and of course desktop as well.&lt;&#x2F;p&gt;
&lt;p&gt;good-web-game was originally created to run &lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.itch.io&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; on the web. However,
as Zemeroth switched from using ggez to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;&quot;&gt;macroquad&lt;&#x2F;a&gt; the project was
discontinued, until recently. In search of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues&#x2F;962&quot;&gt;a new graphics backend for ggez&lt;&#x2F;a&gt;
the ggez team now picked up development again and released a massive update,
updating good-web-game for compatability to ggez 0.6, expanding its
functionality.&lt;&#x2F;p&gt;
&lt;p&gt;With only &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PSteinhaus&#x2F;PSteinhaus.github.io&#x2F;blob&#x2F;main&#x2F;ggez&#x2F;web-examples&#x2F;README.md#ggez-animation-example&quot;&gt;a single change in boilerplate code&lt;&#x2F;a&gt; many ggez 0.6 games can now be
directly ported to good-web-game. Yet, it&#x27;s no drop in replacement for ggez
as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;good-web-game#differences&quot;&gt;several key differences remain&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot-rust.png&quot; alt=&quot;godot-rust logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;godot-rust (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;FNudpBD&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a Rust library that provides bindings for the Godot game engine.&lt;&#x2F;p&gt;
&lt;p&gt;In the last month, a lot of documentation has been added to the book. The new
entries in &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;book&#x2F;faq.html&quot;&gt;FAQ&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;book&#x2F;recipes.html&quot;&gt;Recipes&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;book&#x2F;gdnative-overview&#x2F;architecture.html&quot;&gt;Game Architecture&lt;&#x2F;a&gt;
don&#x27;t focus on specific APIs, but put them into a bigger context and highlight
typical challenges encountered in practice.&lt;&#x2F;p&gt;
&lt;p&gt;Besides smaller bugfixes, the library itself added support for &lt;code&gt;serde&lt;&#x2F;code&gt;
serialization of core types (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&#x2F;pull&#x2F;743&quot;&gt;#743&lt;&#x2F;a&gt;, thanks to Waridley).&lt;&#x2F;p&gt;
&lt;p&gt;In terms of automation and tooling, September was a very productive month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Translation of Godot&#x27;s documentation based on &lt;code&gt;[bbcode]&lt;&#x2F;code&gt; to RustDoc with
intra-doc links, making Godot APIs much more readable and discoverable.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Refactoring of GitHub Actions CI, allowing quick and precise feedback for
contributors.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Automation of latest documentation, now hosted under
&lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;docs&quot;&gt;godot-rust.github.io&#x2F;docs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As the godot-rust community keeps growing, the project can now be found
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GodotRust&quot;&gt;on Twitter&lt;&#x2F;a&gt; with the GodotRust handle.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;emerald&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#emerald&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;emd_texture_hotreload.gif&quot; alt=&quot;hotreload&quot; &#x2F;&gt;
&lt;em&gt;Built in texture hot reloading, just call &lt;code&gt;emd.loader().hotreload()&lt;&#x2F;code&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;@bombfuse&lt;&#x2F;a&gt;
is a 2D game engine focused on being super portable and easy-to-use.&lt;&#x2F;p&gt;
&lt;p&gt;Currently supported platforms are:
Windows, Linux (WIP gamepad support), macOS (WIP gamepad support),
Web, Android (WIP audio, gamepad Support),
&lt;a href=&quot;http:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;8cWxOPs&quot;&gt;GameShell&lt;&#x2F;a&gt;,
and even &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&#x2F;status&#x2F;1444100458260299778&quot;&gt;WearOS&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Recently added features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Texture hot reloading (sound hot reloading is coming soon!).&lt;&#x2F;li&gt;
&lt;li&gt;Cross-platform file saving&#x2F;loading.
This is essential for games, basically allows the user to save
their files to the platform specific save directory.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; has slowly been growing, both in contributor size and feature sets
recently. If any of this interests you and you&#x27;d like to contribute,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&#x2F;issues&quot;&gt;feel free to grab a task&lt;&#x2F;a&gt;,
fork and PR!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;starframe&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&#x2F;&quot;&gt;Starframe&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#starframe&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;starframe-islands.jpeg&quot; alt=&quot;physically-connected groups of primitives are framed with rectangles&quot; &#x2F;&gt;
&lt;em&gt;Grouping bodies into disjoint &amp;quot;islands&amp;quot;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&#x2F;&quot;&gt;Starframe&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&quot;&gt;@molentum&lt;&#x2F;a&gt; is a work-in-progress game engine for physics-y
sidescrolling 2D games.&lt;&#x2F;p&gt;
&lt;p&gt;This month, a lot of work was done on optimizing the physics engine.
Most importantly, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&#x2F;status&#x2F;1432441648890449920&quot;&gt;spatial partitioning was added&lt;&#x2F;a&gt; to speed up
collision detection. Also notably, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&#x2F;status&#x2F;1438877808412008450&quot;&gt;a graph algorithm was
implemented&lt;&#x2F;a&gt; to divide the world into disjoint islands,
enabling some parallelism and skipping of computations.&lt;&#x2F;p&gt;
&lt;p&gt;Starframe&#x27;s physics is now very close to game-ready, and it no longer makes
sense to work on the engine without a concrete project to use it.
Thus, work has begun on a platformer based around connecting things with ropes.
More details to be shown soonish!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;arcana&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;arcana&quot;&gt;Arcana&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#arcana&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;arcana-tanks-multiplayer.gif&quot; alt=&quot;two synchronized views on tanks players-controlled tanks shooting each other &quot; &#x2F;&gt;
&lt;em&gt;Two clients connected to the same server&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;arcana&quot;&gt;Arcana&lt;&#x2F;a&gt; is ECS based game engine focused on simplicity and performance.&lt;&#x2F;p&gt;
&lt;p&gt;It recently got huge progress towards multiplayer support.
Traditional client-server systems were added and used in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;arcana&#x2F;tree&#x2F;master&#x2F;examples&#x2F;tanks&quot;&gt;&amp;quot;Tanks&amp;quot; example&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Clients send only command queue to the server and server sends game world updates
to the clients. Engine supports multiple players per client.
For example, players may be added for each active input device.&lt;&#x2F;p&gt;
&lt;p&gt;To allow wide variety of genres player is not attached to one specific entity
and may control many.
In RTS player may control all their units and will send commands for each one.&lt;&#x2F;p&gt;
&lt;p&gt;Gameplay system that consumes commands doesn&#x27;t even need to be aware of netcode.
Either way, it just drains command queue of an entity and utilizes them.
That system must not be run on clients at all.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;arcana&quot;&gt;Arcana&lt;&#x2F;a&gt; is very early work-in-progress and may not always work
out-of-the-box atm, but stability improvements are expected next month.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d-v0-23&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; v0.23&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d-v0-23&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=3tOdwmRWLKw&quot;&gt;&lt;img src=&quot;rg3d_video.jpg&quot; alt=&quot;rg3d 0.23 feature highlights video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;A feature highlights &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=3tOdwmRWLKw&quot;&gt;video&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;mrdimas&quot;&gt;Patreon&lt;&#x2F;a&gt;)
is a game engine that aims to be easy to use and provide a large
set of out-of-the-box features.
This month &lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;general&#x2F;2021&#x2F;09&#x2F;13&#x2F;0.23-feature-highlights.html&quot;&gt;v0.23 was released&lt;&#x2F;a&gt;. Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Physically based rendering (PBR) with metallic workflow.&lt;&#x2F;li&gt;
&lt;li&gt;High dynamic range (HDR) rendering pipeline &amp;amp; textures.&lt;&#x2F;li&gt;
&lt;li&gt;Custom shaders and materials.&lt;&#x2F;li&gt;
&lt;li&gt;Emission maps - allows you to define glowing parts using emission map.&lt;&#x2F;li&gt;
&lt;li&gt;Gamma correction, manual&#x2F;auto exposure, and color grading.&lt;&#x2F;li&gt;
&lt;li&gt;Lots of the editor&#x27;s improvements: material editor,
unified material pipeline for terrains, improved inspector, etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;general&#x2F;2021&#x2F;09&#x2F;13&#x2F;0.23-feature-highlights.html&quot;&gt;blog post&lt;&#x2F;a&gt; or
the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=3tOdwmRWLKw&quot;&gt;feature highlights video&lt;&#x2F;a&gt; for more info.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;pnhbe4&#x2F;media_rg3d_023&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-rpg-toolkit&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;olefasting&#x2F;rust_rpg_toolkit&quot;&gt;Rust RPG Toolkit&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-rpg-toolkit&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;capstone.png&quot; alt=&quot;A dialogue window&quot; &#x2F;&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;paz35s&#x2F;capstone&quot;&gt;Capstone&lt;&#x2F;a&gt; - a WIP game that uses Rust RPG Toolkit&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;olefasting&#x2F;rust_rpg_toolkit&quot;&gt;Rust RPG Toolkit&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;olefasting&quot;&gt;@olefasting&lt;&#x2F;a&gt; is an engine for creating
highly customizable and user modable action 2D action RPG&#x27;s using Rust amd JSON.&lt;&#x2F;p&gt;
&lt;p&gt;The project started out as a part of the &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;paz35s&#x2F;capstone&quot;&gt;Capstone&lt;&#x2F;a&gt; game but was separated
as it grew in scope.
It uses JSON files for most of its game data and resources specification
so that games can be created with very little interaction with the Rust code.
This has the benefit of making the end product very easy to modify,
both for non-developers involved in the development process, and by end users.
Modification can be done either by modifying a game&#x27;s data files directly,
or by creating user modules, which are supported out-of-the-box.&lt;&#x2F;p&gt;
&lt;p&gt;Note that this is in early and very heavy development: the API is subject to
constant change, as it has newly transitioned from being a game project
to a library.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;pcrddz&#x2F;rpg_toolkit&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gdc-rust-for-game-tooling-by-dan-olson&quot;&gt;GDC: Rust for Game Tooling by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;olson_dan&#x2F;status&#x2F;1438600242962698256&quot;&gt;Dan Olson&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gdc-rust-for-game-tooling-by-dan-olson&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gdc-talk.jpg&quot; alt=&quot;Title card&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;olson_dan&#x2F;status&#x2F;1438600242962698256&quot;&gt;Dan Olson&lt;&#x2F;a&gt; gave a talk at the Game Developers Conference in
July about using Rust for game tooling. The talk describes how Rust is being
integrated at Treyarch. Dan gives a &amp;quot;sales pitch&amp;quot; about several Rust benefits,
and goes over several case studies about where it is used. It makes appearances
in the Treyarch image packer, and is used in 3 major tools, and around 20
smaller one-off tools. Around 120k lines of Rust code have been written for the
projects.&lt;&#x2F;p&gt;
&lt;p&gt;If you have a GDC Vault account, you can watch &lt;a href=&quot;https:&#x2F;&#x2F;gdcvault.com&#x2F;play&#x2F;1027315&quot;&gt;the video&lt;&#x2F;a&gt;.
If you don&#x27;t, you can still read &lt;a href=&quot;https:&#x2F;&#x2F;research.activision.com&#x2F;publications&#x2F;2021&#x2F;09&#x2F;the-rust-programming-language-for-game-tooling&quot;&gt;the slides&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;learn-wgpu-updated-no-more-swap-chains&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&quot;&gt;Learn Wgpu&lt;&#x2F;a&gt; Updated: No More Swap Chains!&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learn-wgpu-updated-no-more-swap-chains&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;As part of the update to 0.10, the wgpu team removed the &lt;code&gt;SwapChain&lt;&#x2F;code&gt; from the
API. The &lt;code&gt;Surface&lt;&#x2F;code&gt; will now be used to retrieve textures to render to wrapped
in &lt;code&gt;SurfaceTexture&lt;&#x2F;code&gt;s. You configure the &lt;code&gt;Surface&lt;&#x2F;code&gt; in a similar way to how you
would configure the &lt;code&gt;SwapChain&lt;&#x2F;code&gt;, except the struct is now called
&lt;code&gt;SurfaceConfiguration&lt;&#x2F;code&gt; instead of &lt;code&gt;SwapChainDescriptor&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to know more, you can check &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;news&quot;&gt;the tutorial&#x27;s news page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;borderlands-3-save-editor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZakisM&#x2F;bl3_save_edit&quot;&gt;Borderlands 3 Save Editor&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#borderlands-3-save-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;borderlands-save.png&quot; alt=&quot;borderlands save editor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZakisM&#x2F;bl3_save_edit&quot;&gt;Borderlands 3 Save Editor&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ZakisM&quot;&gt;ZakisM&lt;&#x2F;a&gt;
is a tool to help you modify your Borderlands 3 Saves and Profiles
written using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;iced-rs&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt;. Currently, it runs on Windows, Mac OS and Linux.
It supports modifying PC saves as well as decrypted PS4 saves
(and converting between them).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;deno-wgpu.png&quot; alt=&quot;Deno with wgpu crown&quot; &#x2F;&gt;
&lt;em&gt;deno-wgpu&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; is a cross-platform, safe, pure-rust graphics API that runs natively
on Vulkan, Metal, D3D12, D3D11, and OpenGLES; and on top of WebGPU on wasm.&lt;&#x2F;p&gt;
&lt;p&gt;wgpu has set up the infrastructure to run WebGPU proper tests on its CI,
via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denoland&#x2F;deno&quot;&gt;Deno&lt;&#x2F;a&gt;. This will ensure correctness down the road when we reach a
decent level of coverage. Read more on &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;09&#x2F;16&#x2F;deno-webgpu.html&quot;&gt;gfx-rs blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Aside from that, wgpu team has been pumping out patches. In fact, wgpu-0.10 is
easily the most patched release of all!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ppgb2l&#x2F;wgpu_alliance_with_deno&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;deno_land&#x2F;status&#x2F;1438573126670028801&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;matchbox&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;matchbox&quot;&gt;Matchbox&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#matchbox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;matchbox.png&quot; alt=&quot;matchbox demo screenshot: Waiting for 3 more players&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Matchbox by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jkhelsing&quot;&gt;@jkhelsing&lt;&#x2F;a&gt; is a new peer-to-peer networking project for
establishing unreliable, unordered connections between peers on the internet.
The goal is to enable low-latency multiplayer games written in Rust WASM.&lt;&#x2F;p&gt;
&lt;p&gt;Matchbox consists of:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A tiny signaling server, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;matchbox_server&quot;&gt;&lt;code&gt;matchbox_server&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, which acts as a rendezvous
point. It helps peers discover each other and deal with NAT traversal in order
to establish more direct ways of communication.&lt;&#x2F;li&gt;
&lt;li&gt;A crate, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;matchbox_socket&quot;&gt;&lt;code&gt;matchbox_socket&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, which handles connecting to a signalling server
and establishing a WebRTC data channel between each connected peer.&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;matchbox&#x2F;tree&#x2F;main&#x2F;matchbox_demo&quot;&gt;demo&#x2F;template project&lt;&#x2F;a&gt; using &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;gschup.github.io&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt; to implement a web game with peer-to-peer rollback netcode. A live
version is hosted &lt;a href=&quot;https:&#x2F;&#x2F;helsing.studio&#x2F;box_game&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More info is available in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johanhelsing&#x2F;matchbox&quot;&gt;repository&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;johanhelsing.studio&#x2F;posts&#x2F;introducing-matchbox&quot;&gt;introductory blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;pmsynh&#x2F;introducing_matchbox_painless_peertopeer_webrtc&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jkhelsing&#x2F;status&#x2F;1437044006068830215&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sparsey&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sparsey&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&quot;&gt;@LechintanTudor&lt;&#x2F;a&gt; is a new sparse set-based Entity Component System
(ECS) with component storage grouping, granular component change detection,
fallible systems and beautiful syntax.&lt;&#x2F;p&gt;
&lt;p&gt;The goal of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt; is to provide a sparse set-based ECS which fully takes
advantage of its core data structure. An example of this is component storage
grouping, a feature which allows getting the best performance possible when
iterating over queries that match certain patterns described by the user, at
the cost of a performance penalty when inserting or removing components from
these storages.&lt;&#x2F;p&gt;
&lt;p&gt;To get started with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&quot;&gt;Sparsey&lt;&#x2F;a&gt;, check out the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&#x2F;blob&#x2F;master&#x2F;guides&#x2F;cheat_sheet.md&quot;&gt;Sparsey Cheat Sheet&lt;&#x2F;a&gt; and the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LechintanTudor&#x2F;sparsey&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;examples on GitHub&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-verlet&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ManevilleF&#x2F;bevy_verlet&quot;&gt;bevy_verlet&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-verlet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_verlet.gif&quot; alt=&quot;bevy_verlet&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ManevilleF&#x2F;bevy_verlet&quot;&gt;bevy_verlet&lt;&#x2F;a&gt; is a lib for projects using &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;
providing a plugin to use &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Verlet_integration&quot;&gt;verlet Integration&lt;&#x2F;a&gt;
physics. Very useful for Cloth simulation and joints, and less expensive than
complex physics engine, it is a nice addition to 2D or 3D projects. Making good
use of the Entity-Component-System architecture of the bevy engine, any entity
can become a &lt;code&gt;VerletPoint&lt;&#x2F;code&gt; and have physics applied to it.&lt;&#x2F;p&gt;
&lt;p&gt;The crate also provides &lt;em&gt;sticks&lt;&#x2F;em&gt; which constrains the points in order to create
strings or cloth. With its modularity, you may customize the physics precision
(iterations), the gravity, and the physics time step to use.&lt;&#x2F;p&gt;
&lt;p&gt;Not yet available on crates.io, the lib will be released after a few missing
features are provided:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Primitive collision&lt;&#x2F;li&gt;
&lt;li&gt;Object batching (optimization)&lt;&#x2F;li&gt;
&lt;li&gt;Global documentation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You may contact the author on Twitter &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ManevilleF&quot;&gt;@ManevilleF&lt;&#x2F;a&gt; or join the
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ManevilleF&#x2F;status&#x2F;1437350669858611202?s=20&quot;&gt;discussion&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt; is a fast, lightweight, and unopinionated archetypal ECS library.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.6 introduces &lt;code&gt;PreparedQuery&lt;&#x2F;code&gt;, allowing query set-up cost to be
amortized across multiple invocations. &lt;code&gt;EntityRef&lt;&#x2F;code&gt;&#x27;s API was expanded to include
a single-entity &lt;code&gt;query&lt;&#x2F;code&gt; method, and now exposes the referenced entity&#x27;s
handle. Finally, &lt;code&gt;World::spawn_batch&lt;&#x2F;code&gt; and &lt;code&gt;reserve&lt;&#x2F;code&gt; were optimized for better
performance when called repeatedly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ktx2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&#x2F;ktx2&quot;&gt;ktx2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ktx2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;A revamped and refactored version of @F3kilo&#x27;s ktx2-reader,
this serves as a parsing library for the texture container format
of ktx2. This format allows you to store textures in formats that
GPU apis directly accept, without decoding costs. For more information,
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ktx2&quot;&gt;read the docs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;ktx2 writing support will come a future release.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rend3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&#x2F;rend3&quot;&gt;rend3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rend3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rend3-scifi.jpg&quot; alt=&quot;rend3 sci-fi base scene&quot; &#x2F;&gt;
&lt;em&gt;rend3 rendering a complex scene&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;rend3 is a new 3D rendering library that focuses on having an easy
to user interface without sacrificing performance or customizability.
It comes with PBR materials and render routine out of the box and utilizes
GPU culling to enable incredible performance with such a simple API.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;re many fun things in the pipeline including a full custom shader
system, both cpu and gpu side optimization, and more rendering features.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;rend3&quot;&gt;v0.1 version&lt;&#x2F;a&gt; was published on crates.io
(&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;rend3&quot;&gt;docs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&#x2F;rend3&#x2F;tree&#x2F;v0.1.2&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt;) and v0.2 is going
to be coming out very soon.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;imgui-rs-v0-8&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imgui-rs&#x2F;imgui-rs&quot;&gt;imgui-rs&lt;&#x2F;a&gt; v0.8&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#imgui-rs-v0-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imgui-rs&#x2F;imgui-rs&quot;&gt;imgui-rs&lt;&#x2F;a&gt; is the Rust bindings for the Dear ImGui framework,
allowing users to easily build up complex debug widgets and tools.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imgui-rs&#x2F;imgui-rs&#x2F;releases&#x2F;tag&#x2F;v0.8.0&quot;&gt;v0.8.0&lt;&#x2F;a&gt;, the library&#x27;s API continued its overhaul to both be more
similar to the C++ API while feeling like native Rust. Specifically,
the odious &lt;code&gt;im_str!&lt;&#x2F;code&gt; macro was deprecated -- using inline strings directly
(and anything &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;&#x2F;code&gt;) simply works. Most functions also make extensive
use of RAII-style drop tokens to track &lt;code&gt;begin&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;end&lt;&#x2F;code&gt; calls.
Lastly, it was updated to use current Dear ImGui v1.84, and bound to
the new APIs, including the new Tables API.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;emergent-ai&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;emergent&#x2F;&quot;&gt;Emergent AI&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#emergent-ai&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;emergent-ai.gif&quot; alt=&quot;Utility AI&quot; &#x2F;&gt;
&lt;em&gt;Example of game behavior using Utility AI&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;emergent&#x2F;&quot;&gt;Emergent AI&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;psichix&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is a new crate designed
to provide modern AI solutions for games written in Rust. Its highly modularized
and hierarchical architecture allows users to express a wide range of AI behaviors
complexity, from small scale, to big scale, allowing user to pick proper solution
to each AI problem using smaller building blocks.&lt;&#x2F;p&gt;
&lt;p&gt;Along with the library, there is an
&lt;a href=&quot;https:&#x2F;&#x2F;psichix.github.io&#x2F;emergent&#x2F;&quot;&gt;&amp;quot;Emergent AI - Smart agents and events for games&amp;quot;&lt;&#x2F;a&gt; book being
written with goal to explain in-depth to readers how modern AI systems works and
showing step by step process of how one could build them on their own.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hexagonal-pathfinding-astar&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlondeBurrito&#x2F;hexagonal_pathfinding_astar&quot;&gt;hexagonal_pathfinding_astar&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hexagonal-pathfinding-astar&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;                                        _______
&lt;&#x2F;span&gt;&lt;span&gt;                                       &#x2F;   E   \
&lt;&#x2F;span&gt;&lt;span&gt;                               _______&#x2F;  (4,3)  \
&lt;&#x2F;span&gt;&lt;span&gt;                              &#x2F;       \   W:3   &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;                      _______&#x2F;  (3,2)  \_______&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;                     &#x2F;       \   W:1   &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;                    &#x2F;  (2,2)  \_______&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;                    \   W:3   &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;                     \_______&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;                     &#x2F;       \
&lt;&#x2F;span&gt;&lt;span&gt;             _______&#x2F;  (2,1)  \
&lt;&#x2F;span&gt;&lt;span&gt;            &#x2F;       \   W:3   &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    _______&#x2F;  (1,0)  \_______&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;   &#x2F;   S   \   W:4   &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  &#x2F;  (0,0)  \_______&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  \   W:6   &#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;   \_______&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlondeBurrito&#x2F;hexagonal_pathfinding_astar&quot;&gt;hexagonal_pathfinding_astar&lt;&#x2F;a&gt; is an implementation of the A-Star pathfinding algorithm
tailored for traversing a bespoke collection of weighted hexagons.
It&#x27;s intended to calculate the most optimal path to a target hexagon where you&#x27;re
traversing from the centre of one hexagon to the next along a line orthogonal
to a hexagon edge.
Check out the project&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlondeBurrito&#x2F;hexagonal_pathfinding_astar&quot;&gt;README&lt;&#x2F;a&gt; for more info.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pixels-v0-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;pixels&lt;&#x2F;a&gt; v0.6&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pixels-v0-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pixels.png&quot; alt=&quot;Pixels logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;pixels&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&quot;&gt;@parasyte&lt;&#x2F;a&gt; is a tiny hardware-accelerated pixel frame buffer
based on wgpu. It gives you a pixel buffer and you can poke colors into it
(on the CPU side). The buffer is uploaded to the GPU as a texture,
and all scaling and clipping is handled by a default shader.
For additional control, you can add your own custom shaders for pre- and post-processing.&lt;&#x2F;p&gt;
&lt;p&gt;The v0.6 release adds support for wgpu 0.10 which is a huge improvement.
The only breaking changes are reexports and an error variant name change.
In most cases, this upgrade is a drop-in replacement.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;pganne&#x2F;pixels_060_release_announcement&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kas-gui-v0-10&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; GUI v0.10&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kas-gui-v0-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kas-demo.gif&quot; alt=&quot;a window with many widgets and tabs&quot; &#x2F;&gt;
&lt;em&gt;Widget gallery demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhardy&quot;&gt;@dhardy&lt;&#x2F;a&gt; is a general-purpose retained UI toolkit.
This month v0.10 was released:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;KAS now supports dynamic linking, allowing faster builds.
Additionally using a faster linker (lld or mold) allows 6x improvement
on re-build speed for the Gallery example.&lt;&#x2F;li&gt;
&lt;li&gt;Keyboard navigation has been revised to match standard desktop GUIs.&lt;&#x2F;li&gt;
&lt;li&gt;Themes have been improved, with (better) shadows under pop-up menus
and (on one theme) under buttons.&lt;&#x2F;li&gt;
&lt;li&gt;Crates have been reshuffled so that now (most) users only depend on kas.&lt;&#x2F;li&gt;
&lt;li&gt;OpenGL on Linux is supported (mostly thanks to WGPU improvements).&lt;&#x2F;li&gt;
&lt;li&gt;KAS-text now exposes its &lt;code&gt;fontdb::Database&lt;&#x2F;code&gt;, allowing text in SVGs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, the author notes that this may be the last release of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt;
because of the lack of interest to the project.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;pjlb92&#x2F;kas_gui_v010&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;636&quot;&gt;#636 &amp;quot;Better solution for hosting images (or the site as a whole)?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;785&quot;&gt;#785 &amp;quot;Discussions section&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;90&quot;&gt;#90 &amp;quot;Rust on Consoles&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;discussions&#x2F;113&quot;&gt;#113 &amp;quot;Rust GameDev Community Assets Store&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;discussions&#x2F;115&quot;&gt;#115 &amp;quot;Official WG meeting&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions&quot;&gt;Discussions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discussions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;pvbv50&#x2F;is_wgsl_a_good_choice&quot;&gt;&amp;quot;Is WGSL a good choice?&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;pjtpkj&#x2F;unity_files_patent_for_ecs&quot;&gt;&amp;quot;Unity files patent for ECS in game engines that would probably affect
many Rust ECS crates, including Bevy&#x27;s&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;issues&#x2F;202&quot;&gt;Graphite is looking for contributors&lt;&#x2F;a&gt; to help reach
the 0.1 Alpha release and are participating as a &lt;a href=&quot;https:&#x2F;&#x2F;hacktoberfest.digitalocean.com&#x2F;&quot;&gt;Hacktoberfest&lt;&#x2F;a&gt; project.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;q5fjyk&#x2F;this_month_in_rust_gamedev_26&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1447294414607556613&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #25 - August 2021</title>
            <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/025/</link>
            <guid>https://gamedev.rs/news/025/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 25th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;025&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;025&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;025&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;025&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;025&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;025&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;025&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rusty-jam&quot;&gt;Rusty Jam&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-jam&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;rusty-jam.png&quot; alt=&quot;Rusty Jam Site&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The first (unofficial) Rust Game Jam just completed! The &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam&quot;&gt;Rusty
Jam&lt;&#x2F;a&gt; is a game jam to work on games made completely in Rust.
19 games were completed and submitted over the one-week jam. The games were
rated by the community, and the top three games were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;First place: &lt;a href=&quot;https:&#x2F;&#x2F;mrrafael.itch.io&#x2F;winter&quot;&gt;Winter&lt;&#x2F;a&gt; by MrRafael&lt;&#x2F;li&gt;
&lt;li&gt;Second place: &lt;a href=&quot;https:&#x2F;&#x2F;sheepyhead.itch.io&#x2F;murder-user-dungeon&quot;&gt;Murder User Dungeon&lt;&#x2F;a&gt; by Sheepyhead,
cdsupina, and Nightlyside&lt;&#x2F;li&gt;
&lt;li&gt;Third place: &lt;a href=&quot;https:&#x2F;&#x2F;septum.itch.io&#x2F;to-be-dire&quot;&gt;To be Dire&lt;&#x2F;a&gt; by mdaffin, TimeLark and
septum&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The Rusty Jam will be back, so stay tuned on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;jZtz6y9gCJ&quot;&gt;Rusty Jam Discord
Server&lt;&#x2F;a&gt; for more updates!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The eighth Rust Gamedev Meetup happened in August. You can watch the recording
of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-QZAVipiuU&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups take place on
the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt; and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;c603b7e6&quot;&gt;September 11th&lt;&#x2F;a&gt;, fill
out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;pixie-wrangler&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;euclidean-whale.itch.io&#x2F;pixie-wrangler&quot;&gt;Pixie Wrangler&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pixie-wrangler&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;euclidean-whale.itch.io&#x2F;pixie-wrangler&quot;&gt;&lt;img src=&quot;pixie_wrangler.png&quot; alt=&quot;Screenshot of Pixie Wrangler showing pixies traveling along paths drawn by the player.&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click the image to play the game in your desktop browser!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Pixie Wrangler (&lt;a href=&quot;https:&#x2F;&#x2F;euclidean-whale.itch.io&#x2F;pixie-wrangler&quot;&gt;itch.io&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rparrett&#x2F;pixie_wrangler&quot;&gt;GitHub&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rparrett&quot;&gt;@rparrett&lt;&#x2F;a&gt; is a
puzzle game reminiscent of old school printed circuit board design software.&lt;&#x2F;p&gt;
&lt;p&gt;Help the Pixies get from their outputs to their inputs while doing battle with
the intentionally less-than-ergonomic circuit design software. Pixie Wrangler is
currently a prototype, but includes 9 complete levels.&lt;&#x2F;p&gt;
&lt;p&gt;Pixie Wrangler was built with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy 0.5&lt;&#x2F;a&gt; with support from these other great
projects: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrk-its&#x2F;bevy_webgl2&quot;&gt;bevy_webgl2&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nilirad&#x2F;bevy_prototype_lyon&quot;&gt;bevy_prototype_lyon&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;inodentry&#x2F;bevy_asset_ron&quot;&gt;bevy_asset_ron&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mockersf&#x2F;bevy_extra&#x2F;tree&#x2F;master&#x2F;bevy_easings&quot;&gt;bevy_easings&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vange-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vange-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vangers-wgpu0.10.png&quot; alt=&quot;Vange-rs on wgpu-0.10&quot; &#x2F;&gt;
&lt;em&gt;vange-rs on wgpu-0.10&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Vange-rs is a rewrite of the iconic Vangers game from 1998 in Rust, heavily
utilizing GPU for rendering.&lt;&#x2F;p&gt;
&lt;p&gt;The rendering engine has seen a major upgrade. Essential shaders were rewritten
into &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;wgsl&#x2F;&quot;&gt;WGSL&lt;&#x2F;a&gt;, which streamlined the shader pipelines and culled out the
dependency tree. Code was ported on the latest &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;-0.10 release and helped
identify a few issues. Most importantly, this change made the game able to
finally be distributed, and maybe even compiled for the Web in the future. Read
more on the &lt;a href=&quot;https:&#x2F;&#x2F;vange.rs&#x2F;2021&#x2F;08&#x2F;25&#x2F;pure-rust.html&quot;&gt;WGSL-related blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In order to take advantage of the new superpowers, the &lt;a href=&quot;https:&#x2F;&#x2F;kvark.itch.io&#x2F;vangers&quot;&gt;Rusty Vangers&lt;&#x2F;a&gt; game (the
new working title) was published on Itch.io.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recwars&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;martin-t&#x2F;rec-wars&quot;&gt;RecWars&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#recwars&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martin-t.gitlab.io&#x2F;gitlab-pages&#x2F;rec-wars&#x2F;macroquad.html&quot;&gt;&lt;img src=&quot;rec-wars.png&quot; alt=&quot;RecWars screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt; &lt;em&gt;Click the image to play in
your browser&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;martin-t&#x2F;rec-wars&quot;&gt;RecWars&lt;&#x2F;a&gt; by @martin-t is a free and open source Rust clone of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;martin-t&#x2F;rec-wars#the-original-game&quot;&gt;RecWar&lt;&#x2F;a&gt;, a top
down vehicle shooter.&lt;&#x2F;p&gt;
&lt;p&gt;The game is a work-in-progress, this month it gained split-screen for 2 players
and an in-game console to change cvars - you can edit any of the configuration
variables that define its gameplay balance while playing.&lt;&#x2F;p&gt;
&lt;p&gt;RecWars uses the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; engine so it can be played on the desktop as well
as &lt;a href=&quot;https:&#x2F;&#x2F;martin-t.gitlab.io&#x2F;gitlab-pages&#x2F;rec-wars&#x2F;macroquad.html&quot;&gt;in the browser&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vehicle-evolver-deluxe&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bauxitedev.github.io&#x2F;vehicle_evolver_deluxe&#x2F;index.html&quot;&gt;Vehicle Evolver Deluxe&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vehicle-evolver-deluxe&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vehicle_evolver_deluxe.gif&quot; alt=&quot;Vehicle Evolver Deluxe in action, showing multiple vehicles attempting to complete an obstacle course&quot; &#x2F;&gt;
&lt;em&gt;Vehicle Evolver Deluxe in action!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bauxitedev.github.io&#x2F;vehicle_evolver_deluxe&#x2F;index.html&quot;&gt;Vehicle Evolver Deluxe&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bauxitedev&#x2F;vehicle_evolver_deluxe&quot;&gt;GitHub&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&#x2F;status&#x2F;1423916614651678722&quot;&gt;Twitter&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&quot;&gt;@bauxitedev&lt;&#x2F;a&gt; is a simulation that runs in your browser, using AI (to be
specific: &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Genetic_algorithm&quot;&gt;genetic algorithms&lt;&#x2F;a&gt;)
to try to build better and better vehicles. The vehicles have to overcome an
obstacle course, starting with some slight hills, followed by steeper hills, and
finally some jumps. The vehicles are made out of panels and wheels, connected
together, similar to the game
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;346010&#x2F;Besiege&#x2F;&quot;&gt;Besiege&lt;&#x2F;a&gt;, except in 2D. It
was built using Rust and the Bevy game engine.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bauxitedev.github.io&#x2F;vehicle_evolver_deluxe&#x2F;index.html&quot;&gt;Try the live web demo
here.&lt;&#x2F;a&gt; (It needs
a relatively fast computer, on mobile browsers, it&#x27;ll run really slow.)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DlRNdCCSSyo&quot;&gt;There is also an in-depth explanation available on how it works internally, in
the form of an educational video.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;http:&#x2F;&#x2F;redd.it&#x2F;ozpa6q&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&#x2F;status&#x2F;1423916614651678722&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;liminal-lab-000&quot;&gt;Liminal Lab 000&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#liminal-lab-000&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pebazium.web.app&#x2F;&quot;&gt;&lt;img src=&quot;liminal_lab_000.png&quot; alt=&quot;Screenshot of Liminal Lab 000 showing a white-walled laboratory test chamber with buttons on the floor, lights on the wall, and a dark cube levitating overhead.&quot; &#x2F;&gt;&lt;&#x2F;a&gt; &lt;em&gt;Click the image to play the game
in your desktop browser!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Liminal Lab 000 (&lt;a href=&quot;https:&#x2F;&#x2F;pebazium.web.app&#x2F;&quot;&gt;live version&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pebaz&quot;&gt;@pebaz&lt;&#x2F;a&gt; is a tiny, minimalistic
puzzle game with 1 puzzle designed around the concept of &lt;a href=&quot;https:&#x2F;&#x2F;aesthetics.fandom.com&#x2F;wiki&#x2F;Liminal_Space&quot;&gt;Liminal
Spaces&lt;&#x2F;a&gt;. Liminal Spaces are usually abandoned, transitional places
where life once thrived. These spaces are somehow familiar to the viewer but the
viewer has never been there. The unsettling feeling of being alone comes from
the realization that the viewer does not belong in that space but is merely
passing through it.&lt;&#x2F;p&gt;
&lt;p&gt;Liminal Lab 000 was built using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt;, utilizes voxel rendering
with 8x8x8 chunks, and is hosted on Google Firebase Hosting.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ouu7xk&#x2F;liminal_lab_000_my_first_ever_3d_game&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;not-snake&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;Not Snake&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#not-snake&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notsnake.png&quot; alt=&quot;Level example from Not Snake&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Not Snake (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&#x2F;not_snake_game&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;Itch&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&quot;&gt;Michael Ramirez&lt;&#x2F;a&gt; is a
3D snake game where you don&#x27;t play as the snake.&lt;&#x2F;p&gt;
&lt;p&gt;Not Snake was developed using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy game engine&lt;&#x2F;a&gt;. It was
completed and &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;released for free&lt;&#x2F;a&gt; in August and can be played on
Windows, Linux, MacOS, and in browser (Chrome recommended) although there are
fewer audio&#x2F;performance issues running the executables versus the browser
version.&lt;&#x2F;p&gt;
&lt;p&gt;There have been several large changes since the last update in June including
adding new levels, new music, and adding a narrator who does an OK job of keeping
score.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;p8fdfn&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;p9cx15&quot;&gt;&#x2F;r&#x2F;indiegames&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-day-at-the-movies&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;a-day-at-the-movies&quot;&gt;A Day at the Movies&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-day-at-the-movies&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;adayatthemovies.png&quot; alt=&quot;Screenshot of &amp;quot;A Day at the Movies&amp;quot;&quot; &#x2F;&gt;
&lt;em&gt;The kids getting ready to sneak into a movie&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;A Day at the Movies&amp;quot; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&#x2F;rust_gamejam_0821&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;a-day-at-the-movies&quot;&gt;Itch&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&quot;&gt;Michael Ramirez&lt;&#x2F;a&gt; is a short game about stealth, movies, and friendship.&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;A Day at the Movies&amp;quot; was made using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy game engine&lt;&#x2F;a&gt; in 7
days as part of the Rusty Jam. Despite the placeholder art and lack of audio, it
can be played from start-to-finish and is literally guaranteed to bring a smile
to all who play it. Just make sure to follow the instructions on how to get into
the &amp;quot;Ferris the Crab&amp;quot; movie room.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s playable in-browser on &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;a-day-at-the-movies&quot;&gt;itch&lt;&#x2F;a&gt; and the code can be viewed on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramirezmike&#x2F;rust_gamejam_0821&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sombervale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blipjoy.itch.io&#x2F;sombervale&quot;&gt;Sombervale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sombervale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;sombervale.png&quot; alt=&quot;Screenshot of Sombervale depicting the starting location&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Sombervale (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blipjoy&#x2F;sombervale&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;blipjoy.itch.io&#x2F;sombervale&quot;&gt;itch.io&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.twitch.tv&#x2F;blipjoy&quot;&gt;Twitch&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blipjoy&quot;&gt;@blipjoy&lt;&#x2F;a&gt; is a game built in seven days for Rusty Jam. It is styled like an old
handheld game with a 160x128 screen resolution and 16-color palette.&lt;&#x2F;p&gt;
&lt;p&gt;The top 3 things that went well for this project were the art, tilemap support,
and ECS. On the art side, the silhouettes in the background turned out better
than expected. The backlighting (or at least the impression of backlighting)
looks quite nice, even in motion. Tilemap support was added near the end of the
jam built on &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;tiled&quot;&gt;tiled&lt;&#x2F;a&gt;. It catapulted development progress from seeing major
changes every day to making major changes every hour. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;shipyard&lt;&#x2F;a&gt; is the Entity
Component System crate used in Sombervale. This had a tricky learning curve, but
simplified complex interactions between entities.&lt;&#x2F;p&gt;
&lt;p&gt;Something that went poorly was choosing a scope that couldn&#x27;t possibly be
completed on time. As usual, everything turned into a stretch goal! Secondly, a
lot of time was allocated to features that didn&#x27;t make the cut. Much of this was
a result of trying to be perfect instead of efficient. It&#x27;s a good game jam
lesson that often has to be relearned the hard way.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shattersong-online&quot;&gt;Shattersong Online&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shattersong-online&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shattersong.png&quot; alt=&quot;Screenshot of Shattersong Online showing a portal leading between two shards&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Shattersong Online is an online sandbox game written in Rust, with the goal of
supporting thousands of players in a shared universe, with hundreds of players
per shard. In-game portals let players travel between shards hosted on separate
physical servers.&lt;&#x2F;p&gt;
&lt;p&gt;Since the initial announcement in July, we have worked on restructuring large
parts of the codebase to make adding new content more ergonomic. We tested out
the new organization by adding a new monster type from scratch (pictured above).&lt;&#x2F;p&gt;
&lt;p&gt;Read the &lt;a href=&quot;https:&#x2F;&#x2F;triplehex.dev&#x2F;shattersong-online&#x2F;&quot;&gt;dev blog&lt;&#x2F;a&gt; for more info, follow
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;triplehexdev&quot;&gt;@triplehex&lt;&#x2F;a&gt; on twitter for updates, and join the
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;K5RHxVEK6F&quot;&gt;shattersong discord&lt;&#x2F;a&gt; for questions!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-process&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-process&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;the_process.gif&quot; alt=&quot;An animated gif showing a machine setup to smelt iron ore&quot; &#x2F;&gt; &lt;em&gt;A
smelter factory setup in The Process&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt; by @setzer22 is an upcoming game about factory building, process
management, and carrot production, built with Rust using the Godot game engine!&lt;&#x2F;p&gt;
&lt;p&gt;This month has seen a lot of activity: More improvements to the level editor,
in-game assets, and general gameplay improvements. But the main focus has been on
a new building system with improved ergonomics. The game is now approaching a
point where all the core mechanics for the factory simulation are in place, but
more in-game content and assets are still required to reach the first playable
demo.&lt;&#x2F;p&gt;
&lt;p&gt;This month the game has seen the following changes and improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New assets like
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1423712530267054086&quot;&gt;wooden planks&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1433160712231297027&quot;&gt;machine parts&lt;&#x2F;a&gt;
and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1434466387787923456&quot;&gt;mashed carrot cans&lt;&#x2F;a&gt;,
with their in-game recipes.&lt;&#x2F;li&gt;
&lt;li&gt;A new machine, the
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1430923976574910466&quot;&gt;centrifuge&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;A new system to tweak properties with
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1424638751041536001&quot;&gt;OSD sliders&lt;&#x2F;a&gt;
to speed up iteration times. Short explanation
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1424638756246675459&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;A new egui-powered
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1425785805453373444&quot;&gt;main menu&lt;&#x2F;a&gt;
for the main game screen.&lt;&#x2F;li&gt;
&lt;li&gt;Improvements to the building system:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1427560636289069059&quot;&gt;ghost markers&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1428300028712558595&quot;&gt;ramps&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1429391914130882564&quot;&gt;walls&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1430229400923119621&quot;&gt;machines&lt;&#x2F;a&gt;
and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1430479444213485574&quot;&gt;conveyor belts&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;p7ccad&#x2F;a_3d_building_system_overhaul_for_the_process&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;murder-user-dungeon&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sheepyhead.itch.io&#x2F;murder-user-dungeon&quot;&gt;Murder-User Dungeon&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#murder-user-dungeon&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mud_screenshots.png&quot; alt=&quot;Murder-User Dungeon gameplay screenshots&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Murder-User Dungeon (MUD) (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheRealTeamFReSh&#x2F;MurderUserDungeon&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;sheepyhead.itch.io&#x2F;murder-user-dungeon&quot;&gt;Itch&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;nightlyside.github.io&#x2F;&quot;&gt;@Nightlyside&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cdsupina&quot;&gt;@cdsupina&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sheepyhead&quot;&gt;@Shippyhead&lt;&#x2F;a&gt; is
a 2D game made for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam&quot;&gt;Rusty Jam 21&lt;&#x2F;a&gt; in just one week with the
theme &amp;quot;&lt;em&gt;Illusion of Security&lt;&#x2F;em&gt;&amp;quot;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tony is a young man. Finally having his own apartment is a good thing! He will
learn how to live by himself and how to enjoy the small things in life like
playing on his old retro computer: the Astaria 3600 running SafeOS 3.1.&lt;&#x2F;p&gt;
&lt;p&gt;However, you will quickly realize that the internet is not so friendly. You
will meet new people in the Labyrinth(TM) game, and not being friendly to them
can have a serious impact on your real life!&lt;&#x2F;p&gt;
&lt;p&gt;In Murder-User Dungeon you will juggle between exploring the Labyrinth(TM)
game in your console, hiding from vengeful gamers and making sure you fulfill
your human needs.&lt;&#x2F;p&gt;
&lt;p&gt;To win the game, you must reach the end of the Labyrinth(TM)!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The developers aimed to make the player feel that they were safe in their
apartment at first - however as the game goes on and the player makes enemies of
other gamers in the Labyrinth, they risk them coming to their apartment to get
revenge.&lt;&#x2F;p&gt;
&lt;p&gt;The team split development of the game, so that each member could work
independently on separate features. While &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cdsupina&quot;&gt;@cdsupina&lt;&#x2F;a&gt; worked on the
needs system and the graphics, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sheepyhead&quot;&gt;@Sheepyhead&lt;&#x2F;a&gt; worked on the UI and
menus, and &lt;a href=&quot;https:&#x2F;&#x2F;nightlyside.github.io&#x2F;&quot;&gt;@Nightlyside&lt;&#x2F;a&gt; worked on the console and Labyrinth
gameplay.&lt;&#x2F;p&gt;
&lt;p&gt;MUD was developed using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy game engine&lt;&#x2F;a&gt;, Rapier2D for
collisions, Aseprite for the graphics, and a lot of free assets from the
internet (which are credited at the end of the game&#x27;s description).&lt;&#x2F;p&gt;
&lt;p&gt;Linux and Windows builds are available on the Itch page, and feedback is
welcomed!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;pddreu&#x2F;rusty_jam_submission_murderuser_dungeon&#x2F;&quot;&gt;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;pddyv5&#x2F;rusty_jam_submission_murderuser_dungeon&#x2F;&quot;&gt;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;KkeMUu5kxH&quot;&gt;Rusty Jam Discord&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;theta-wave&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thetawavegame&#x2F;thetawave&quot;&gt;Theta Wave&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#theta-wave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thetawavegame&#x2F;thetawave&quot;&gt;&lt;img src=&quot;theta-wave.gif&quot; alt=&quot;Theta Wave Mobs&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;All mobs ported to Bevy Theta Wave&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thetawavegame&#x2F;thetawave&quot;&gt;Theta Wave&lt;&#x2F;a&gt; is an open-source space shooter game by developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;. In the past month, they have been working towards porting
Theta Wave to the Bevy Engine. Most of the work this month has been focused on
implementing all of the existing mobs in Bevy and Rapier.&lt;&#x2F;p&gt;
&lt;p&gt;Progress on this port is going strong - you can find the GitHub issue for the
port &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thetawavegame&#x2F;thetawave&#x2F;issues&#x2F;2&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1432039838463705090&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shroom-kingdom&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shroomkingdom.net&#x2F;&quot;&gt;Shroom Kingdom&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shroom-kingdom&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shroom-kingdom.png&quot; alt=&quot;SHRM token distribution&quot; &#x2F;&gt;
&lt;em&gt;SHRM token distribution&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Shroom Kingdom (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Shroom-Kingdom&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;SPZsgSe&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;shrm_kingdom&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an upcoming play-to-earn video game built with web
technologies running on the &lt;a href=&quot;https:&#x2F;&#x2F;near.org&quot;&gt;NEAR Blockchain&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month the &lt;a href=&quot;https:&#x2F;&#x2F;whitepaper.shroomkingdom.net&#x2F;&quot;&gt;whitepaper draft&lt;&#x2F;a&gt; has been published and a lot
of thoughts have been put into the token economics and how to integrate the game
with the blockchain. The Shroom Kingdom DAO (Decentralised Autonomous
Organization) is looking for self-motivated people, who want to help build the
project. DAO members will be rewarded with the $SHRM token, which will soon be
launched on the NEAR mainnet after the final feedback round from NEAR core team
members.&lt;&#x2F;p&gt;
&lt;p&gt;A Proof of Concept has also been published for the app, which will be built with
Bevy and Rapier compiled to WebAssembly and which uses React for the GUI.&lt;&#x2F;p&gt;
&lt;p&gt;To incentivise early adoption of the project, an &lt;a href=&quot;https:&#x2F;&#x2F;shroomkingdom.net&#x2F;blog&#x2F;nft-airdrop&#x2F;&quot;&gt;NFT airdrop&lt;&#x2F;a&gt;
has been announced. The NFT will only be acquirable for a limited amount of
time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fish-fight&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fishfight.org&#x2F;&quot;&gt;Fish Fight&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fish-fight&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fishfight-website.png&quot; alt=&quot;Screenshot of fishfight.org website&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fishfight.org&#x2F;&quot;&gt;Fish Fight&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fishfight&#x2F;FishFight&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;4smxjcheE5&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;fishfight.org&#x2F;&quot;&gt;website&lt;&#x2F;a&gt;) is a love letter to its spiritual
predecessor &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;312530&#x2F;Duck_Game&#x2F;&quot;&gt;Duck Game&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fishfight.itch.io&#x2F;ff&#x2F;devlog&#x2F;281554&#x2F;fish-fight-reloaded&quot;&gt;As promised&lt;&#x2F;a&gt;,
after months of private prototyping of early invitees, the Fish Fight devs are
finally ready to make their code and community channels available to the general
public. They also launched their website! You can read the &lt;a href=&quot;https:&#x2F;&#x2F;fishfight.itch.io&#x2F;ff&#x2F;devlog&#x2F;291737&#x2F;fish-fight-is-open-source&quot;&gt;announcement
post&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;www.notion.so&#x2F;erlendsh&#x2F;Fish-Fight-1647ed74217e4e38a59bd28f4f5bc81a&quot;&gt;design doc&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;to-be-dire&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;septum.itch.io&#x2F;to-be-dire&quot;&gt;TO BE DIRE&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#to-be-dire&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;TO_BE_DIRE.png&quot; alt=&quot;TO BE DIRE cover art&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;TO BE DIRE by &lt;a href=&quot;https:&#x2F;&#x2F;mdaffin.itch.io&quot;&gt;@mdaffin&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;timelark.itch.io&quot;&gt;@TimeLark&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;septum.itch.io&quot;&gt;@septum&lt;&#x2F;a&gt;, is a prototype survival
game made in a week with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; for the first &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam&quot;&gt;Rusty Jam&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The main idea behind the design of TO BE DIRE is venturing out of the safe zone
in order to survive, adding elements of gameplay like gathering resources, and
maintaining the player character health and hunger, which are common for the
genre, finally having the implementation of the monsters and fear system as a
way to further address the first Rusty Jam&#x27;s theme &amp;quot;Illusion of Security&amp;quot;. &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;mdaffin&#x2F;tbd&#x2F;-&#x2F;issues?scope=all&amp;amp;state=closed&quot;&gt;Read
more about TO BE DIRE&#x27;s design in the issues at GitLab&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Download the game at &lt;a href=&quot;https:&#x2F;&#x2F;septum.itch.io&#x2F;to-be-dire&quot;&gt;itch.io&lt;&#x2F;a&gt; (available for Linux and Windows)
and&#x2F;or get the source code at &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;mdaffin&#x2F;tbd&quot;&gt;GitLab&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Exploring dungeons&quot; &#x2F;&gt; &lt;em&gt;Exploring the caves&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In August, lots of preparation was done to get Veloren ready for the 0.11
release coming in September. Work was done on refactoring parts of the codebase,
and making server administration more ergonomic. Towers were added, which allow
for above-ground dungeons. Skill trees were tweaked for better progression.
Modular weapons had a heavy amount of work put into them and were recently
merged. Work was done to prevent the camera from clipping through walls as much.&lt;&#x2F;p&gt;
&lt;p&gt;Improvements were made to the physics system, as well as other optimizations to
the real-time simulation system. Terrain persistence was completed and is now
being tested on the main server. Balancing was done to loot tables, and more
animations were added to characters. In September, 0.11 will be released. Come
out to the &lt;a href=&quot;https:&#x2F;&#x2F;opencollective.com&#x2F;veloren&#x2F;events&#x2F;veloren-0-11-release-party-05c1a306&quot;&gt;release party on the 11th at 18:00 UTC&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;August&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-131&quot;&gt;#131&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-132&quot;&gt;#132&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-133&quot;&gt;#133&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-134&quot;&gt;#134&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-135&quot;&gt;#135&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-s-the-word&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vrixyz.itch.io&#x2F;whats-the-word&quot;&gt;What&#x27;s the word&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-s-the-word&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;whats-the-word.gif&quot; alt=&quot;What&#x27;s the word&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A UI-based game in which you tap (or miss) buttons. Created with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy
engine&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;egui&lt;&#x2F;a&gt;, it demonstrates
how &lt;em&gt;small&lt;&#x2F;em&gt; you can scope your project for a &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;rusty-jam&#x2F;results&quot;&gt;(Rusty) game
jam&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;humankind-s-encyclopedia&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;SobertKaos&#x2F;status&#x2F;1429812457820786694&quot;&gt;Humankind&#x27;s Encyclopedia&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#humankind-s-encyclopedia&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;humankind-wiki.jpeg&quot; alt=&quot;Humankind&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1124300&#x2F;HUMANKIND&quot;&gt;Humankind&lt;&#x2F;a&gt; is a Civilization-like game from &lt;a href=&quot;https:&#x2F;&#x2F;www.amplitude-studios.com&quot;&gt;Amplitude Studios&lt;&#x2F;a&gt;,
out of Early Access a few weeks ago.
While the game itself isn&#x27;t written in Rust,
its &lt;a href=&quot;https:&#x2F;&#x2F;humankind-encyclopedia.games2gether.com&#x2F;en-us&quot;&gt;gorgeous encyclopedia&lt;&#x2F;a&gt; and persona sharing service
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;SobertKaos&#x2F;status&#x2F;1429812457820786694&quot;&gt;are written using rocket.rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Since the encyclopedia has a big constraint of being used inside an embedded
in-game browser that has a bit of performance issues with full JS frameworks
the team opted for server-side rendering with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Keats&#x2F;tera&quot;&gt;Tera&lt;&#x2F;a&gt; template framework.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I had people working on that without any prior rust experience,
and they were ready to code in no time thanks to good language documentation
&amp;amp; useful compiler messages.&lt;&#x2F;p&gt;
&lt;p&gt;We didn&#x27;t do anything particularly complex, but the safety of Rust combined
with performance enabled us to make this run for way less $$.
You don&#x27;t have to do complex system programming to profit from Rust&#x27;s benefits.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a game engine that
aims to be easy to use and provide a large set of out-of-the-box features. &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=N8kmZ9aBtZs&quot;&gt;A
video&lt;&#x2F;a&gt; was released with updates from version 0.22. &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=mzshg_0ZvLk&quot;&gt;Another
video&lt;&#x2F;a&gt; about the engine made by &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UCr-5TdGkKszdbboXXsFZJTQ&quot;&gt;@GameFromScratch&lt;&#x2F;a&gt;, with
the accompanying article that can be found &lt;a href=&quot;https:&#x2F;&#x2F;gamefromscratch.com&#x2F;rg3d-open-source-rust-3d-game-engine&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=N8kmZ9aBtZs&quot;&gt;&lt;img src=&quot;rg3d-feature-highlights.png&quot; alt=&quot;rg3d feature highlights&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Lots has been happening with recent rg3d engine development.  Physically-based
rendering (PBR) was added. High dynamic range rendering is now supported, along
with tone mapping, color grading, and gamma correction. Manual and auto-exposure
functionality was added for cameras. There is now a widget for editing curves,
and it supports custom curves. Lots of usability improvements were made, such as
begin able to change the path of resources, UI performance gains, and better
ways to manage assets.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rewriting-my-mobile-game-in-rust-targeting-wasm&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lucamoller.medium.com&#x2F;rewriting-my-mobile-game-in-rust-targeting-wasm-1f9f82751830&quot;&gt;Rewriting my mobile game in Rust targeting WASM&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rewriting-my-mobile-game-in-rust-targeting-wasm&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;panda-doodle.png&quot; alt=&quot;Panda Doodle logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucamoller&quot;&gt;@lucamoller&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;lucamoller.medium.com&#x2F;rewriting-my-mobile-game-in-rust-targeting-wasm-1f9f82751830&quot;&gt;a blog post&lt;&#x2F;a&gt;
describing his experience trying to learn Rust by working on a hobby project to
migrate his mobile game from a native C++ implementation to a Rust-based one
targetting WASM.&lt;&#x2F;p&gt;
&lt;p&gt;The post is written in a storytelling manner going through the author&#x27;s
motivations to work on this project and the main challenges they faced while
learning Rust and implementing a game using WASM.&lt;&#x2F;p&gt;
&lt;p&gt;The resulting game, &lt;a href=&quot;https:&#x2F;&#x2F;pandadoodle.lucamoller.com&#x2F;&quot;&gt;Panda Doodle&lt;&#x2F;a&gt;, runs smoothly on mobile
device browsers, and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucamoller&#x2F;pandadoodle-rust-wasm&quot;&gt;source code&lt;&#x2F;a&gt; was open
sourced to help inspire other developers that wish to venture into implementing
WASM-based games in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;oxqofv&#x2F;show_rrust_rewriting_my_mobile_game_in_rust&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite_alpha.png&quot; alt=&quot;Graphite alpha teaser&quot; &#x2F;&gt;
&lt;em&gt;Graphite Alpha - Coming very soon&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-development vector and
raster graphics editor built on a non-destructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;Work has progressed on features for the imminent Alpha release. A project
website has been designed and will launch this month. Crucial user-facing
features have been added: saving&#x2F;opening documents; a bug report dialog for
panics; an auto-generated list of dependency license notices; and a new
undo&#x2F;redo system.&lt;&#x2F;p&gt;
&lt;p&gt;The new Path Tool shows Bézier anchor&#x2F;control points (soon to be draggable).
Rendering performance is much better and scrollbars now work with the infinite
canvas. There&#x27;s a new bounding box around selected shapes that are transformable
with Blender-inspired [G]&#x2F;[R]&#x2F;[S] keys.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.design&quot;&gt;Try it right now in your browser.&lt;&#x2F;a&gt; Graphite is making rapid
progress towards becoming a non-destructive, procedural graphics editor suitable
for replacing traditional 2D DCC applications. The public alpha release is coming
very soon. &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Join the Discord&lt;&#x2F;a&gt; and get involved!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;rx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rx_logo.png&quot; alt=&quot;rx&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;rx&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;website&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cloudhead&#x2F;rx&quot;&gt;code&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xHggPjfsS9&quot;&gt;community&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cloudhead&quot;&gt;@cloudhead&lt;&#x2F;a&gt; is a modern and minimalist pixel editor written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Rx is a pixel art editor&#x2F;animator written in Rust in about 12K LOC, which
combines a vim-like modal interface with a cursor-based editor.&lt;&#x2F;p&gt;
&lt;p&gt;Release v0.5 was just published. There are several new commands that help with
color palettes. A flood fill tool has been added. You can now move between
frames with the &lt;code&gt;h&lt;&#x2F;code&gt; and &lt;code&gt;l&lt;&#x2F;code&gt; keys. The command key &lt;code&gt;:&lt;&#x2F;code&gt; has been fixed to help
with non-ANSI layouts. Compatability was added for non x86_64 systems. Support
was added for pasting from the clipboard into the command line. Animation
rendering is now a lot smoother.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ggrs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggrs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;ggrs_logo.png&quot; alt=&quot;GGRS&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;g_schup&quot;&gt;@g_schup&lt;&#x2F;a&gt; is a reimagination of the &lt;a href=&quot;https:&#x2F;&#x2F;www.ggpo.net&#x2F;&quot;&gt;GGPO&lt;&#x2F;a&gt; P2P rollback network SDK
written in 100% safe Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Since the last update, GGRS has released version 0.4.4 and received performance
updates and fixes, such as a &lt;a href=&quot;https:&#x2F;&#x2F;gschup.github.io&#x2F;ggrs&#x2F;blog&#x2F;sparse-saving&#x2F;&quot;&gt;sparse saving
feature&lt;&#x2F;a&gt;. The authors also
proudly present &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;bevy_ggrs&quot;&gt;bevy_GGRS&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;bevy_GGRS is a plugin to integrate GGRS easily into the popular game engine
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;bevy&lt;&#x2F;a&gt;. It features automatic saving and loading of components and resources
defined by the user through bevy&#x27;s reflection tools. The plugin is currently in
development and uses features that have not been released in bevy 0.5. With bevy
0.6 on the horizon, bevy_GGRS is planning to publish to
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&quot;&gt;crates.io&lt;&#x2F;a&gt;, as well.&lt;&#x2F;p&gt;
&lt;p&gt;If you are interested in developing with GGRS, check the following resources:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gschup.github.io&#x2F;ggrs&#x2F;docs&#x2F;getting-started&#x2F;quick-start&#x2F;&quot;&gt;quick start guide&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;GGRS examples&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;bevy_ggrs&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;bevy_GGRS examples&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wgpu-0-10&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;-0.10&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-0-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;rend3-wgpu0.10.jpg&quot; alt=&quot;Rend3 on wgpu-0.10&quot; &#x2F;&gt;
&lt;em&gt;unannounced engine on wgpu-0.10&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The team has released wgpu-0.10 with a fully rewritten graphics abstraction
(&amp;quot;wgpu-hal&amp;quot; instead of &amp;quot;gfx-hal&amp;quot;), as well as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; version 0.6. Read more in
&lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;08&#x2F;18&#x2F;release-0.10.html&quot;&gt;Release of a Pure-Rust v0.10 and a Call For Testing&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There were a few issues spotted, but overall it went smooth for such a big
change. User libraries were quick to update: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;1000&quot;&gt;iced#1000&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&#x2F;pull&#x2F;241&quot;&gt;kas#241&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&#x2F;pull&#x2F;187&quot;&gt;pixels#187&lt;&#x2F;a&gt;, and others.&lt;&#x2F;p&gt;
&lt;p&gt;On the shader side, in addition to improved validation, hundreds of fixes to the
produced outputs, the atomic operations are now supported when using &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;wgsl&#x2F;&quot;&gt;WGSL&lt;&#x2F;a&gt;
sources.&lt;&#x2F;p&gt;
&lt;p&gt;The release comes at a cost of DX11 backend, which isn&#x27;t there comparing to
wgpu-0.9. On the plus side, the new GL backend performs much better. It runs
most of the examples, and has been successfully tested on Raspberry Pi-3. Still,
more work ahead to make it solid, and to support WebGL2 properly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-egui-0-1-8&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;godot-egui&quot;&gt;godot-egui&lt;&#x2F;a&gt;-0.1.8&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-egui-0-1-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot_egui.gif&quot; alt=&quot;An animation showing godot-egui running as a plugin inside the editor&quot; &#x2F;&gt;
&lt;em&gt;You can now use egui to make Godot editor extensions!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; backend for
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;godot-rust&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt; is improving fast. Some
bugs have been ironed out during this past month, and the integration has got
several features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The repository now includes an example of how to setup egui to create
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1431660162587275267&quot;&gt;Godot editor plugins&lt;&#x2F;a&gt;.
Contribution by @jacobsky.&lt;&#x2F;li&gt;
&lt;li&gt;Custom font support by drag &amp;amp; dropping font files right from Godot editor.&lt;&#x2F;li&gt;
&lt;li&gt;Updated crate to match latest egui 0.14.2&lt;&#x2F;li&gt;
&lt;li&gt;Configurable texture filtering.&lt;&#x2F;li&gt;
&lt;li&gt;Several bugfixes and improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Additionally, a new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;godot-egui&#x2F;issues&#x2F;5&quot;&gt;theme
editor&lt;&#x2F;a&gt; is in the works, which
hopefully will be helpful to other egui backends as well!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dimforge&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&quot;&gt;Dimforge&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dimforge&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&quot;&gt;&lt;img src=&quot;dimforge.png&quot; alt=&quot;Dimforge logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&quot;&gt;Dimforge&lt;&#x2F;a&gt; creates open-source Rust crates for numerical simulation.
Some of the &lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&#x2F;blog&#x2F;2021&#x2F;08&#x2F;15&#x2F;the-last-two-months-in-dimforge&quot;&gt;recent updates&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&#x2F;docs&#x2F;user_guides&#x2F;javascript&#x2F;getting_started_js&quot;&gt;New user-guide for Rapier’s JS bindings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nalgebra.org&quot;&gt;nalgebra&lt;&#x2F;a&gt; v0.29 brings better soundness and non-Copy types support.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; 0.11 brings a full set of joint limits.&lt;&#x2F;li&gt;
&lt;li&gt;The work on unbreakable reduced-coordinates joints for Rapier
is also in progress.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;758&quot;&gt;Site fails to build #758&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;636&quot;&gt;Better solution for hosting images #636&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;174&quot;&gt;Netlify preview for PRs #174&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all the news for last month, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or the &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh
news and updates about the ecosystem every day!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;pki6iw&#x2F;this_month_in_rust_gamedev_25_august_2021&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1435700216510943234&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #24 - July 2021</title>
            <pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/024/</link>
            <guid>https://gamedev.rs/news/024/</guid>
            <description>&lt;!-- no toc --&gt;
&lt;!-- Check the post with markdownlint--&gt;
&lt;p&gt;Welcome to the 24th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;024&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;024&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;024&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;024&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;024&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;024&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The seventh Rust Gamedev Meetup happened in July. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=0cefGQyZXH4&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups take place on
the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt;, and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on at the next meetup on &lt;a href=&quot;https:&#x2F;&#x2F;everytimezone.com&#x2F;s&#x2F;391b6160&quot;&gt;August 14th&lt;&#x2F;a&gt;, fill
out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.png&quot; alt=&quot;Llama ride&quot; &#x2F;&gt; &lt;em&gt;Out for a llama ride&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In July, work focused on larger tasks that tend to come up between versions.
Optimizations were made for networking with compression, and message queue
improvements (&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-127&quot;&gt;devblog #127&lt;&#x2F;a&gt;). Modular weapons are in the works, which
will allow for much more dynamic ways to choose what you fight with. The project
also hit 300k lines of code.&lt;&#x2F;p&gt;
&lt;p&gt;Many contributors are working on the art and asset front, with lots of new SFX,
models, and UI elements making their way into the game. Caves are also getting a
lot of love, and a bloom feature is being integrated. Some members broke down
what they plan to have done by the 0.11 release at the beginning of September,
and you can read about that in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-130&quot;&gt;devblog #130&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;July&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-127&quot;&gt;#127&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-128&quot;&gt;#128&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-129&quot;&gt;#129&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-130&quot;&gt;#130&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zemeroth&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;&quot;&gt;Zemeroth&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zemeroth&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;zemeroth.jpg&quot; alt=&quot;Zemeroth on Google Play&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;&quot;&gt;Zemeroth&lt;&#x2F;a&gt; is a turn-based hexagonal tactics game, developed by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month, an early access version of the game was released as a free
download on &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=rust.zemeroth&quot;&gt;Google Play&lt;&#x2F;a&gt; - if you have an Android
device, give it a try!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;harvest-hero-origins&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&#x2F;&quot;&gt;Harvest Hero Origins&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero-origins&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;hho_header.png&quot; alt=&quot;hho_header&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Harvest Hero Origins is an arcade wave defense game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GemdropGames&quot;&gt;Gemdrop Games&lt;&#x2F;a&gt;,
built in Rust on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt;. A &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1651500&#x2F;Harvest_Hero_Origins&#x2F;&quot;&gt;Steam&lt;&#x2F;a&gt; page has recently been
made and the game is set to release sometime at the end of this summer.&lt;&#x2F;p&gt;
&lt;p&gt;Battle the oncoming waves of enemies with a friend in local co-op, unlock
new playable characters and skins, and make your way to the top of the
leaderboard!&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, HHO will be at &lt;a href=&quot;https:&#x2F;&#x2F;west.paxsite.com&#x2F;&quot;&gt;PAXWest&lt;&#x2F;a&gt;
this year, so come check out their booth
if you&#x27;ll be there!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shroom-kingdom&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shroomkingdom.net&#x2F;&quot;&gt;Shroom Kingdom&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shroom-kingdom&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shroom-kingdom.gif&quot; alt=&quot;Shroom Kingdom Asset Extractor&quot; &#x2F;&gt;
&lt;em&gt;Extracting the game assets&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Shroom Kingdom (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Shroom-Kingdom&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;SPZsgSe&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;shrm_kingdom&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is an upcoming play-to-earn video game built with web technologies
running on the &lt;a href=&quot;https:&#x2F;&#x2F;near.org&quot;&gt;NEAR Blockchain&lt;&#x2F;a&gt;.
In a recent &lt;a href=&quot;https:&#x2F;&#x2F;net64-mod.github.io&#x2F;blog&#x2F;shroom-kingdom&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; you can read the motivation behind this.&lt;&#x2F;p&gt;
&lt;p&gt;You can play with your favorite plumber brothers.
Build your own levels or play levels from others.
Every level built on Shroom Kingdom is stored
on the blockchain as an NFT.&lt;&#x2F;p&gt;
&lt;p&gt;By playing the game you can either actively earn SHRM tokens via participating
in game activities or earn them passively, if other people play or like your levels.
The SHRM token will be used to acquire in-game purchases such as unlocking new
building blocks or increasing level upload limits.&lt;&#x2F;p&gt;
&lt;p&gt;You can either extract existing assets from Super Mario Maker 2 or use
compatible game mod files from e.g. &lt;a href=&quot;https:&#x2F;&#x2F;gamebanana.com&#x2F;&quot;&gt;Gamebanana&lt;&#x2F;a&gt;.
The asset extractor is already working, but support for more file types
needs to be added.&lt;&#x2F;p&gt;
&lt;p&gt;The game will likely be built with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&#x2F;&quot;&gt;Rapier&lt;&#x2F;a&gt; compiled to WebAssembly.
Next steps include developing a Proof of Concept.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wicked-potions&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;niklme.itch.io&#x2F;wicked-potions&quot;&gt;Wicked Potions&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wicked-potions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wicked_potions.png&quot; alt=&quot;Screenshot of the game&quot; &#x2F;&gt;
&lt;em&gt;Match ingredients to brew wicked potions&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;niklme.itch.io&#x2F;wicked-potions&quot;&gt;Wicked Potions&lt;&#x2F;a&gt; is a match-three game developed by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;profile&#x2F;jennifervphan&quot;&gt;jennifervphan&lt;&#x2F;a&gt; for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;bored-pixels-jam-8&quot;&gt;Bored Pixels Jam 8&lt;&#x2F;a&gt;.
They wrote the game using the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy game engine&lt;&#x2F;a&gt; and created all of the
textures and audio.&lt;&#x2F;p&gt;
&lt;p&gt;The main focus of the game during the one-week jam period were the assets.
After the voting period, the developers plan to extend the game mechanics
and story a bit more.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;wicked_potions&quot;&gt;The code for the game is available on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-process&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-process&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;the_process.gif&quot; alt=&quot;Showcase image for the new inventory UI in The Process&quot; &#x2F;&gt;
&lt;em&gt;The godot_egui backend powering a new inventory UI for The Process&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt; by @setzer22 is an upcoming game about factory building,
process management, and carrot production,
built with Rust using the Godot game engine!&lt;&#x2F;p&gt;
&lt;p&gt;Continuing with last month&#x27;s migration of old GDScript code to ECS in Rust, this
month&#x27;s main focus has been on porting the GUI code. This has resulted in
the birth of a Godot integration for &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;egui&#x2F;&quot;&gt;egui&lt;&#x2F;a&gt; that now
powers the game&#x27;s interface.&lt;&#x2F;p&gt;
&lt;p&gt;This month has seen the following changes and improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Finished migration of character controller code to ECS style. Now with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1413081233396011012&quot;&gt;300%
more jumps!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Implemented &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1413943539160031246&quot;&gt;better ambient
lighting&lt;&#x2F;a&gt; and
enable using different skies for radiance and display. This required a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;godot&#x2F;tree&#x2F;feature&#x2F;cosmetic_sky&quot;&gt;forked
godot version&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Implement a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1417774452012724226&quot;&gt;new inventory and
toolbar&lt;&#x2F;a&gt;
interface using egui.&lt;&#x2F;li&gt;
&lt;li&gt;Integrated the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1420277428199559174&quot;&gt;puffin
profiler&lt;&#x2F;a&gt; into
the game using the godot_egui integration.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;robo-instructus-2-years-old&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2021&#x2F;07&#x2F;16&#x2F;2-years-later.html&quot;&gt;Robo Instructus: 2 Years Old&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus-2-years-old&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;robo-os.jpg&quot; alt=&quot;game logo + OS logos&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Two years ago &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; released the &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;www.roboinstruct.us&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; puzzle game
on &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Steam&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;bigabgames.itch.io&#x2F;robo-instructus&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month Alex released a devlog post &lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2021&#x2F;07&#x2F;16&#x2F;2-years-later.html&quot;&gt;&amp;quot;Robo Instructus: 2 Years Old&amp;quot;&lt;&#x2F;a&gt;
about how well the game did in the last year:
Sales by platform&#x2F;country&#x2F;OS, player feedback &amp;amp; reviews, etc.&lt;&#x2F;p&gt;
&lt;p&gt;The game also continues to receive updates, the latest &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;news&#x2F;app&#x2F;1032170&#x2F;view&#x2F;2998819983294763294&quot;&gt;1.33 version&lt;&#x2F;a&gt;
includes full 简体中文 &amp;amp; Español language support.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fish-fight&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fishfightgame&quot;&gt;Fish Fight&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fish-fight&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fishfight_weapons.png&quot; alt=&quot;New weapons&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Fish Fight (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fishfightgame&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a continuation of the demo project
known as Fish Game - made by the same team of people (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;erlend_sh&quot;&gt;@erlend_sh&lt;&#x2F;a&gt;), now operating as independents. Their goal is to make a
published game, written entirely in Rust and developed as openly as
possible. They are hoping to go public with the open source repo
within a month or so.&lt;&#x2F;p&gt;
&lt;p&gt;Changes and improvements from the last month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fishfightgame&#x2F;status&#x2F;1424084016467226624&quot;&gt;Pre-alpha trailer released!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Loads of new weapons added:
&lt;ul&gt;
&lt;li&gt;Mind-controlled Jellyfish&lt;&#x2F;li&gt;
&lt;li&gt;Kick-bombs (bomberman-style)&lt;&#x2F;li&gt;
&lt;li&gt;Cursed Skull&lt;&#x2F;li&gt;
&lt;li&gt;Handcannon&lt;&#x2F;li&gt;
&lt;li&gt;Gatling gun&lt;&#x2F;li&gt;
&lt;li&gt;Sproingers&lt;&#x2F;li&gt;
&lt;li&gt;Pirate Boots&lt;&#x2F;li&gt;
&lt;li&gt;..and more!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Whole new Environmentals system added for map-wide events (mass-shark attack
incoming!)&lt;&#x2F;li&gt;
&lt;li&gt;Physics doc &amp;amp; improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;theta-wave&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#theta-wave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thetawavegame&#x2F;thetawave&quot;&gt;&lt;img src=&quot;theta-wave.gif&quot; alt=&quot;Amethyst to Bevy&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Left: Theta Wave with Amethyst, Right: Theta Wave with Bevy (so far)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt; is an open-source space shooter game by developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;. It is one of the showcase games for the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;&quot;&gt;Amethyst Engine&lt;&#x2F;a&gt;. In
the past month, they finished the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&#x2F;projects&#x2F;5&quot;&gt;&amp;quot;Organization&amp;quot;&lt;&#x2F;a&gt; update and
made the decision to start working on porting the game to the Bevy engine. You can
find the Bevy version of Theta Wave &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thetawavegame&#x2F;thetawave&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Progress on this port is going strong - you can find the GitHub issue for
the port &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thetawavegame&#x2F;thetawave&#x2F;issues&#x2F;2&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bounty-bros&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-update-4-physics-damage-pathfinding&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bounty-bros&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.github.io&#x2F;skipngo_pre-releases&#x2F;refs&#x2F;tags&#x2F;pre-release-2&#x2F;?asset_url=https:&#x2F;&#x2F;katharostech.github.io&#x2F;bounty-bros_pre-releases&#x2F;2&quot;&gt;&lt;img src=&quot;bounty-bros.jpg&quot; alt=&quot;bounty-bros-title-screen&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click the image to play the game in your browser!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-update-4-physics-damage-pathfinding&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt; is a prototype, top-down adventure game, developed
by &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&quot;&gt;Katharos Technology&lt;&#x2F;a&gt; as a testing ground for a future
commercial game.&lt;&#x2F;p&gt;
&lt;p&gt;The last two months of development added lots of new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Integrated a new physics system and character controller that allows for smoother
character movement.&lt;&#x2F;li&gt;
&lt;li&gt;Added a new damage system and made cactuses hurt the player.&lt;&#x2F;li&gt;
&lt;li&gt;Added a life bar and a game over screen.&lt;&#x2F;li&gt;
&lt;li&gt;Added a pause menu and a fullscreen button.&lt;&#x2F;li&gt;
&lt;li&gt;Started work on enemy pathfinding.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All the new features can be tested in the latest &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.github.io&#x2F;skipngo_pre-releases&#x2F;refs&#x2F;tags&#x2F;pre-release-2&#x2F;?asset_url=https:&#x2F;&#x2F;katharostech.github.io&#x2F;bounty-bros_pre-releases&#x2F;2&quot;&gt;web demo&lt;&#x2F;a&gt;,
and the &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-update-4-physics-damage-pathfinding&quot;&gt;blog post&lt;&#x2F;a&gt; has the full details of what&#x27;s new and what&#x27;s
coming next!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;flesh&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&#x2F;&quot;&gt;Flesh&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.jpg&quot; alt=&quot;Flesh screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&#x2F;&quot;&gt;Flesh&lt;&#x2F;a&gt; is a 2D horizontal SHMUP by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Im_Oab&#x2F;&quot;&gt;@Im_Oab&lt;&#x2F;a&gt;, with a hand-drawn animation style
and an organic&#x2F;fleshy theme.&lt;&#x2F;p&gt;
&lt;p&gt;This month, a &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1660850&#x2F;Flesh&#x2F;&quot;&gt;Steam page&lt;&#x2F;a&gt; was published for the game - it can now be
wishlisted, ahead of a planned release later this year!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;..&#x2F;005&#x2F;ggez-logo-maroon-full.svg&quot; alt=&quot;ggez logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;ggez&lt;&#x2F;code&gt; 0.6 has been released!  &lt;code&gt;ggez&lt;&#x2F;code&gt; is a lightweight cross-platform
game framework for making 2D games with minimum friction, with an API
inspired by Love2D.&lt;&#x2F;p&gt;
&lt;p&gt;This release includes many additions, improvements, and bug fixes,
including a &lt;code&gt;MeshBatch&lt;&#x2F;code&gt; type for drawing many instances of the same
geometry, improvements to canvas drawing, updated &lt;code&gt;winit&lt;&#x2F;code&gt; dependencies
that function more smoothly on Linux under Wayland, better error
handling, and more.  The whole changelog is available
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;blob&#x2F;0.6.0&#x2F;CHANGELOG.md&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;More importantly, &lt;code&gt;ggez&lt;&#x2F;code&gt; is now maintained by a group of volunteers,
with the original maintainer stepping down from active development after
over four years.  The new maintainers are mostly responsible for the 0.6
release, and will hopefully be bringing good ideas and tech to the
library for years to come.  For details, see &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues&#x2F;875&quot;&gt;this github
issue&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;macroquad.jpg&quot; alt=&quot;Zemeroth running on Android&quot; &#x2F;&gt;
&lt;em&gt;A Macroquad game (&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;024&#x2F;#zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt;) running on Android!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt; is a cross-platform game framework, inspired heavily by Raylib.&lt;&#x2F;p&gt;
&lt;p&gt;This month, a &lt;a href=&quot;https:&#x2F;&#x2F;macroquad.rs&#x2F;tutorials&#x2F;android&#x2F;&quot;&gt;new tutorial&lt;&#x2F;a&gt; was published on the
Macroquad website, showing how a game written with the framework can be
ported to Android. It details all of the steps, from building to packaging
for a release on Google Play.&lt;&#x2F;p&gt;
&lt;p&gt;In other news, Macroquad used to depend on rodio+cpal for audio on
native platforms and a custom WebAudio implementation for web, with a custom
abstraction on top of both. This month, Macroquad&#x27;s audio system was
reimplemented on top of raw OS APIs - ALSA, OpenSLES, CoreAudio and WASAPI.
This functionality has now been extracted into a crate: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;quad-snd&quot;&gt;quad-snd&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;emerald&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#emerald&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;em_logo.svg&quot; alt=&quot;Emerald logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; is a 2D portable game engine aiming to export to every
possible target: Windows, Linux, macOS, Android, iOS, Xbox,
Playstation, Nintendo Switch.&lt;&#x2F;p&gt;
&lt;p&gt;In addition to being portable, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; aims to be easy to use
while providing quality features like built-in physics and
Aseprite integration.&lt;&#x2F;p&gt;
&lt;p&gt;If any of this sounds good to you, and you&#x27;d like to be a part of it,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; welcomes all contributors to help make an extremely portable
game engine! Join them on their &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;NHsz38AhkD&quot;&gt;Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;starframe&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&#x2F;&quot;&gt;Starframe&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#starframe&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;starframe.gif&quot; alt=&quot;Demonstration of Starframe&#x27;s new rope physics&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&#x2F;&quot;&gt;Starframe&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&quot;&gt;@molentum&lt;&#x2F;a&gt; is a work-in-progress game engine for physics-y
sidescrolling 2D games.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s noteworthy development was &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&#x2F;status&#x2F;1421204030441889792&quot;&gt;particle-based ropes&lt;&#x2F;a&gt;
capable of full two-way coupling with rigid bodies, demonstrated above.
Capsule-shaped colliders were also added.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hands-on-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&#x2F;&quot;&gt;Hands-on Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hands-on-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&#x2F;&quot;&gt;&lt;img src=&quot;hands-on-rust-live.jpg&quot; alt=&quot;Hands-On Rust&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&#x2F;&quot;&gt;&amp;quot;Hands-on Rust: Effective Learning through 2D Game Development and Play&amp;quot;&lt;&#x2F;a&gt;
by Herbert Wolverson is now in print, as a full color paperback and ebook.
The book teaches Rust through game development examples, and is targeted at
readers who have some experience with writing code in other languages. It
teaches beginner to intermediate-level Rust. Hands-on Rust also teaches
high-level game development concepts, notably Entity-Component System (ECS)
theory.&lt;&#x2F;p&gt;
&lt;p&gt;After walking you through installing Rust, a few simple examples teach the
language basics. Then you put these together to make &amp;quot;Flappy Dragon&amp;quot; - a
simple Flappy Bird clone. The book then changes gear and begins to build a
dungeon crawler (roguelike) with tile graphics.&lt;&#x2F;p&gt;
&lt;p&gt;Outside of the USA, Hands-on Rust is available through &lt;a href=&quot;https:&#x2F;&#x2F;www.amazon.com&#x2F;dp&#x2F;1680508164&quot;&gt;Amazon&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Herbert also published the first &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;pragmatic-programmers&#x2F;flappy-dragon-rust-647e91a34dd4&quot;&gt;&amp;quot;Hands-on Rust bonus content&amp;quot;&lt;&#x2F;a&gt;.
The bonus content extends Flappy Dragon to include smooth movement and
animated sprites.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;writing-an-rpg-using-rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;tutorials&#x2F;2021&#x2F;07&#x2F;09&#x2F;rpg-tutorial1.html&quot;&gt;Writing an RPG using rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#writing-an-rpg-using-rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=l2ZbDpoIdqk&quot;&gt;&lt;img src=&quot;rg3d.jpg&quot; alt=&quot;rg3d RPG screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=l2ZbDpoIdqk&quot;&gt;Click here&lt;&#x2F;a&gt; to see a video of the character controller in action!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Dimitry Stepanov (aka @mrDIMAS) published a
&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;tutorials&#x2F;2021&#x2F;07&#x2F;09&#x2F;rpg-tutorial1.html&quot;&gt;tutorial series&lt;&#x2F;a&gt; about
making an RPG in Rust using the rg3d game engine. In part one of the series,
he builds a character controller from scratch. While that may not sound very exciting,
it&#x27;s still a great way to learn the basics of rg3d and Rust gamedev in general!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite_scream.png&quot; alt=&quot;Graphite logo&quot; &#x2F;&gt;
&lt;em&gt;A recreation of &amp;quot;The Scream&amp;quot; in Graphite by Norgate&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-development vector and
raster graphics editor built on a non-destructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;In the past month, the editor has gained numerous vector editing features,
including moving layers with the keyboard or mouse, filling and copying colors,
flipping and aligning selected layers, and setting blend modes and layer
opacity.&lt;&#x2F;p&gt;
&lt;p&gt;Scrollbars, rulers, and thumbnails are now functional. Full screen support has
been added, along with a hotkey to center the artwork. An options bar with
tool-specific settings and actions has been implemented, currently allowing
the number of sides of a polygon to be selected. The order of layers can now be
changed using hotkeys.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.design&quot;&gt;Try it right now in your browser.&lt;&#x2F;a&gt; Graphite is making
rapid progress towards becoming a non-destructive, procedural graphics editor
suitable of replacing traditional 2D DCC applications. The release of Graphite
0.1 is anticipated in the coming month; come
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;join the Discord&lt;&#x2F;a&gt; to help make it happen!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;discord-sdk&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;discord-sdk&quot;&gt;discord-sdk&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discord-sdk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;discord-sdk&quot;&gt;discord-sdk&lt;&#x2F;a&gt; is an open source implementation of the &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;sdk-starter-guide&quot;&gt;Discord Game SDK&lt;&#x2F;a&gt; by
&lt;a href=&quot;https:&#x2F;&#x2F;embark.dev&quot;&gt;Embark Studios&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month saw the release of the initial &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;discord-sdk&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#010---2021-07-21&quot;&gt;&lt;code&gt;0.1.0&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
(and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;discord-sdk&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#011---2021-07-28&quot;&gt;&lt;code&gt;0.1.1&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;)
version of the crate, which implements initial support for:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;activities&quot;&gt;Activities&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;lobbies&quot;&gt;Lobbies&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;overlay&quot;&gt;Overlay&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;relationships&quot;&gt;Relationships&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;users&quot;&gt;Users&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Application registration (so your game can be launched by Discord)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The API is still rough, but should be in a good enough state to try out!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rkyv&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkyv&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rkyv&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkyv&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt; is a zero-copy deserialization framework for Rust. It&#x27;s an alternative
to serde that makes it easy to quickly and safely load data into memory.&lt;&#x2F;p&gt;
&lt;p&gt;This month, rkyv 0.7 was released with many new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkyv&#x2F;rend&quot;&gt;Endian-agnostic serialization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rust_serialization_benchmark&quot;&gt;Greatly improved performance&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Enhanced &lt;code&gt;no_std&lt;&#x2F;code&gt; support&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;rkyv&#x2F;0.7.4&#x2F;rkyv&#x2F;with&#x2F;index.html&quot;&gt;Wrapper types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;rkyv&#x2F;0.7.4&#x2F;rkyv&#x2F;collections&#x2F;btree_map&#x2F;index.html&quot;&gt;A new &lt;code&gt;BTreeMap&lt;&#x2F;code&gt; implementation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Reduced dependencies&lt;&#x2F;li&gt;
&lt;li&gt;Support for some common external crates&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The full changelog can be found on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkyv&#x2F;rkyv&#x2F;releases&#x2F;tag&#x2F;v0.7.0&quot;&gt;release page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;throne&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;t-mw&#x2F;throne&quot;&gt;Throne&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#throne&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;Throne.png&quot; alt=&quot;Throne&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;t-mw&#x2F;throne&quot;&gt;Throne&lt;&#x2F;a&gt; is a new scripting language for game prototyping and story logic. The
language is rule-based, which allows certain types of logic to be expressed more
concisely than using an object-based language, while remaining fast to execute
and easy to embed in an existing engine. Throne can be experimented with in the
web &lt;a href=&quot;https:&#x2F;&#x2F;t-mw.github.io&#x2F;throne-playground&#x2F;&quot;&gt;playground&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;godot_egui&#x2F;&quot;&gt;godot_egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot_egui.gif&quot; alt=&quot;godot_egui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;godot_egui&#x2F;&quot;&gt;godot_egui&lt;&#x2F;a&gt; is an integration of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;
crate for the Godot engine using Rust, enabling highly dynamic and performant
user interfaces in an immediate-mode style in Godot.&lt;&#x2F;p&gt;
&lt;p&gt;Godot has a great GUI system, so why use &lt;code&gt;godot_egui&lt;&#x2F;code&gt; instead? A more in-depth
rationale can be found in the crate&#x27;s README, but the main reason is to provide
a GUI system for godot-rust games that is closer to Rust&#x27;s data driven
philosophy.&lt;&#x2F;p&gt;
&lt;p&gt;Unlike other egui integrations, &lt;code&gt;godot_egui&lt;&#x2F;code&gt; has the special feature of being
embedded as a custom Godot scene tree node. This effectively allows combining
Godot&#x27;s retained mode UI and container-based placement with the simplicity of
immediate-mode style GUI code of &lt;code&gt;egui&lt;&#x2F;code&gt;, getting the best of both worlds.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;setzer22&#x2F;godot-egui&quot;&gt;github repository&lt;&#x2F;a&gt; has an example
project and usage instructions to get you started with immediate-mode GUI
programming with Godot and Rust!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;franzplot_scene.gif&quot; alt=&quot;Franzplot on wgpu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Following the &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;023&#x2F;#wgpu-family-re-union&quot;&gt;Family Reunion&lt;&#x2F;a&gt; initiative, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; team has been busy rebuilding
the graphics infrastructure. The new D3D12 backend has been merged, which
concludes the trip of moving (or rewriting?) all of the implementation into
Rust. In addition to a &amp;quot;lean and mean&amp;quot; implementation of the host API side,
which turned out to match the WebGPU API very well, the new backend works with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; exclusively for generation of HLSL shaders.
This is in contrast with gfx-backend-dx12, which only supported SPIRV-Cross.&lt;&#x2F;p&gt;
&lt;p&gt;The team also wrote the blog post &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;07&#x2F;16&#x2F;release-0.9-future.html&quot;&gt;Release of v0.9 and the Future of wgpu&lt;&#x2F;a&gt;.
One of the interesting bits is &lt;code&gt;gfx&lt;&#x2F;code&gt; repository switching to
maintenance mode.&lt;&#x2F;p&gt;
&lt;p&gt;Last but not the least, Francesco Cattoglio described their adventure
with rewriting &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;stories&#x2F;franzplot.html&quot;&gt;Franzplot&lt;&#x2F;a&gt; on a new blog hosted by the wgpu team. This blog will
accumulate stories of wgpu users and their interesting projects.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ggrs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggrs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;ggrs_logo.png&quot; alt=&quot;GGRS&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;g_schup&quot;&gt;@g_schup&lt;&#x2F;a&gt; is a reimagination of the &lt;a href=&quot;https:&#x2F;&#x2F;www.ggpo.net&#x2F;&quot;&gt;GGPO&lt;&#x2F;a&gt; P2P rollback network SDK
written in 100% safe Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The freshly released version 0.4 comes with tons of fixes for P2P sessions with
up to four players and any number of spectators. More importantly, the repository
now features a &lt;a href=&quot;https:&#x2F;&#x2F;gschup.github.io&#x2F;ggrs&#x2F;docs&#x2F;getting-started&#x2F;quick-start&#x2F;&quot;&gt;tutorial&lt;&#x2F;a&gt; and full game &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&#x2F;tree&#x2F;main&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; for every type of session.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-retrograde&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&quot;&gt;Bevy Retrograde&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-retrograde&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;bevy-retrograde.gif&quot; alt=&quot;physics example&quot; &#x2F;&gt;
&lt;em&gt;Bevy Retrograde Physics Map example&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&quot;&gt;Bevy Retrograde&lt;&#x2F;a&gt; (formerly Bevy Retro) is a &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt; plugin
designed for making pixel-perfect games as easily as possible.&lt;&#x2F;p&gt;
&lt;p&gt;This project was released under the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;katharos-license&quot;&gt;Katharos License&lt;&#x2F;a&gt;. This
license has moral and ethical implications that you may or may not agree with,
so please read it before making use of this project.&lt;&#x2F;p&gt;
&lt;p&gt;In the last two months, Bevy Retrograde has gotten a major update and is also on
crates.io for the first time!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The transform system was migrated to use Bevy&#x27;s own transform system.&lt;&#x2F;li&gt;
&lt;li&gt;The pixel-perfect alignment restriction can now be optionally disabled on a
per-sprite basis. This makes it possible to do smooth character and projectile
movement if desired.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jcornaz&#x2F;heron&quot;&gt;Heron&lt;&#x2F;a&gt; physics engine ( which is powered by Rapier ) was integrated, with
a custom extension for automatically creating collision shapes from sprite
outlines.&lt;&#x2F;li&gt;
&lt;li&gt;It was decided to start work on migrating Bevy Retrograde to use Bevy&#x27;s own
rendering abstraction, making it compatible with the larger Bevy rendering
ecosystem. This will hopefully be finished in the next release.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More information can be found in the Bevy Retrograde
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retrograde&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;release notes&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can ask questions or give feedback for Bevy Retrograde
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&#x2F;discussions&quot;&gt;on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;quilkin&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;googleforgames&#x2F;quilkin&quot;&gt;Quilkin&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#quilkin&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;quilkin.png&quot; alt=&quot;Quilkin&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;googleforgames&#x2F;quilkin&quot;&gt;Quilkin&lt;&#x2F;a&gt; is a non-transparent UDP proxy specifically designed for use with
large scale multiplayer dedicated game server deployments, to ensure security,
access control, telemetry data, metrics and more.&lt;&#x2F;p&gt;
&lt;p&gt;This month saw the initial
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;googleforgames&#x2F;quilkin&#x2F;releases&#x2F;tag&#x2F;v0.1.0&quot;&gt;0.1.0&lt;&#x2F;a&gt;
release of the project, as well as announcement blog posts from project
co-founders &lt;a href=&quot;(https:&#x2F;&#x2F;embark.dev)&quot;&gt;Embark Studios&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;cloud.google.com&#x2F;gaming&quot;&gt;Google Cloud&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;embarkstudios&#x2F;say-hi-to-quilkin-an-open-source-udp-proxy-88577c795204&quot;&gt;Embark Studios: Say hi to Quilkin, an open-source UDP proxy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloud.google.com&#x2F;blog&#x2F;products&#x2F;gaming&#x2F;introducing-quilkin&quot;&gt;Google Cloud: Introducing Quilkin: open-source UDP proxies built for game server communication&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Quilkin is being actively developed and would love contributors and feedback.
Please join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;mfBNZjBDnc&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;groups.google.com&#x2F;forum&#x2F;#!forum&#x2F;quilkin-discuss&quot;&gt;mailing list&lt;&#x2F;a&gt; or
follow the project on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;quilkindev&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-asset-loader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-asset-loader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; wrote a &lt;a href=&quot;https:&#x2F;&#x2F;www.nikl.me&#x2F;blog&#x2F;2021&#x2F;asset-handling-in-bevy-apps&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; about creating
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt;, a plugin to simplify asset handling in &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt;
applications. The post outlines how bevy_asset_loader can be used and
discusses future improvements to the crate.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;E-Good-First-Issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;!--
TODO: Add real links and un-comment once this post is published
--&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;p0hgsy&#x2F;this_month_in_rust_gamedev_24_july_2021&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1424398304700420102&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #23 - June 2021</title>
            <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/023/</link>
            <guid>https://gamedev.rs/news/023/</guid>
            <description>&lt;p&gt;Welcome to the 23rd issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!-- no toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;023&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;023&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;023&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;023&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;023&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;023&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The sixth Rust Gamedev Meetup happened in June. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Wuwxh958P6I&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups take place on
the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt;, and are also &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on in a future meetup, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;taileater&quot;&gt;taileater&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#taileater&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;taileater.gif&quot; alt=&quot;logo of a pixellated snake attempting to eat it&#x27;s own tail&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;taileater (&lt;a href=&quot;https:&#x2F;&#x2F;szunami.itch.io&#x2F;taileater&quot;&gt;itch.io&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;szunami&#x2F;taileater&#x2F;&quot;&gt;GitHub&lt;&#x2F;a&gt;) is a open source puzzle game
in which you eat your own tail to win.&lt;&#x2F;p&gt;
&lt;p&gt;The game is programmed in Rust using the Bevy engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egregoria&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egregoria&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egregoria.jpg&quot; alt=&quot;Egregoria in 3D&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CAaZhUJ&quot;&gt;Discord&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&quot;&gt;@Uriopass&lt;&#x2F;a&gt;
is a simulation oriented city builder that tries
to replicate modern society as well as possible.&lt;&#x2F;p&gt;
&lt;p&gt;It recently upgraded from a 2D top-down view to a
3D third-person camera as seen in the screenshot above.&lt;&#x2F;p&gt;
&lt;p&gt;Elevated roads and bridges are now possible, allowing to build
&lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;img&#x2F;blog_9&#x2F;interchange.jpg&quot;&gt;complex highway interchanges&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Some technical details around the renderer with more screenshots,
along with an architectural overview of the project can be read in the
&lt;a href=&quot;https:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;egregoria_9.html&quot;&gt;9th devlog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;open-combat&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;opencombat.bux.fr&quot;&gt;Open Combat&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#open-combat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;open_combat.jpg&quot; alt=&quot;Open Combat logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;opencombat.bux.fr&quot;&gt;Open Combat&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;OpenCombatGame&quot;&gt;&#x2F;r&#x2F;OpenCombatGame&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;YD2V7XsBQZ&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discourse.opencombat.bux.fr&#x2F;&quot;&gt;Forum&lt;&#x2F;a&gt;)
is a real time tactical game directly inspired by
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Close_Combat_(series)&quot;&gt;Close Combat Series&lt;&#x2F;a&gt;.
The player takes control of soldier units and orders them to win the battles
from a top down 2D view.&lt;&#x2F;p&gt;
&lt;p&gt;The project recently started with Rust language after a Python language proof of
concept in 2017. More info is available at &lt;a href=&quot;https:&#x2F;&#x2F;opencombat.bux.fr&quot;&gt;opencombat.bux.fr&lt;&#x2F;a&gt;,
and you can find a
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=pxVgjBKXlIw&quot;&gt;presentation&lt;&#x2F;a&gt; video and a game
making of &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=3TOEZ7krhvI&quot;&gt;video&lt;&#x2F;a&gt; on YouTube.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;battleship-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deepu105&#x2F;battleship-rs&quot;&gt;Battleship.rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#battleship-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;battleship.gif&quot; alt=&quot;Battleship gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deepu105&#x2F;battleship-rs&quot;&gt;Battleship.rs&lt;&#x2F;a&gt; by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;deepu105&quot;&gt;Deepu&lt;&#x2F;a&gt; is an open source Battleship game for
the terminal built in Rust using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fdehau&#x2F;tui-rs&quot;&gt;tui-rs&lt;&#x2F;a&gt;
crate.&lt;&#x2F;p&gt;
&lt;p&gt;The game uses different ship shapes, unlike the traditional vertical&#x2F;horizontal
shapes, and has multiple game rules to choose from. There are two difficulty
levels as well. The game is supported in Linux, Mac and Docker.&lt;&#x2F;p&gt;
&lt;p&gt;If you have docker installed, you can play the game instantly by running&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span&gt; run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --rm -it&lt;&#x2F;span&gt;&lt;span&gt; deepu105&#x2F;battleship:main
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The next iteration would be to support a WebAssembly version of the same.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blightmud&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Blightmud&#x2F;Blightmud&quot;&gt;Blightmud&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#blightmud&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;blightmud.png&quot; alt=&quot;Blightmud logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Blightmud&#x2F;Blightmud&quot;&gt;Blightmud&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;qnxgUC5&quot;&gt;Discord&lt;&#x2F;a&gt;) is a mud client
for the terminal inspired by &lt;a href=&quot;https:&#x2F;&#x2F;tintin.mudhalla.net&#x2F;&quot;&gt;tintin++&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;tinyfugue.sourceforge.net&#x2F;&quot;&gt;tinyfugue&lt;&#x2F;a&gt;
allowing users to connect and get immersed in the worlds offered by text based
online multi user dungeons known as muds.&lt;&#x2F;p&gt;
&lt;p&gt;The project was birthed in April of 2020 and has come a long way since.  It now
offers granular scripting access using &lt;a href=&quot;https:&#x2F;&#x2F;www.lua.org&#x2F;&quot;&gt;lua&lt;&#x2F;a&gt;, plugin handling, built in
text-to-speech (via &lt;a href=&quot;https:&#x2F;&#x2F;freebsoft.org&#x2F;speechd&quot;&gt;Speech dispatcher&lt;&#x2F;a&gt;), split view scrolling, modern
telnet protocols, and TLS connections to name a few.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-hat-chooses-the-wizard&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lostimmortal.itch.io&#x2F;the-hat-chooses-the-wizard&quot;&gt;The Hat Chooses the Wizard&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-hat-chooses-the-wizard&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hatchooseswizard.jpg&quot; alt=&quot;Level 1-4 of the game &amp;quot;The Hat Chooses the Wizard&amp;quot; running on a Game Boy Advance&quot; &#x2F;&gt;
&lt;em&gt;Runs on real hardware!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Hat Chooses the Wizard is a 2D platformer for the Game Boy Advance.&lt;&#x2F;p&gt;
&lt;p&gt;It was made for this year&#x27;s Game Maker&#x27;s Toolkit (GMTK) game jam with the theme
joined together and came in the top 25% of over 5800 entries. The game plays
over 12 levels with the core mechanic being to throw your hat and then
accelerate towards it. You can play it on a web-based emulator embedded on the
&lt;a href=&quot;https:&#x2F;&#x2F;lostimmortal.itch.io&#x2F;the-hat-chooses-the-wizard&quot;&gt;itch&lt;&#x2F;a&gt; page.&lt;&#x2F;p&gt;
&lt;p&gt;The game is written in pure Rust and uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;corwinkuiper&#x2F;agb&quot;&gt;agb&lt;&#x2F;a&gt; to
interface with the hardware. The library is designed to allow you to write games
without needing a detailed understanding of the hardware while still giving full
access to all of its capabilities. It is under active development with
plenty more features on the way.&lt;&#x2F;p&gt;
&lt;p&gt;You can find the source code for the game &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;corwinkuiper&#x2F;joinedtogether&quot;&gt;here&lt;&#x2F;a&gt; and all
feedback is welcome.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;themengi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vgel.me&#x2F;themengi&quot;&gt;Themengi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#themengi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;themengi.gif&quot; alt=&quot;User highlighting objects in the game world and parsing the phrase &amp;quot;dang puru rupuu kythengi&amp;quot; into the action &amp;quot;open&amp;quot;, object &amp;quot;door&amp;quot;, and mods &amp;quot;red&amp;quot; and &amp;quot;left&amp;quot;.&quot; &#x2F;&gt;
&lt;em&gt;Demonstration of natural language parser with temporary words and grammar.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vgel.me&#x2F;themengi&quot;&gt;Themengi&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;GpparbnXPC&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;voooooogel&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a puzzle adventure game where you learn an alien language,
with completely unknown words and grammar, to navigate the world
and find your way home.&lt;&#x2F;p&gt;
&lt;p&gt;This month the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=gtIphiK7tMs&quot;&gt;first devlog&lt;&#x2F;a&gt; for
Themengi was published, discussing its natural language parser using
Head-Driven Phrase Structure Grammar, the choice to use Bevy, a texture
upscaling technique for faithful pixel art rendering, and implementing an
outline shader in the Bevy render pipeline.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dango&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ernestwong.nz&#x2F;dango-tribute&#x2F;server&#x2F;&quot;&gt;Dango&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dango&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ernestwong.nz&#x2F;dango-tribute&#x2F;server&#x2F;&quot;&gt;&lt;img src=&quot;dango.gif&quot; alt=&quot;Dango bouncing and jumping around&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Cute rice dumplings&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ernestwong.nz&#x2F;dango-tribute&#x2F;server&#x2F;&quot;&gt;Dango&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&#x2F;dango-tribute&quot;&gt;GitHub&lt;&#x2F;a&gt;) is a little multiplayer blob physics sandbox
made by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&quot;&gt;@ErnWong&lt;&#x2F;a&gt; as a tribute to the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=XXDxZ0YGWG8&quot;&gt;Dango Daikazoku&lt;&#x2F;a&gt; from
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;List_of_Clannad_episodes&quot;&gt;Clannad&lt;&#x2F;a&gt;. It was made using various libraries from the Rust community,
including the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt; game engine, the &lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&#x2F;&quot;&gt;NPhysics&lt;&#x2F;a&gt; physics engine, and the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&#x2F;crystalorb&quot;&gt;CrystalOrb&lt;&#x2F;a&gt; networking library. To avoid the costs of running a server, Dango
currently runs the server in the browser and generates a unique URL that lets
other players to join using WebRTC.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fishgame&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;fish-game&quot;&gt;FishGame&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fishgame&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fish.gif&quot; alt=&quot;FishGame&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;fish-game&quot;&gt;FishGame&lt;&#x2F;a&gt; is a multiplayer brawler game made in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;FishGame started as a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;nakama-rs&quot;&gt;nakama-rs&lt;&#x2F;a&gt; showcase, but now it&#x27;s getting more life as
an independent game. To make a transition from a tech demo to a real game,
lots of playtesting and fine-tuning happened this month. Most noticeable
improvements: a new physics system with throwable everything and a new
zoom-to-fit camera system.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hyper-farmer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wilsk.itch.io&#x2F;hyper-farmer&quot;&gt;Hyper Farmer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hyper-farmer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hyperfarmer.png&quot; alt=&quot;Hyper Farmer logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The dubiously named &lt;a href=&quot;https:&#x2F;&#x2F;wilsk.itch.io&#x2F;hyper-farmer&quot;&gt;Hyper Farmer&lt;&#x2F;a&gt; was made for the GMTK Game Jam
using the Bevy engine. For some reason, the player has to pick up all the hay from
their fields using a giant laser slung between two tractors. Apart from the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_game_template&quot;&gt;bevy_game_template&lt;&#x2F;a&gt;, all the artwork, music, and code was
made over about 24 hours. The game can be played in the
&lt;a href=&quot;https:&#x2F;&#x2F;wilsk.itch.io&#x2F;hyper-farmer&quot;&gt;browser&lt;&#x2F;a&gt;, and native builds are available
on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;will-hart&#x2F;cloud-surfer&quot;&gt;github releases&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&quot;&gt;&lt;img src=&quot;wor-dialogue.jpg&quot; alt=&quot;Way of Rhea on Steam&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a picturesque puzzle platformer-without the platforming.
Solve mind-bending color puzzles, unlock new areas of a vibrant hub world, and
talk to NPCs to unravel the mysteries of a world you left behind!&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea is being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt;. Latest Way of
Rhea developments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Most biomes now have narrative arcs, experienced in part through the
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&#x2F;status&#x2F;1400189924889042944&quot;&gt;new dialogue system&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; published
&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;06&#x2F;25&#x2F;when-to-rewrite&#x2F;&quot;&gt;a blog post, &lt;em&gt;When to Rewrite&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; outlining how he views the
rewrite vs improve tradeoff in the Way of Rhea engine.&lt;&#x2F;li&gt;
&lt;li&gt;Controller support was added, controls glyphs shown in game automatically
reflect the most recently used input device.&lt;&#x2F;li&gt;
&lt;li&gt;Fixes a player reported bug where undo&#x2F;redo resulted in a temporary slowdown
due to a lack of communication with the sleep system.&lt;&#x2F;li&gt;
&lt;li&gt;More puzzles!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;weegames&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weegames&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;weegames.jpg&quot; alt=&quot;Weegames menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt; is a fast-paced minigame collection.
The web version now has a counter which tells you how many
of the 41 minigames you&#x27;ve played. Also, the game shows
a newly-added loading screen while downloading the
initial assets.&lt;&#x2F;p&gt;
&lt;p&gt;Note: These updates have not yet been rolled out to the
downloadable Windows version.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;flesh&quot;&gt;Flesh&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.gif&quot; alt=&quot;flesh preview&quot; &#x2F;&gt;
&lt;em&gt;demo build&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Flesh by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_oab&quot;&gt;@im_oab&lt;&#x2F;a&gt; is a 2D-horizontal shmup game with hand-drawn animation and
organic&#x2F;fleshy theme. It is implemented using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;. This month, an internal
demo build was released, with a development journal available on
&lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;drive&#x2F;folders&#x2F;1CppHsiteHDNofsVo2wHNNz_3E9YuK4Ay&quot;&gt;Google Drive&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.png&quot; alt=&quot;Cave run&quot; &#x2F;&gt; &lt;em&gt;Turns out the cave wasn&#x27;t empty&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In June, Veloren released 0.10. During the release party, some of the developers
joined a voice call to stream the game and answer some questions about
development. You can watch that stream &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=NMvEhymkqUw&quot;&gt;here&lt;&#x2F;a&gt;. A lot of metrics
were recorded during the launch, and you can read about them in
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-124&quot;&gt;blog #124&lt;&#x2F;a&gt;. At peak, 118 players were playing at the same
time during the launch.&lt;&#x2F;p&gt;
&lt;p&gt;The plugins system received a tutorial about how to get started. Caves were
overhauled with lots of new content. Veloren has officially moved fully over to
wgpu, which you can read all about in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-125&quot;&gt;blog #125&lt;&#x2F;a&gt;. Work has been
done on hot reloading for easier access of assets in game. Lots of new models
were added to the game, and bosses in dungeons are being overhauled with more
skills to diversify combat.&lt;&#x2F;p&gt;
&lt;p&gt;June&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-123&quot;&gt;#123&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-124&quot;&gt;#124&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-125&quot;&gt;#125&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-126&quot;&gt;#126&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;projectris&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;projectris&quot;&gt;Projectris&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#projectris&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;projectris.png&quot; alt=&quot;projectris&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;projectris&quot;&gt;Projectris&lt;&#x2F;a&gt; is like Tetris, but in 2D and 3D at the same time.
As the 3D piece falls, you can manipulate it, but all that matters
are the shadows it casts on the 2D game boards on either side,
each of which is played independently.&lt;&#x2F;p&gt;
&lt;p&gt;While the full concept is already prototyped, there are still many features to
implement before this is a real game:
scoreboard, increasing fall speed, game over, JUICE.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;@bonsairobo&lt;&#x2F;a&gt; is not actively working on this, but is
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;projectris&quot;&gt;happy to accept PRs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-process&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-process&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;the_process.gif&quot; alt=&quot;The new terrain editor in The Process&quot; &#x2F;&gt;
&lt;em&gt;Building the world, one voxel at a time&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;The Process&lt;&#x2F;a&gt; by @setzer22 is an upcoming game about factory building,
process management, and carrot production,
built with Rust using the Godot game engine!&lt;&#x2F;p&gt;
&lt;p&gt;In this month, the main focus has been towards the addition of a new terrain
editor to speed up the creation of game levels. Terrain meshes are built using
smooth voxels using the implementation in the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;building_blocks_core&quot;&gt;building
blocks&lt;&#x2F;a&gt; crate.&lt;&#x2F;p&gt;
&lt;p&gt;This month has seen the following changes and improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The new &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1406707803637551107&quot;&gt;terrain
editor&lt;&#x2F;a&gt;, with a
minimalistic GUI built in Godot itself.&lt;&#x2F;li&gt;
&lt;li&gt;A new &lt;a href=&quot;https:&#x2F;&#x2F;gfycat.com&#x2F;talkativeneatcatfish&quot;&gt;island&lt;&#x2F;a&gt;, fully made and
procedurally textured with the new editor&lt;&#x2F;li&gt;
&lt;li&gt;Implemented random factory maintenance
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1403986026402619393&quot;&gt;events&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Migration of several old GDScript code into Rust, using the ECS pattern, like
the system for character
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1411410261651738635&quot;&gt;movement&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;o3o8d0&#x2F;experimenting_with_the_building_blocks_crate&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;not-snake&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;Not Snake&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#not-snake&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;notsnake.png&quot; alt=&quot;cube map, low poly dog and giant snake&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;Not Snake&lt;&#x2F;a&gt; is a snake game in 3D with a twist:
you&#x27;re the snake&#x27;s food!&lt;&#x2F;p&gt;
&lt;p&gt;Check out the web version on the &lt;a href=&quot;https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake&quot;&gt;game&#x27;s itch.io page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;space-cakes&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noxim.itch.io&#x2F;spacecakes&quot;&gt;Space:CAKES&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#space-cakes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cakes.png&quot; alt=&quot;screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;noxim.itch.io&#x2F;spacecakes&quot;&gt;Space:CAKES&lt;&#x2F;a&gt; is a sliding, repeating and funky puzzler
about reaching the delicious cupcake across your spaceship.
Made for the GMTK Game Jam.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You play as a cute alien, who has a limited amount of steps.
He turns green when he can walk freely, but once he runs out of steps,
he becomes red and can only push on crates.
Luckily, some crates contain +1 or +2 steps for him,
as long as he can push one into a laser.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;sokoban-sokoban&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;trouv.itch.io&#x2F;sokoban-sokoban&quot;&gt;sokoban-sokoban&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sokoban-sokoban&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sokoban-sokoban.png&quot; alt=&quot;screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;trouv.itch.io&#x2F;sokoban-sokoban&quot;&gt;sokoban-sokoban&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trouv&#x2F;sokoban-sokoban&quot;&gt;source code&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;trouv.itch.io&quot;&gt;@trouv&lt;&#x2F;a&gt;
is a sokoban-like puzzle game made in 48 hours for the GMTK 2021 game jam.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Somebody messed up the graveyard! You can fix it, but your movements
are joined together.
More specifically, the location of the gravestones in the level&#x27;s movement
table determines which movements are joined to which.
When two movements are &amp;quot;joined&amp;quot;, the associated input performs BOTH movements!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;thrustengine-with-simple-shooter-game-demo&quot;&gt;thRustEngine - with simple shooter game demo&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#thrustengine-with-simple-shooter-game-demo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;thrustengine_screenshot.jpg&quot; alt=&quot;thRustEngine screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is a simple descent&#x2F;quake style shooter written to demo
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;experiment9123&#x2F;thrustengine&quot;&gt;thRustEngine&lt;&#x2F;a&gt;. The current repo is a placeholder.&lt;&#x2F;p&gt;
&lt;p&gt;It loads wavefront.OBJ, and Quake1&#x2F;Quake3 BSP worlds, converted to
an internal format for collision and rendering. It uses clustered
forward+ dynamic lighting and normal maps, and loads textures
asynchronously.&lt;&#x2F;p&gt;
&lt;p&gt;The future direction depends on community feedback (a public shared
crate is planned). The current intention is to find a few close
collaborators.&lt;&#x2F;p&gt;
&lt;p&gt;Demo videos: &lt;a href=&quot;https:&#x2F;&#x2F;vimeo.com&#x2F;569777592&quot;&gt;free quake map demo&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;vimeo.com&#x2F;572436649&quot;&gt;custom map demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;obj38y&#x2F;rust_shooter_another_little_update&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rg3d_logo.png&quot; alt=&quot;rg3d&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a game engine that
aims to be easy to use and provide a large set of out-of-box features. Some of
the recent engine updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Initial support for custom rendering techniques.&lt;&#x2F;li&gt;
&lt;li&gt;Word-based wrapping for FormattedText.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to specify material search options when loading a model.&lt;&#x2F;li&gt;
&lt;li&gt;Render sky box in a single draw call.&lt;&#x2F;li&gt;
&lt;li&gt;Fix for resource management issues.&lt;&#x2F;li&gt;
&lt;li&gt;Fix for FBX loader in case of invalid mappings.&lt;&#x2F;li&gt;
&lt;li&gt;Fix for triangulator.&lt;&#x2F;li&gt;
&lt;li&gt;Physics for terrains.&lt;&#x2F;li&gt;
&lt;li&gt;Heightfield visualization.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to pause sound contexts.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;editable&lt;&#x2F;code&gt; flag for text boxes.&lt;&#x2F;li&gt;
&lt;li&gt;Various bug fixes and small improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;rusty-editor updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to add&#x2F;remove&#x2F;edit sound sources&lt;&#x2F;li&gt;
&lt;li&gt;Model import dialog window.&lt;&#x2F;li&gt;
&lt;li&gt;Embed and fonts icons in the binary, which makes package distribution
easier.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;.deb&lt;&#x2F;code&gt; and &lt;code&gt;.rpm&lt;&#x2F;code&gt; packages for Linux&lt;&#x2F;li&gt;
&lt;li&gt;Camera fix + ability to preview scene cameras&lt;&#x2F;li&gt;
&lt;li&gt;Icons for &amp;quot;shapeless&amp;quot; (lights, sound sources) objects in the scene.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;a-trig-less-line-of-sight-algorithm-for-2d-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;basstabs.github.io&#x2F;2d-line-of-sight&#x2F;&quot;&gt;A Trig-less Line of Sight Algorithm for 2D Games&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-trig-less-line-of-sight-algorithm-for-2d-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;lineofsight.png&quot; alt=&quot;2D Sight Example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;basstabs&quot;&gt;@basstabs&lt;&#x2F;a&gt; published a tutorial that explains how to write a
line of sight algorithm for 2D games in Rust without using trigonometry or
square roots. It includes vector diagrams and typeset math to explain the ideas
behind each stage of the algorithm, source code for each step, tests to verify
the accuracy of the methods, and suggestions for further improvements.
Additionally, the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;basstabs&#x2F;2d-line-of-sight&quot;&gt;repository&lt;&#x2F;a&gt; contains benchmarks
and a sample application written in &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;nx79kq&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;when-to-rewrite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;06&#x2F;25&#x2F;when-to-rewrite&#x2F;&quot;&gt;When to Rewrite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#when-to-rewrite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;06&#x2F;25&#x2F;when-to-rewrite&#x2F;&quot;&gt;&lt;img src=&quot;when-to-rewrite.jpg&quot; alt=&quot;when-to-rewrite&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;06&#x2F;25&#x2F;when-to-rewrite&#x2F;&quot;&gt;a blog post&lt;&#x2F;a&gt; offering an
opinion on rewrites vs incremental migrations informed by his work on the
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; engine.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A working system is a valuable asset. It works. It lets you test new ideas
cheaply. Don&#x27;t take that for granted.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;o8dy0r&#x2F;when_to_rewrite&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;writing-the-bevy-retro-renderer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;writing-bevy-retros-renderer&quot;&gt;Writing the Bevy Retro Renderer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#writing-the-bevy-retro-renderer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&quot;&gt;@katharostech&lt;&#x2F;a&gt; published an article about their experiences writing the render
for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retrograde&quot;&gt;Bevy Retro&lt;&#x2F;a&gt;. They walk through the different strategies and APIs
they tried and explain why they wrote their own renderer in the first place.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;game-development-with-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;pragmatic-programmers&#x2F;game-development-with-rust-31147f7b6096&quot;&gt;Game Development with Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-development-with-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;&quot;&gt;@thebracket&lt;&#x2F;a&gt; published an article on the current state of Rust Game
Development. It covers a few games and engines made in Rust, links to some
resources for integrating Rust into major game engines (Unity and Unreal).
The article then links to some tutorials and resources for learning Rust
game development at different skill and experience levels.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-to-make-plugins-system-with-rust-and-webassembly&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devblog.arcana.rs&#x2F;how-to-make-plugins-system-with-rust-and-webassembly&quot;&gt;How to make plugins system with Rust and WebAssembly&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-make-plugins-system-with-rust-and-webassembly&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;&quot;&gt;@zakarumych&lt;&#x2F;a&gt; published an article about their experience creating
a fully safe plugins system using plugins compiled to WebAssembly.
It provides reasoning for choosing WASM in specific scenario
and contains strategies for interacting with WASM modules embedded
into an application,
including dealing with dynamic memory of the module,
string and array operations, function pointers, etc.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;getting-started-with-ecs-using-planck-ecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jojolepro.com&#x2F;blog&#x2F;2021-06-01_getting_started_with_ecs&quot;&gt;Getting Started with ECS using Planck ECS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#getting-started-with-ecs-using-planck-ecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;planck_ecs.png&quot; alt=&quot;planck logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;planck_ecs&quot;&gt;planck_ecs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;jojolepro&quot;&gt;@jojolepro&lt;&#x2F;a&gt; is a minimalist and safe ECS library.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;jojolepro&quot;&gt;@jojolepro&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;jojolepro.com&#x2F;blog&#x2F;2021-06-01_getting_started_with_ecs&quot;&gt;tutorial&lt;&#x2F;a&gt;
that describes how to use ECSes in general and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;planck_ecs&quot;&gt;planck_ecs&lt;&#x2F;a&gt; specifically.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;sugarcubes&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;henryksloan.github.io&#x2F;sugarcubes&#x2F;&quot;&gt;Sugarcubes&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sugarcubes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sugarcubes.png&quot; alt=&quot;Sugarcubes Example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;henryksloan.github.io&#x2F;sugarcubes&#x2F;&quot;&gt;Sugarcubes&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;henryksloan&quot;&gt;@henryksloan&lt;&#x2F;a&gt; is a tool for designing and testing automata.&lt;&#x2F;p&gt;
&lt;p&gt;Sugarcubes allows for easy creation of models used in the theory of computing.
It is designed to be a more intuitive and useful alternative to JFLAP,
the most popular tool for designing automata and formal languages.
It uses macroquad for the editor, and egui for the toolbars. Sugarcubes
currently features a fully functional finite automaton editor and simulator,
and many other models, editing features and simulations are planned.&lt;&#x2F;p&gt;
&lt;p&gt;You can check out a &lt;a href=&quot;https:&#x2F;&#x2F;henryksloan.github.io&#x2F;sugarcubes&#x2F;&quot;&gt;live WASM demo here&lt;&#x2F;a&gt;,
or the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;henryksloan&#x2F;sugarcubes&quot;&gt;source code on Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rusty-slider&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ollej.github.io&#x2F;rusty-slider&quot;&gt;Rusty Slider&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-slider&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustyslider.png&quot; alt=&quot;Rusty Slider code block example&quot; &#x2F;&gt;
&lt;em&gt;Supports syntax highlighting of code blocks&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ollej.github.io&#x2F;rusty-slider&quot;&gt;Rusty Slider&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ollej&quot;&gt;@ollej&lt;&#x2F;a&gt; is a markdown slideshow viewer
written with macroquad.&lt;&#x2F;p&gt;
&lt;p&gt;The game engine Macroquad can be used for more than just games. It’s also a
great way to quickly build multi-platform tools with graphics.&lt;&#x2F;p&gt;
&lt;p&gt;It’s possible to write presentations in plain text using Markdown. The
application runs natively on all major platforms, and can also be used within
a browser.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Supports headers, bold&#x2F;italic, blockquotes, lists, and code blocks with
syntax highlighting.&lt;&#x2F;li&gt;
&lt;li&gt;Automatically change slides.&lt;&#x2F;li&gt;
&lt;li&gt;Themes separated from content.&lt;&#x2F;li&gt;
&lt;li&gt;Toggle a CRT shader.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The latest feature added was to execute bash code blocks. The output of the
execution will be shown below the code block. This is meant to be used for
demo purposes, to show actual results of commands.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite-cherry-tree.png&quot; alt=&quot;Geometric cherry tree&quot; &#x2F;&gt;
&lt;em&gt;Geometric cherry tree artwork by BillyDM, winner of last month&#x27;s first
Graphite art contest&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-development vector and
raster graphics editor built on a non-destructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;Since last newsletter, the editor has received the ability to select layers via
the layer panel and by clicking or dragging a box selection in the
viewport. Selected layers can be deleted, duplicated, and copy&#x2F;pasted.&lt;&#x2F;p&gt;
&lt;p&gt;It is now possible to create, edit, and close multiple documents in their own
editor tabs. Additional frontend cleanup and polish has also improved many
parts of the editor experience.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, support for transforms was added to the layers and document, paving
the way for moving&#x2F;scaling&#x2F;rotating layers and the whole document within the
viewport.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.design&quot;&gt;Try it right now in your browser.&lt;&#x2F;a&gt; Graphite is making
rapid progress towards becoming a non-destructive, procedural graphics editor
suitable of replacing traditional 2D DCC applications. Please
&lt;a href=&quot;https:&#x2F;&#x2F;discord.graphite.design&quot;&gt;join the Discord&lt;&#x2F;a&gt; - and consider asking for a tour of the
code and how you can help!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;texture-generator-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Orchaldir&#x2F;texture_generator&quot;&gt;texture_generator&lt;&#x2F;a&gt; v0.5&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#texture-generator-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;texture_generator.png&quot; alt=&quot;A black&amp;amp;white top-down image of some building&quot; &#x2F;&gt;
&lt;em&gt;An depth image example&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Orchaldir&#x2F;texture_generator&quot;&gt;texture_generator&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Orchaldir&quot;&gt;Orchaldir&lt;&#x2F;a&gt; is a library to generate textures,
and a library to use those textures to render tilemaps.&lt;&#x2F;p&gt;
&lt;p&gt;This month the v0.5 version was released. Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The editor was switched to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Layered textures.&lt;&#x2F;li&gt;
&lt;li&gt;Door handles.&lt;&#x2F;li&gt;
&lt;li&gt;More options for depth calculation: depth gradient along X or Y
and barrel shape.&lt;&#x2F;li&gt;
&lt;li&gt;Furniture can now have a fixed size or fill the selected area&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;nz5ban&#x2F;i_switched_my_tilemap_editor_to_iced&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;backroll-rs-and-ggrs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&quot;&gt;backroll-rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#backroll-rs-and-ggrs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&quot;&gt;backroll-rs&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;VuZhs9V&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;backroll&quot;&gt;crates.io&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;james7132&quot;&gt;@james7132&lt;&#x2F;a&gt; and
&lt;a href=&quot;%5Bcrates.io%5D(https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ggrs)&quot;&gt;GGRS&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;g_schup&quot;&gt;@g_schup&lt;&#x2F;a&gt; are pure
Rust implementations of the &lt;a href=&quot;https:&#x2F;&#x2F;www.ggpo.net&#x2F;&quot;&gt;GGPO&lt;&#x2F;a&gt; rollback networking library.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;rollback.jpg&quot; alt=&quot;Evo Moment 37&quot; &#x2F;&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JzS96auqau0&quot;&gt;Evo Moment 37&lt;&#x2F;a&gt;:
Only offline or with rollback!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rollback networking is a peer-to-peer network technique designed to hide
network latency in fast-paced games with precise inputs. Traditional techniques
account for network transmission time by delaying the game execution, resulting
in a sluggish game-feel. Rollback uses input prediction and speculative
execution instead. Upon receiving inputs from remote clients, resimulation of
incorrect game states occurs. This allows for gameplay that &amp;quot;feels just
like offline&amp;quot;. The open source standard for rollback netcode &lt;a href=&quot;https:&#x2F;&#x2F;www.ggpo.net&#x2F;&quot;&gt;GGPO&lt;&#x2F;a&gt; is used
in successful games like Skullgirls, Guilty Gear XX Accent Core +R or
Fightcade. For further explanation about rollback,
&lt;a href=&quot;https:&#x2F;&#x2F;ki.infil.net&#x2F;w02-netcode.html&quot;&gt;click here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Two projects in Rust were independently created to provide a working
implementation as well as helpful resources for developers.
backroll-rs features an added abstraction for the transportation layer and
also provides a bevy plugin, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;tree&#x2F;main&#x2F;bevy_backroll&quot;&gt;bevy-backroll&lt;&#x2F;a&gt;. GGRS replaces the
C-style callback API of GGPO with a simpler, more understandable control flow.
The authors of both libraries recommend backroll-rs for development,
as it is currently more actively collaborated on.
GGRS is recommended as a learning resource and entry point,
with a plethora of internal documentation and explanation.&lt;&#x2F;p&gt;
&lt;p&gt;The main requirement to make use of both presented libraries is determinism
in your game execution. Resimulation requires that the result of progressing
the game state depending on the given inputs yield the exact same results
every time. Additionally, you need to be able to load, save and progress
your gamestate without rendering the outcome.&lt;&#x2F;p&gt;
&lt;p&gt;If you are interested in integrating rollback networking into your game or
just want to chat with other rollback developers (not limited to Rust),
check out the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;8FKKhCRCCE&quot;&gt;GGPO Developers Discord&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crystalorb&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&#x2F;crystalorb&quot;&gt;CrystalOrb&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crystalorb&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ernestwong.nz&#x2F;crystalorb&#x2F;demo&quot;&gt;&lt;img src=&quot;crystalorb.gif&quot; alt=&quot;CrystalOrb demo animation&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Interactive &lt;a href=&quot;https:&#x2F;&#x2F;ernestwong.nz&#x2F;crystalorb&#x2F;demo&quot;&gt;demo&lt;&#x2F;a&gt; that uses the &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; physics engine.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&#x2F;crystalorb&quot;&gt;CrystalOrb&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErnWong&quot;&gt;@ErnWong&lt;&#x2F;a&gt; is a new networking library that aims to help
fast-paced client-server games synchronize their game state across multiple
clients. Just like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&quot;&gt;backroll-rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gschup&#x2F;ggrs&quot;&gt;GGRS&lt;&#x2F;a&gt;, each CrystalOrb client predicts
the next game state without waiting for other remote players&#x27; inputs to arrive.
Unlike backroll-rs&#x27;s and GGRS&#x27;s peer-to-peer approach which only send input
data between its peers, CrystalOrb relies on having a server to send
authoritative snapshots of the entire game state to each client. In response,
each client unconditionally rolls-back to that snapshot. Although this may lead
to higher network and memory usage, it means that CrystalOrb clients can join
and leave at any time, and games that cannot guarantee full-determinism can
still work with CrystalOrb.&lt;&#x2F;p&gt;
&lt;p&gt;This library was written as a learning exercise for the author, and as such,
the author warns that this library may not be suitable for serious games.&lt;&#x2F;p&gt;
&lt;p&gt;There is an &lt;a href=&quot;https:&#x2F;&#x2F;ernestwong.nz&#x2F;crystalorb&#x2F;demo&quot;&gt;interactive demo&lt;&#x2F;a&gt; of CrystalOrb that features the
&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; physics engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;glutin-and-winit&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt; (and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glutin-and-winit&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;winit-bug-1.gif&quot; alt=&quot;Animated image showing a window that is opened with a spinning cursor on top&quot; &#x2F;&gt;
&lt;em&gt;This cursor may be waiting &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues&#x2F;1682&quot;&gt;in vain&lt;&#x2F;a&gt;, but your patience shall be rewarded.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt; is a low-level library for OpenGL context creation, written in pure Rust.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt; uses and re-exports &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;, which handles window creation and management,
as well as various input devices.&lt;&#x2F;p&gt;
&lt;p&gt;This month, glutin 0.27.0 was released, which makes glutin use the latest version
of winit (0.25.0), which was released around a month prior to glutin 0.27.0. Usually,
we try to keep glutin synced with winit, but we couldn&#x27;t quite manage to do it this
time since the person who&#x27;d usually take responsibility for releasing a new version
of glutin was unavailable, and no-one had the role of &amp;quot;back-up releaser&amp;quot;.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maroider&quot;&gt;@maroider&lt;&#x2F;a&gt; has offered to fill this role for now.&lt;&#x2F;p&gt;
&lt;p&gt;The upgrade to winit 0.25.0 brings with it a slew of bugfixes, a couple of new
features, and a single breaking change to
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;winit&#x2F;0.24.0&#x2F;x86_64-apple-darwin&#x2F;winit&#x2F;platform&#x2F;macos&#x2F;trait.WindowBuilderExtMacOS.html#tymethod.with_activation_policy&quot;&gt;WindowBuilderExtMacOS::with_activation_policy&lt;&#x2F;a&gt;, which has been replaced by
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;winit&#x2F;0.25.0&#x2F;x86_64-apple-darwin&#x2F;winit&#x2F;platform&#x2F;macos&#x2F;trait.EventLoopExtMacOS.html#tymethod.set_activation_policy&quot;&gt;EventLoopExtMacOS::set_activation_policy&lt;&#x2F;a&gt;. For a full list of changes, refer
to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#0250-2021-05-15&quot;&gt;winit&#x27;s changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The departure and disappearance of a couple of maintainers has left winit in need
of someone knowledgeable with X11 in order to review pull requests and address
various issues. Other backends also need some more love, but X11 is the most
pressing.&lt;&#x2F;p&gt;
&lt;p&gt;The project could also use more helping hands in general, in anything from
mapping out platform differences and triaging bugs to reviewing PRs
and tackling outstanding issues.
The current maintainers would also be happy to have you even if
all you do is answer platform-specific questions for them.
If you&#x27;re interested, come say hi in their &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#Glutin:matrix.org&quot;&gt;matrix&lt;&#x2F;a&gt; channel or on
any of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit#contact-us&quot;&gt;other services&lt;&#x2F;a&gt; bridged with matrix.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui.gif&quot; alt=&quot;egui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&quot;&gt;@emilk&lt;&#x2F;a&gt; is an easy-to-use immediate mode GUI library in pure Rust.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;version 0.13&lt;&#x2F;a&gt; of egui was released, with a new visual style,
resizable panels, more powerful plots, and more.&lt;&#x2F;p&gt;
&lt;p&gt;You can try out egui in the &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;o76y9x&#x2F;announcing_egui_013&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erupt&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Friz64&#x2F;erupt&quot;&gt;erupt&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#erupt&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;erupt.svg&quot; alt=&quot;erupt logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Friz64&#x2F;erupt&quot;&gt;erupt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;blog.friz64.de&#x2F;about&quot;&gt;@Friz64&lt;&#x2F;a&gt; provides bindings to the Vulkan API.&lt;&#x2F;p&gt;
&lt;p&gt;Since being last mentioned in the newsletter shortly after its release, erupt
has undergone significant development. The generator, erupt&#x27;s heart, has been
rewritten from scratch with the aim to improve maintainability. On top of that,
many bugs were fixed, the function loader was rewritten and usability was
improved while always keeping up to date with the latest Vulkan Headers as best
as possible.&lt;&#x2F;p&gt;
&lt;p&gt;The ecosystem has gained traction, with many people using the crate for their
projects. Pure Rust Vulkan allocators with support for erupt have been released.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;smooth-bevy-cameras&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;smooth-bevy-cameras&quot;&gt;smooth-bevy-cameras&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#smooth-bevy-cameras&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;smooth-bevy-cameras&quot;&gt;smooth-bevy-cameras&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;@bonsairobo&lt;&#x2F;a&gt; is a small plugin for Bevy Engine that
makes it simple to have &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Exponential_smoothing&quot;&gt;exponentially smoothed&lt;&#x2F;a&gt; camera transforms in your game.
Just add a new bundle to your camera entity,
and rather than updating a &lt;code&gt;Transform&lt;&#x2F;code&gt; directly, you can just update the &lt;code&gt;eye&lt;&#x2F;code&gt;
and &lt;code&gt;target&lt;&#x2F;code&gt; values of a &lt;code&gt;LookTransform&lt;&#x2F;code&gt;, which will be automatically
synchronized to the &lt;code&gt;Transform&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Several example controllers are provided as well:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;First Person&lt;&#x2F;li&gt;
&lt;li&gt;Orbit&lt;&#x2F;li&gt;
&lt;li&gt;Unreal Engine Viewport&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wgpu-family-re-union&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; family re-union&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-family-re-union&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-family-reunion.jpg&quot; alt=&quot;wgpu family reunion&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;webgpu&#x2F;&quot;&gt;WebGPU&lt;&#x2F;a&gt; implementation in Rust. It is safe, efficient,
and portable: it can target both native and the Web.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;milestone&#x2F;9?closed=1&quot;&gt;Family reunion&lt;&#x2F;a&gt; is by far the biggest change in wgpu project since
the inception. First, the Rust API of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt; was moved to the main
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; repository. Second, the whole base was relicensed under MIT&#x2F;Apache2.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-hal&lt;&#x2F;a&gt; - the Vulkan Portability-like graphics API abstraction -
was detached from the project. Instead, wgpu got its own in-house unsafe
abstraction called &amp;quot;wgpu-hal&amp;quot; developed within the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; repository.&lt;&#x2F;p&gt;
&lt;p&gt;The team released &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;wgpu&#x2F;0.9.0&quot;&gt;wgpu-0.9&lt;&#x2F;a&gt; right before this transition, to give the new
graphics infrastructure more time to take shape. At the time of writing,
supported backends on the new HAL include Vulkan, Metal, and OpenGL ES3.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, the testing infrastructure received a major upgrade. It started
rendering the examples on the available adapters and comparing the results
with reference images.
This includes automatic testing using software adapters on CI.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rafx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;rafx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rafx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=HlJsgbGyl0I&quot;&gt;&lt;img src=&quot;rafx-flythrough-demo.jpg&quot; alt=&quot;Rafx Flythrough Demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;A scene exported via blender with animated camera motion, &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=HlJsgbGyl0I&quot;&gt;watch the demo on youtube&lt;&#x2F;a&gt;!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;Rafx&lt;&#x2F;a&gt; is a multi-backend renderer that optionally integrates with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;distill&lt;&#x2F;a&gt; asset pipeline.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the asset pipeline received almost all the attention. A custom
blender add-on was prototyped, and several project layouts were tested to
decide on &amp;quot;best practices&amp;quot; to recommend for anyone that wants to use &lt;code&gt;rafx&lt;&#x2F;code&gt;
with 3d assets.&lt;&#x2F;p&gt;
&lt;p&gt;Using a custom add-on will enable a workflow that supports large scenes with
many assets. The add-on currently exports textures, materials, meshes, models
(a collection of meshes of varying LOD levels), and prefabs (a list of lights,
meshes, etc. to place in the world).&lt;&#x2F;p&gt;
&lt;p&gt;Some commercial art packs with varying art styles and complexity have been
ported to this pipeline, and one of them was loaded into the demo. A
fly-through camera was animated and exported out as json to demonstrate the
scene.&lt;&#x2F;p&gt;
&lt;p&gt;After prototyping is complete, details and lessons learned will be
shared in hopes that it will be helpful to other projects in the rust
community, even if they do not use rafx directly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egui-tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;egui-tetra&quot;&gt;egui-tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui-tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;egui-tetra&quot;&gt;egui-tetra&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;egui-tetra&quot;&gt;GitHub&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt; is a library
that integrates &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;, an immediate mode GUI library,
with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;, a 2D game framework.&lt;&#x2F;p&gt;
&lt;p&gt;egui-tetra provides helpers for integrating egui with Tetra&#x27;s event loop and
rendering the GUI.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;o8jbmg&#x2F;eguitetra_v010_egui_integration&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-midi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&#x2F;bevy_midi&quot;&gt;bevy_midi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-midi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_midi_logo.svg&quot; alt=&quot;bevy_midi logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&#x2F;bevy_midi&quot;&gt;bevy_midi&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&quot;&gt;@BlackPhlox&lt;&#x2F;a&gt; is a new bevy plugin that uses
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boddlnagg&#x2F;midir&quot;&gt;midir&lt;&#x2F;a&gt; to interact with the bevy game engine.&lt;&#x2F;p&gt;
&lt;p&gt;It started out with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&#x2F;bevy_osc&quot;&gt;bevy_osc&lt;&#x2F;a&gt; as a
proof-of-concept interfacing with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nannou-org&#x2F;nannou_osc&quot;&gt;nannou_osc&lt;&#x2F;a&gt;
and using other osc software to communicate with bevy.
Soon, realizing that nannou_osc is not that different
from how you interface with midi, bevy_midi was born.&lt;&#x2F;p&gt;
&lt;p&gt;Here is one of the examples which you can use a midi controller
to play piano with &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;channels&#x2F;691052431525675048&#x2F;692648638823923732&#x2F;857177113923682304&quot;&gt;demo_audio&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The plugin is still in its infancy.
So it still has some performance issues, so
any feedback and contributions are highly appreciated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-config-cam&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&#x2F;bevy_config_cam&quot;&gt;bevy_config_cam&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-config-cam&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_config_cam_logo.svg&quot; alt=&quot;bevy_config_cam logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&#x2F;bevy_config_cam&quot;&gt;bevy_config_cam&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlackPhlox&quot;&gt;@BlackPhlox&lt;&#x2F;a&gt;
is an all-in-one purpose camera&#x2F;player controller for bevy.&lt;&#x2F;p&gt;
&lt;p&gt;With focus on plug-and-play, flexibility and ease of use, this bevy plugin is
for anyone who is prototyping in 3D and doesn&#x27;t want the hassle of programming
a player-controller from scratch. Instantly switch between camera modes such as
Tracking to Topdown, Follow Behind, FPS and Free and more.&lt;&#x2F;p&gt;
&lt;p&gt;The plugin is very new.
So any feedback and contributions are highly appreciated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;assets-manager&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&quot;&gt;assets_manager&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#assets-manager&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&quot;&gt;assets_manager&lt;&#x2F;a&gt; provides easy file loading and caching, with a focus on
hot-reloading.&lt;&#x2F;p&gt;
&lt;p&gt;In June was released version 0.5.0, which came with many new features.
&lt;code&gt;assets_manager&lt;&#x2F;code&gt; has now built-in support for loading sounds and images, and
Zip archive were added as a new source to load assets from. Additionally, the
API around directories was reworked to be more powerful, and performances were
improved a bit.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22difficulty%3A+easy%22&quot;&gt;winit&#x27;s &amp;quot;difficulty: easy&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu-rs&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ogc8qy&#x2F;this_month_in_rust_gamedev_23_june_2021&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1413193117176565765&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #22 - May 2021</title>
            <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/022/</link>
            <guid>https://gamedev.rs/news/022/</guid>
            <description>&lt;p&gt;Welcome to the 22nd issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;022&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;022&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;022&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;022&#x2F;#tooling-updates&quot;&gt;Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;022&#x2F;#library-updates&quot;&gt;Library Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;022&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:
```
### [Title]
![image&#x2F;GIF description](image link)
_Optional image caption_
A paragraph or two with a summary and [useful links].
_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_
[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```
If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The fifth Rust Gamedev Meetup happened in May. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=6drrul3p_hU&quot;&gt;here on Youtube&lt;&#x2F;a&gt;. The meetups take place on
the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord
server&lt;&#x2F;a&gt;, and can also be &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on in a future meetup, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;flesh&quot;&gt;Flesh&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.gif&quot; alt=&quot;flesh preview&quot; &#x2F;&gt;
&lt;em&gt;a new enemy&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Flesh by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_oab&quot;&gt;@im_oab&lt;&#x2F;a&gt; is a 2D-horizontal shmup game with hand-drawn animation and
organic&#x2F;fleshy theme. It is implemented using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;. This month&#x27;s updates
include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Add (internal use) level editor.&lt;&#x2F;li&gt;
&lt;li&gt;Add new enemy types.&lt;&#x2F;li&gt;
&lt;li&gt;Prepare to release a short demo next month for collecting feedback.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Airship&quot; &#x2F;&gt; &lt;em&gt;The beginning of an exciting journey&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;Veloren&#x27;s 3rd birthday was at the end of May, on the 25th! During the month,
lots of systems were overhauled. Music changes were made to only play certain
tracks in certain areas. Econsim was optimized, and many bugs were fixed. The
minimap was overhauled, with many quality-of-life and visual improvements.
Terrain compression speed was worked on, with many trials of different
compression techniques.&lt;&#x2F;p&gt;
&lt;p&gt;The large physics overhaul was merged, and lots of patches are being added to
issues that popped up from it. You can see a small flight in action
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;Veloren&#x2F;comments&#x2F;nc4tvo&#x2F;i_cant_believe_how_beautiful_this_game_is&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;. Dungeons have been balanced, and many weapons have also
seen changes. In June, 0.10 will be released.&lt;&#x2F;p&gt;
&lt;p&gt;May&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-118&quot;&gt;#118&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-119&quot;&gt;#119&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-120&quot;&gt;#120&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-121&quot;&gt;#121&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-122&quot;&gt;#122&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.png&quot; alt=&quot;Most of West Seattle has poor access to public libraries&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CarlinoDustin&quot;&gt;@dabreegster&lt;&#x2F;a&gt; is a traffic simulation game exploring how small
changes to roads affect cyclists, transit users, pedestrians, and drivers, with
support for any city with OpenStreetMap coverage. The project aims to engage
more citizens with transportation planning, letting people advocate for real
changes they want to see.&lt;&#x2F;p&gt;
&lt;p&gt;In May, travel time stopped being the only &amp;quot;score&amp;quot; for how well road changes
work. Risk exposure of cyclists crossing dangerous intersections or travelling
in front of high-speed traffic is now measured, with lots of data visualization
work by Michael. Trevor also revived the 15-minute isochrone tool, finding
areas of a city without easy access to education, hospitals, or other
facilities. We also moved the map import process, with over 100 supported maps,
to the cloud from a single poor laptop. OpenStreetMap importing now handles
multiple turn lanes, U-turns, and stop signs much better.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-process&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;&quot;&gt;The Process&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-process&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;the_process.gif&quot; alt=&quot;Animated image showing a small factory in the middle of the game island&quot; &#x2F;&gt;
&lt;em&gt;This factory has never looked livelier!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;&quot;&gt;The Process&lt;&#x2F;a&gt; by @setzer22 is an upcoming game about factory building, process
management and carrot production, built with Rust using the Godot game engine!&lt;&#x2F;p&gt;
&lt;p&gt;This month has been focused on improving the game&#x27;s UI and extending the machine
logistics system, but there was also room for a few cosmetic improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved visualization of connections in the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1391484080798281728&quot;&gt;logistic
network&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Implemented configurable filters for machines to build a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1392894719311613953&quot;&gt;sorting
machine&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;li&gt;New materials and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1396175924652019718&quot;&gt;terrain
shader&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1399774534417498121&quot;&gt;Trees and dynamically updating
grass&lt;&#x2F;a&gt; using
instanced rendering.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;nbmfvz&#x2F;better_logistics_in_the_process_made_with_godot&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1391484080798281728&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;pGLOWrpg&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg_progress.gif&quot; alt=&quot;Game features&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;pGLOWrpg&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt;
is a Procedurally Generated Living Open World RPG,
a long-term project in development, which aims to be a narrative text-based game
with maximum portability and accessibility.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Implemented dev features test arena.&lt;&#x2F;li&gt;
&lt;li&gt;Implemented entity system draft.&lt;&#x2F;li&gt;
&lt;li&gt;Sanitized coordinate systems everywhere (ooof!)&lt;&#x2F;li&gt;
&lt;li&gt;Much refactoring.&lt;&#x2F;li&gt;
&lt;li&gt;Resumed river generation development.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;project-yawc&quot;&gt;Project YAWC&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#project-yawc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;unbroken_lynx.png&quot; alt=&quot;A map in Project YAWC being built.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project YAWC (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ProjectYawc&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a turn-based
strategy game built in GGEZ, being developed by junkmail.&lt;&#x2F;p&gt;
&lt;p&gt;May saw the release of Alpha 5.4, including interface improvements,
balance changes, new units, new maps, and netcode improvements.&lt;&#x2F;p&gt;
&lt;p&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;w22ohPGNk58fo9bv6&quot;&gt;alpha access request form&lt;&#x2F;a&gt; is available,
if you want to try it out.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bounty-bros&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-update-3-sound-and-ui&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bounty-bros&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.github.io&#x2F;skipngo_pre-releases&#x2F;refs&#x2F;tags&#x2F;pre-release-1&#x2F;?asset_url=https:&#x2F;&#x2F;katharostech.github.io&#x2F;bounty-bros_pre-releases&#x2F;1&quot;&gt;&lt;img src=&quot;bounty-bros.png&quot; alt=&quot;bounty-bros-title-screen&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click the image to play the game in your browser!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-update-3-sound-and-ui&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt; is a prototype game, similar to the old Legend of
Zelda® games, developed by &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&quot;&gt;Katharos Technology&lt;&#x2F;a&gt; as a testing
ground for a future commercial game.&lt;&#x2F;p&gt;
&lt;p&gt;The last two months of development was primarily focused on sound and user
interface:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Music will play in different areas of the map and fade in when walking into
an area with different music.&lt;&#x2F;li&gt;
&lt;li&gt;In-game UI is now functional including a new start menu and a simple settings
menu to toggle the CRT filter and pixel aspect ratio.&lt;&#x2F;li&gt;
&lt;li&gt;The web player now has a simple loading icon instead of a solid black screen.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The web version was re-built and published under a new link so you can &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.github.io&#x2F;skipngo_pre-releases&#x2F;refs&#x2F;tags&#x2F;pre-release-1&#x2F;?asset_url=https:&#x2F;&#x2F;katharostech.github.io&#x2F;bounty-bros_pre-releases&#x2F;1&quot;&gt;try it
in your browser&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can read the full update in the &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-update-3-sound-and-ui&quot;&gt;Blog Post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;harvest-hero-harvest-hero-origins&quot;&gt;Harvest Hero &amp;amp; Harvest Hero Origins&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero-harvest-hero-origins&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;hho.gif&quot; alt=&quot;Harvest Hero Origins supports local multiplayer&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Harvest Hero is currently on hold for now. After
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GemdropGames&quot;&gt;Gemdrop Games&lt;&#x2F;a&gt; was formed, it was decided
that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; needed to be tested to ensure it can withstand cross
publishing.
This means creating a smaller game in the
engine in order to figure out the publishing process for
Steam, Itch, Nintendo Switch, and guarantee its viability.&lt;&#x2F;p&gt;
&lt;p&gt;This resulted in the birth of &lt;a href=&quot;https:&#x2F;&#x2F;gemdrop-games.itch.io&#x2F;harvest-hero-origins&quot;&gt;Harvest Hero Origins&lt;&#x2F;a&gt;, a small wave
defense arcade game with local co-op! Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CJRbxQn3d9&quot;&gt;Gemdrop Games Discord&lt;&#x2F;a&gt;
to stay up to date with these games.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Story Mode&lt;&#x2F;li&gt;
&lt;li&gt;Survival Mode (with local co-op)
&lt;ul&gt;
&lt;li&gt;Unlockable skins&lt;&#x2F;li&gt;
&lt;li&gt;2 unlockable playable characters&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;outer-wonders&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;Outer Wonders&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#outer-wonders&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;outer-wonders.gif&quot; alt=&quot;Animation showing Bibi, the main protagonist of Outer Wonders, starting from the top entrance of a puzzle, rolling from obstacle to obstacle, leaning on bushes, flowers, and trees to reach the bottom exit of the puzzle&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;Outer Wonders&lt;&#x2F;a&gt; is a colorful, pixel art, puzzle-based adventure game
developed by &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&quot;&gt;Utopixel&lt;&#x2F;a&gt; where you play as Bibi, a cute round monkey who
enjoys rolling in straight lines. Explore a whimsical nature where
altering the environment is key to progress, and solve puzzles to protect
its wonders.&lt;&#x2F;p&gt;
&lt;p&gt;Outer Wonders can be downloaded for Linux and Windows from &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;May was mostly dedicated to code cleaning, small improvements, as well as
blogging and community building. Updates of the month include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Refactored UI code to streamline menu stacking and ease the implementation
of an upcoming options menu.&lt;&#x2F;li&gt;
&lt;li&gt;Added support for menu navigation using the D-Pad alongside the existing
analog stick support.&lt;&#x2F;li&gt;
&lt;li&gt;Published a blog post about building Outer Wonders for Linux&#x2F;itch.io
(&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;en&#x2F;blog&#x2F;building-outer-wonders-for-linux&#x2F;&quot;&gt;english&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;fr&#x2F;blog&#x2F;adaptation-outer-wonders-linux&#x2F;&quot;&gt;french&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;Posted weekly puzzles &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;utopixel&#x2F;status&#x2F;1389984537170620422&quot;&gt;#16&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;utopixel&#x2F;status&#x2F;1392526232596541449&quot;&gt;#17&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;utopixel&#x2F;status&#x2F;1395079712020602884&quot;&gt;#18&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;utopixel&#x2F;status&#x2F;1397614237187551237&quot;&gt;#19&lt;&#x2F;a&gt; on social media for players wishing to give puzzles a
try prior to downloading the game.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;nfgxjl&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=27244017&quot;&gt;Hacker News&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rpg-cli&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facundoolano&#x2F;rpg-cli&quot;&gt;rpg-cli&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rpg-cli&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rpg-cli.png&quot; alt=&quot;agent stats and a fight with a spider in ~&#x2F;dev&#x2F;facundoolano&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facundoolano&#x2F;rpg-cli&quot;&gt;rpg-cli&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facundoolano&quot;&gt;@facundoolano&lt;&#x2F;a&gt; is a bare-bones JRPG-inspired terminal game.
It can work as an alternative to cd where you randomly encounter enemies
as you change directories.
The game features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Character stats and leveling system.&lt;&#x2F;li&gt;
&lt;li&gt;Automatic turn-based combat.&lt;&#x2F;li&gt;
&lt;li&gt;Item and equipment support.&lt;&#x2F;li&gt;
&lt;li&gt;15+ enemy classes.&lt;&#x2F;li&gt;
&lt;li&gt;Permadeath with item recovering.&lt;&#x2F;li&gt;
&lt;li&gt;Run and bribe to escape battles.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;nktk1y&#x2F;rpgcli_your_filesystem_as_a_dungeon&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;theta-wave&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#theta-wave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;&lt;img src=&quot;theta-wave.gif&quot; alt=&quot;Blast Repeller&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;The Blast Repeller item pushes blasts away from the player&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt; is an open-source space shooter game by developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;. It is one of the showcase games for the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;&quot;&gt;Amethyst Engine&lt;&#x2F;a&gt;. In
the past month, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&#x2F;releases&#x2F;tag&#x2F;v0.1.6&quot;&gt;&amp;quot;Loot&amp;quot;&lt;&#x2F;a&gt; update was released which enhanced how loot drops
are rolled, spawned, and how their effects are applied to the game. The Loot Update
also added an attraction system that allows for entities to repel or attract
other entities.&lt;&#x2F;p&gt;
&lt;p&gt;Now an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&#x2F;projects&#x2F;5&quot;&gt;&amp;quot;Organization&amp;quot;&lt;&#x2F;a&gt; update is in progress for Theta Wave. This update will
divide Theta Wave into two workspaces; a library and a binary. This update will also
add documentation comments for all of the library&#x27;s features.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. This
month, versions 0.6.4 and 0.6.5 were released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Stencil buffers&lt;&#x2F;li&gt;
&lt;li&gt;Basic instanced mesh rendering&lt;&#x2F;li&gt;
&lt;li&gt;Methods for reading textures back to the CPU (e.g. for screenshots)&lt;&#x2F;li&gt;
&lt;li&gt;Support for passing slices&#x2F;arrays as shader uniforms&lt;&#x2F;li&gt;
&lt;li&gt;More utility methods for working with high-DPI displays&lt;&#x2F;li&gt;
&lt;li&gt;Various bug fixes and docs improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rustcraft&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dskart&#x2F;rustcraft&quot;&gt;Rustcraft&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustcraft&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustcraft.png&quot; alt=&quot;rustcraft-img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dskart&#x2F;rustcraft&quot;&gt;Rustcraft&lt;&#x2F;a&gt; by @dskart
is a simple Minecraft engine written in Rust using wgpu.&lt;&#x2F;p&gt;
&lt;p&gt;It handles infinite world generation using gradient noise as well as placing
and breaking blocks.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rg3d_terrain.jpg&quot; alt=&quot;rg3d&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a game engine that
aims to be easy to use and provide a large set of out-of-box features. Some of
the recent engine updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Initial 2D support (with lighting and physics)&lt;&#x2F;li&gt;
&lt;li&gt;Multi-layer terrains (&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;nlnfdb&#x2F;timelapse_of_terrain_editing_in_rustyeditor_which&#x2F;&quot;&gt;check this video&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Load balancer for texture uploader&lt;&#x2F;li&gt;
&lt;li&gt;Customizable vertex format&lt;&#x2F;li&gt;
&lt;li&gt;Instanced rendering fixes&lt;&#x2F;li&gt;
&lt;li&gt;Menu items now can work without backing Menu widget&lt;&#x2F;li&gt;
&lt;li&gt;Shadows fix for spotlights&lt;&#x2F;li&gt;
&lt;li&gt;Selection improvements for Tree widget&lt;&#x2F;li&gt;
&lt;li&gt;Continuous integration&lt;&#x2F;li&gt;
&lt;li&gt;Basic Framework that hides engine initialization and game loop&lt;&#x2F;li&gt;
&lt;li&gt;Performance improvements&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Save&amp;quot; mode for FileSelector and FileBrowser widgets&lt;&#x2F;li&gt;
&lt;li&gt;Various bug fixes and small improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;rusty-editor updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Context menu for world outliner items&lt;&#x2F;li&gt;
&lt;li&gt;Terrain editor&lt;&#x2F;li&gt;
&lt;li&gt;Grid snapping for Move interaction mode&lt;&#x2F;li&gt;
&lt;li&gt;Fixes for Move interaction mode in case of complex hierarchies&lt;&#x2F;li&gt;
&lt;li&gt;Continuous integration&lt;&#x2F;li&gt;
&lt;li&gt;Settings window refactoring + improvements&lt;&#x2F;li&gt;
&lt;li&gt;Box selection mode bug fixes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nestadia&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zer0x64&#x2F;nestadia&quot;&gt;Nestadia&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nestadia&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nestadia.png&quot; alt=&quot;Zelda running on Nestadia&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zer0x64&#x2F;nestadia&quot;&gt;Nestadia&lt;&#x2F;a&gt; by @zer0x64, @junior-n30 and @CBenoit is a
server-based NES emulator.&lt;&#x2F;p&gt;
&lt;p&gt;Nestadia was written as a reverse engineering and memory exploitation challenge
for NorthSec CTF 2021, a cybersecurity competition. Contestants were required to
reverse-engineer the emulator and ultimately write a Tool Assisted Speedrun to
run arbitrary code inside a provided ROM.&lt;&#x2F;p&gt;
&lt;p&gt;After the competition, the code was open-sourced and cleaned up to remove
references to the competition. The developers intend on fixing more bugs and
adding more features in the near future.&lt;&#x2F;p&gt;
&lt;p&gt;Some interesting features of this emulator are its server-based nature, and the
no_std core which means that the emulator can be built and ran pretty much
anywhere without much work.&lt;&#x2F;p&gt;
&lt;p&gt;Incoming improvements include online multiplayer, sound, a WASM port, porting to
a libretro core, and using wgpu instead of sdl for the native GUI and debugger.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;learn-wgpu-updated-to-wgpu-0-8-and-wgsl&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;news&#x2F;#_0-8-and-wgsl&quot;&gt;Learn WGPU Updated to wgpu 0.8 and WGSL&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learn-wgpu-updated-to-wgpu-0-8-and-wgsl&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;After some GLSL issues trying to update the &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&quot;&gt;&amp;quot;Learn WGPU&amp;quot;&lt;&#x2F;a&gt; tutorial
to version WGPU 0.8, &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;sotrh&quot;&gt;@sotrh&lt;&#x2F;a&gt; decided to migrate to WGSL.
This update was a lot of work, but relatively painless.
As a result, &lt;code&gt;shaderc&lt;&#x2F;code&gt; is no longer a dependency.&lt;&#x2F;p&gt;
&lt;p&gt;Checkout more at &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;news&#x2F;#_0-8-and-wgsl&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;voxel-engine-with-rust-and-wgpu-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=96ht7rd3Y5I&quot;&gt;Voxel Engine with Rust and wgpu-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#voxel-engine-with-rust-and-wgpu-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=96ht7rd3Y5I&quot;&gt;&lt;img src=&quot;voxel_engine_wgpu.jpg&quot; alt=&quot;Youtube preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;TanTanDev&quot;&gt;@TanTanDev&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=96ht7rd3Y5I&quot;&gt;video&lt;&#x2F;a&gt; about
how he made a voxel engine written in Rust using wgpu.&lt;&#x2F;p&gt;
&lt;p&gt;Currently voxel rendering, chunk management, flying camera,
and simple lightning is implemented.
The source code is released on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;first_voxel_engine&quot;&gt;github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;nn0j5l&#x2F;i_made_a_voxel_engine_with_rust_and_wgpurs&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;1-year-of-rust-game-development&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;ZltAssmicsM&quot;&gt;1 Year of Rust Game Development&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#1-year-of-rust-game-development&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;ZltAssmicsM&quot;&gt;&lt;img src=&quot;1_year_of_rust_gamedev.png&quot; alt=&quot;YouTube thumbnail&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;ZltAssmicsM&quot;&gt;Another video&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;TanTanDev&quot;&gt;@TanTanDev&lt;&#x2F;a&gt; is about
the projects he made during his first year of learning Rust.
He also talks about why he likes the Rust programming language and community.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;n4o197&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ld48-rusty-mmo-in-48-hours&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kuviman.itch.io&#x2F;dig-world&#x2F;devlog&#x2F;255566&#x2F;so-i-made-an-mmo-in-48-hours&quot;&gt;LD48: Rusty MMO in 48 Hours&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ld48-rusty-mmo-in-48-hours&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;img.itch.zone&#x2F;aW1nLzYwMDQyNzkucG5n&#x2F;original&#x2F;VNIJnu.png&quot; alt=&quot;A screenshot of Dig World gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;@kuviman wrote a devlog about his experience writing a video game in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;He needed to make a game in just 48 hours for the Ludum Dare 48 (LD48)
game jam, so he chose a simple theme: digging.&lt;&#x2F;p&gt;
&lt;p&gt;20 hours later, he had a full-fledged MMO - complete with hackers!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;nhdwky&#x2F;i_used_rust_to_make_an_mmo_in_48_hours_for&quot;&gt;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;state-of-rust-in-unreal-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;n9v8m9&#x2F;rust_in_unreal_engine_may_2021_summary&#x2F;&quot;&gt;State of Rust in Unreal Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#state-of-rust-in-unreal-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;n9v8m9&#x2F;rust_in_unreal_engine_may_2021_summary&#x2F;&quot;&gt;This Reddit post&lt;&#x2F;a&gt; discusses the current state of using Rust in
the Unreal Engine. It concludes that although there are several ways that Rust
could interact with the engine, all are still forced to use C++ to bootstrap
these operations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2048-using-an-event-system-to-reset-the-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=4TJsEXupFso&quot;&gt;2048: Using an event system to reset the game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#2048-using-an-event-system-to-reset-the-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=4TJsEXupFso&quot;&gt;&lt;img src=&quot;2048-bevy-reset-game-events.png&quot; alt=&quot;YouTube Card&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&quot;&gt;@chrisbiscardi&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=4TJsEXupFso&quot;&gt;a video&lt;&#x2F;a&gt; about using Bevy&#x27;s event
readers and writers to implement a reset game button for a 2048 clone.&lt;&#x2F;p&gt;
&lt;p&gt;The video walks through implementing a &amp;quot;reset game&amp;quot; UI button in Bevy 0.5 by taking
advantage of Bevy&#x27;s event system for reading and writing a ResetGameEvent. It also
covers recursively despawning entities and sprites.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrisbiscardi&#x2F;status&#x2F;1397291221702254595&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tooling-updates&quot;&gt;Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite-piet.png&quot; alt=&quot;Piet Mondrian&#x27;s artwork replicated in Graphite using the new color picker&quot; &#x2F;&gt;
&lt;em&gt;Piet Mondrian&#x27;s artwork replicated in Graphite using the new color picker&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;README.md#discord&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-development vector and
raster graphics editor built on a nondestructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;In the past month, new frontend features have mostly closed the gap for a
visually complete UI while a major Rust backend refactor took place.&lt;&#x2F;p&gt;
&lt;p&gt;A new frontend system for floating menus was added to draw menus over the UI,
like dropdown menu input widgets and popovers to display the new color picker.
Also, the application menu bar was built with working buttons for the new Undo
and Export SVG actions.&lt;&#x2F;p&gt;
&lt;p&gt;A large refactor in the Rust backend created a simpler communication strategy
between all components in the software stack and a standard method of handling
user inputs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.design&#x2F;&quot;&gt;Try it right now in your browser.&lt;&#x2F;a&gt; Graphite is making
rapid progress towards becoming a non-destructive, procedural graphics editor
suitable for replacing traditional 2D DCC applications. Please
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;README.md#discord&quot;&gt;join the Discord&lt;&#x2F;a&gt; - and consider asking for a tour of the
code and how you can help!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-updates&quot;&gt;Library Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;dimforge&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&quot;&gt;Dimforge&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dimforge&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&quot;&gt;&lt;img src=&quot;dimforge.png&quot; alt=&quot;Dimforge logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&quot;&gt;Dimforge&lt;&#x2F;a&gt; creates open-source Rust crates for numerical simulation.
Some of the &lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&#x2F;blog&#x2F;2021&#x2F;06&#x2F;06&#x2F;this-month-in-dimforge&quot;&gt;recent updates&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; v0.9 brings user-defined storages, colliders not attached
to any rigid-body, velocity-based kinematic bodies,
and a lot of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;rapier&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#v090&quot;&gt;other improvements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;bevy_rapier v0.10 was completely rewritten using
the new user-defined storages to become
significantly more ergonomic and &amp;quot;bevy-native&amp;quot; feel.&lt;&#x2F;li&gt;
&lt;li&gt;New exhaustive user-guides for &lt;a href=&quot;https:&#x2F;&#x2F;www.rapier.rs&#x2F;docs&#x2F;user_guides&#x2F;rust&#x2F;getting_started&quot;&gt;Rapier&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;www.rapier.rs&#x2F;docs&#x2F;user_guides&#x2F;rust_bevy_plugin&#x2F;getting_started_bevy&quot;&gt;bevy_rapier&lt;&#x2F;a&gt; were written.
They cover all the available features of Rapier, excepted details about
implementing your own custom storage for colliders and rigid-bodies.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;rapier.js&quot;&gt;JS bindings for Rapier&lt;&#x2F;a&gt; have been updated to use Rapier 0.9.&lt;&#x2F;li&gt;
&lt;li&gt;nalgebra v0.26 and v0.27 got &lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2021&#x2F;04&#x2F;12&#x2F;integrating-const-generics-to-nalgebra&quot;&gt;const-generics support&lt;&#x2F;a&gt;
and macros for constructing matrices&#x2F;vectors&#x2F;points in a convenient way.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui.gif&quot; alt=&quot;egui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&quot;&gt;@emilk&lt;&#x2F;a&gt; is an easy-to-use immediate mode GUI library in pure Rust.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;version 0.12&lt;&#x2F;a&gt; of egui was released, with improved plots,
multitouch, user memory stores, window pivots, and more.&lt;&#x2F;p&gt;
&lt;p&gt;You can try out egui in the &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;n9f6vt&#x2F;announcing_egui_012_the_simple_gui_library&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;naga&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#naga&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gfx-dota2-naga.jpg&quot; alt=&quot;Dota2 running on Naga&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Naga is a shader translation library in pure Rust, aiming to replace
glsl-to-spirv and SPIRV-Cross.&lt;&#x2F;p&gt;
&lt;p&gt;In April the gfx-rs team shared a glimpse of the performance difference with
SPIRV-Cross on a single pipeline creation. In May, they did a full-fledged
Dota2 run on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;portability&quot;&gt;gfx-portability&lt;&#x2F;a&gt; without SPIRV-Cross. All shader translation was
done by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt;, roughly 4x as fast as the C++ alternative
(with no pipeline caching involved). Read more on &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;05&#x2F;09&#x2F;dota2-msl-compilation.html&quot;&gt;gfx-naga-blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rafx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;rafx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rafx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rafx-wireframe-demo.jpg&quot; alt=&quot;Rafx Wireframe Demo&quot; &#x2F;&gt;
&lt;em&gt;Demo with wireframes enabled&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rafx is a multi-backend renderer that optionally integrates with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;distill&lt;&#x2F;a&gt; asset pipeline.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DavidVonDerau&quot;&gt;@dvd&lt;&#x2F;a&gt; completed work on the new job system. It implements three
steps: extract, prepare, and write. These jobs are now more structured, making
them easier to implement while supporting concurrent execution and reducing
dynamic allocation. They also integrate with a visibility system to ensure that
off-screen objects are not processed.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt; continued work on OpenGL ES 2.0&#x2F;3.0 backends and documented
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&#x2F;tree&#x2F;master&#x2F;docs&#x2F;api&#x2F;backends&quot;&gt;implementation details&lt;&#x2F;a&gt; of currently available
rendering backends.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, some rendering features were improved and added: mesh rendering
now uses an instance-rate vertex buffer instead of per-object uniforms,
improving performance. Rendering features now support wireframe and untextured
rendering modes. An egui render feature was added, and the demo now uses egui
instead of imgui.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-retro&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&quot;&gt;Bevy Retro&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-retro&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-retro.gif&quot; alt=&quot;ui-example&quot; &#x2F;&gt;
&lt;em&gt;Bevy Retro UI example&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&quot;&gt;Bevy Retro&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; plugin designed for making pixel-perfect
games as easily as possible.&lt;&#x2F;p&gt;
&lt;p&gt;This project was released under the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;katharos-license&quot;&gt;Katharos License&lt;&#x2F;a&gt;. This
license has moral and ethical implications that you may or may not agree with,
so please read it before making use of this project.&lt;&#x2F;p&gt;
&lt;p&gt;In the last two months, Bevy Retro has gained a few new features, the biggest of
which is an integration with the &lt;a href=&quot;https:&#x2F;&#x2F;raui-labs.github.io&#x2F;raui&#x2F;&quot;&gt;RAUI&lt;&#x2F;a&gt;  UI library ( also featured in this
newsletter ), allowing you to design a fully-fledged user interface for Bevy Retro
games. Additional features added were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A simple sound playing API&lt;&#x2F;li&gt;
&lt;li&gt;Text rendering for the BDF font format&lt;&#x2F;li&gt;
&lt;li&gt;Custom render hook support allowing you to use raw &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;Luminance&lt;&#x2F;a&gt; API calls to render
anything you want into the low-resolution framebuffer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can ask questions or give feedback for Bevy Retro
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&#x2F;discussions&quot;&gt;on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;texture-generator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Orchaldir&#x2F;texture_generator&quot;&gt;Texture Generator&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#texture-generator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;texture-generator.png&quot; alt=&quot;A tilemap with procedural textures&quot; &#x2F;&gt;
&lt;em&gt;A preview to version 0.5 with furniture&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Orchaldir&#x2F;texture_generator&quot;&gt;Texture Generator&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Orchaldir&quot;&gt;Orchaldir&lt;&#x2F;a&gt; is a library to generate textures,
and a library to use those textures to render tilemaps.
Both libraries can generate color &amp;amp; depth images and
support post-processing effects like lighting &amp;amp; ambient occlusion.
For randomness, the instance id (e.g. the 145th brick) and&#x2F;or the tile id are hashed.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Orchaldir&#x2F;texture_generator&#x2F;projects&#x2F;8&quot;&gt;current release&lt;&#x2F;a&gt; focuses on furniture.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-asset-loader&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_asset_loader&quot;&gt;bevy_asset_loader&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-asset-loader&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_asset_loader.png&quot; alt=&quot;Configuring two asset collections&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;bevy_asset_loader&lt;&#x2F;code&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt; is a plugin for &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; apps aiming to
improve a common pattern for asset-loading. The boilerplate required to load
assets during a &amp;quot;loading state&amp;quot; is reduced to a minimum. At the same time, the
plugin brings together the internal names of assets and their filepath, making
it easier to add new assets and to keep an overview over already existing ones.&lt;&#x2F;p&gt;
&lt;p&gt;The library introduces the &lt;code&gt;AssetCollection&lt;&#x2F;code&gt; trait that can be derived. Any
number of asset collections can be loaded by a single &lt;code&gt;AssetLoader&lt;&#x2F;code&gt; during a
configured app state. When all assets are loaded, the collections will be
inserted into Bevy&#x27;s ECS as resources. Afterwards, the &lt;code&gt;AssetLoader&lt;&#x2F;code&gt; will
switch into a second configurable app state. At this point, your app can use
the asset collections that now contain loaded asset handles.&lt;&#x2F;p&gt;
&lt;p&gt;Currently, a single file always corresponds to one asset, and more complex
assets like e.g. &lt;code&gt;TextureAtlas&lt;&#x2F;code&gt; are not yet supported. There are plans to
extend the &lt;code&gt;asset&lt;&#x2F;code&gt; attribute to allow loading more complex assets. Stay tuned!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tobj&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twinklebear&#x2F;tobj&quot;&gt;tobj&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tobj&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;tobj&lt;&#x2F;code&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twinklebear&#x2F;&quot;&gt;@Twinklebear&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&quot;&gt;@virtualritz&lt;&#x2F;a&gt; is a simple and lightweight
option for loading OBJ files. &lt;code&gt;tobj&lt;&#x2F;code&gt; was originally written inspired by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;syoyo&quot;&gt;@syoyo&lt;&#x2F;a&gt;&#x27;s tinyobjloader, to provide a similar lightweight and easy to integrate
API for loading OBJ files in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;While initially targeted at realtime rendering applications, &lt;code&gt;tobj&lt;&#x2F;code&gt; has gained
more advanced importer functionality required for offline rendering,
simulation, and modeling applications, through recent work by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&quot;&gt;@virtualritz&lt;&#x2F;a&gt;.
These features provide support for merging vertices to avoid discontinuities
in simulation packages and reordering vertices to allow omitting the
index buffer. These features have been added while preserving the original
lightweight API design goal of &lt;code&gt;tobj&lt;&#x2F;code&gt;, making it a useful crate for a range of
applications loading with OBJ files.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;libfive&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&#x2F;libfive-rs&#x2F;tree&#x2F;master&#x2F;libfive&#x2F;&quot;&gt;Libfive&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#libfive&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;libfive.png&quot; alt=&quot;CSG difference operation with a sphere and three cylinders&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;libfive&lt;&#x2F;code&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&quot;&gt;@virtualritz&lt;&#x2F;a&gt; is a safe, oxidized wrapper around
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkeeter&#x2F;&quot;&gt;Matt Keeter&lt;&#x2F;a&gt;&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;libfive.com&#x2F;&quot;&gt;&lt;code&gt;libfive&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; – a &amp;quot;library and set of
tools for solid modeling especially suited for parametric and procedural
design&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;libfive&lt;&#x2F;code&gt; is based on &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Function_representation&quot;&gt;functional representation&lt;&#x2F;a&gt; (f-rep). F-reps can be
evaluated as 3D meshes with aribitrary precision.&lt;&#x2F;p&gt;
&lt;p&gt;One could e.g. use this for a compact definition of a game&#x27;s levels and mesh
them adaptively, on the fly, during loading. With a density suitable for the
machine&#x2F;GPU running the game.&lt;&#x2F;p&gt;
&lt;p&gt;F-reps can also be sliced into polylines&#x2F;vectors or bitmaps – e.g. for deriving
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Level_set&quot;&gt;level sets&lt;&#x2F;a&gt; or for SLA&#x2F;DLP 3D printing.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nvtx-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simbleau&#x2F;nvtx-rs&quot;&gt;nvtx-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nvtx-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nvtx.png&quot; alt=&quot;A screenshot of NVIDIA NSight Systems with only one sections measured&quot; &#x2F;&gt;
&lt;em&gt;Watching the profile in NVIDIA NSight Systems&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;NVIDIA® Tools Extension SDK (NVTX) is a C-based API for annotating events,
code ranges, and resources in your applications.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simbleau&#x2F;nvtx-rs&quot;&gt;nvtx-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simbleau&quot;&gt;@simbleau&lt;&#x2F;a&gt; is a safe rust wrapper for it.&lt;&#x2F;p&gt;
&lt;p&gt;The intent is to safely wrap the NVTX library in rusty fashion
to provide a proper cross-platform library for GPU and CPU profiling.
Ideally this library would be used in benchmarking rust applications
and performing research on rust projects such as a GPU analysis
with zero-cost abstraction.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;search?q=help&amp;restrict_sr=1 --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HouraiTeahouse&#x2F;backroll-rs&#x2F;issues&quot;&gt;Backroll-rs, a new networking library&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;nwlcsp&#x2F;this_month_in_rust_gamedev_22_may_2021&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1402736426563870720&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #21 - April 2021</title>
            <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/021/</link>
            <guid>https://gamedev.rs/news/021/</guid>
            <description>&lt;p&gt;Welcome to the 21st issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;021&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;021&#x2F;#gamedev-rs&quot;&gt;gamedev.rs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;021&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;021&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;021&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;021&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;021&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_Optional image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The fourth Rust Gamedev Meetup happened in April. It was an opportunity for
developers to show off what Rust projects they&#x27;ve been working on in the game
ecosystem. This month, we heard a talk about threading in WASM, profiling,
getting a game ready for release, and much more. You can watch the recording of
the meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=XE0lH0tlbBs&quot;&gt;here on Youtube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The meetups take place on the second Saturday every month via the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust
Gamedev Discord server&lt;&#x2F;a&gt;, and can also be &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on in a future meetup, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gamedev-rs&quot;&gt;gamedev.rs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gamedev-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;As you may have noticed, &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev.github.io&lt;&#x2F;a&gt;
(this site) got an awesome custom domain: &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&quot;&gt;gamedev.rs&lt;&#x2F;a&gt;!
We&#x27;ve been looking for a good &amp;amp; available domain a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;233&quot;&gt;long time&lt;&#x2F;a&gt;.
Huge thanks to Juratech Systems for donating their domain
to the Rust GameDev WG! ❤️&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve also &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;pull&#x2F;586&quot;&gt;switched to a more compact URL scheme&lt;&#x2F;a&gt;
with separate categories for &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&quot;&gt;the newsletter&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;blog&quot;&gt;other posts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;mq6mmj&#x2F;rustgamedevgithubio_is_now_gamedevrs&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1382016040662614017&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ld48-micronaut&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;healthire.itch.io&#x2F;micronaut&quot;&gt;LD48: Micronaut&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ld48-micronaut&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;healthire.itch.io&#x2F;micronaut&quot;&gt;&lt;img src=&quot;micronaut.gif&quot; alt=&quot;GIF showing Micronaut&#x27;s primary level recursion mechanic&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Micronaut features a deep recursive level layout&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Micronaut is a small puzzle platformer by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;healthire&quot;&gt;@Healthire&lt;&#x2F;a&gt; made in 48 hours for the
Ludum Dare 48 Compo. Run and jump your way through a recursive level layout to
reach the end. Cross platform for native and web, with source available on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Healthire&#x2F;ld48&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;healthire&#x2F;status&#x2F;1386468257125830662&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;48&#x2F;micronaut&quot;&gt;ldjam.com&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ld48-the-submariner&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;submariner&quot;&gt;LD48: The Submariner&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ld48-the-submariner&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;submariner&quot;&gt;&lt;img src=&quot;submariner.gif&quot; alt=&quot;GIF of a submarine firing torpedoes at vicious attacking fish.&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;submariner&quot;&gt;The Submariner&lt;&#x2F;a&gt; is a minimalist action
game made by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kettlecorn&quot;&gt;@kettlecorn&lt;&#x2F;a&gt; for the Ludum Dare 48 Compo. Dive
deep into the murky depths, defend yourself with torpedoes,
and try to find a way home!&lt;&#x2F;p&gt;
&lt;p&gt;The Submariner was made with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt; game engine
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt; was used as the Entity-Component-System (ECS) data structure.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;submariner&quot;&gt;Click here to play the Submariner in your browser.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;48&#x2F;the-submariner&quot;&gt;ldjam.com&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ld48-depth-first-search&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;48&#x2F;depth-first-search&quot;&gt;LD48: Depth-First Search&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ld48-depth-first-search&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dfs.jpg&quot; alt=&quot;Depth-First Search&#x27;s title card&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;48&#x2F;depth-first-search&quot;&gt;Depth-First Search&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LPGhatguy&quot;&gt;@LPGhatguy&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;evaeraeveara&quot;&gt;@evaeraevaera&lt;&#x2F;a&gt; is a space
dogfighting game made in 72 hours for the Ludum Dare 48 Jam. Travel alone to the
center of the galaxy, battling space pirates, alien eyeballs, and more.&lt;&#x2F;p&gt;
&lt;p&gt;The game was made possible by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;rapier&quot;&gt;rapier&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;, and many more
Rust community libraries!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;48&#x2F;depth-first-search&quot;&gt;ldjam.com&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;evaeraevaera&#x2F;status&#x2F;1386863330355257346&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;minewars&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;minewars.cc&quot;&gt;MineWars&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#minewars&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;minewars.jpg&quot; alt=&quot;MineWars Game Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;minewars.cc&quot;&gt;MineWars&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MineWarsGame&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;minewars&quot;&gt;Reddit&lt;&#x2F;a&gt;)
by @jamadazi is Minesweeper reimagined as a Multiplayer Real Time Strategy!&lt;&#x2F;p&gt;
&lt;p&gt;First announced publicly last month, the project is working towards an alpha
release for public playtesting. This month&#x27;s progress has been mostly internal
refactoring to be able to support networked multiplayer fully. The next steps
are to implement the remaining core game mechanics. The client implementation
may be changed to use the new &lt;code&gt;bevy_ecs_tilemap&lt;&#x2F;code&gt; crate.&lt;&#x2F;p&gt;
&lt;p&gt;Made in the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy Game Engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fish-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fish game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fish-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fishgame.gif&quot; alt=&quot;Fish game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fish game&lt;&#x2F;a&gt; is an online multiplayer game,
created in a collaboration between &lt;a href=&quot;https:&#x2F;&#x2F;heroiclabs.com&#x2F;&quot;&gt;Nakama&lt;&#x2F;a&gt;, an open-source scalable
game server, and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;p&gt;This month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;macroquad.rs&#x2F;tutorials&#x2F;fish-tutorial&#x2F;&quot;&gt;Fish game tutorial&lt;&#x2F;a&gt; got published.
The tutorial breaks down the game codebase into steps, from setting
up an empty macroquad project into building a platformer game, and
then turning it into a multiplayer game with Nakama.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;fish-game&quot;&gt;Web build&lt;&#x2F;a&gt; went live on itch.io&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;project-yawc&quot;&gt;Project YAWC&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#project-yawc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;project_yawc_map_editor.png&quot; alt=&quot;A demonstration of the Project YAWC map editor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project YAWC (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ProjectYawc&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a turn-based
strategy game built in GGEZ, being developed by junkmail.&lt;&#x2F;p&gt;
&lt;p&gt;April saw the release of Alpha 5, including the integrated map editor, alongside
balance changes and unit additions.&lt;&#x2F;p&gt;
&lt;p&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;w22ohPGNk58fo9bv6&quot;&gt;alpha access request form&lt;&#x2F;a&gt; is available,
if you want to try it out.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-process&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;&quot;&gt;The Process&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-process&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;the_process.gif&quot; alt=&quot;Animated image showcasing the test map in The Process&quot; &#x2F;&gt;
&lt;em&gt;The new test map in The Process&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;&quot;&gt;The Process&lt;&#x2F;a&gt; by @setzer22 is an upcoming
game about factory building, process management and carrot production, built
with Rust using the Godot game engine!&lt;&#x2F;p&gt;
&lt;p&gt;Some of the main highlights of the game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Automate complex processes by combining machines and programmable workers.&lt;&#x2F;li&gt;
&lt;li&gt;Obtain materials from a wide variety of natural resources: Even chicken!&lt;&#x2F;li&gt;
&lt;li&gt;An upbeat, wholesome aesthetic: Factories don&#x27;t need to be depressing.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This last month was focused on implementing the following features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&#x2F;status&#x2F;1381648397569036291&quot;&gt;test map&lt;&#x2F;a&gt; to
ensure all corners of the codebase are working&lt;&#x2F;li&gt;
&lt;li&gt;Improved player mobility by introducing a
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;mztqhy&#x2F;added_a_grappling_hook_to_my_game_built_with_rust&#x2F;&quot;&gt;grappling hook&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The game has been in active development for over a year and is now approaching
its first initial playable alpha version. Stayed tuned to the official twitter
for updates!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;mopoxk&#x2F;showcasing_my_game_the_process_built_with_rust&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PlayTheProcess&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;pGLOWrpg&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg_progress.jpg&quot; alt=&quot;Improved text rendering&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;pGLOWrpg (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;Twitter&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt;
is a Procedurally Generated Living Open World RPG,
a long-term project in development, which aims to be a narrative text-based game
with maximum portability and accessibility.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Finished implementing new printing interface.&lt;&#x2F;li&gt;
&lt;li&gt;Different types of text: normal, announcement, banner, etc.&lt;&#x2F;li&gt;
&lt;li&gt;Text color scheme in separate .ron preset file.&lt;&#x2F;li&gt;
&lt;li&gt;Text wrap implemented.&lt;&#x2F;li&gt;
&lt;li&gt;Fallback modes for text printing implemented.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;taipo&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;euclidean-whale.itch.io&#x2F;taipo&quot;&gt;Taipo&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#taipo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;euclidean-whale.itch.io&#x2F;taipo&quot;&gt;&lt;img src=&quot;taipo.png&quot; alt=&quot;Screenshot of Taipo showing a variety of towers and enemies&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click the image to play the game in your desktop browser!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Taipo (&lt;a href=&quot;https:&#x2F;&#x2F;euclidean-whale.itch.io&#x2F;taipo&quot;&gt;itch.io&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rparrett&#x2F;taipo&quot;&gt;GitHub&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rparrett&quot;&gt;@rparrett&lt;&#x2F;a&gt;
is a Tower Defense game that&#x27;s controlled solely by typing words and phrases.&lt;&#x2F;p&gt;
&lt;p&gt;Taipo is intended to be a thin veneer of a game over a tool for practicing
Japanese, but there&#x27;s an English mode as well. Gameplay sessions are short and
the game is playable in a desktop web browser.&lt;&#x2F;p&gt;
&lt;p&gt;Taipo was built with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy 0.5&lt;&#x2F;a&gt; with web builds made possible by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrk-its&#x2F;bevy_webgl2&quot;&gt;bevy_webgl2&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;bevy_kira_audio&lt;&#x2F;a&gt;. Taipo is also supported by these great
projects: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stararawn&#x2F;bevy_tiled&quot;&gt;bevy_tiled&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jamadazi&#x2F;bevy_asset_ron&quot;&gt;bevy_asset_ron&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.png&quot; alt=&quot;Consolidated intersections in A&#x2F;B Street&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CarlinoDustin&quot;&gt;@dabreegster&lt;&#x2F;a&gt; is a traffic simulation game exploring how small
changes to roads affect cyclists, transit users, pedestrians, and drivers, with
support for any city with OpenStreetMap coverage.&lt;&#x2F;p&gt;
&lt;p&gt;In April, a new road editor was prototyped, letting the number and width of
lanes be changed. Initial installation and downloading new maps is now simpler.
Slowly, complex intersections are being handled better. The team also completed
four usability study sessions and adjusted the UI accordingly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620?utm_campaign=tmirgd&amp;amp;utm_source=n21&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620?utm_campaign=tmirgd&amp;amp;utm_source=n21&quot;&gt;&lt;img src=&quot;wor-ice.jpg&quot; alt=&quot;Way of Rhea on Steam&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620?utm_campaign=tmirgd&amp;amp;utm_source=n21&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a picturesque puzzle platformer—without the platforming.
Solve mind bending color puzzles, unlock new areas of a vibrant hub world, and
talk to NPCs to unravel the mysteries of a world you left behind!&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea is being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt;. Latest Way of
Rhea developments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1387947007508160517&quot;&gt;hierarchy tree view&lt;&#x2F;a&gt; was added to the editor to make getting
art into the game easier.&lt;&#x2F;li&gt;
&lt;li&gt;Work is wrapping up getting &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1388907046574215172&quot;&gt;art into the first snow crab level!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; wrote up &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;03&#x2F;05&#x2F;crash-reporter&#x2F;&quot;&gt;an article walking through how the
Way of Rhea crash reporter works&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; is mixing signed distance fields, bézier
curves, and art by &lt;a href=&quot;https:&#x2F;&#x2F;www.instagram.com&#x2F;cw_visuals_insta&#x2F;&quot;&gt;Carolyn Whitmeyer&lt;&#x2F;a&gt; to create
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&#x2F;status&#x2F;1389070879536173056&quot;&gt;procedural vines&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.instagram.com&#x2F;cw_visuals_insta&#x2F;&quot;&gt;Carolyn Whitmeyer&lt;&#x2F;a&gt;, the game&#x27;s artist, released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&#x2F;status&#x2F;1387102693626421254&quot;&gt;a demo
real including some content from Way of Rhea&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Airship&quot; &#x2F;&gt;
&lt;em&gt;A mist rolling over the land&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In April, work started on 0.10. Work is being done on combat, with new models
being created for enemies, animations being refined, and new player gear being
added. The trading and economic systems have continued progress at a good pace.
The music system was expanded to support combat music.&lt;&#x2F;p&gt;
&lt;p&gt;Veloren&#x27;s financial state was overhauled to examine previous expenses, and
prepare for provisioning the dedicated server. Functionality was added to switch
between server-authoritative and client-authoritative physics. Skeletons for
big-winged creatures were added. Data being sent over the network is being
optimized to reduce the amount of bandwidth players have to use.&lt;&#x2F;p&gt;
&lt;p&gt;April&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-114&quot;&gt;#114&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-115&quot;&gt;#115&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-116&quot;&gt;#116&lt;&#x2F;a&gt;.
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-117&quot;&gt;#117&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;outer-wonders&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;Outer Wonders&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#outer-wonders&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;outer-wonders.gif&quot; alt=&quot;Animation showing Bibi, the main protagonist of Outer Wonders, jumping from a treetop through a hole, rolling from obstacle to obstacle at the bottom of the tree, and then leaning on a coiled snake to jump back up to the other side of the treetop and continue its way&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;Outer Wonders&lt;&#x2F;a&gt; is a colorful, pixel art, puzzle-based adventure game
developed by &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&quot;&gt;Utopixel&lt;&#x2F;a&gt; where you play as Bibi, a cute round monkey who
enjoys rolling in straight lines. Explore a whimsical nature where
altering the environment is key to progress, and solve puzzles to protect
its wonders.&lt;&#x2F;p&gt;
&lt;p&gt;In April, &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&quot;&gt;Utopixel&lt;&#x2F;a&gt; released the first playable demo of &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;Outer Wonders&lt;&#x2F;a&gt;
for Windows and Linux on &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;itch.io&lt;&#x2F;a&gt;! In order to achieve this, the &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&quot;&gt;Utopixel&lt;&#x2F;a&gt;
team:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added a cutscene and a tutorial level at the beginning of the demo campaign.&lt;&#x2F;li&gt;
&lt;li&gt;Integrated sound effects for interaction with the environment and the UI.&lt;&#x2F;li&gt;
&lt;li&gt;Finished implementing full support for Linux on &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.itch.io&#x2F;outer-wonders&quot;&gt;itch.io&lt;&#x2F;a&gt; through a portable
build of the game.&lt;&#x2F;li&gt;
&lt;li&gt;Polished the menus by adding a &amp;quot;&lt;em&gt;Press any key to continue&lt;&#x2F;em&gt;&amp;quot; prompt on game
startup, as well as a confirmation prompt for all quit buttons.&lt;&#x2F;li&gt;
&lt;li&gt;Tested the demo thoroughly on both Windows and Linux to fix all bugs
and level design issues.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;mx3enm&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;utopixel&#x2F;status&#x2F;1385632054021345289&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;theta-wave&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#theta-wave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;&lt;img src=&quot;theta-wave.gif&quot; alt=&quot;Enemy Formations&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Mobs may now be spawned in predefined formations&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt; is an open-source space shooter game by developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;. It is one of the showcase games for the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;&quot;&gt;Amethyst Engine&lt;&#x2F;a&gt;. In
the past month, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&#x2F;releases&#x2F;tag&#x2F;v0.1.5&quot;&gt;&amp;quot;Formations&amp;quot;&lt;&#x2F;a&gt; update was released which organized how mobs
are spawned in different phases of the level.&lt;&#x2F;p&gt;
&lt;p&gt;They are now working on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&#x2F;projects&#x2F;4&quot;&gt;&amp;quot;Loot&amp;quot;&lt;&#x2F;a&gt; update which will enhance how loot drops
are rolled, spawned, and how their effects are applied to the game.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;station-iapetus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#station-iapetus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=O_ETjSkVBME&quot;&gt;&lt;img src=&quot;station-iapetus.jpg&quot; alt=&quot;Station Iapetus Youtube&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&quot;&gt;@mrDIMAS&lt;&#x2F;a&gt; is a 3rd person shooter on the
prison Iapetus near Saturn.
This month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New level (lab)&lt;&#x2F;li&gt;
&lt;li&gt;More assets&lt;&#x2F;li&gt;
&lt;li&gt;Performance improvements&lt;&#x2F;li&gt;
&lt;li&gt;Bots now able to use weapons&lt;&#x2F;li&gt;
&lt;li&gt;Melee attacks are much harder to avoid now&lt;&#x2F;li&gt;
&lt;li&gt;Bots drop items&lt;&#x2F;li&gt;
&lt;li&gt;Journal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;macroquad.rs&#x2F;&quot;&gt;&lt;img src=&quot;macroquad.png&quot; alt=&quot;macroquad&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; is a cross-platform (Windows&#x2F;Linux&#x2F;macOS&#x2F;Android&#x2F;iOS&#x2F;WASM) game
framework built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month macroquad finally got out of alpha and &lt;code&gt;0.3&lt;&#x2F;code&gt; got released!
All the examples with both sources and interactive wasm versions may
be found on &lt;a href=&quot;https:&#x2F;&#x2F;macroquad.rs&#x2F;examples&quot;&gt;the new macroquad website&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. This
month, version 0.6.3 was released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;BMFont support&lt;&#x2F;li&gt;
&lt;li&gt;An &lt;code&gt;ImageData&lt;&#x2F;code&gt; type for loading and manipulating images on the CPU&lt;&#x2F;li&gt;
&lt;li&gt;More color utilities, including shortcuts for premultiplied alpha&lt;&#x2F;li&gt;
&lt;li&gt;Bugfixes and docs improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#063---2021-04-09&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, &lt;a href=&quot;https:&#x2F;&#x2F;tetra.seventeencups.net&#x2F;&quot;&gt;Tetra&#x27;s website&lt;&#x2F;a&gt; has been updated to make it easier
to read and contribute to. The site features tutorials, guides and FAQs on how to
use Tetra effectively, as well as a showcase of cool projects made using the
framework - additions are welcomed!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine-v0-19-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine v0.19.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine-v0-19-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-ui-splash-screen.gif&quot; alt=&quot;Oxygengine UI splash screen&quot; &#x2F;&gt;
&lt;em&gt;Making splash screens in Oxygengine with RAUI&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;psichix&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is the hottest
HTML5 + WASM game engine for games written in Rust with web-sys.
The goal of this project is to combine professional game development tools under
one highly modular toolset.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s changes include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed bugs with rendering images on Firefox browser.&lt;&#x2F;li&gt;
&lt;li&gt;Added support for filters.&lt;&#x2F;li&gt;
&lt;li&gt;Updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&quot;&gt;RAUI&lt;&#x2F;a&gt; dependency to improve UI.&lt;&#x2F;li&gt;
&lt;li&gt;Added support for image smoothing render command.&lt;&#x2F;li&gt;
&lt;li&gt;Added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;soulhunter&quot;&gt;puzzle game demo WIP&lt;&#x2F;a&gt; that shows how to use RAUI
to make for example fancy splash screens with RAUI.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rg3d_logo.png&quot; alt=&quot;rg3d&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a game engine that
aims to be easy to use and provide a large set of out-of-box features. Some of
the recent engine updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;WebAssembly support (&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;assets&#x2F;webexample&#x2F;index.html&quot;&gt;check online demo&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Proc-macro for Visit trait&lt;&#x2F;li&gt;
&lt;li&gt;On-demand texture compression&lt;&#x2F;li&gt;
&lt;li&gt;Performance improvements&lt;&#x2F;li&gt;
&lt;li&gt;Various bug fixes and small improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;arcana&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;arcana&quot;&gt;Arcana&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#arcana&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tanks.gif&quot; alt=&quot;arcana&quot; &#x2F;&gt;
&lt;em&gt;A demo Arcana game&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;arcana&quot;&gt;Arcana&lt;&#x2F;a&gt; is a new game engine built with focus on ease of use
without compromising on level of control.
The engine is aimed to support a wide variety of games,
from pixel-art to fully ray-traced,
from single-player puzzles to online strategies.&lt;&#x2F;p&gt;
&lt;p&gt;It is at a very early stage, not all necessary subsystems are done
and code is in flux.&lt;&#x2F;p&gt;
&lt;p&gt;The demo shown above was coded in a single evening,
together with sprite sheet loading and sprite animations
which will be integrated into the engine later.&lt;&#x2F;p&gt;
&lt;p&gt;The default 2D renderer renders sprites with auto-batching,
so all sprites are rendered in single instanced draw call,
allowing rendering millions of sprites in one frame. Rendering
is done with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;sierra&quot;&gt;&lt;code&gt;sierra&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; - a Vulkan-like graphics API with
batteries included. The engine also uses &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;hecs&quot;&gt;&lt;code&gt;hecs&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; as its ECS,
and rolls its own simplistic &lt;code&gt;System&lt;&#x2F;code&gt; trait to define and run
systems, once per frame or with fixed steps. &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&#x2F;docs&#x2F;&quot;&gt;&lt;code&gt;rapier&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; physics
is integrated for 2D cases, but this system is kept opt-in.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bevy-cheatbook&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&quot;&gt;Bevy Cheatbook&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-cheatbook&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;The Unofficial Bevy Cheatbook by @jamadazi is a practical book for learning the
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy Game Engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The book recently got an assortment of improvements and new content, including
a detailed page about &lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;features&#x2F;input-handling.html&quot;&gt;input handling&lt;&#x2F;a&gt; and a chapter about
&lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;platforms&#x2F;wasm.html&quot;&gt;browser games using WASM&lt;&#x2F;a&gt; (written with help from @Zaszi).&lt;&#x2F;p&gt;
&lt;p&gt;The author now has a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;jamadazi&quot;&gt;GitHub Sponsors&lt;&#x2F;a&gt;, support them!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shooting-gallery-game-in-rust-and-bevy-in-5-hours&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=T1ZT0EkzvgI&quot;&gt;Shooting Gallery Game in Rust and Bevy in 5 Hours&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shooting-gallery-game-in-rust-and-bevy-in-5-hours&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=T1ZT0EkzvgI&quot;&gt;&lt;img src=&quot;bevy-shoot-video.jpg&quot; alt=&quot;preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;camsjams&quot;&gt;@camsjams&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=T1ZT0EkzvgI&quot;&gt;a video&lt;&#x2F;a&gt; about
developing a shooting gallery using Bevy
to demonstrate 2D games with multiple layers of depth.
Some of the features covered in the video:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic UI with score and countdown clock.&lt;&#x2F;li&gt;
&lt;li&gt;2D shooting with moving set pieces - clouds, grass, water.&lt;&#x2F;li&gt;
&lt;li&gt;Tracking of target hits, each target having their own unique
movement speed and points.&lt;&#x2F;li&gt;
&lt;li&gt;Game over state when clock runs out.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;camsjams&#x2F;rust-2d-shooting-gallery&quot;&gt;The full source is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;learning-opengl-in-7-days-using-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=KEQIWqSq42k&quot;&gt;Learning OpenGL in 7 days using Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-opengl-in-7-days-using-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=KEQIWqSq42k&quot;&gt;&lt;img src=&quot;tantan-preview.jpg&quot; alt=&quot;video preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;TantanDev&quot;&gt;TanTan&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=KEQIWqSq42k&quot;&gt;video&lt;&#x2F;a&gt; about making a water shader,
loading 3D models, creating a beautiful transition shader
using glium and macroquad.
The water &amp;amp; transition shader is open source and can be found
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;macroquad_tantan_toolbox&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-linz-learning-rust-with-game-development&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=79GyLlXAk-0&quot;&gt;Rust Linz: Learning Rust with Game Development&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-linz-learning-rust-with-game-development&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=79GyLlXAk-0&quot;&gt;&lt;img src=&quot;rust-linz.png&quot; alt=&quot;Rust Linz talk screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click on the image to watch the talk&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As part of April&#x27;s Rust Linz meetup, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;herberticus&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt;
gave a talk about using game development as a means of learning
Rust, stepping through the creation of Flappy Dragon - a simple game
used in his book &#x27;Hands-On Rust&#x27; to teach the language basics.&lt;&#x2F;p&gt;
&lt;p&gt;&#x27;Hands-On Rust&#x27; is currently available for 50% off, via a coupon
posted on the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;herberticus&#x2F;status&#x2F;1387090355250675716&quot;&gt;author&#x27;s twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-la-meetup-happiness-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TJ3w-pZ7FMI&quot;&gt;Rust LA Meetup: Happiness in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-la-meetup-happiness-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TJ3w-pZ7FMI&quot;&gt;&lt;img src=&quot;rust-la.png&quot; alt=&quot;Rust LA talk screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click on the image to watch the talk&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As part of April&#x27;s Rust LA meetup, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&quot;&gt;Andrea Pessino&lt;&#x2F;a&gt; from
&lt;a href=&quot;http:&#x2F;&#x2F;www.readyatdawn.com&#x2F;&quot;&gt;Ready at Dawn&lt;&#x2F;a&gt; gave a talk examining how to increase Rust adoption
among game developers and performance-centric developers, giving
practical, actionable advice to those who hit early bumps in their
Rust discovery.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-to-write-a-crash-reporter&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;03&#x2F;05&#x2F;crash-reporter&#x2F;&quot;&gt;How To Write a Crash Reporter&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-write-a-crash-reporter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor-crash-reporter.jpg&quot; alt=&quot;How To Write a Crash Reporter&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;03&#x2F;05&#x2F;crash-reporter&#x2F;&quot;&gt;an article&lt;&#x2F;a&gt; walking
through &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620?utm_campaign=tmirgd&amp;amp;utm_source=n21&quot;&gt;Way of Rhea&#x27;s&lt;&#x2F;a&gt; crash reporter implementation.&lt;&#x2F;p&gt;
&lt;p&gt;The article covers how to detect a crash, how to report a crash via chat
services like Discord or Slack, and how to implement a robust native UI on
Windows to handle requesting user consent to file the report, as well as some
design considerations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;awesome-quads&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;awesome-quads&quot;&gt;awesome-quads&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#awesome-quads&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;quads.png&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;awesome-quads&quot;&gt;awesome-quads&lt;&#x2F;a&gt; is a curated list of links to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;-related
code &amp;amp; resources: libraries &amp;amp; plugins, games, examples, apps, docs, etc.
The list has more than 40 links atm:
feel free to write a PR if something isn&#x27;t mentioned yet.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wgpu-0-8&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;-0.8&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-0-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-tree.png&quot; alt=&quot;Screenshot of tree rendering&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;&quot;&gt;WebGPU&lt;&#x2F;a&gt; implementation in Rust. It is safe, efficient,
and portable: can target both native (Vulkan&#x2F;D3D&#x2F;Metal) and the Web.&lt;&#x2F;p&gt;
&lt;p&gt;The team has rolled out gfx-hal-0.8 and wgpu-0.8 updates on crates!
Read &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;04&#x2F;30&#x2F;release-0.8.html&quot;&gt;gfx-release-blog&lt;&#x2F;a&gt; for more details.&lt;&#x2F;p&gt;
&lt;p&gt;In April, the team implemented more validation on both the host and the shader
sides. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;Naga&lt;&#x2F;a&gt;&#x27;s coverage of SPIR-V and MSL features is also greatly improved.&lt;&#x2F;p&gt;
&lt;p&gt;On the infrastructure side, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; integrated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;profiling&quot;&gt;profiling&lt;&#x2F;a&gt; and got the first
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;discussions&#x2F;879&quot;&gt;naga performance&lt;&#x2F;a&gt; numbers, which looked promising.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nalgebra&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;nalgebra.org&quot;&gt;nalgebra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nalgebra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.nalgebra.org&#x2F;img&#x2F;logo_nalgebra.svg&quot; alt=&quot;nalgebra&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;nalgebra.org&quot;&gt;nalgebra&lt;&#x2F;a&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;nalgebra&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;discord.gg&#x2F;vt9DJSW&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;http:&#x2F;&#x2F;dimforge.com&quot;&gt;Dimforge&lt;&#x2F;a&gt; is a general-purpose
linear-algebra library.&lt;&#x2F;p&gt;
&lt;p&gt;With its version 0.26, &lt;a href=&quot;http:&#x2F;&#x2F;nalgebra.org&quot;&gt;nalgebra&lt;&#x2F;a&gt; replaced the use of &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;generic-array&#x2F;0.14.4&#x2F;generic_array&#x2F;&quot;&gt;generic-arrays&lt;&#x2F;a&gt; by
regular Rust arrays using const-generics. See the &lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2021&#x2F;04&#x2F;12&#x2F;integrating-const-generics-to-nalgebra&#x2F;&quot;&gt;blog-post&lt;&#x2F;a&gt; to get all
the details! In particular, this results in significant benefits:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simpler generic programming with statically-sized vectors&#x2F;matrices.&lt;&#x2F;li&gt;
&lt;li&gt;Much simpler debugging: inspect the content of vectors&#x2F;matrices more easily.&lt;&#x2F;li&gt;
&lt;li&gt;Vectors and matrices with dimensions known at compile-time can be
constructed in a const-fn context.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;mph8jr&#x2F;integrating_constgenerics_to_nalgebra_026&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dimforge&#x2F;status&#x2F;1381643543626842114&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;opensubdiv-petite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;opensubdiv-petite&quot;&gt;opensubdiv-petite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#opensubdiv-petite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;opensubdiv-petite.jpg&quot; alt=&quot;Low poly car model&quot; &#x2F;&gt;
&lt;em&gt;Low poly car with three levels of Catmull-Clark subdivision applied.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;opensubdiv-petite&quot;&gt;Opensubdiv-petite&lt;&#x2F;a&gt; is a high level, selective, oxidized wrapper around Pixar’s
&lt;a href=&quot;https:&#x2F;&#x2F;graphics.pixar.com&#x2F;opensubdiv&#x2F;docs&#x2F;intro.html&quot;&gt;OpenSubdiv&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Subdivision_surface&quot;&gt;sudivison surface&lt;&#x2F;a&gt; meshing and evaluation library. OpenSubdiv allows
for real time updates of the subdivided mesh if the topology of the control mesh
is stable (e.g. a deforming character in a game).&lt;&#x2F;p&gt;
&lt;p&gt;The crate comes with a trait for converting into a &lt;code&gt;bevy::Mesh&lt;&#x2F;code&gt; and a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&#x2F;opensubdiv-petite&#x2F;blob&#x2F;master&#x2F;opensubdiv-petite&#x2F;examples&#x2F;bevy.rs&quot;&gt;&lt;code&gt;bevy&lt;&#x2F;code&gt; example&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This is an early release. None of the GPU acceleration backends are yet
exposed on the Rust side. Contact &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&quot;&gt;@virtualritz&lt;&#x2F;a&gt; is you want to help out with
that.&lt;&#x2F;p&gt;
&lt;p&gt;His &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&#x2F;tobj&quot;&gt;&lt;code&gt;tobj&lt;&#x2F;code&gt; fork&lt;&#x2F;a&gt; also has a bunch new features that help loading OBJ files for
use with opensubdiv-petite. E.g. merging disconnected vertices during import.&lt;&#x2F;p&gt;
&lt;p&gt;The car model above was borrowed from &lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;quaternius&quot;&gt;@quaternius&lt;&#x2F;a&gt; low poly
&lt;a href=&quot;https:&#x2F;&#x2F;quaternius.itch.io&#x2F;lowpoly-cars&quot;&gt;car collection on itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;profiling&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;profiling&quot;&gt;profiling&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#profiling&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;profiling.png&quot;&gt;&lt;img src=&quot;profiling.png&quot; alt=&quot;Screenshot of Optick Profiler&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, version 1.0 of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;profiling&quot;&gt;profiling&lt;&#x2F;a&gt; was released on crates.io. 🎉 🎉&lt;&#x2F;p&gt;
&lt;p&gt;This crate provides a very thin abstraction over instrumented profiling crates
like &lt;code&gt;puffin&lt;&#x2F;code&gt;, &lt;code&gt;optick&lt;&#x2F;code&gt;, &lt;code&gt;tracing&lt;&#x2F;code&gt;, &lt;code&gt;tracy&lt;&#x2F;code&gt;, and &lt;code&gt;superluminal-perf&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Profiling is used by multiple projects including &lt;code&gt;gfx-hal&lt;&#x2F;code&gt;, &lt;code&gt;rafx&lt;&#x2F;code&gt;, and
&lt;code&gt;wgpu&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;simple-async-local-executor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;enlightware&#x2F;simple-async-local-executor&quot;&gt;simple-async-local-executor&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#simple-async-local-executor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; executor = Executor::default();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; events = [executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;create_event_handle&lt;&#x2F;span&gt;&lt;span&gt;(), executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;create_event_handle&lt;&#x2F;span&gt;&lt;span&gt;()];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;async &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;wait_event&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;events&lt;&#x2F;span&gt;&lt;span&gt;: [EventHandle; 2], &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;executor&lt;&#x2F;span&gt;&lt;span&gt;: Executor) {
&lt;&#x2F;span&gt;&lt;span&gt;    executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;events[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]).await;
&lt;&#x2F;span&gt;&lt;span&gt;    executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;events[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]).await;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;spawn&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;wait_event&lt;&#x2F;span&gt;&lt;span&gt;(events.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span&gt;(), executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span&gt;()));
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;notify_event&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;events[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;notify_event&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;events[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]);
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(executor.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;enlightware&#x2F;simple-async-local-executor&quot;&gt;simple-async-local-executor&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;enlightware.ch&quot;&gt;Enlightware&lt;&#x2F;a&gt;
is a single-threaded polling-based executor suitable for use in games, embedded
systems or WASM.&lt;&#x2F;p&gt;
&lt;p&gt;This executor can be useful when the number of tasks is small or
if a small percentage is blocked. Being polling-based, in the general
case it trades off efficiency for simplicity and does not require any
concurrency primitives such as &lt;code&gt;Arc&lt;&#x2F;code&gt;, etc.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wasm-plugin&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alec-deason&#x2F;wasm_plugin&quot;&gt;wasm_plugin&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wasm-plugin&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alec-deason&#x2F;wasm_plugin&quot;&gt;wasm_plugin&lt;&#x2F;a&gt; by @alec-deason is a
low-ish level tool for easily hosting WASM based plugins for modding or scripting.&lt;&#x2F;p&gt;
&lt;p&gt;The latest version now supports calling host functions from the plugin and more
flexible serialization which allows plugins to be written in languages other
than Rust.&lt;&#x2F;p&gt;
&lt;p&gt;It consists of two crates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;crates&#x2F;wasm_plugin_host&quot;&gt;wasm_plugin_host&lt;&#x2F;a&gt; which wraps a wasmer instance with methods for calling
functions on the guest plugin.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;crates&#x2F;wasm_plugin_guest&quot;&gt;wasm_plugin_guest&lt;&#x2F;a&gt; which provides an attribute macro to easily import and&lt;&#x2F;li&gt;
&lt;li&gt;export functions to the host.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&quot;&gt;@emilk&lt;&#x2F;a&gt; is an easy-to-use immediate mode GUI library in pure Rust.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;version 0.11&lt;&#x2F;a&gt; of egui was released, with many improvements,
including optimized to run almost twice as fast!&lt;&#x2F;p&gt;
&lt;p&gt;You can try out egui in the &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;bevy_egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;&lt;img src=&quot;egui.gif&quot; alt=&quot;bevy_egui multiple windows support GIF&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;bevy_egui&lt;&#x2F;a&gt; provides an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;Egui&lt;&#x2F;a&gt; integration
for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; game engine.
It supports &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrk-its&#x2F;bevy_webgl2&quot;&gt;bevy_webgl2&lt;&#x2F;a&gt; and implements the full set of Egui features
(such as clipboard and opening URLs).&lt;&#x2F;p&gt;
&lt;p&gt;In April, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;version 0.4&lt;&#x2F;a&gt; was released, providing an integration with
Egui 0.11 and implementing multiple windows support.&lt;&#x2F;p&gt;
&lt;p&gt;Try out the &lt;a href=&quot;https:&#x2F;&#x2F;mvlabat.github.io&#x2F;bevy_egui_web_showcase&#x2F;index.html&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;puffin-egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;puffin_egui&quot;&gt;puffin_egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#puffin-egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;puffin_egui.gif&quot; alt=&quot;puffin_egui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;puffin_egui&quot;&gt;puffin_egui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&quot;&gt;@emilk&lt;&#x2F;a&gt; is an easy-to-use integration
of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;puffin&quot;&gt;puffin&lt;&#x2F;a&gt; profiler for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; GUI library.&lt;&#x2F;p&gt;
&lt;p&gt;It has never been easier to add an in-game flamegraph profiler to your game!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rafx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;rafx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rafx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aclysma.github.io&#x2F;rafx&#x2F;demo-web&#x2F;index.html&quot;&gt;&lt;img src=&quot;rafx-webgl1-demo.png&quot; alt=&quot;Rafx WebGL 1.0 Demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Rafx WebGL 1.0 support, &lt;a href=&quot;https:&#x2F;&#x2F;aclysma.github.io&#x2F;rafx&#x2F;demo-web&#x2F;index.html&quot;&gt;click for live demo&lt;&#x2F;a&gt;!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rafx is a multi-backend renderer that optionally integrates with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;distill&lt;&#x2F;a&gt; asset pipeline. This month, frustum culling
and a new OpenGL ES 2.0&#x2F;WebGL 1.0 backend were added.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DavidVonDerau&quot;&gt;@dvd&lt;&#x2F;a&gt; revived the &lt;code&gt;rafx-visibility&lt;&#x2F;code&gt; crate and implemented frustum culling.
Frustum culling greatly reduces draw call counts, improving frame rate
in certain scenes. The changes also improve consistency between various
rendering feature implementations (i.e. meshes, text etc.) and avoids running
the extract-prepare-submit pipeline on entities that are not visible.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt; implemented an OpenGL ES 2.0 backend. While ES2 cannot support all
functionality in &lt;code&gt;rafx-api&lt;&#x2F;code&gt;, it provides very broad compatibility. This means
the core functionality of rafx-api can be used with almost any mobile device
or browser (&lt;a href=&quot;https:&#x2F;&#x2F;caniuse.com&#x2F;?search=webgl&quot;&gt;~98% web coverage&lt;&#x2F;a&gt;.)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;raui-v0-34-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&quot;&gt;RAUI v0.34.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#raui-v0-34-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;raui-scroll-box.gif&quot; alt=&quot;RAUI Scroll Box&quot; &#x2F;&gt;
&lt;em&gt;RAUI Scroll Box&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&quot;&gt;RAUI&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;psichix&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is a Renderer Agnostic User
Interface crate that is based on declarative mode UI composition similar to
React.js and UE4 Slate system.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s changes include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Moved from &lt;code&gt;widget_hooks!&lt;&#x2F;code&gt; and &lt;code&gt;widget_component!&lt;&#x2F;code&gt; to &lt;code&gt;#[pre_hooks]&lt;&#x2F;code&gt;and
&lt;code&gt;#[post_hooks]&lt;&#x2F;code&gt; macros.&lt;&#x2F;li&gt;
&lt;li&gt;Added &lt;code&gt;PropsData&lt;&#x2F;code&gt; and &lt;code&gt;MessageData&lt;&#x2F;code&gt; derive macros.&lt;&#x2F;li&gt;
&lt;li&gt;Improved support for Scroll Box widgets to allow frictionless usage.&lt;&#x2F;li&gt;
&lt;li&gt;Added use of Scroll Box in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&#x2F;tree&#x2F;master&#x2F;demos&#x2F;todo-app&quot;&gt;TODO demo app&lt;&#x2F;a&gt; to demonstrate how
to use it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite-ferris.png&quot; alt=&quot;Ferris drawn in Graphite using the new drawing tools - Art credit: Uriopass&quot; &#x2F;&gt;
&lt;em&gt;Ferris drawn in Graphite using the new drawing tools - Art credit: Uriopass&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;README.md#discord&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-progress vector and
raster graphics editor built on a nondestructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;The team size has doubled in the past month — thank you to the new contributors!
Since then, systems related to editor tools and data flow were added.
The editor now has proper input behavior on the existing Rectangle and Ellipse Tools
plus the new Shape and Line Tools while holding modifier keys.
Pen Tool implementation has begun, supporting polylines.
Shapes are now drawn with live previews.&lt;&#x2F;p&gt;
&lt;p&gt;Additional work has gone into improving render performance, building the color
system in the Rust backend, and adding initial support for displaying shapes
in the Layer Tree panel. &lt;a href=&quot;https:&#x2F;&#x2F;editor.graphite.design&#x2F;&quot;&gt;Try it right now in your browser.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite is making rapid progress towards becoming a nondestructive, procedural
graphics editor suitable of replacing traditional 2D DCC applications. Please
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;README.md#discord&quot;&gt;join the Discord&lt;&#x2F;a&gt; - and consider asking for a tour of the
code and how you can help!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kindnes&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;henryksloan&#x2F;kind-nes&#x2F;releases&#x2F;tag&#x2F;v0.9.1-beta&quot;&gt;KindNES&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kindnes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kindnes.png&quot; alt=&quot;Super Mario Bros. running in KindNES&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;henryksloan&#x2F;kind-nes&#x2F;releases&#x2F;tag&#x2F;v0.9.1-beta&quot;&gt;KindNES&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;henryksloan&quot;&gt;@henryksloan&lt;&#x2F;a&gt;
is a new NES emulator that supports sound, controllers, and
much of the NES library.&lt;&#x2F;p&gt;
&lt;p&gt;KindNES is designed to strike a balance between performance, hardware accuracy,
and code clarity. It directly emulates the CPU, graphics, and sound of the NES
with minimal approximation. The code is intended to pair well with the NESdev
wiki as a resource for learning about the NES.&lt;&#x2F;p&gt;
&lt;p&gt;KindNES is in a playable state, and is approaching a release version.
Features planned before release include saving and an improved cross-platform
GUI.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chip-8-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JonathanMurray&#x2F;chip-8-rs&quot;&gt;chip-8-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#chip-8-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;chip-8-rs.jpg&quot; alt=&quot;Screenshot of Pong with debugger&quot; &#x2F;&gt;
&lt;em&gt;Debugging Pong&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JonathanMurray&#x2F;chip-8-rs&quot;&gt;Chip-8-rs&lt;&#x2F;a&gt; by @jonathanmurray is
a CHIP-8 emulator with some basic debugging functionality.&lt;&#x2F;p&gt;
&lt;p&gt;When running a game through the emulator, CHIP-8 instructions are listed
next to the main display, with the currently executed one highlighted. By
running at a very low clock-frequency (and pausing&#x2F;resuming) you can step
through a program one instruction at a time, to better understand how it
works (or doesn&#x27;t work!).&lt;&#x2F;p&gt;
&lt;p&gt;See it in action on &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;nVDJ5PZpPfI?t=72&quot;&gt;YouTube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;mfuo4m&#x2F;femtovg_2d_vector_graphics_crate_is_looking_for&quot;&gt;femtovg is looking for help with the wgpu backend&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;n8g79b&#x2F;this_month_in_rust_gamedev_21_april_2021&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1391415309421187076&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #20 - March 2021</title>
            <pubDate>Sat, 10 Apr 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/020/</link>
            <guid>https://gamedev.rs/news/020/</guid>
            <description>&lt;p&gt;Welcome to the 20th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;020&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;020&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;020&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;020&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;020&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The third Rust Gamedev Meetup happened in March. It was an opportunity for
developers to show off what Rust projects they&#x27;ve been working on in the game
ecosystem. Developers showed off game engine demos, in-game playthroughs,
tooling, and more. You can watch the recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=gqCxt8XL92o&quot;&gt;here on
Youtube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The next meetup will take place on the 10th of April at 16:00 GMT on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust
Gamedev Discord server&lt;&#x2F;a&gt;, and can also be &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;minewars&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;minewars.cc&quot;&gt;MineWars&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#minewars&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;minewars.jpg&quot; alt=&quot;MineWars Game Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;minewars.cc&quot;&gt;MineWars&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MineWarsGame&quot;&gt;Twitter&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;minewars&quot;&gt;Reddit&lt;&#x2F;a&gt;)
by @jamadazi is Minesweeper reimagined as a Multiplayer Real Time Strategy!&lt;&#x2F;p&gt;
&lt;p&gt;Capture mines. Move them around. Cause explosion chains. Take out enemy mines.
Defend your Cities. Fight for territory. Eliminate other players. Play on a
procedurally-generated map.&lt;&#x2F;p&gt;
&lt;p&gt;The game has been privately in development for many months and was just
announced publicly. The project is currently working towards an alpha release
for public playtesting. Read the announcement on the &lt;a href=&quot;https:&#x2F;&#x2F;minewars.cc&quot;&gt;website&lt;&#x2F;a&gt; for
more information.&lt;&#x2F;p&gt;
&lt;p&gt;Made in the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy Game Engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sm64js&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sm64js.com&quot;&gt;sm64js&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sm64js&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sm64js.jpg&quot; alt=&quot;Super Mario 64 JavaScript&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sm64js.com&quot;&gt;sm64js&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sm64js&#x2F;sm64js&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;7UaDnJt&quot;&gt;Discord&lt;&#x2F;a&gt;) is a rewrite
of the decompilation project of Super Mario 64 in JavaScript with a strong focus
on massive multiplayer online.
The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sm64js&#x2F;sm64js-mmo-server&quot;&gt;backend&lt;&#x2F;a&gt; recently has been rewritten in Rust by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;marior_dev&quot;&gt;@marior&lt;&#x2F;a&gt;
and is now live.&lt;&#x2F;p&gt;
&lt;p&gt;You can find more information about it in &lt;a href=&quot;https:&#x2F;&#x2F;net64-mod.github.io&#x2F;blog&#x2F;sm64js&#x2F;&quot;&gt;this recent blog post&lt;&#x2F;a&gt;,
where the developers of a similar mod called Net64 are talking
about several decompilation projects.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the most recent additions are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Karts and gliders.&lt;&#x2F;li&gt;
&lt;li&gt;Health meters.&lt;&#x2F;li&gt;
&lt;li&gt;More visuals with butterflies and fish.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A stress test is scheduled for 2021-04-17 17:30 UTC and everyone is invited to join.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;outer-wonders&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;en&#x2F;blog&#x2F;introducing-outer-wonders&quot;&gt;Outer Wonders&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#outer-wonders&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;outer-wonders.gif&quot; alt=&quot;Bibi rolling around&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;en&#x2F;blog&#x2F;introducing-outer-wonders&quot;&gt;Outer Wonders&lt;&#x2F;a&gt; by the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;utopixel&quot;&gt;Utopixel Studio&lt;&#x2F;a&gt;
is a pixelart puzzle-based adventure game built using SDL2.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Explore a world of fantasy in Outer Wonders.
Play as Bibi, the cute round monkey, unveil the natural wonders surrounding
your native village, and unravel their mysteries in this
ecological puzzle-based adventure game.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;March was mostly about various preparations for the upcoming playable demo release.
Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;More lively in-game environments.&lt;&#x2F;li&gt;
&lt;li&gt;Scripted cutscenes.&lt;&#x2F;li&gt;
&lt;li&gt;Translations.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;en&#x2F;blog&#x2F;building-outer-wonders-for-multiple-platforms&quot;&gt;Linux support progress&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;en&#x2F;blog&#x2F;testing-outer-wonders-demo-before-release&quot;&gt;Lot&#x27;s of level and technical testing&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The playable demo &lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;en&#x2F;blog&#x2F;outer-wonders-demo-release-on-april-16&quot;&gt;will be released on April 16&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utopixel.games&#x2F;en&#x2F;blog&quot;&gt;You can read the full March devlogs here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;aladin-lite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cds-astro&#x2F;aladin-lite&#x2F;tree&#x2F;develop&quot;&gt;Aladin Lite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#aladin-lite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;aladin_lite_mars_RdBu_cm.gif&quot; alt=&quot;Mars with a RdBu colormap&quot; &#x2F;&gt;
&lt;em&gt;Mars heightmap with a RdBu colormap rendered with Aladin Lite v3&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cds-astro&#x2F;aladin-lite&#x2F;tree&#x2F;develop&quot;&gt;Aladin Lite&lt;&#x2F;a&gt; is a spatial image survey visualizer developed by the &lt;a href=&quot;https:&#x2F;&#x2F;cds.u-strasbg.fr&#x2F;index-fr.gml&quot;&gt;Astronomical
Observatory of Strasbourg&lt;&#x2F;a&gt; in France. Since its first release in 2013,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cds-astro&#x2F;aladin-lite&#x2F;tree&#x2F;develop&quot;&gt;Aladin Lite&lt;&#x2F;a&gt; has been used by astronomers as well as amateurs that
are curious about exploring the sky.&lt;&#x2F;p&gt;
&lt;p&gt;Originally developed using 2D Javascript canvas, its core has been fully
rewritten in Rust and WebGL2 using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&quot;&gt;wasm-bindgen&lt;&#x2F;a&gt;.
New features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The support of multiple allsky projections (mercator, aitoff, ...).&lt;&#x2F;li&gt;
&lt;li&gt;The blending of multiple surveys.&lt;&#x2F;li&gt;
&lt;li&gt;The support of FITS file images.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more information, see a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=TILtJOiiRoc&quot;&gt;talk&lt;&#x2F;a&gt; done at the ADASS 2020
conference. A web page is also available &lt;a href=&quot;https:&#x2F;&#x2F;bmatthieu3.github.io&#x2F;hips_webgl_renderer&#x2F;index.html&quot;&gt;here&lt;&#x2F;a&gt; for you to test.
You are also very welcolme to contribute to the project by e.g. posting issues
on the project&#x27;s github.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;portal-explorer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;optozorax&#x2F;portal&quot;&gt;Portal Explorer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#portal-explorer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;portal-explorer.png&quot; alt=&quot;&amp;quot;Portal in portal&amp;quot; scene&quot; &#x2F;&gt;
&lt;em&gt;&amp;quot;Portal in portal&amp;quot; scene&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;optozorax&#x2F;portal&quot;&gt;Portal Explorer&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;optozorax&quot;&gt;@optozorax&lt;&#x2F;a&gt; is a web
visualizator of mind-blowing portals.&lt;&#x2F;p&gt;
&lt;p&gt;In Portal Explorer you can view how interesting portals are constructed, and
visually explore their properties by moving and rotating them. This program
doesn&#x27;t work well on mobile, better opened from PC. The most interesting
scene is &lt;a href=&quot;https:&#x2F;&#x2F;optozorax.github.io&#x2F;portal&#x2F;?scene=portal_in_portal&quot;&gt;portal in portal&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Created using ray-tracing in shaders, engine is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;,
interface is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;name-needed&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&#x2F;name-needed&quot;&gt;Name Needed&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#name-needed&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;name-needed.gif&quot; alt=&quot;Wandering agents hauling items around and digging&quot; &#x2F;&gt;
&lt;em&gt;Agents wandering around, hauling items and digging blocks&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&#x2F;name-needed&quot;&gt;Name Needed&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DomWilliams0&quot;&gt;@DomWilliams0&lt;&#x2F;a&gt; is a one man
effort to produce an open source, intuitive and high performance Dwarf
Fortress-esque game.&lt;&#x2F;p&gt;
&lt;p&gt;The engine is custom, built with SDL2 and OpenGL. It&#x27;s still early days, but
steady progress has been made over the last 18 months. The developer aims to
release occasional technical devlogs about interesting parts of the engine,
which so far include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;domwillia.ms&#x2F;devlog0&#x2F;&quot;&gt;Long term vision and goals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;domwillia.ms&#x2F;devlog2&#x2F;&quot;&gt;High level engine architecture&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;domwillia.ms&#x2F;devlog4&#x2F;&quot;&gt;Intelligent entity behaviors&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;orbital-decay&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.itch.io&#x2F;orbital-decay&quot;&gt;Orbital Decay&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#orbital-decay&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;orbital-decay.gif&quot; alt=&quot;Orbital Decay&quot; &#x2F;&gt;
&lt;em&gt;Orbital Decay gameplay&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.itch.io&#x2F;orbital-decay&quot;&gt;Orbital Decay&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&quot;&gt;@stevebob&lt;&#x2F;a&gt; is an
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;orbital-decay&quot;&gt;open-source&lt;&#x2F;a&gt; turn-based tactical roguelike with a focus
on ranged combat. Deal enough damage to enemies to get through their armour
without breaching the hull of the station, or risk being pulled into the void.
It was made for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;7drl-challenge-2021&quot;&gt;7 Day Roguelike 2021&lt;&#x2F;a&gt; game jam.&lt;&#x2F;p&gt;
&lt;p&gt;Traverse a procedurally-generated space station to reach the fuel bay on the
5th floor. Choose your weapons and upgrades wisely to make it past the
station&#x27;s former crew - now a horde of ravenous undead.&lt;&#x2F;p&gt;
&lt;p&gt;Read more about Orbital Decay on its &lt;a href=&quot;https:&#x2F;&#x2F;www.gridbugs.org&#x2F;7drl2021-day7&#x2F;&quot;&gt;development blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;disguiser&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mcneja.github.io&#x2F;disguiser&quot;&gt;Disguiser&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#disguiser&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;disguiser.png&quot; alt=&quot;Title card with game name and a big mansion&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mcneja.github.io&#x2F;disguiser&quot;&gt;Disguiser&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;mcneja.itch.io&#x2F;disguiser-2021-7drl&quot;&gt;itch.io&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mcneja&#x2F;disguiser&quot;&gt;source code&lt;&#x2F;a&gt;)
by &lt;a href=&quot;http:&#x2F;&#x2F;playtechs.blogspot.com&quot;&gt;@mcneja&lt;&#x2F;a&gt;
is a coffee-break turn-based stealth game inspired by Thief that
was made for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;7drl-challenge-2021&quot;&gt;7 Day Roguelike 2021&lt;&#x2F;a&gt; game jam.
The randomly-generated mansions are loosely based on Chinese courtyard houses,
with symmetry, enclosed gardens, and a public-to-private gradient
from the entrance northward.&lt;&#x2F;p&gt;
&lt;p&gt;The development process is documented in
a &lt;a href=&quot;http:&#x2F;&#x2F;playtechs.blogspot.com&#x2F;search&#x2F;label&#x2F;2021-7drl&quot;&gt;bunch of devlog posts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;m5tjbs&#x2F;7drl_in_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;secbot&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thebracket.itch.io&#x2F;secbot&quot;&gt;secbot&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#secbot&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;secbot.jpg&quot; alt=&quot;a screenshot with in-game message&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thebracket.itch.io&#x2F;secbot&quot;&gt;secbot&lt;&#x2F;a&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;secbot2021&quot;&gt;web version&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;secbot-2021-7drl&quot;&gt;souce code&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;bracketproductions.com&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt; is another 7DRL submission:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea behind SecBot is that an outpost has ceased communications,
so the morally dubious Bracket Corporation dispatch a security bot
to find out what happened.
Upon arrival, it becomes clear that things aren&#x27;t going well for the colony
- so the player rushes around collecting colonists
and shepherding them back to the spaceship.
I tried to bake some narrative&#x2F;flavor into the game,
and create a fun game you can enjoy over a coffee-break.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Btw, Herbert is going to give a &amp;quot;Learning Rust With Game Development&amp;quot; talk
at &lt;a href=&quot;https:&#x2F;&#x2F;rust-linz.at&quot;&gt;Rust Meetup Linz on April 22&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bounty-bros&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-on-web&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bounty-bros&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;skipngo.katharostech.com&#x2F;?asset_url=https:&#x2F;&#x2F;bounty-bros.skipngo.katharostech.com&#x2F;&quot;&gt;&lt;img src=&quot;bounty_bros.png&quot; alt=&quot;bounty-bros-character-on-map&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click the image to play the game in your browser!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-on-web&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt; is a prototype game similar to the old Legend of
Zelda® games developed by &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&quot;&gt;Katharos Technology&lt;&#x2F;a&gt; as a testing
ground for a future commercial game.&lt;&#x2F;p&gt;
&lt;p&gt;In the last 2 months Bounty Bros. has gotten a lot of updates. Now you can &lt;a href=&quot;https:&#x2F;&#x2F;skipngo.katharostech.com&#x2F;?asset_url=https:&#x2F;&#x2F;bounty-bros.skipngo.katharostech.com&#x2F;&quot;&gt;play
the game&lt;&#x2F;a&gt; right inside of your browser on desktop or mobile
devices!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;You can no longer walk through walls or objects.&lt;&#x2F;li&gt;
&lt;li&gt;You can now walk into buildings.&lt;&#x2F;li&gt;
&lt;li&gt;The camera follows the player without passing beyond the map borders.&lt;&#x2F;li&gt;
&lt;li&gt;Rendering is now scaled pixel-perfect.&lt;&#x2F;li&gt;
&lt;li&gt;Mobile touch controls were added.&lt;&#x2F;li&gt;
&lt;li&gt;There is a new &lt;a href=&quot;https:&#x2F;&#x2F;skipngo.katharostech.com&#x2F;?asset_url=https:&#x2F;&#x2F;bounty-bros.skipngo.katharostech.com&#x2F;&amp;amp;enable_crt=true&amp;amp;pixel_aspect_ratio=1.3&quot;&gt;retro mode&lt;&#x2F;a&gt; that tries to make it
look like the game is running on an old CRT television.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All of the source code, excluding assets and artwork, was also made available
and split into two independent projects.&lt;&#x2F;p&gt;
&lt;p&gt;These projects were released under the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;katharos-license&quot;&gt;Katharos License&lt;&#x2F;a&gt;. This license has moral and ethical
implications that you may or may not agree with, so please read it before making
use of these projects:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&quot;&gt;Bevy Retro&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;skipngo&#x2F;discussions&quot;&gt;forum&lt;&#x2F;a&gt;)
- a Bevy plugin for pixel-perfect games.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;skipngo&quot;&gt;Skip&#x27;n Go&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-on-web&quot;&gt;forum&lt;&#x2F;a&gt;)
- a simple game engine for making top-down pixel games.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can read the full update in the &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-on-web&quot;&gt;Blog Post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;pGLOWrpg&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg_progress.jpg&quot; alt=&quot;Improved text rendering&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;pGLOWrpg&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;Twitter&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt;
is a Procedurally Generated Living Open World RPG,
a long-term project in development, which aims to be a narrative text-based game
with maximum portability and accessibility.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Reformatting a print interface, making it very easy to link text UI and code.&lt;&#x2F;li&gt;
&lt;li&gt;Switching to .ron file format for storing configs and strings.&lt;&#x2F;li&gt;
&lt;li&gt;Implementing individual strings coloring for better visual perception.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rusty-bomber&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rgripper.github.io&#x2F;rusty-bomber&quot;&gt;rusty-bomber&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-bomber&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rusty-bomber.png&quot; alt=&quot;gameplay screenshot wthh an explosion&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rgripper.github.io&#x2F;rusty-bomber&quot;&gt;rusty-bomber&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rgripper&#x2F;rusty-bomber&quot;&gt;source code&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rgripper&quot;&gt;@rgripper&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cupnfish&quot;&gt;@Cupnfish&lt;&#x2F;a&gt;
is a BomberMan clone written using Bevy &amp;amp; Rapier that works on desktop and web.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rgripper&#x2F;rusty-bomber&#x2F;blob&#x2F;548d50470&#x2F;blog&#x2F;blog.md&quot;&gt;devlog&lt;&#x2F;a&gt; for more details about
the project&#x27;s internals.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stellary-2&quot;&gt;Stellary 2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#stellary-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1378719827347509249&quot;&gt;&lt;img src=&quot;stellary2-centered-view.gif&quot; alt=&quot;Stellary 2 Anti-Missile Laser&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;▶️ Click to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1378719827347509249&quot;&gt;watch the full video&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Stellary 2 by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;@CoffeJunkStudio&lt;&#x2F;a&gt; is a 3D real-time space
shooter in which the player has to control his spaceship to colonize each planet
in the solar system.&lt;&#x2F;p&gt;
&lt;p&gt;In the last month, the game concept has been overhauled. Most importantly:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Planets become inhabitable over time, starting with the outermost one in order
to bring head-to-head matches to an end eventually.&lt;&#x2F;li&gt;
&lt;li&gt;Full focus on multiplayer, including AIs.&lt;&#x2F;li&gt;
&lt;li&gt;Players can’t die mid-game anymore. When defeated, they re-spawn and lose a
colony for it (if they have one) instead of dying. This prevents long waiting
times when playing against friends.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can follow the development of Stellary 2 on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.jpg&quot; alt=&quot;Elevation data in A&#x2F;B Street&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CarlinoDustin&quot;&gt;@dabreegster&lt;&#x2F;a&gt; is a traffic simulation game exploring how small
changes to roads affect cyclists, transit users, pedestrians, and drivers, with
support for any city with OpenStreetMap coverage.&lt;&#x2F;p&gt;
&lt;p&gt;In March, elevation data courtesy of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eldang&#x2F;&quot;&gt;Eldan&lt;&#x2F;a&gt; was imported, letting cycling
speeds uphill be adjusted. Importing any area from OpenStreetMap can now be
done from the UI with no command-line experience, and custom travel demand
models based on UK-wide census data can now be generated. Some important
simulation fixes for roundabouts improve gridlock, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelkirk&quot;&gt;Michael&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;www.yuwen-li.com&#x2F;&quot;&gt;Yuwen&lt;&#x2F;a&gt;
helped adjust the UI panel layout for smaller screens.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egregoria&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egregoria&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egregoria.jpg&quot; alt=&quot;Egregoria city at dawn&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CAaZhUJ&quot;&gt;Discord&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&quot;&gt;@Uriopass&lt;&#x2F;a&gt;
is a simulation oriented city builder that tries
to replicate modern society as well as possible.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;egregoria_8.html&quot;&gt;8th devlog&lt;&#x2F;a&gt; was published.
Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Multiplayer based on deterministic lockstep&lt;&#x2F;li&gt;
&lt;li&gt;Economy revamp inspired by Anno 1800&lt;&#x2F;li&gt;
&lt;li&gt;Infinite world using procedural generation&lt;&#x2F;li&gt;
&lt;li&gt;Many more QoL features&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;See also the &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;qH2SKWbRV5I&quot;&gt;YouTube summary video&lt;&#x2F;a&gt;
of the past 6 months of development.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gargoyle-s-quest&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ShamylZakariya&#x2F;Platformer&quot;&gt;Gargoyle&#x27;s Quest&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gargoyle-s-quest&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gargoyles_quest.png&quot; alt=&quot;Gargoyle&#x27;s Quest&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ShamylZakariya&#x2F;Platformer&quot;&gt;Gargoyle&#x27;s Quest&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ShamylZakariya&quot;&gt;@ShamylZakariya&lt;&#x2F;a&gt; is an implementation of level one
of the 1990 &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Gargoyle%27s_Quest&quot;&gt;Gameboy platformer&lt;&#x2F;a&gt; built using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fishgame&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fishgame&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fishgame&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fishgame.gif&quot; alt=&quot;Fishgame&quot; &#x2F;&gt;
&lt;em&gt;Game footage with the new weapon.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fishgame&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;fish-game?secret=UAVcggHn332a&quot;&gt;(web build)&lt;&#x2F;a&gt; is an online multiplayer game,
created in a collaboration between &lt;a href=&quot;https:&#x2F;&#x2F;heroiclabs.com&#x2F;&quot;&gt;Nakama&lt;&#x2F;a&gt;, an open-source scalable
game server, and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;Macroquad&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;p&gt;This month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;fishgame migrated to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;nakama-rs&quot;&gt;nakama-rs&lt;&#x2F;a&gt; (featured in this newsletter as well).&lt;&#x2F;li&gt;
&lt;li&gt;Also a second weapon, the sword, was added to the game.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Airship&quot; &#x2F;&gt;
&lt;em&gt;Waiting for the airship to land&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In March, Veloren released 0.9. Lots of work throughout the month was put
towards preparing for this. NPC merchants and trading was merged. Many changes
were made to combat, including buffs and combat. Player-to-player trading was
also implemented. Lots of work was done in optimizing Veloren. This included
significantly improving how long physics was talking, and network improvements.
Metrics tracking was also overhauled to better track the different systems in
Veloren. Pathfinding is also working through an overhaul. A large feature
implemented in March was Airships being merged into the game. This prompted a
redo of how physics in the game is handled.&lt;&#x2F;p&gt;
&lt;p&gt;A survey was sent out in preparation for the release. A lot of information was
gathered about how players experience Veloren, and the items they like or don&#x27;t
like. These can all be ready in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-112&quot;&gt;devblog #112&lt;&#x2F;a&gt;.
This was followed up by the 0.9 release, which turned out to be the largest yet.
At peak, 133 players joined the main server. There were problems throughout the
release party relating to networking, as well as our tick performance.&lt;&#x2F;p&gt;
&lt;p&gt;March&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-109&quot;&gt;#109&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-110&quot;&gt;#110&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-111&quot;&gt;#111&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-112&quot;&gt;#112&lt;&#x2F;a&gt;.
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-113&quot;&gt;#113&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;theta-wave&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#theta-wave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;&lt;img src=&quot;theta-wave.gif&quot; alt=&quot;Enemy Formations&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Enemies can now be easily spawned in formations&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt; is an open-source space shooter game by developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;. It is one of the showcase games for the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;&quot;&gt;Amethyst Engine&lt;&#x2F;a&gt;. In
the past month, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&#x2F;releases&#x2F;tag&#x2F;v0.1.4&quot;&gt;&amp;quot;Foundations&amp;quot;&lt;&#x2F;a&gt; update was released which included numerous
refactors that improved the accessibility of contributing to the game.&lt;&#x2F;p&gt;
&lt;p&gt;They are now working on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&#x2F;projects&#x2F;2&quot;&gt;&amp;quot;Formations&amp;quot;&lt;&#x2F;a&gt; update which will organize how
waves of enemies are spawned into the game.&lt;&#x2F;p&gt;
&lt;p&gt;Notable changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Formations can be defined in a data file&lt;&#x2F;li&gt;
&lt;li&gt;New &lt;code&gt;InvasionFormation&lt;&#x2F;code&gt; phase where formations of enemies are spawned from
a pool of formations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;harvest-hero&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CJRbxQn3d9&quot;&gt;Harvest Hero&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;harvest_hero_level_making.gif&quot; alt=&quot;harvest_hero_level&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CJRbxQn3d9&quot;&gt;Harvest Hero&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CJRbxQn3d9&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;Twitter&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;@bombfuse&lt;&#x2F;a&gt; is an arcade&#x2F;roguelite where you whack Groobles.
Built on top of &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;020&#x2F;#emerald&quot;&gt;Emerald&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Harvest Hero has undergone a large change, migrating
from semi-randomly generated levels to handcrafted levels
that are randomly selected throughout your playthrough.&lt;&#x2F;p&gt;
&lt;p&gt;This means using &lt;a href=&quot;https:&#x2F;&#x2F;ogmo-editor-3.github.io&#x2F;&quot;&gt;Ogmo&lt;&#x2F;a&gt; to design levels,
and using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;nano-ogmo&quot;&gt;nano-ogmo&lt;&#x2F;a&gt; to import them.&lt;&#x2F;p&gt;
&lt;p&gt;Updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;General UI update&lt;&#x2F;li&gt;
&lt;li&gt;Importing ogmo levels via nano-ogmo&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bombfuse.itch.io&#x2F;him-character-demo-harvest-hero&quot;&gt;April Fools demo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;station-iapetus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#station-iapetus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=O_ETjSkVBME&quot;&gt;&lt;img src=&quot;station-iapetus-youtube.png&quot; alt=&quot;Station Iapetus Youtube&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click on the iamge to see the gameplay video on YouTube&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&quot;&gt;@mrDIMAS&lt;&#x2F;a&gt; is a 3rd person shooter on the
prison Iapetus near the Saturn.
This month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Inventory fixes and improvements&lt;&#x2F;li&gt;
&lt;li&gt;Splash damage for grenades&lt;&#x2F;li&gt;
&lt;li&gt;Weapon recoil&lt;&#x2F;li&gt;
&lt;li&gt;More items&lt;&#x2F;li&gt;
&lt;li&gt;Bots now hear player&lt;&#x2F;li&gt;
&lt;li&gt;More assets&lt;&#x2F;li&gt;
&lt;li&gt;First level improvements&lt;&#x2F;li&gt;
&lt;li&gt;Procedural animation of impact for bots&lt;&#x2F;li&gt;
&lt;li&gt;More sounds&lt;&#x2F;li&gt;
&lt;li&gt;Separate scene for menu with music&lt;&#x2F;li&gt;
&lt;li&gt;Pause game when in menu&lt;&#x2F;li&gt;
&lt;li&gt;More switches in options menu&lt;&#x2F;li&gt;
&lt;li&gt;Turrets&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620?utm_campaign=tmirgd&amp;amp;utm_source=n20&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620?utm_campaign=tmirgd&amp;amp;utm_source=n20&quot;&gt;&lt;img src=&quot;wor-capsule.png&quot; alt=&quot;Way of Rhea on Steam&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620?utm_campaign=tmirgd&amp;amp;utm_source=n20&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a picturesque puzzle platformer—without the platforming.
Solve mind bending color puzzles, unlock new areas of a vibrant hub world, and
talk to NPCs to unravel the mysteries of a world you left behind!&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea is being produced by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt;. Latest Way of
Rhea developments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A free demo was distributed as part of &lt;a href=&quot;https:&#x2F;&#x2F;indiemakersyndicate.com&#x2F;&quot;&gt;Indie Maker Syndicate&lt;&#x2F;a&gt;&#x27;s
online event&lt;&#x2F;li&gt;
&lt;li&gt;The demo included a number of minor visual improvements &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&#x2F;status&#x2F;1375534918646763528&quot;&gt;aimed at better
communicating the game&#x27;s mechanics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Progress is being made adding &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&#x2F;status&#x2F;1377693351198216193&quot;&gt;new artwork&lt;&#x2F;a&gt; to the game&lt;&#x2F;li&gt;
&lt;li&gt;Tools for laying out artwork in game were &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&#x2F;status&#x2F;1377736615997636611&quot;&gt;improved&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;A crash reporter was implemented to give players the option to report issues
directly to &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;JGeVt5XwPP&quot;&gt;Way of Rhea&#x27;s Discord&lt;&#x2F;a&gt;. A writeup will be posted
explaining how it works soon!&lt;&#x2F;li&gt;
&lt;li&gt;Work has begun on a dialog system for chatting w&#x2F; NPCs!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. This
month, versions 0.6.1 and 0.6.2 were released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support for blend modes and premultiplied alpha&lt;&#x2F;li&gt;
&lt;li&gt;Scissor rectangles (useful for UI rendering)&lt;&#x2F;li&gt;
&lt;li&gt;Word wrapping for text&lt;&#x2F;li&gt;
&lt;li&gt;More events and methods for tracking&#x2F;controlling the window&#x27;s state&lt;&#x2F;li&gt;
&lt;li&gt;Bugfixes and docs improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1357750836370284544&quot;&gt;template repository&lt;&#x2F;a&gt; has been created,
demonstrating some useful patterns for structuring a Tetra project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;starframe&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&quot;&gt;Starframe&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#starframe&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;starframe.gif&quot; alt=&quot;Current state of starframe graphics and physics&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&quot;&gt;Starframe&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&quot;&gt;@molentum&lt;&#x2F;a&gt; is a work-in-progress game engine for physics-y
sidescrolling 2D games.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&#x2F;status&#x2F;1360723470414450688&quot;&gt;its physics engine was revamped once more&lt;&#x2F;a&gt;
(for the last time, hopefully),
implementing a modern solver method called Extended Position-Based Dynamics.
Also, &lt;a href=&quot;https:&#x2F;&#x2F;molentum.me&#x2F;blog&#x2F;starframe-constraints&#x2F;&quot;&gt;a blog post&lt;&#x2F;a&gt; was published, covering the
development of the physics engine so far in a great deal of mathematical
detail.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;emerald&quot;&gt;Emerald&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#emerald&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;em_desktop_icon.png&quot; alt=&quot;emerald_logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;@bombfuse&lt;&#x2F;a&gt;
is a 2D game engine focused on being as portable as possible.&lt;&#x2F;p&gt;
&lt;p&gt;The ultimate goal of Emerald is to be a fully featured engine
that you can slap onto any device with relative ease.
It&#x27;s currently able to run on WASM, Raspberry Pi, Mac, Windows, and Linux
thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Features include physics via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;rapier&quot;&gt;rapier2d&lt;&#x2F;a&gt;,
ECS via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;, and font rendering via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mooman219&#x2F;fontdue&quot;&gt;fontdue&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Rendering to textures was added (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&#x2F;blob&#x2F;eb38d868a&#x2F;examples&#x2F;render_to_texture.rs&quot;&gt;example&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bombfuse.itch.io&#x2F;him-character-demo-harvest-hero&quot;&gt;WASM game sample&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rg3d_logo.png&quot; alt=&quot;rg3d Youtube&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a game engine that
aims to be easy to use and provide a large set of out-of-box features. Some of
the recent engine updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Context menus and tooltips (huge thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MinusGix&quot;&gt;MinusGix&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;Performance improvements for UI.&lt;&#x2F;li&gt;
&lt;li&gt;Parallax Mapping.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to enable&#x2F;disable scenes.&lt;&#x2F;li&gt;
&lt;li&gt;Expansion strategies for TreeView.&lt;&#x2F;li&gt;
&lt;li&gt;LOD system fixes.&lt;&#x2F;li&gt;
&lt;li&gt;Graphical fixes.&lt;&#x2F;li&gt;
&lt;li&gt;First version of engine&#x27;s architecture overview.&lt;&#x2F;li&gt;
&lt;li&gt;Various bug fixes and small improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;Editor&lt;&#x2F;a&gt; updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to edit collision groups and mask for colliders.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to clear command stack.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to change render path for meshes.&lt;&#x2F;li&gt;
&lt;li&gt;LOD editor.&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Collapse All&amp;quot;, &amp;quot;Expand All&amp;quot;, &amp;quot;Locate Selection&amp;quot; buttons for world outliner.&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Fit Collider&amp;quot; feature fixes.&lt;&#x2F;li&gt;
&lt;li&gt;Picking fixes.&lt;&#x2F;li&gt;
&lt;li&gt;Change selection when paste from clipboard.&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Slow&amp;quot; and &amp;quot;Fast&amp;quot; camera movement modifiers.&lt;&#x2F;li&gt;
&lt;li&gt;Navmesh selection fixes.&lt;&#x2F;li&gt;
&lt;li&gt;Simple TBN visualizer.&lt;&#x2F;li&gt;
&lt;li&gt;Parallax mapping switch in settings.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;oxygengine-v0-16-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine v0.16.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine-v0-16-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-raui-integration.gif&quot; alt=&quot;Oxygengine + RAUI integration&quot; &#x2F;&gt;
&lt;em&gt;Integration of RAUI (UI&#x2F;UX) crate with Oxygengine game engine&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;psichix&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is the hottest
HTML5 + WASM game engine for games written in Rust with web-sys.
The goal of this project is to combine professional game development tools under
one highly modular toolset.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Version 0.16.0 was focused on integration of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&quot;&gt;RAUI&lt;&#x2F;a&gt; crate into the
engine to allow building rich UI&#x2F;UX experience for your games using declarative
mode UI composition (which now makes currently used simple UI Elements feature
deprecated and it&#x27;s gonna be removed at some point in the near future).&lt;&#x2F;li&gt;
&lt;li&gt;In addition to that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;basic-web-game&quot;&gt;basic web game demo&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;pokemon&quot;&gt;pokemon-like RPG demo&lt;&#x2F;a&gt; were enhanced with new UI showing
how to build UI&#x2F;UX with RAUI.&lt;&#x2F;li&gt;
&lt;li&gt;Next months will be focused on making RPG showing
full potential of what you can do with RAUI in Oxygengine, as well as remaking
Visual Novel module to be entirely based on RAUI in a way similar to how RenPy
is made!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;bevy-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-5&quot;&gt;Bevy v0.5&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_pbr.png&quot; alt=&quot;PBR material example&quot; &#x2F;&gt;
&lt;em&gt;Material grid with varying PBR properties&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; is a refreshingly simple data-driven game engine built in Rust. It is
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;free and open source&lt;&#x2F;a&gt; forever!&lt;&#x2F;p&gt;
&lt;p&gt;Bevy 0.5 was a massive community effort. You can check out the
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-5&quot;&gt;full release blog post here&lt;&#x2F;a&gt;, but here are some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Physically Based Rendering (PBR).&lt;&#x2F;li&gt;
&lt;li&gt;GLTF Improvements, such as support for PBR textures and a new top-level GLTF
asset type.&lt;&#x2F;li&gt;
&lt;li&gt;Bevy ECS V2: a complete rewrite of the Bevy ECS core with a hybrid component
storage model, Archetype Graphs, stateful queries, and across-the-board performance
improvements.&lt;&#x2F;li&gt;
&lt;li&gt;A brand new Parallel System Executor packed with features: explicit system
dependencies, system labels, system sets, improved run criteria,
and increased parallelism.&lt;&#x2F;li&gt;
&lt;li&gt;Reliable change detection: efficiently query changes to any component or
resource at any point in time (even across frames).&lt;&#x2F;li&gt;
&lt;li&gt;State System Rewrite: a new stack-based state system that makes running systems
for different states (ex: menus vs in-game) much easier.&lt;&#x2F;li&gt;
&lt;li&gt;Rich text: style text &amp;quot;spans&amp;quot; with different colors &#x2F; fonts while still
respecting layout.&lt;&#x2F;li&gt;
&lt;li&gt;HIDPI text: render crisp text at any resolution.&lt;&#x2F;li&gt;
&lt;li&gt;2D world space text, world to screen space conversions, 2d&#x2F;3d orthographic
camera improvements, render layers, sprite flipping, improved color space handling,
wireframes, timer improvements, and more!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;mljg39&#x2F;bevy_05&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26716166&quot;&gt;Hacker News&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1379514923819012097&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;robo-instructus-is-a-coding-game-built-entirely-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;builtin.com&#x2F;software-engineering-perspectives&#x2F;rust-puzzle-game&quot;&gt;Robo Instructus Is a Coding Game Built Entirely in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus-is-a-coding-game-built-entirely-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;robo.jpg&quot; alt=&quot;A screenshot from the middle of the game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month Tammy Xu published an article about &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt;&#x27;s two-year journey
of creating &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;.
The article touches lots of topics like:
why a custom game engine in Rust was choosen, design of the custom
scripting language, and game design of programming puzzles.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-cheatbook-major-overhaul-for-bevy-0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevy-cheatbook.github.io&quot;&gt;Bevy Cheatbook: Major Overhaul for Bevy 0.5&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-cheatbook-major-overhaul-for-bevy-0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;The Unofficial Bevy Cheatbook by @jamadazi is a practical reference book for
the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy Game Engine&lt;&#x2F;a&gt;. It teaches programming patterns, features, and
solutions to common problems. Written to be concise and easy to learn from.&lt;&#x2F;p&gt;
&lt;p&gt;The book recently got a major overhaul for the big new Bevy 0.5 release. Many
pages were expanded or rewritten, new content added, and community feedback
addressed.&lt;&#x2F;p&gt;
&lt;p&gt;If you are interested in Bevy, this book is now one of the most detailed
learning resources. Have fun making cool things with Bevy!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-game-template&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_game_template&quot;&gt;Bevy Game Template&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-game-template&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_game_template&quot;&gt;Bevy game template&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt;
is a template repository for a Bevy game.&lt;&#x2F;p&gt;
&lt;p&gt;The goal is to present a possible structure for Bevy games and at the
same time reduce the amount of copy paste when starting a new project.
The repository includes a GitHub workflow for Linux, MacOS, and Windows builds
(WASM will be supported soon) and comes with a small, opinionated example game.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;reverse-engineering-nes-tetris-to-add-hard-drop&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gridbugs.org&#x2F;reverse-engineering-nes-tetris-to-add-hard-drop&quot;&gt;Reverse-Engineering NES Tetris to Add Hard Drop&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#reverse-engineering-nes-tetris-to-add-hard-drop&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tetris-hard-drop.gif&quot; alt=&quot;NES Tetris with Hard Drop and Ghost Piece&quot; &#x2F;&gt;
&lt;em&gt;NES Tetris with Hard Drop and Ghost Piece&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;www.gridbugs.org&#x2F;reverse-engineering-nes-tetris-to-add-hard-drop&quot;&gt;blog post&lt;&#x2F;a&gt; describing the process of reverse-engineering
the rendering and input-handling logic in the NES version of Tetris, and using
a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;mos6502&#x2F;blob&#x2F;master&#x2F;tetris-hard-drop-patcher&#x2F;src&#x2F;main.rs#L23&quot;&gt;rust embedded domain-specific language&lt;&#x2F;a&gt; to
make a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;mos6502&#x2F;tree&#x2F;master&#x2F;tetris-hard-drop-patcher&quot;&gt;patching tool&lt;&#x2F;a&gt; that generates code (6502
machine code) to add hard drop (instantly dropping the current piece) and to
render a ghost piece (the dotted outline showing where the current piece will
land).&lt;&#x2F;p&gt;
&lt;p&gt;The patching tool uses the crate
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;mos6502&#x2F;tree&#x2F;master&#x2F;assembler&quot;&gt;mos6502_assembler&lt;&#x2F;a&gt; to specify 6502 assembly in
rust and generate machine code. Many of the reverse-engineering experiments
were done using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;mos6502&#x2F;tree&#x2F;master&#x2F;nes-emulator&quot;&gt;this rust NES emulator&lt;&#x2F;a&gt;. The
result is available as an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;mos6502&#x2F;raw&#x2F;master&#x2F;tetris-hard-drop-patcher&#x2F;tetris-hard-drop.ips&quot;&gt;IPS Patch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26530604&quot;&gt;Hacker News&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ma6jqz&#x2F;using_a_rust_dsl_to_add_hard_drop_to_nes_tetris&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tutorial-writing-a-tiny-entity-component-system-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ianjk.com&#x2F;ecs-in-rust&#x2F;&quot;&gt;Tutorial: Writing a tiny Entity Component System in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tutorial-writing-a-tiny-entity-component-system-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kettlecorn&quot;&gt;@kettlecorn&lt;&#x2F;a&gt; wrote
a beginner-friendly &lt;a href=&quot;https:&#x2F;&#x2F;ianjk.com&#x2F;ecs-in-rust&#x2F;&quot;&gt;tutorial&lt;&#x2F;a&gt; that dives into the
inner workings of the Entity-Component-System pattern.
The tutorial walks through a minimalist ECS
implementation to illustrate how the pattern works, and
why it&#x27;s useful.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;m88ywa&#x2F;tutorial_writing_a_tiny_entity_component_system&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;writing-a-3d-shooter-using-rg3d&quot;&gt;Writing a 3D Shooter Using rg3d&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#writing-a-3d-shooter-using-rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;tutorials&#x2F;2021&#x2F;03&#x2F;11&#x2F;tutorial3.html&quot;&gt;&lt;img src=&quot;rg3d-tut.jpg&quot; alt=&quot;Demo of the third part: shooting at a moving zombie&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&quot;&gt;@mrDIMAS&lt;&#x2F;a&gt; started a tutorial series about making a 3D shooter
using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; game engine.
So far three parts were released:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;tutorials&#x2F;2021&#x2F;03&#x2F;05&#x2F;tutorial1.html&quot;&gt;&amp;quot;Character Controller&amp;quot;&lt;&#x2F;a&gt; - engine &amp;amp; editor basics,
simple character controller.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;tutorials&#x2F;2021&#x2F;03&#x2F;09&#x2F;tutorial2.html&quot;&gt;&amp;quot;Weapons&amp;quot;&lt;&#x2F;a&gt; - player weapon with recoil and simple impact effect.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rg3d.rs&#x2F;tutorials&#x2F;2021&#x2F;03&#x2F;11&#x2F;tutorial3.html&quot;&gt;&amp;quot;Bots, AI&amp;quot;&lt;&#x2F;a&gt; - bots, actor animations, and a simple AI.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;using-tests-to-speed-up-your-feedback-loop&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;philipk.github.io&#x2F;devblog&#x2F;blog&#x2F;tdd-gamedev-feedback-loop&quot;&gt;Using Tests to Speed Up Your Feedback Loop&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#using-tests-to-speed-up-your-feedback-loop&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;robotcards.png&quot; alt=&quot;Tile map with basic agents and resources&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;philipk&quot;&gt;@philipk&lt;&#x2F;a&gt; shared a &lt;a href=&quot;https:&#x2F;&#x2F;philipk.github.io&#x2F;devblog&#x2F;blog&#x2F;tdd-gamedev-feedback-loop&quot;&gt;blog post&lt;&#x2F;a&gt; about using tests not only
for verifying correctness, but also for faster feedback loops in some
circumstances. &lt;a href=&quot;https:&#x2F;&#x2F;philipk.github.io&#x2F;devblog&#x2F;robotcards&quot;&gt;RobotCards&lt;&#x2F;a&gt; - a WIP game that uses the Legion ECS -
is used as a practical example.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;man8u1&#x2F;using_tests_to_speed_up_your_feedback_loop&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;genesis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StygianLightning&#x2F;genesis&quot;&gt;genesis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#genesis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StygianLightning&#x2F;genesis&quot;&gt;genesis&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;StygianLightning&quot;&gt;@StygianLightning&lt;&#x2F;a&gt; is a library for generating statically-typed
ECS worlds by using a procedural macro.&lt;&#x2F;p&gt;
&lt;p&gt;Unlike other ECS libraries and frameworks, which do dynamic borrow-checking
at runtime, you define all your components upfront and generate
a completely statically typed ECS, with borrow checking done at compile time.
Gone are the days of passing a World between functions,
only to encounter a dynamic borrow checking problem!&lt;&#x2F;p&gt;
&lt;p&gt;genesis is a lightweight ECS library that doesn&#x27;t provide any scheduling capabilities.
Instead, you can query the storage for each component type directly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shipyard-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;shipyard-0-5-release&#x2F;57203&quot;&gt;Shipyard v0.5&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shipyard-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leudz&quot;&gt;@leudz&lt;&#x2F;a&gt; is an ECS library built on top of sparse sets
and focused on usability and speed.&lt;&#x2F;p&gt;
&lt;p&gt;Main changes of the &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;shipyard-0-5-release&#x2F;57203&quot;&gt;latest version&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;system!&lt;&#x2F;code&gt; macro, packs, and &lt;code&gt;Shiperator&lt;&#x2F;code&gt; trait were removed.&lt;&#x2F;li&gt;
&lt;li&gt;Bulk add entity - faster way than adding entities one by one.&lt;&#x2F;li&gt;
&lt;li&gt;Accurate modification tracking by default.&lt;&#x2F;li&gt;
&lt;li&gt;No more &lt;code&gt;try_*&lt;&#x2F;code&gt; - now all functions that can fail because of storage access
return a Result while almost all others panic.&lt;&#x2F;li&gt;
&lt;li&gt;More flexible workload building and debugging.&lt;&#x2F;li&gt;
&lt;li&gt;Customizable views and storages.&lt;&#x2F;li&gt;
&lt;li&gt;Significant performance improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;planck-ecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;planck_ecs&quot;&gt;Planck ECS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#planck-ecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;planck_ecs.png&quot; alt=&quot;planck logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;planck_ecs&quot;&gt;Planck ECS&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;planck_ecs&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;jojolepro.com&#x2F;blog&#x2F;2021-01-13_planck_ecs&#x2F;&quot;&gt;Blog&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;jojolepro&quot;&gt;Patreon&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&quot;&gt;@jojolepro&lt;&#x2F;a&gt;
is a brand new minimalist and safe ECS library.&lt;&#x2F;p&gt;
&lt;p&gt;The 1.0 release happened in the past month, featuring: various fixes,
quality of life improvements, removal of unsafe code and completion of tests and
documentation.&lt;&#x2F;p&gt;
&lt;p&gt;The library is currently considered completed, which means that all planned
features are implemented, tested and benchmarked. Future updates will focus on
performance improvements and usability improvements.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;planck_ecs&quot;&gt;Planck ECS&lt;&#x2F;a&gt; is also used in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;Shotcaller&lt;&#x2F;a&gt; which is featured in
this newsletter too.&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about the library on the &lt;a href=&quot;https:&#x2F;&#x2F;jojolepro.com&#x2F;blog&#x2F;2021-01-13_planck_ecs&#x2F;&quot;&gt;Blog&lt;&#x2F;a&gt; and on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;planck_ecs&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;m73ema&#x2F;yet_another_ecs_library_except_much_safer&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hecs-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt; v0.5&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hecs-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt; is a fast, lightweight, and unopinionated archetypal ECS library.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.5 introduces a column-major serialization mode. This imitates the
in-memory data layout, enabling higher performance than the already-fast
row-major serialization mode. Because columnar layout places similar data
nearby, it also improves the effectiveness of compression.&lt;&#x2F;p&gt;
&lt;p&gt;Other changes include major optimizations to spawning entities and
adding&#x2F;removing components, inspired by the archetype graph model recently
adopted by bevy.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rkyv-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt; v0.5&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rkyv-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt; is a zero-copy deserialization framework for Rust. It&#x27;s similar to FlatBuffers
and Cap&#x27;n Proto and can be used for data storage and messaging.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rust_serialization_benchmark&quot;&gt;benchmark&lt;&#x2F;a&gt; was put together to compare rkyv
against other leading serialization solutions and gather feedback and use
cases for development. A &lt;a href=&quot;https:&#x2F;&#x2F;davidkoloski.me&#x2F;blog&#x2F;rkyv-is-faster-than&quot;&gt;summary and analysis&lt;&#x2F;a&gt; of the
results is also available.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.5 is hot off the presses and rolls up features from the 0.4
development cycle:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Derive macros can now implement &lt;code&gt;PartialEq&lt;&#x2F;code&gt; and &lt;code&gt;PartialOrd&lt;&#x2F;code&gt; between
archived and unarchived types.&lt;&#x2F;li&gt;
&lt;li&gt;Custom type bounds for serialization and deserialization can be added
with derive attributes.&lt;&#x2F;li&gt;
&lt;li&gt;Helper types like &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;rkyv&#x2F;0.5.0&#x2F;rkyv&#x2F;struct.AlignedVec.html&quot;&gt;AlignedVec&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;rkyv&#x2F;0.5.0&#x2F;rkyv&#x2F;struct.Infallible.html&quot;&gt;Infallible&lt;&#x2F;a&gt; were introduced to improve ergonomics.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;const_generics&lt;&#x2F;code&gt; are now enabled by default.&lt;&#x2F;li&gt;
&lt;li&gt;Helper functions have been added to make getting root objects easier.&lt;&#x2F;li&gt;
&lt;li&gt;Several bugfixes and performance improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&#x2F;issues&#x2F;67&quot;&gt;feedback issue&lt;&#x2F;a&gt; is still open for providing feedback on
further development.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gba-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-console&#x2F;gba&quot;&gt;gba&lt;&#x2F;a&gt; v0.4&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gba-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-console&#x2F;gba&quot;&gt;gba&lt;&#x2F;a&gt; is a crate for making GBA games with Rust.
This month it was updated to 0.4!
It&#x27;s using the new &lt;code&gt;thumbv4-none-eabi&lt;&#x2F;code&gt; target, and has
an overall simpler build process than before.&lt;&#x2F;p&gt;
&lt;p&gt;The project is still a work in progress, but if you&#x27;ve wanted to try
an embedded experience this is an easy way to test the waters.
No hardware required!
Compiled binaries can be run in a GBA emulator just fine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kira&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;kira&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kira&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;kira&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt; is a game audio library tailored to composers and other
people who need expressive audio.&lt;&#x2F;p&gt;
&lt;p&gt;v0.5.0 was released with mixer send tracks, new effects, and playback position tracking
for instances, as well as a variety of smaller improvements.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;m0llxm&#x2F;kira_game_audio_library_v050&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&#x2F;status&#x2F;1368984205947006976&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;quinn-v0-7&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quinn-rs&#x2F;quinn&quot;&gt;Quinn&lt;&#x2F;a&gt; v0.7&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#quinn-v0-7&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quinn-rs&#x2F;quinn&quot;&gt;Quinn&lt;&#x2F;a&gt; is an async-friendly implementation of the state-of-the-art QUIC
transport protocol soon to be standardized by the IETF.&lt;&#x2F;p&gt;
&lt;p&gt;QUIC is a uniquely versatile foundation for building application protocols. Its
support for low-latency communication, multiplexing, fine-grained reliability,
and security make an excellent basis for real-time game networking, providing an
array of powerful primitives unavailable on UDP or TCP.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quinn-rs&#x2F;quinn&#x2F;releases&#x2F;tag&#x2F;0.7.0&quot;&gt;Quinn 0.7&lt;&#x2F;a&gt; introduces support for Tokio 1.0 and many
optimizations and bug fixes, and updates to &lt;a href=&quot;https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-quic-transport-32&quot;&gt;draft 32&lt;&#x2F;a&gt; of the proposed
standard. With last call underway in the IETF, the devs expect to release an
implementation of the final standard soon with no major changes.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nakama-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;nakama-rs&quot;&gt;nakama-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nakama-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;nakama-rs&quot;&gt;nakama-rs&lt;&#x2F;a&gt; is a pure Rust implementation of the &lt;a href=&quot;https:&#x2F;&#x2F;heroiclabs.com&#x2F;&quot;&gt;Nakama&lt;&#x2F;a&gt; protocol.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;heroiclabs.com&#x2F;&quot;&gt;Nakama&lt;&#x2F;a&gt; is an open-source server designed to power modern games and apps.
Features include user accounts, chat, social, matchmaker, realtime multiplayer,
and much &lt;a href=&quot;https:&#x2F;&#x2F;heroiclabs.com&quot;&gt;more&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Being pure Rust, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;nakama-rs&quot;&gt;nakama-rs&lt;&#x2F;a&gt; brings the full API and socket options to any
platform Rust works on.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;smaa-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fintelia&#x2F;smaa-rs&quot;&gt;smaa-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#smaa-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fintelia&#x2F;smaa-rs&quot;&gt;smaa-rs&lt;&#x2F;a&gt; library provides fast and high quality post-process
anti-aliaising using the &lt;a href=&quot;http:&#x2F;&#x2F;www.iryoku.com&#x2F;smaa&#x2F;&quot;&gt;SMAA algorithm&lt;&#x2F;a&gt;. It is designed to be
easy to integrate into other &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt; applications with only a few
added lines of code.&lt;&#x2F;p&gt;
&lt;p&gt;The 0.2 series released this month includes a steamlined API
which makes it easier to enable&#x2F;disable anti-aliasing via a
configuration setting. Currently SMAA 1x is supported with
SMAA S2x likely to be added depending on interest.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-conservative-bunny.png&quot; alt=&quot;voxel bunny on wgpu&quot; &#x2F;&gt;
&lt;em&gt;Voxel Bunny rendering with conservative rasterization&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;&quot;&gt;WebGPU&lt;&#x2F;a&gt; implementation in Rust. It is safe, efficient,
and portable: can target both native (Vulkan&#x2F;D3D&#x2F;Metal) and the Web.&lt;&#x2F;p&gt;
&lt;p&gt;Most progress in March was focused around &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;wgsl&#x2F;&quot;&gt;WGSL&lt;&#x2F;a&gt; shaders and validation.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; has seen a lot of improvements in the SPIR-V and WGSL parsing, as well
as backend code generation. Most importantly, it now fully validates both
statements and expressions. No more accidental foot shots from adding vec2
and vec3 in the shaders!&lt;&#x2F;p&gt;
&lt;p&gt;The last and the biggest (in terms of shader complexity) example - &amp;quot;water&amp;quot;
has been successfully ported to WGSL 🎉.&lt;&#x2F;p&gt;
&lt;p&gt;A small addition to our native-only features - conservative rasterization
feature - was added by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Wumpf&quot;&gt;@wumpf&lt;&#x2F;a&gt; and demonstrated on a voxel bunny 🐇&lt;&#x2F;p&gt;
&lt;p&gt;Finally, there is a blog post on Mozilla &lt;a href=&quot;https:&#x2F;&#x2F;mozillagfx.wordpress.com&#x2F;2021&#x2F;03&#x2F;10&#x2F;webgpu-progress&#x2F;&quot;&gt;graphics team blog&lt;&#x2F;a&gt; about the
progress using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt; in Gecko.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;mgvd8d&#x2F;last_big_wgpurs_example_shaders_are_fully_ported&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-gpu-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;releases&#x2F;tag&#x2F;v0.3.0&quot;&gt;rust-gpu v0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gpu-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;grr-gltf.jpg&quot; alt=&quot;A Sci-Fi helmet model&quot; &#x2F;&gt;
&lt;em&gt;The Khronos Sci-Fi helmet model in a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;msiglreith&#x2F;grr-gltf&quot;&gt;glTF model viewer&lt;&#x2F;a&gt;
created by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;msiglreith&quot;&gt;@msiglreith&lt;&#x2F;a&gt; using rust-gpu&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shader.rs&quot;&gt;rust-gpu&lt;&#x2F;a&gt; is a new codegen backend by Embark Studios for Rust, aimed at making
Rust a first class language for writing GPU shaders!
This past month was the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;releases&#x2F;tag&#x2F;v0.3.0&quot;&gt;release of rust-gpu v0.3&lt;&#x2F;a&gt;.
Some of the highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A lot of technical debt that was visible to users
(such as &lt;code&gt;#[allow(unused_attributes)]&lt;&#x2F;code&gt;) was removed.&lt;&#x2F;li&gt;
&lt;li&gt;rust-gpu now also supports basic ADT enums and has a whole inference pass
for storage class variables.&lt;&#x2F;li&gt;
&lt;li&gt;All Embark&#x27;s shaders for their internal engine
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;repi&#x2F;status&#x2F;1365256477569667075&quot;&gt;are now written in Rust&lt;&#x2F;a&gt;
- no more GLSL&#x2F;HLSL, just Rust for all CPU &amp;amp; GPU code!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full release notes are available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;releases&#x2F;tag&#x2F;v0.3.0&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For more information on how to get started with using rust-gpu in your projects,
check out &lt;a href=&quot;https:&#x2F;&#x2F;embarkstudios.github.io&#x2F;rust-gpu&#x2F;book&#x2F;&quot;&gt;the Rust-GPU Dev Guide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;lxpcc2&#x2F;announcing_rustgpu_v03&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rafx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;rafx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rafx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rafx-tilemap-rendering.png&quot; alt=&quot;rafx tilemap rendering&quot; &#x2F;&gt;
&lt;em&gt;Rafx rendering an example tilemap from &lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&quot;&gt;LDTK level editor&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rafx is a multi-backend renderer that optionally integrates with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;distill&lt;&#x2F;a&gt; asset pipeline. This month, a fourth layer
was introduced to the library, &lt;code&gt;rafx-renderer&lt;&#x2F;code&gt;. It provides a plugin system,
simplifying framework setup in a project.&lt;&#x2F;p&gt;
&lt;p&gt;The demo now includes a tilemap renderer that integrates with the &lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&quot;&gt;LDTK level
editor&lt;&#x2F;a&gt;. The &lt;code&gt;distill&lt;&#x2F;code&gt; integration processes the level files offline
for very efficient loading&#x2F;rendering at runtime.&lt;&#x2F;p&gt;
&lt;p&gt;Sprite rendering in general is also much faster now. Scenes with 40k-100k
sprites can render at 60fps (measured on M1 mini) depending on
transparency&#x2F;distinct Z values in the scene. New examples demonstrate tilemap
and sprite rendering.&lt;&#x2F;p&gt;
&lt;p&gt;Early work was also done to reuse descriptor sets across frames and reduce
dynamic memory allocation when working with descriptor sets. Rafx also
includes more options for HDR tonemapping.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;femtovg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;femtovg&#x2F;femtovg&quot;&gt;FemtoVG&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#femtovg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;femtovg.png&quot; alt=&quot;femtovg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;FemtoVG is a 2D canvas like vector graphics library based on nanovg that has
been previously featured in this newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the FemtoVG team has implemented a new rendering backend based on
the &lt;code&gt;wgpu&lt;&#x2F;code&gt; library. This work is being done in this &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adamnemecek&#x2F;femtovg&quot;&gt;fork&lt;&#x2F;a&gt; of
FemtoVG and will be merged into the main repo soon. The team is currently
looking for users to try out the new backend and provide feedback.&lt;&#x2F;p&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;V69VdVu&quot;&gt;FemtoVG Discord channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kajiya&quot;&gt;Kajiya&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kajiya&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kajiya.gif&quot; alt=&quot;A race car in its natural habitat inspired by the Cornell Box&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Kajiya by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;h3r2tic&quot;&gt;@h3r2tic&lt;&#x2F;a&gt; is a real-time global illumination renderer.&lt;&#x2F;p&gt;
&lt;p&gt;It utilizes Vulkan Ray Tracing via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;ash&quot;&gt;ash&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Traverse-Research&#x2F;hassle-rs&quot;&gt;hassle-rs&lt;&#x2F;a&gt; to
implement multi-bounce light transport in fully dynamic scenes. By shooting
only two rays per pixel on average, it keeps performance high; thanks to a
voxel-based light cache and extensive spatio-temporal filtering, it keeps
noise low. It supports physically-based rendering of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gltf-rs&#x2F;gltf&quot;&gt;GLTF&lt;&#x2F;a&gt; scenes,
and achieves a close match to reference path-tracing.&lt;&#x2F;p&gt;
&lt;p&gt;Kajiya is still in its infancy, and not yet available to the public, but you
can get glimpses of its development by following the author on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-retro&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&quot;&gt;Bevy Retro&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-retro&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_retro.gif&quot; alt=&quot;pixel-perfect-collision-demo&quot; &#x2F;&gt;
&lt;em&gt;Pixel-perfect collision &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&#x2F;tree&#x2F;master&#x2F;examples#collisions&quot;&gt;example&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&quot;&gt;Bevy Retro&lt;&#x2F;a&gt; is a new &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; plugin designed for making pixel-perfect
games.&lt;&#x2F;p&gt;
&lt;p&gt;This project was released under the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;katharos-license&quot;&gt;Katharos License&lt;&#x2F;a&gt;. This
license has moral and ethical implications that you may or may not agree with,
so please read it before making use of this project.&lt;&#x2F;p&gt;
&lt;p&gt;Bevy Retro features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Web and desktop support out of the box - it even runs in Safari on iOS!&lt;&#x2F;li&gt;
&lt;li&gt;Integer pixel coordinates - no need to round floats to keep pixels aligned!&lt;&#x2F;li&gt;
&lt;li&gt;Support for sprites, sprite sheets and animations.&lt;&#x2F;li&gt;
&lt;li&gt;A super simple hierarchy system.&lt;&#x2F;li&gt;
&lt;li&gt;A custom, scaled, pixel-perfect renderer with three camera modes: fixed width,
fixed height, and letter-boxed.&lt;&#x2F;li&gt;
&lt;li&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&quot;&gt;LDtk&lt;&#x2F;a&gt; map loading plugin.&lt;&#x2F;li&gt;
&lt;li&gt;Pixel-perfect collision detection.&lt;&#x2F;li&gt;
&lt;li&gt;Support for post-processing effects using custom shaders or the built-in CRT filter.&lt;&#x2F;li&gt;
&lt;li&gt;Support for custom pixel aspect ratios.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Feel free to discuss the project and provide feedback
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_retro&#x2F;discussions&quot;&gt;on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;raui-v0-28-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&quot;&gt;RAUI v0.28.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#raui-v0-28-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;raui-tetra-todo-app-material-ui.gif&quot; alt=&quot;RAUI + Tetra TODO app&quot; &#x2F;&gt;
&lt;em&gt;RAUI + Tetra TODO app demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&quot;&gt;RAUI&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;psichix&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is a Renderer Agnostic User
Interface crate that is based on declarative mode UI composition similar to
React.js and UE4 Slate system.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Advanced navigation system mainly for the use in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;
game engine.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&#x2F;tree&#x2F;master&#x2F;raui-tesselate-renderer&quot;&gt;Tesselation renderer&lt;&#x2F;a&gt; module to allow buildings
Vertex + Index + Batch buffers for backends that allows to render meshes.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&#x2F;tree&#x2F;master&#x2F;raui-tetra-renderer&quot;&gt;Tetra integration&lt;&#x2F;a&gt; crate that allows use of RAUI with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;
game framework.&lt;&#x2F;li&gt;
&lt;li&gt;Porting &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;raui&#x2F;tree&#x2F;master&#x2F;demos&quot;&gt;demos&lt;&#x2F;a&gt; to Tetra which became one of two mainly supported
backends for RAUI.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;egui-macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;optozorax&#x2F;egui-macroquad&quot;&gt;egui-macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui-macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui-macroquad.png&quot; alt=&quot;Code example of usage of this library.&quot; &#x2F;&gt;
&lt;em&gt;Code example of usage of this library.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;optozorax&#x2F;egui-macroquad&quot;&gt;egui-macroquad&lt;&#x2F;a&gt; is a small library to use &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; inside of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;. It consists only of two functions.&lt;&#x2F;p&gt;
&lt;p&gt;Used in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;optozorax&#x2F;portal&quot;&gt;Portal Explorer&lt;&#x2F;a&gt;, see the section above.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;building-blocks-v0-6-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&quot;&gt;building-blocks&lt;&#x2F;a&gt; v0.6.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#building-blocks-v0-6-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;building-blocks-lod-terrain.jpg&quot; alt=&quot;LOD Terrain&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In v0.6.0, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&quot;&gt;building-blocks&lt;&#x2F;a&gt; voxel library brings a couple important features
for scaling up to large maps:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;pyramids for level of detail&lt;&#x2F;li&gt;
&lt;li&gt;multichannel arrays&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There is still much work to be done to optimize the voxel mesh LOD at large
scales and improve the cosmetics of LOD transitions, but the preliminary work
has allowed us to demonstrate the feasibility of this approach with a new demo
that you can view &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=fCP8xZYJiSI&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Full release notes are available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&#x2F;releases&#x2F;tag&#x2F;v0.6.0&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ma76je&#x2F;buildingblocks_v060&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;whattheframe&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;whattheframe&quot;&gt;WhatTheFrame&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#whattheframe&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;whattheframe.png&quot; alt=&quot;whattheframe gui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;whattheframe&quot;&gt;WhatTheFrame&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&quot;&gt;@JMS55&lt;&#x2F;a&gt;
is a frame-based cpu profiler crate along with a &lt;a href=&quot;https:&#x2F;&#x2F;gtk.org&#x2F;&quot;&gt;GTK&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gtk-rs&#x2F;gtk4-rs#gtk4-rs-&quot;&gt;gtk4-rs&lt;&#x2F;a&gt;) based GUI.&lt;&#x2F;p&gt;
&lt;p&gt;This project aims to answer the question: Which frames of my game are slow, and why?&lt;&#x2F;p&gt;
&lt;p&gt;It aims to be simple to use, consisting of only 3 functions: Call &lt;code&gt;let _r = Profiler::new_frame()&lt;&#x2F;code&gt;
at the start of each frame, &lt;code&gt;let _r = Profiler::new_task(&amp;quot;task_name&amp;quot;)&lt;&#x2F;code&gt; whenever you
want to profile a task, and finally &lt;code&gt;Profiler::end_profiling()&lt;&#x2F;code&gt; once at the end.&lt;&#x2F;p&gt;
&lt;p&gt;You can then open the resulting &lt;code&gt;.wtf&lt;&#x2F;code&gt; profile in the GUI and analyze the results.&lt;&#x2F;p&gt;
&lt;p&gt;This month was spent designing and implementing both the GUI and profiler crate.
The core functionality of both programs are complete, and all that remains is
cleanup, tweaks, optimization, and finally packaging the GUI up.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bitmapflow&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bauxitedev&#x2F;bitmapflow&quot;&gt;Bitmapflow&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bitmapflow&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bitmapflow.gif&quot; alt=&quot;Bitmapflow interpolating a walking mech animation&quot; &#x2F;&gt;
&lt;em&gt;Bitmapflow interpolating a walking mech animation&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Bitmapflow (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bauxitedev&#x2F;bitmapflow&quot;&gt;GitHub&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bauxitedev&quot;&gt;@bauxitedev&lt;&#x2F;a&gt; is a tool to help you
generate &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Inbetweening&quot;&gt;inbetweens&lt;&#x2F;a&gt; for animated sprites. In other words, it makes your
animations smoother. It uses &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Optical_flow&quot;&gt;optical flow&lt;&#x2F;a&gt; to try to guess how the pixels move
between frames, and blends them accordingly. The results are far from perfect,
and probably require some editing by hand afterwards, but it can produce decent
results.&lt;&#x2F;p&gt;
&lt;p&gt;It supports loading and saving animated gifs, spritesheets and individual
frames.&lt;&#x2F;p&gt;
&lt;p&gt;The tool is written using godot-rust and executables are available for Windows,
although Linux support will be coming soon. (If you compile the program from
source, it already works on Linux.)&lt;&#x2F;p&gt;
&lt;p&gt;A full demonstration and walkthrough of the program is available on
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=rC359dDAMiI&quot;&gt;YouTube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can try it out yourself on &lt;a href=&quot;https:&#x2F;&#x2F;bauxite.itch.io&#x2F;bitmapflow&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;mjw90q&#x2F;introducing_bitmapflow_a_tool&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite-tool-system-progress.png&quot; alt=&quot;&amp;quot;Graphite&amp;quot; drawn using the circles and rectangles of the new tool drawing system&quot; &#x2F;&gt;
&lt;em&gt;&amp;quot;Graphite&amp;quot; drawn using the circles and rectangles of the new tool drawing
system&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Graphite (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;README.md#discord&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-progress vector and
raster graphics editor built on a nondestructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;The team has grown from 1 to 5 in the past month and major progress was made
building core architectural Rust code. A large accomplishment was designing the
&lt;a href=&quot;https:&#x2F;&#x2F;files.keavon.com&#x2F;-&#x2F;CostlyViolentPurplemarten&#x2F;Architecture_Diagram.png&quot;&gt;software architecture diagram&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The current editor now has functional Select, Rectangle, and Ellipse tools
thanks to the newly-added tool state machine and SVG viewport drawing. The UI
now also implements tool-related icons and buttons, bringing it closer to
parity with the design mockup. The team also set up a Web&#x2F;Rust-WASM build
system, GitHub CI to confirm PRs compile, and put together
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;docs&#x2F;index.md&quot;&gt;starter documentation&lt;&#x2F;a&gt; for the codebase, UX design, and manual.&lt;&#x2F;p&gt;
&lt;p&gt;Graphite is making rapid progress towards becoming a nondestructive, procedural
graphics editor suitable of replacing traditional 2D DCC applications. Please
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;README.md#discord&quot;&gt;join the Discord&lt;&#x2F;a&gt; - and consider asking for a tour of the
code and how you can help!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;mfuo4m&#x2F;femtovg_2d_vector_graphics_crate_is_looking_for&quot;&gt;femtovg is looking for help with the wgpu backend&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;mo72tu&#x2F;this_month_in_rust_gamedev_20_march_2021&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1380907528201076741&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #19 - February 2021</title>
            <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/019/</link>
            <guid>https://gamedev.rs/news/019/</guid>
            <description>&lt;p&gt;Welcome to the 19th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;019&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;019&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;019&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;019&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;019&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;019&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The second Rust Gamedev Meetup happened in February. It was an opportunity for
developers to show off what Rust projects they&#x27;ve been working on in the game
ecosystem. Developers showed off game engine demos, in-game playthroughs,
tooling, and more. You can watch the recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ea4Wt_FgEEw&quot;&gt;here on
Youtube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The next meetup will take place on the 13th of March at 16:00 GMT on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust
Gamedev Discord server&lt;&#x2F;a&gt;, and can also be &lt;a href=&quot;https:&#x2F;&#x2F;www.twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on
Twitch&lt;&#x2F;a&gt;. If you would like to show off what you&#x27;ve been
working on, fill out &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;BS1zCyZaiUFSUHxe6&quot;&gt;this form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;flesh&quot;&gt;Flesh&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.gif&quot; alt=&quot;flesh preview&quot; &#x2F;&gt;
&lt;em&gt;Title screen + gameplay&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Flesh by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_oab&quot;&gt;@im_oab&lt;&#x2F;a&gt; is a 2D-horizontal shmup game with hand-drawn animation and
organic&#x2F;fleshy theme. It is implemented using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;tetra&lt;&#x2F;a&gt;. This month&#x27;s updates
include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added title screen&lt;&#x2F;li&gt;
&lt;li&gt;Support gamepad&lt;&#x2F;li&gt;
&lt;li&gt;Add new enemy types for first level include mid-boss&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;fishgame&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fishgame&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fishgame&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fishgame.gif&quot; alt=&quot;Fishgame gui&quot; &#x2F;&gt;
&lt;em&gt;Fish game UI.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fishgame&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;fish-game?secret=UAVcggHn332a&quot;&gt;(web build)&lt;&#x2F;a&gt; is an online multiplayer game,
created in a collaboration between &lt;a href=&quot;https:&#x2F;&#x2F;heroiclabs.com&#x2F;&quot;&gt;Nakama&lt;&#x2F;a&gt;, an open-source scalable
game server, and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;&quot;&gt;Macroquad&lt;&#x2F;a&gt; game
engine.&lt;&#x2F;p&gt;
&lt;p&gt;This month fishgame utilized macroquad&#x27;s new UI system to add a title screen
and improve the login screen.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;teki-di&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;o2sh&#x2F;teki&quot;&gt;Teki (敵)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#teki-di&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;teki.gif&quot; alt=&quot;teki preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;o2sh&#x2F;teki&quot;&gt;Teki&lt;&#x2F;a&gt; is a free and open-source fangame of the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Touhou_Project&quot;&gt;Tōhō&lt;&#x2F;a&gt; series using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-SDL2&#x2F;rust-sdl2&quot;&gt;SDL2&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;legion&quot;&gt;Legion&lt;&#x2F;a&gt; for ECS. It is aimed to be a shoot ’em up game with &amp;quot;lots of
bullets&amp;quot; a.k.a danmaku 弾幕 - literally &amp;quot;barrage&amp;quot; or &amp;quot;bullet curtain&amp;quot; in
Japanese.&lt;&#x2F;p&gt;
&lt;p&gt;The project is still at a “very” early stage of development (Dec. 2020).&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New enemy type: big fairy&lt;&#x2F;li&gt;
&lt;li&gt;New special card: Stellar Vortex&lt;&#x2F;li&gt;
&lt;li&gt;Add yin yang orbs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;harvest-hero&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CJRbxQn3d9&quot;&gt;Harvest Hero&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;harvest_hero.gif&quot; alt=&quot;harvest hero preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CJRbxQn3d9&quot;&gt;Harvest Hero&lt;&#x2F;a&gt; is undergoing a shop system rework. However, new
abilities are still being implemented. You can now use Zhebnog&#x27;s Hourglass to
stop time and get weird.&lt;&#x2F;p&gt;
&lt;p&gt;Built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;Bombfuse&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added &amp;quot;Flame Guard&amp;quot; enchantment&lt;&#x2F;li&gt;
&lt;li&gt;Added &amp;quot;Zhebnog&#x27;s Hourglass&amp;quot; ability&lt;&#x2F;li&gt;
&lt;li&gt;Began work on a new main menu&lt;&#x2F;li&gt;
&lt;li&gt;Implemented a functional shop system&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;abstreet.png&quot; alt=&quot;Separate cyclepaths in A&#x2F;B Street&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CarlinoDustin&quot;&gt;@dabreegster&lt;&#x2F;a&gt; is a traffic simulation game exploring how small
changes to roads affect cyclists, transit users, pedestrians, and drivers, with
support for any city with OpenStreetMap coverage.&lt;&#x2F;p&gt;
&lt;p&gt;In February, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BruceBrown&quot;&gt;Bruce&lt;&#x2F;a&gt; implemented lagging green traffic signals, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelkirk&quot;&gt;Michael&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;www.yuwen-li.com&#x2F;&quot;&gt;Yuwen&lt;&#x2F;a&gt; released the new day UI theme. More cycle paths and service roads were
imported for all maps, and we added loads of maps, a new per-country picker UI,
and dynamic font loading. Try out &lt;a href=&quot;http:&#x2F;&#x2F;abstreet.s3-website.us-east-2.amazonaws.com&#x2F;dev&#x2F;game&#x2F;?--dev&amp;amp;tw&#x2F;taipei&#x2F;maps&#x2F;center.bin&quot;&gt;Taipei&lt;&#x2F;a&gt; in the web browser to see all of this
in action!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;paddlers&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;paddlers.ch&quot;&gt;Paddlers&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#paddlers&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;paddlers_0.2.1.jpg&quot; alt=&quot;A brightly colored scene with a grass field, a river, and some happy ducks.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;paddlers.ch&quot;&gt;Paddlers&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&#x2F;paddlers-browser-game&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;demo.paddlers.ch&quot;&gt;Online Demo&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&quot;&gt;@jakmeier&lt;&#x2F;a&gt;
is an experimental MMORTS with the backend and the web client all written in
Rust.&lt;&#x2F;p&gt;
&lt;p&gt;February gave birth to Paddlers release 0.2.1 and a ton of new game mechanics.
It features a skill map, quests, and a refreshed take on the tower defense
aspect of the game. On top of that, the rendering engine (part of the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&#x2F;paddle&quot;&gt;Paddle&lt;&#x2F;a&gt; framework) has been reworked and now allows for custom shaders.
Read all about this month&#x27;s changes in this &lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_6.html&quot;&gt;article&lt;&#x2F;a&gt; released
on the developer&#x27;s private website.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stellary-2&quot;&gt;Stellary 2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#stellary-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1360637714660548618&quot;&gt;&lt;img src=&quot;stellary2-anti-missile-laser.gif&quot; alt=&quot;Stellary 2 Anti-Missile Laser&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;▶️ Click to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1360637714660548618&quot;&gt;watch the full video&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Stellary 2 by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;@CoffeJunkStudio&lt;&#x2F;a&gt; is a 3D real-time space
shooter in which the player has to prevail against enemy space ships.&lt;&#x2F;p&gt;
&lt;p&gt;The latest updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Players’ space ships&lt;&#x2F;li&gt;
&lt;li&gt;Prediction of the rocket trajectory&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1360637714660548618&quot;&gt;Energy budget&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Weapon enhancements (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1358437135230119936&quot;&gt;trident laser&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&#x2F;status&#x2F;1365666841838952450&quot;&gt;missile
splitting&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;theta-wave&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#theta-wave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;&lt;img src=&quot;theta_wave.gif&quot; alt=&quot;Homing Missiles&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Homing missiles periodically spawn from missile launcher enemies&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt; is a space shooter game by developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;. It is one of the showcase games for the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;&quot;&gt;Amethyst Engine&lt;&#x2F;a&gt;. In
the past month, they have been focusing on refactoring the motion system to make
the code more approachable to other contributors.&lt;&#x2F;p&gt;
&lt;p&gt;Notable changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Missiles now spawn from missile launcher enemies&lt;&#x2F;li&gt;
&lt;li&gt;Cursed background slowly fades in over the course of the level&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;seniorsky&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLMmaJuk-D7iaObZyhyvc83tNwpx3ghzkY&quot;&gt;SeniorSKY&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#seniorsky&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;senior_sky.png&quot; alt=&quot;SeniorSKY&quot; &#x2F;&gt;
&lt;em&gt;Rising sun&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLMmaJuk-D7iaObZyhyvc83tNwpx3ghzkY&quot;&gt;SeniorSKY&lt;&#x2F;a&gt; is a flight simulator that uses the Vulkan API, developed by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pmathia0&quot;&gt;@pmathia0&lt;&#x2F;a&gt;. As an aerospace engineering student, Peter has always been
interested in how a flight simulator works under the hood. The development of
SeniorSKY started as a hobby project during university studies.&lt;&#x2F;p&gt;
&lt;p&gt;SeniorSKY uses real-world elevation data with 1 arc second precision and can
render the whole globe in real dimensions. During the flight, the terrain tiles
are loaded dynamically based on real GPS coordinates of airplane, with a
decreasing level of detail further from the camera. This is achieved using a
combination of a terrain-quad-tree and GPU tessellation.&lt;&#x2F;p&gt;
&lt;p&gt;Notable changes since last month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Atmospheric scattering&lt;&#x2F;li&gt;
&lt;li&gt;Improved fog&lt;&#x2F;li&gt;
&lt;li&gt;FXAA + HDR tone mapping&lt;&#x2F;li&gt;
&lt;li&gt;Terrain data preprocessing using compute shaders&lt;&#x2F;li&gt;
&lt;li&gt;Performance optimizations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Short-term plans:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;replace imgui-rs by egui&lt;&#x2F;li&gt;
&lt;li&gt;implement sun position based on datetime&lt;&#x2F;li&gt;
&lt;li&gt;add terrain bump-maps to visualize gravel&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor-capsule.png&quot; alt=&quot;Way of Rhea screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea is a picturesque puzzle game that lets you correct your mistakes.
Change your color, teleport past the colored gates, master the color-powered
circuits, and befriend the crabs-but don&#x27;t let them out!&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s major updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New puzzles&lt;&#x2F;li&gt;
&lt;li&gt;Support for standard video settings (see &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;02&#x2F;20&#x2F;fullscreen-exclusive-is-a-lie&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;The new promotional art shown above&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;station-iapetus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#station-iapetus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=cagT0GbiLxY&quot;&gt;&lt;img src=&quot;station-iapetus-youtube.JPG&quot; alt=&quot;Station Iapetus Youtube&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Check &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=cagT0GbiLxY&quot;&gt;gameplay video&lt;&#x2F;a&gt; on YouTube&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&quot;&gt;@mrDIMAS&lt;&#x2F;a&gt; is a 3rd person shooter on the
space prison Iapetus near the Saturn.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New inventory (check the video)&lt;&#x2F;li&gt;
&lt;li&gt;Ability to throw grenades&lt;&#x2F;li&gt;
&lt;li&gt;Splash damage&lt;&#x2F;li&gt;
&lt;li&gt;More textures and materials&lt;&#x2F;li&gt;
&lt;li&gt;Hitboxes for bots and player&lt;&#x2F;li&gt;
&lt;li&gt;Better bots navigation&lt;&#x2F;li&gt;
&lt;li&gt;Laser sight improvements&lt;&#x2F;li&gt;
&lt;li&gt;Weapon display now shows bullet and grenades count&lt;&#x2F;li&gt;
&lt;li&gt;Lots of other small fixes and improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.jpg&quot; alt=&quot;Lush forest&quot; &#x2F;&gt;
&lt;em&gt;A lush forest to explore&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In February, lots of work has been done on worldsim, with travelling merchants
being worked on. Some experiments have been happening on procedurally generating
giant trees. Lots is being done on the combat end, with dual wielding and
modular weapons being a big focus. Player trading was also implemented, which
allows items to be shared on the server. A large internal shift is being made
from diesel to rusqlite.&lt;&#x2F;p&gt;
&lt;p&gt;A rework of attacks was done to allow their effects to be more dynamic. Lots of
work has been done on the art team, with new weapon models, new mobs like fish.
Some quality of life improvements were added, like humanoids automatically
deploying gliders while falling to avoid fall damage. CI changes were made to
finally have the Github mirror update periodically without error from LFS
storage. In March, Veloren will release 0.9.&lt;&#x2F;p&gt;
&lt;p&gt;February&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-105&quot;&gt;#105&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-106&quot;&gt;#106&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-107&quot;&gt;#107&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-108&quot;&gt;#108&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;project-yawc&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;projectyawc&quot;&gt;Project YAWC&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#project-yawc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;yawc_n19.png&quot; alt=&quot;A screenshot from a game of Project YAWC.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;projectyawc&quot;&gt;Project YAWC&lt;&#x2F;a&gt; is a turn-based strategy game in development by
junkmail. February saw the release of Alpha 4, bringing special units and
auctions to determine ownership of special units, as well as changes to netcode,
balance, and UI.&lt;&#x2F;p&gt;
&lt;p&gt;Those interested in participating in the alpha test should fill out this
&lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;tzP6oRaJmApgMyrj7&quot;&gt;form&lt;&#x2F;a&gt;. To learn more, you can follow the new
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;projectyawc&quot;&gt;@projectyawc&lt;&#x2F;a&gt; Twitter or send an e-mail to projectyawc@gmail.com.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum-online&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum Online&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum-online&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum-2-21-2021.jpg&quot; alt=&quot;A player standing in front of a giant crab&quot; &#x2F;&gt;
&lt;em&gt;Challenging Kroob&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum Online&lt;&#x2F;a&gt; is a micro-multiplayer online role-playing game by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt;. The game server is written in Rust, and the official client is
being developed in Unity.&lt;&#x2F;p&gt;
&lt;p&gt;The Armorcrafting, Weaponcrafting, and Salvaging skills were implemented this
month! Players can now craft gear in town using materials gathered out in the
world. They can also break down old or unwanted gear to recycle it.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;30&quot;&gt;#30: Crafting And Salvaging&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;fullscreen-exclusive-is-a-lie-sort-of&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;02&#x2F;20&#x2F;fullscreen-exclusive-is-a-lie&#x2F;&quot;&gt;Fullscreen Exclusive Is A Lie (...sort of)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fullscreen-exclusive-is-a-lie-sort-of&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor-video-settings.jpg&quot; alt=&quot;Way of Rhea&#x27;s video settings&quot; &#x2F;&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&#x27;s video settings&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&quot;&gt;Anthropic Studios&lt;&#x2F;a&gt; has &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;2021&#x2F;02&#x2F;20&#x2F;fullscreen-exclusive-is-a-lie&#x2F;&quot;&gt;shared an article&lt;&#x2F;a&gt; walking
through what they learned from implementing fullscreen exclusivity in their Rust
game engine and testing the fullscreen exclusive implementation of existing
games on a variety of hardware.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;lokeml&#x2F;fullscreen_exclusive_is_a_lie_sort_of&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rhythm-game-in-rust-using-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;caballerocoll.com&#x2F;blog&#x2F;bevy-rhythm-game&#x2F;&quot;&gt;Rhythm game in Rust using Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rhythm-game-in-rust-using-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy-rhythm-game.gif&quot; alt=&quot;Rhythm game demo&quot; &#x2F;&gt;
&lt;em&gt;Rhythm game demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;caballerocoll.com&#x2F;blog&#x2F;bevy-rhythm-game&#x2F;&quot;&gt;Rhythm game in Rust using Bevy&lt;&#x2F;a&gt; is an introductory tutorial for Bevy made by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GuimCaballero&quot;&gt;@guimcaballero&lt;&#x2F;a&gt;. It guides through how to use Bevy to develop a Rhythm game,
including how to play audio, use GLSL shaders, and make a simple menu screen.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-vs-rapier&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;extrawurst&#x2F;godot-vs-rapier&quot;&gt;godot-vs-rapier&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-vs-rapier&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot-vs-rapier.gif&quot; alt=&quot;demo that first show godot&#x27;s physics and than switches to rapier&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;extrawurst&#x2F;godot-vs-rapier&quot;&gt;godot-vs-rapier&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;extrawurst&quot;&gt;@extrawurst&lt;&#x2F;a&gt; is a project that compares
&lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&quot;&gt;Godot&lt;&#x2F;a&gt;&#x27;s built-in physics against &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;godot&#x2F;comments&#x2F;lauj7e&#x2F;godot_physics_vs_gdnative&quot;&gt;r&#x2F;godot&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;macroquad_skins.gif&quot; alt=&quot;macroquad_gui&quot; &#x2F;&gt;
&lt;em&gt;Macroquad-UI runtime GUI skins configuration.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; is a cross-platform (Windows&#x2F;Linux&#x2F;macOS&#x2F;Android&#x2F;iOS&#x2F;WASM) game
framework built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month biggest update: Macroquad got its own fully skinnable and
customizable immediate mode UI system 🎉.&lt;br &#x2F;&gt;
The new system took its origins from a heavily refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;megaui&quot;&gt;megaui&lt;&#x2F;a&gt; and supports
custom font sizes, fonts and skins for each UI element.&lt;br &#x2F;&gt;
While work is still in progress, all important decisions were made and
implementation &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;pull&#x2F;156&quot;&gt;PR&lt;&#x2F;a&gt; got merged.&lt;&#x2F;p&gt;
&lt;p&gt;Minor updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;pull&#x2F;152&quot;&gt;Textures support&lt;&#x2F;a&gt; for macroquad materials&lt;&#x2F;li&gt;
&lt;li&gt;Experimental 2D pan&#x2F;zoom camera &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;pull&#x2F;146&quot;&gt;implementation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;tetra.png&quot; alt=&quot;Tetra&#x27;s demo game&quot; &#x2F;&gt;
&lt;em&gt;Tetra&#x27;s demo game&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA, Love2D, and Raylib. This
month, version 0.6 was released, with some big changes and features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A simpler drawing API&lt;&#x2F;li&gt;
&lt;li&gt;Less global state for mesh drawing&lt;&#x2F;li&gt;
&lt;li&gt;Multisampled canvases&lt;&#x2F;li&gt;
&lt;li&gt;Better font rendering&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;, or &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1357750836370284544&quot;&gt;17cupsofcoffee&#x27;s
twitter thread&lt;&#x2F;a&gt; about the release.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=tqFdQ5OPB1I&quot;&gt;&lt;img src=&quot;rg3d-youtube.JPG&quot; alt=&quot;rg3d Youtube&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Check &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=tqFdQ5OPB1I&quot;&gt;navmesh agent navigation&lt;&#x2F;a&gt; on YouTube&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;) is a game engine that
aims to be easy to use and provide a large set of out-of-box features. Some of
the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to render UI instances in a texture&lt;&#x2F;li&gt;
&lt;li&gt;FBX name validator&lt;&#x2F;li&gt;
&lt;li&gt;Fast Approximate Anti-Aliasing (FXAA)&lt;&#x2F;li&gt;
&lt;li&gt;Integrity checks for resource inheritance&lt;&#x2F;li&gt;
&lt;li&gt;Nodes now can be tagged&lt;&#x2F;li&gt;
&lt;li&gt;Animation blending machine now has BlendAnimationsByIndex node&lt;&#x2F;li&gt;
&lt;li&gt;Multi-directional binding between physics and graph&lt;&#x2F;li&gt;
&lt;li&gt;SceneDrawingContext improvements: draw_capsule, draw_capsule segment&lt;&#x2F;li&gt;
&lt;li&gt;Performance statistics for scenes&lt;&#x2F;li&gt;
&lt;li&gt;ColorGradient improvements&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=tqFdQ5OPB1I&quot;&gt;Path smoothing for navmesh agent&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Lots of other small fixes and improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dotrix&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&quot;&gt;Dotrix&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dotrix&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dotrix-light-demo.png&quot; alt=&quot;Dotrix Light Demo&quot; &#x2F;&gt;
&lt;em&gt;Demo application demonstrating light rendering&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&quot;&gt;Dotrix&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCdriNXRizbBFQhqZefaw44A&quot;&gt;YouTube&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;DrzwBysNRd&quot;&gt;Discord&lt;&#x2F;a&gt;) by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;lowenware&quot;&gt;@lowenware&lt;&#x2F;a&gt; is an ECS based 3D game engine with renderer built around the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&quot;&gt;Dotrix&lt;&#x2F;a&gt; 0.3 was released on
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;dotrix&quot;&gt;crates.io&lt;&#x2F;a&gt; with the complete &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;dotrix&#x2F;0.3.0&#x2F;dotrix&#x2F;&quot;&gt;API
documentation&lt;&#x2F;a&gt;, major light components
update, wireframes, and mouse ray modules.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rafx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;Rafx&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rafx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rafx-screenshot.png&quot; alt=&quot;Screenshot from Rafx Rendering Framework&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rafx is a multi-backend renderer that optionally integrates with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;distill&lt;&#x2F;a&gt; asset pipeline. Rafx is divided into three tiers of
functionality:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;rafx-api&lt;&#x2F;code&gt; provides a custom GPU API abstraction layer that currently supports
Vulkan and metal. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&#x2F;blob&#x2F;master&#x2F;docs&#x2F;api&#x2F;api_design_in_rust_psuedocode.rs&quot;&gt;API in rust psuedocode&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;rafx-framework&lt;&#x2F;code&gt; builds on the API layer using ideas found in modern shipping
AAA titles. Rendering is pipelined in a separate thread in three phases, using
jobs to extract data from the main thread, process the data on the render
thread, and write the draw calls to command buffers. [&lt;a href=&quot;http:&#x2F;&#x2F;advances.realtimerendering.com&#x2F;destiny&#x2F;gdc_2015&#x2F;Tatarchuk_GDC_2015__Destiny_Renderer_web.pdf&quot;&gt;Tatarchuk
2015&lt;&#x2F;a&gt;] A render graph ensures correct synchronization.
[&lt;a href=&quot;https:&#x2F;&#x2F;www.gdcvault.com&#x2F;play&#x2F;1024612&#x2F;FrameGraph-Extensible-Rendering-Architecture-in&quot;&gt;O&#x27;Donnell 2017&lt;&#x2F;a&gt;] The framework also provides a material
abstraction and shader pipeline.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;rafx-assets&lt;&#x2F;code&gt; adds integration with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;distill&lt;&#x2F;a&gt; asset pipeline.
This ensures that when an asset like a mesh is loaded, other related assets like
textures&#x2F;material&#x2F;vertex data are loaded. By integrating with Distill, rafx
provides advanced features like streaming live asset updates to remote devices.&lt;&#x2F;p&gt;
&lt;p&gt;More information about rafx:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&quot;&gt;Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&#x2F;blob&#x2F;master&#x2F;docs&#x2F;index.md&quot;&gt;Documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;rafx&#x2F;blob&#x2F;master&#x2F;docs&#x2F;why_rafx.md&quot;&gt;Why Rafx?&lt;&#x2F;a&gt; (includes similarities&#x2F;differences with other rust and
non-rust alternatives)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui-plot.gif&quot; alt=&quot;The plot thickens&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ernerfeldt&quot;&gt;@emilk&lt;&#x2F;a&gt; is an easy-to-use immediate mode GUI library in pure Rust.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;versions 0.9 and 0.10&lt;&#x2F;a&gt; of egui were released with many improvements
big and small, including a 2D plot, more text styles, disabling widgets and
improved documentation.&lt;&#x2F;p&gt;
&lt;p&gt;You can try out egui in the &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2021&#x2F;03&#x2F;04&#x2F;this-month-february&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times that
is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s been a long time coming, but the Mun Core Team is closing in on the finish
line for Mun v0.3. They are only a couple of pull requests away from locking the
build for bug fixes and documentation. The &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2021&#x2F;03&#x2F;04&#x2F;this-month-february&quot;&gt;February updates&lt;&#x2F;a&gt;
include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;use&lt;&#x2F;code&gt; statements language support;&lt;&#x2F;li&gt;
&lt;li&gt;Incremental file updates for the language server;&lt;&#x2F;li&gt;
&lt;li&gt;LLVM 11 support;&lt;&#x2F;li&gt;
&lt;li&gt;Bug fixes and other improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;graphite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphite.png&quot; alt=&quot;Graphite GUI&quot; &#x2F;&gt;
&lt;em&gt;Progress on the GUI&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;Graphite&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GraphiteEditor&#x2F;Graphite&#x2F;blob&#x2F;master&#x2F;README.md#discord&quot;&gt;Discord&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;GraphiteEditor&quot;&gt;Twitter&lt;&#x2F;a&gt;) is an in-progress vector and
raster graphics editor built on a nondestructive node-based workflow.&lt;&#x2F;p&gt;
&lt;p&gt;Since February&#x27;s Rust Gamedev Meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ea4Wt_FgEEw&amp;amp;t=563s&quot;&gt;which announced&lt;&#x2F;a&gt; the
Graphite vision has attracted tremendous interest, community advice has shifted
the development strategy to focus on a 0.1 MVP release ASAP:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The past year&#x27;s in-development custom GUI has been shelved in lieu of an
interim web GUI. Graphite intends to natively support Windows, Mac, Linux, and
Web. This change unblocks core application development but means Graphite is
Web-only until the Rust GUI ecosystem matures. Good progress this month has
been made building the web GUI with &lt;a href=&quot;https:&#x2F;&#x2F;vuejs.org&#x2F;&quot;&gt;Vue&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Graphite 0.1 will now support only vector editing. This defers the large
complexity of the graph render engine required for node-based raster editing.
It should be less difficult to first focus on building a vector editor that
improves upon the UX of Illustrator and Inkscape.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wgpu-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;wgpu-rs is a WebGPU implementation and API in Rust.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;wgpu-core&amp;quot;-0.7.1 was published with fixes&lt;&#x2F;li&gt;
&lt;li&gt;API updated for blending states, cull faces, vertex formats&lt;&#x2F;li&gt;
&lt;li&gt;Zero-initialization of buffers upon use&lt;&#x2F;li&gt;
&lt;li&gt;Validation of texture bindings, index formats for strip topologies&lt;&#x2F;li&gt;
&lt;li&gt;Binding tracker was rewritten with test-ability in mind, bugs fixed&lt;&#x2F;li&gt;
&lt;li&gt;The player learned to resize the window properly. API traces can now be
replayed on Linux even when swapchain recreation events are present&lt;&#x2F;li&gt;
&lt;li&gt;SPIRV-Cross was made optional, which was useful for Deno in order to work
around the linking conflict with &amp;quot;rusty_v8&amp;quot;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gfx-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;gfx-rs is a portable low-level graphics abstraction layer.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;API got &lt;code&gt;PhysicalDeviceProperties&lt;&#x2F;code&gt; containing limits and properties of
physical devices that are not opt-in.&lt;&#x2F;li&gt;
&lt;li&gt;SPIRV-Cross dependency was made optional, while Naga is required.&lt;&#x2F;li&gt;
&lt;li&gt;Vulkan backend learned to target Vulkan 1.1 and 1.2 internally.&lt;&#x2F;li&gt;
&lt;li&gt;DX12 understood more limits.&lt;&#x2F;li&gt;
&lt;li&gt;GL backend fixed WebGL initialization and EGL library discovery.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;naga&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#naga&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;naga is the shader translation library&#x2F;tool.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Versions 0.3.1 and 0.3.2 were published with fixes&lt;&#x2F;li&gt;
&lt;li&gt;API: function calls turned into statements, image queries , and stores,
understanding of push constants.&lt;&#x2F;li&gt;
&lt;li&gt;Validation: type validation was re-written and improved, new control flow
analysis was added to check for uniformity requirements. In addition, this
step now collects the image-sampler pairs used by the module.&lt;&#x2F;li&gt;
&lt;li&gt;Backends: lots of fixes and filling of the gaps&lt;&#x2F;li&gt;
&lt;li&gt;Infrastructure: &lt;code&gt;convert&lt;&#x2F;code&gt; example was removed in favor of the default binary
target. The native shaders (produced by the snapshot tests) got validated on
CI using platform tools.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;distill&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;distill&quot;&gt;Distill&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#distill&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Distill is an asset pipeline for games, reading artist-friendly formats from
disk, processing them into your engine-ready formats, and delivering them to
your game runtime. Distill handles dependencies between assets, import &amp;amp; build
caching, cross-device hot reloading during development, packing assets for a
shippable game build, and more.&lt;&#x2F;p&gt;
&lt;p&gt;Distill&#x27;s design is inspired by Unity&#x27;s asset system and &lt;a href=&quot;https:&#x2F;&#x2F;media.contentapi.ea.com&#x2F;content&#x2F;dam&#x2F;eacom&#x2F;frostbite&#x2F;files&#x2F;scaling-the-pipeline.pptx&quot;&gt;Frostbite&#x27;s Scaling
the Pipeline&lt;&#x2F;a&gt;. Distill leverages purity in the
functional-programming sense to deliver a robust and scalable experience for the
asset processing pipeline. With &lt;a href=&quot;https:&#x2F;&#x2F;symas.com&#x2F;lmdb&#x2F;&quot;&gt;LMDB&lt;&#x2F;a&gt; backing storage of
metadata, Distill is able to avoid blocking asset loading while assets are being
imported which eliminates the most common frustration with existing commercial
offerings. Additionally, Distill is able to provide fully consistent snapshots
of asset metadata to readers over &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;capnproto&#x2F;capnproto-rust&quot;&gt;capnp-rpc&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;basis-universal-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;basis-universal-rs&quot;&gt;basis-universal-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#basis-universal-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;basis-universal&lt;&#x2F;code&gt; provides bindings for &lt;a href=&quot;http:&#x2F;&#x2F;www.binomial.info&quot;&gt;Binomial LLC&lt;&#x2F;a&gt;&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BinomialLLC&#x2F;basis_universal&quot;&gt;Basis
Universal texture codec&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Basis Universal is a state-of-the-art
&lt;a href=&quot;http:&#x2F;&#x2F;gamma.cs.unc.edu&#x2F;GST&#x2F;gst.pdf&quot;&gt;supercompressed&lt;&#x2F;a&gt; texture codec that was
recently &lt;a href=&quot;https:&#x2F;&#x2F;opensource.googleblog.com&#x2F;2019&#x2F;05&#x2F;google-and-binomial-partner-to-open.html&quot;&gt;open-sourced&lt;&#x2F;a&gt; by Binomial in partnership
with Google. It was &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;blog&#x2F;google-and-binomial-contribute-basis-universal-texture-format-to-khronos-gltf-3d-transmission-open-standard&quot;&gt;contributed&lt;&#x2F;a&gt; to the
Khronos glTF 3D Transmission Open Standard.&lt;&#x2F;p&gt;
&lt;p&gt;The library has two primary uses:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Compresses and encode textures &amp;quot;offline&amp;quot; to a custom format&lt;&#x2F;li&gt;
&lt;li&gt;Transcoding: Unpack the custom format directly to GPU-friendly compressed
formats. The final format can be chosen at game runtime to be compatible with
available GPU hardware.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Basis universal format can also store mipmapped textures and cubemaps, neither
of which is possible with &amp;quot;normal&amp;quot; file formats. Mipmaps can be generated by the
library during compression.&lt;&#x2F;p&gt;
&lt;p&gt;Compression is very slow (around 7-10s for a 2k texture) but transcoding is
relatively fast (around 5-40ms for a 2k texture depending on quality). Memory
savings at runtime are generally &amp;gt;= 75% (depending on the transcode format and
quality)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;bevy_egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;bevy_egui&lt;&#x2F;a&gt; provides a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;Egui&lt;&#x2F;a&gt; integration
for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; game engine.
It supports &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrk-its&#x2F;bevy_webgl2&quot;&gt;bevy_webgl2&lt;&#x2F;a&gt; and implements the full set of Egui features
(such as clipboard and opening URLs).&lt;&#x2F;p&gt;
&lt;p&gt;This month versions 0.2 and 0.3 were released, providing an integration with
Egui 0.9 and 0.10 respectively.&lt;&#x2F;p&gt;
&lt;p&gt;Try out the &lt;a href=&quot;https:&#x2F;&#x2F;mvlabat.github.io&#x2F;bevy_egui_web_showcase&#x2F;index.html&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rkyv&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rkyv&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt; is a zero-copy deserialization framework for Rust. It&#x27;s similar to
FlatBuffers and Cap&#x27;n Proto and can be used for data storage and messaging.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&#x2F;releases&#x2F;tag&#x2F;v0.4.0&quot;&gt;Version 0.4&lt;&#x2F;a&gt; was released this month and brought some big changes
and improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Major traits have been refactored and renamed to clarify their roles&lt;&#x2F;li&gt;
&lt;li&gt;Shared pointers (&lt;code&gt;Rc&lt;&#x2F;code&gt;, &lt;code&gt;Arc&lt;&#x2F;code&gt;, &lt;code&gt;Weak&lt;&#x2F;code&gt;) can now be serialized, deserialized, and
validated with correct ownership semantics&lt;&#x2F;li&gt;
&lt;li&gt;Serialization, deserialization, and validation all now support custom contexts&lt;&#x2F;li&gt;
&lt;li&gt;Greatly improved support for 32- and 64-bit archives by implementing Archive
for &lt;code&gt;usize&lt;&#x2F;code&gt; and &lt;code&gt;isize&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;More comprehensive documentation in the &lt;a href=&quot;https:&#x2F;&#x2F;djkoloski.github.io&#x2F;rkyv&quot;&gt;book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This release completes the project&#x27;s initial feature set, and a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&#x2F;issues&#x2F;67&quot;&gt;request for
feedback&lt;&#x2F;a&gt; has been opened to help with future project
planning.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wasm-plugin&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alec-deason&#x2F;wasm_plugin&quot;&gt;wasm_plugin&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wasm-plugin&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alec-deason&#x2F;wasm_plugin&quot;&gt;wasm_plugin&lt;&#x2F;a&gt; is a new low-ish level tool for easily hosting WASM based plugins
for modding or scripting.&lt;&#x2F;p&gt;
&lt;p&gt;It consists of two crates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;crates&#x2F;wasm_plugin_host&quot;&gt;wasm_plugin_host&lt;&#x2F;a&gt; which wraps a wasmer instance with methods for calling
functions on the guest plugin.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;crates&#x2F;wasm_plugin_guest&quot;&gt;wasm_plugin_guest&lt;&#x2F;a&gt; which provides an attribute macro to easily export
functions to the host.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;406&quot;&gt;#406 &amp;quot;Separate category for engines vs libraries&#x2F;tools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;454&quot;&gt;#454 &amp;quot;Newsletter: new format and more delegation&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;98&quot;&gt;#98 &amp;quot;Monthly Rust Gamedev Meetup&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;100&quot;&gt;#100 &amp;quot;Physiology simulation&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;101&quot;&gt;#101 &amp;quot;[Proposal] Abstract plane geometry library for GUI projects&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discuss this post on&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;m0n8rn&#x2F;this_month_in_rust_gamedev_19_february_2021&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1369004435280715789&quot;&gt;Twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #18 - January 2021</title>
            <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/018/</link>
            <guid>https://gamedev.rs/news/018/</guid>
            <description>&lt;p&gt;Welcome to the 18th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#rust-gamedev-podcast-5&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#engine-updates&quot;&gt;Engine Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;018&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-podcast-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-alex-ene&quot;&gt;Rust GameDev Podcast #5&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-podcast-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;podcast.jpeg&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-alex-ene&quot;&gt;The 5th podcast episode&lt;&#x2F;a&gt; is an interview with
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AlexEne_&quot;&gt;Alex Ene&lt;&#x2F;a&gt; creator of an upcoming dwarven simulation
game, &lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;Dwarf World&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this week&#x27;s episode, Richard and Forest chat to Alex Ene,
creator of the dwarven simulation game, Dwarf World.
We cover writing custom engines, unit testing, build
systems, and picking the right frameworks for your game.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Listen and subscribe from the following platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast (simplecast)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.apple.com&#x2F;gb&#x2F;podcast&#x2F;rust-game-dev&#x2F;id1526304768&quot;&gt;Apple Podcasts&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;show&#x2F;7HRfGnTcXkLkQd9fxJbDGj&quot;&gt;Spotify&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feeds.simplecast.com&#x2F;C6NQglnL&quot;&gt;RSS Feed&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.google.com&#x2F;feed&#x2F;aHR0cHM6Ly9mZWVkcy5zaW1wbGVjYXN0LmNvbS9DNk5RZ2xuTA&quot;&gt;Google Podcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust GameDev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;gamedev-meetup.png&quot; alt=&quot;Gamedev meetup poster&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The first iteration of the Rust Gamedev Meetup happened in January. It was an
opportunity for developers to show of what Rust projects they&#x27;ve been working on
in the game ecosystem. Developers showed off physics engines, custom build
tools, renderers, and more. You can watch the recording of the meetup &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=2L3w3UiEzAk&quot;&gt;here on
Youtube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The next meetup will take place 13th of February
at 16:00 GMT on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord server&lt;&#x2F;a&gt;, and can
also be &lt;a href=&quot;https:&#x2F;&#x2F;www.twitch.tv&#x2F;rustgamedev&quot;&gt;streamed on Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;teki-di&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;o2sh&#x2F;teki&quot;&gt;Teki (敵)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#teki-di&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;teki.gif&quot; alt=&quot;teki preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;o2sh&#x2F;teki&quot;&gt;Teki&lt;&#x2F;a&gt; is a free and open-source fangame of the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Touhou_Project&quot;&gt;Tōhō&lt;&#x2F;a&gt; series
using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-SDL2&#x2F;rust-sdl2&quot;&gt;SDL2&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;legion&quot;&gt;Legion&lt;&#x2F;a&gt; for ECS. Thanks to WebAssembly - via &lt;a href=&quot;https:&#x2F;&#x2F;rustwasm.github.io&#x2F;wasm-pack&quot;&gt;wasm-pack&lt;&#x2F;a&gt;
-, teki can be played &lt;a href=&quot;https:&#x2F;&#x2F;o2sh.github.io&#x2F;teki&quot;&gt;online&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It is aimed to be a shoot ’em up game with &amp;quot;lots of bullets&amp;quot;
a.k.a danmaku 弾幕 - literally &amp;quot;barrage&amp;quot; or &amp;quot;bullet curtain&amp;quot; in japanese.&lt;&#x2F;p&gt;
&lt;p&gt;The project is still at a “very” early stage of development (Dec. 2020).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fishgame&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fishgame&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fishgame&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fishgame.gif&quot; alt=&quot;Fishgame gameplay&quot; &#x2F;&gt;
&lt;em&gt;Fish game gameplay footage.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heroiclabs&#x2F;fishgame-macroquad&quot;&gt;Fishgame&lt;&#x2F;a&gt; is an online multiplayer game, created in a
collaboration between &lt;a href=&quot;https:&#x2F;&#x2F;heroiclabs.com&#x2F;&quot;&gt;Nakama&lt;&#x2F;a&gt;, an open-source scalable game
server, and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;&quot;&gt;Macroquad&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;p&gt;The game is going to showcase nakama multiplayer capabilities for the rust
language world.&lt;&#x2F;p&gt;
&lt;p&gt;This month the game got a public, multiplayer HTML5 build. &lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;fish-game?secret=UAVcggHn332a&quot;&gt;Play it online!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;station-iapetus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#station-iapetus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JCH2U5JOMlU&quot;&gt;&lt;img src=&quot;station-iapetus-youtube.JPG&quot; alt=&quot;Station Iapetus Youtube&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Check &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JCH2U5JOMlU&quot;&gt;gameplay video&lt;&#x2F;a&gt; on YouTube&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;StationIapetus&quot;&gt;Station Iapetus&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&quot;&gt;@mrDIMAS&lt;&#x2F;a&gt;
is a 3rd person shooter on the space prison Iapetus near the Saturn.&lt;&#x2F;p&gt;
&lt;p&gt;The game is based on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; game engine and is meant to be the proof that
rg3d is ready for commercial production. The game is a commercial project
which will be released in Steam.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;seniorsky&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLMmaJuk-D7iaObZyhyvc83tNwpx3ghzkY&quot;&gt;SeniorSKY&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#seniorsky&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;3.png&quot; alt=&quot;SeniorSKY&quot; &#x2F;&gt;
&lt;em&gt;Over the mountains in Slovakia&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLMmaJuk-D7iaObZyhyvc83tNwpx3ghzkY&quot;&gt;SeniorSKY&lt;&#x2F;a&gt;
is a flight simulator which uses Vulkan API, developed by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pmathia0&quot;&gt;@pmathia0&lt;&#x2F;a&gt;.
As an aerospace engineering student, Peter has always been interested how
a flight simulator works under the hood.
The development of SeniorSKY started as a hobby project during university
studies.&lt;&#x2F;p&gt;
&lt;p&gt;SeniorSKY uses real-world elevation data with 1 arc
second precision and can render the whole globe in real dimensions.
During the flight, the terrain tiles are loaded dynamically based
on real GPS coordinates of airplane, with a decreasing level of detail
further from the camera. This is achieved using a combination
of a terrain-quad-tree and GPU tessellation.&lt;&#x2F;p&gt;
&lt;p&gt;SeniorSKY also implements basic rendering of sky, atmosphere and fog.&lt;&#x2F;p&gt;
&lt;p&gt;To be able to simulate a flight, the application temporarily integrates 3rd party
flight dynamics engine called JSBSim. Meanwhile, development of own, custom
flight dynamics is already in progress.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oicana&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;oicana&quot;&gt;Oicana&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oicana&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oicana.png&quot; alt=&quot;oicana game play&quot; &#x2F;&gt;
&lt;em&gt;Solving puzzles to build towers&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;oicana&quot;&gt;Oicana&lt;&#x2F;a&gt; is a tower defense game with puzzle aspects submitted to Mini
jam 71 &lt;a href=&quot;https:&#x2F;&#x2F;niklme.itch.io&#x2F;oicana&quot;&gt;on itch&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;profile&#x2F;m1nd0frafa3l&quot;&gt;M1nd0fRafa3l&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nikl_me&quot;&gt;@nikl_me&lt;&#x2F;a&gt;. The game was written using the Rust game engine
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Colorless puzzle pieces try to reach your base. Your towers have to shoot at
the pieces to uncover their color. After defeating a piece, it will try to run
away and you should catch it to upgrade your towers or build new ones.&lt;&#x2F;p&gt;
&lt;p&gt;Following the game jam the tower upgrades where improved and game audio was
changed to use &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt; via an
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NiklasEi&#x2F;bevy_kira_audio&quot;&gt;experimental bevy plugin&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bounty-bros&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-prototype-game&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bounty-bros&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-prototype-game#video&quot;&gt;&lt;img src=&quot;bounty-bros.jpg&quot; alt=&quot;Bounty Bros. Video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;First pass character controller video&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;bounty-bros-prototype-game&quot;&gt;Bounty Bros.&lt;&#x2F;a&gt; is a prototype dungeon crawler game
in the spirit of &amp;quot;Legend of Zelda: Link to the Past&amp;quot;.
The game is being developed by &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&quot;&gt;Katharos Technology&lt;&#x2F;a&gt; as a playground
for a future commercial game, along with a custom 2D engine
built on top of &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;Bevy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The engine, which is unnamed so far, will be Open Sourced soon and will be
designed to make it very easy to make games with a similar gameplay and style,
primarily by simply writing YAML configuration files and integrating with
&lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&quot;&gt;LDtk&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;flesh&quot;&gt;Flesh&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;flesh.gif&quot; alt=&quot;flesh preview&quot; &#x2F;&gt;
&lt;em&gt;Inside flesh&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Flesh by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_oab&quot;&gt;@im_oab&lt;&#x2F;a&gt; is a 2D-horizontal shmup game with hand-drawn animation
and implement using tetra. It still in the development stage but have
a release date set in October 2021.&lt;&#x2F;p&gt;
&lt;p&gt;This game takes place inside the flesh of mysterious organisms that players will
fight through multiple levels to get out.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.gif&quot; alt=&quot;A&#x2F;B Street in Cambridge&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CarlinoDustin&quot;&gt;@dabreegster&lt;&#x2F;a&gt; is a traffic simulation game exploring how small
changes to roads affect cyclists, transit users, pedestrians, and drivers, with
suppot for any city with OpenStreetMap coverage.&lt;&#x2F;p&gt;
&lt;p&gt;In January, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BruceBrown&quot;&gt;Bruce&lt;&#x2F;a&gt; implemented variable traffic signal timing, dedicated
cycle-paths and pedestrian plazas were imported, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelkirk&quot;&gt;Michael&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;www.yuwen-li.com&#x2F;&quot;&gt;Yuwen&lt;&#x2F;a&gt;
overhauled the UI buttons, and we finished day&#x2F;night toggling. Loading on the
&lt;a href=&quot;http:&#x2F;&#x2F;abstreet.s3-website.us-east-2.amazonaws.com&#x2F;dev&#x2F;game&#x2F;?--dev&amp;amp;cambridge&#x2F;maps&#x2F;great_kneighton.bin&quot;&gt;web&lt;&#x2F;a&gt; and starting scenarios is also much faster!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;paddlers&quot;&gt;Paddlers&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#paddlers&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;paddlers_v0.2.jpeg&quot; alt=&quot;A happy duck and sign showing: Paddlers version 0.2.0&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;paddlers.ch&quot;&gt;Paddlers&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&#x2F;paddlers-browser-game&quot;&gt;GitHub&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;demo.paddlers.ch&quot;&gt;Online Demo&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&quot;&gt;@jakmeier&lt;&#x2F;a&gt;
is an MMORTS for the browser, developed as an experimental hobby project.&lt;&#x2F;p&gt;
&lt;p&gt;This month, version 0.2.0 has been released, which removes all dependencies to
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koute&#x2F;stdweb&quot;&gt;Stdweb&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ryanisaacg&#x2F;quicksilver&quot;&gt;Quicksilver&lt;&#x2F;a&gt; while keeping the game itself virtually unchanged.
In the process, a part of the code of Paddlers moved to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&#x2F;paddle&quot;&gt;Paddle&lt;&#x2F;a&gt;, a new
framework for 2D browser games running on desktop and mobile phones.
More details on that are available &lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_5.html&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Many new features for Paddle and Paddlers are already in the pipeline, so stay
tuned for more exciting updates in the next monthly newsletter!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum-2-1-2021.jpg&quot; alt=&quot;Some players hanging out next to the bank Vault in Belmart&quot; &#x2F;&gt;
&lt;em&gt;Hanging out by the vault&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum&lt;&#x2F;a&gt; is a micro-multiplayer online role-playing game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt;.
The game server is written in Rust, and the official client is being developed
in Unity.&lt;&#x2F;p&gt;
&lt;p&gt;Banking was implemented this month! Players can now store their items and wealth
in a safe place. Additionally, the concept of &amp;quot;item combinations&amp;quot; was implemented,
bringing more interesting crafting scenarios into the game.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;28&quot;&gt;#28: Banking&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;29&quot;&gt;#29: Item Combinations&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;harvest-hero&quot;&gt;Harvest Hero&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;harvest_hero.png&quot; alt=&quot;Harvest Hero Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Harvest Hero (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;3NU5tYwRxJ&quot;&gt;Discord&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;@bombfuse_dev&lt;&#x2F;a&gt;
is an arcade&#x2F;roguelike game built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bombfuse&#x2F;emerald&quot;&gt;Emerald&lt;&#x2F;a&gt;.
This month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Art update thanks to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ddoobysnax&quot;&gt;@ddooby&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Map templates for better designed maps.&lt;&#x2F;li&gt;
&lt;li&gt;A shop system for buying abilities&#x2F;enchantments.&lt;&#x2F;li&gt;
&lt;li&gt;SFX were added to bring some more life to the game.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dwarf-world&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;Dwarf World&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dwarf-world&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dwarfworld_lights.gif&quot; alt=&quot;Dwarf World&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;Dwarf World&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;vsRCxnY&quot;&gt;Discord&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AlexEne_&quot;&gt;Alex Ene&lt;&#x2F;a&gt; has added a couple of updates and improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Dynamic lights and light propagation so deeper caves are darker.&lt;&#x2F;li&gt;
&lt;li&gt;An in-game feedback button that people can use to report bugs or
just give general feedback.&lt;&#x2F;li&gt;
&lt;li&gt;All random numbers are from seeded generators so it makes bugs easier
to reproduce.&lt;&#x2F;li&gt;
&lt;li&gt;A big chunk of a replay system is finished.
This should help a lot with reproducing issues. Plus, it&#x27;s really fun to watch.&lt;&#x2F;li&gt;
&lt;li&gt;Bug fixes and performance improvements, mostly related to
rendering and culling systems.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you&#x27;re interested in keeping a closer eye on the project and monitor
it&#x27;s progress,
you can join the game&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;vsRCxnY&quot;&gt;discord channel&lt;&#x2F;a&gt;.
That&#x27;s where the pre-alpha builds will drop there once they are
ready to be seen by a wider audience.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stellary-2&quot;&gt;Stellary 2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#stellary-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;stellary_2_banner.jpg&quot; alt=&quot;Stellary 2 Banner&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Stellary 2 by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;@CoffeJunkStudio&lt;&#x2F;a&gt; is a 3D
real-time artillery game in which the player has to destroy all enemy planets in
order to defend his own from extinction.&lt;&#x2F;p&gt;
&lt;p&gt;Based on the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;dogpit-sim-jam&quot;&gt;SimJam 2020&lt;&#x2F;a&gt; game
&amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;stellary&quot;&gt;Stellary&lt;&#x2F;a&gt;&amp;quot;, the studio is now
working on this sequel with their self-developed &amp;quot;Sphere Engine&amp;quot;. It will
feature an underlying physically based gravity simulation, powering the space
battles in different solar systems. You can find regular updates on
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;By the way: &amp;quot;Stellary 2&amp;quot; is just a working title, feel free to drop them a PM on
Twitter if you have a flash of inspiration!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;theta-wave&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#theta-wave&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;&lt;img src=&quot;theta_wave_homing_missiles.gif&quot; alt=&quot;Homing Missiles&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Homing missiles pursue the closest player entity&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A real name was finally chosen for space_shooter_rs! &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;theta-wave&quot;&gt;Theta Wave&lt;&#x2F;a&gt; is a space
shooter game by developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt;. It is one of
the showcase games for the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;&quot;&gt;Amethyst Engine&lt;&#x2F;a&gt;. In the past month, they have
been focused on improving the motion system for the game. The improvements
allowed them to begin adding more interesting behavior for moving entities.
Missiles were changed to home to the player.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;way-of-rhea&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wor.jpg&quot; alt=&quot;Way of Rhea screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea is a picturesque puzzle game that lets you correct your mistakes.
Change your color, teleport past the colored gates, master the color powered
circuits, and befriend the color changing crabs-but don&#x27;t let them out!&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s major updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Autosave support.&lt;&#x2F;li&gt;
&lt;li&gt;Steam cloud support.&lt;&#x2F;li&gt;
&lt;li&gt;A free demo was released as part of Boston FIG (no longer available).&lt;&#x2F;li&gt;
&lt;li&gt;In game audio options.&lt;&#x2F;li&gt;
&lt;li&gt;A new level featuring a new puzzle mechanic.&lt;&#x2F;li&gt;
&lt;li&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=PRifdHcaswc&quot;&gt;updated trailer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren-snow.gif&quot; alt=&quot;Veloren Snow&quot; &#x2F;&gt;
&lt;em&gt;Let it snow!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In January, lots of work was done on new models that make the world feel more
alive. Work was done on economic simulation, and many of the blog posts
highlight this progress. This includes trading between sites, and professions.
Skill trees were completed, and are now in the game.&lt;&#x2F;p&gt;
&lt;p&gt;Large changes are being implemented to the CI system to reduce build times. Work
has been ongoing on improving the Veloren wiki, with many contributors adding to
it. In February, a meeting will be held to discuss the 0.9 release, with does
not yet have a release date.&lt;&#x2F;p&gt;
&lt;p&gt;January&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-101&quot;&gt;#101&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-102&quot;&gt;#102&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-103&quot;&gt;#103&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-104&quot;&gt;#104&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shotcaller&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;Shotcaller&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shotcaller&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shotcaller-full.png&quot; alt=&quot;Custom art assets for Shotcaller&quot; &#x2F;&gt;
&lt;em&gt;An art mockup of some Shotcaller action.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;Shotcaller&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;qvJyTYM&quot;&gt;Discord&lt;&#x2F;a&gt;) is a minimalistic MOBA
that focuses strictly on macro-play with few actions-per-minute,
leaving only room for grand strategy decisions.
The game is made with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt;, a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&#x2F;minigene&quot;&gt;custom game engine&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;www.jojolepro.com&#x2F;blog&#x2F;2021-01-13_planks_ecs&quot;&gt;Plank ECS&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;kveih9&#x2F;shotcaller_mobagame_v040&quot;&gt;Version v0.4.0 was released&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;First batch of custom art assets completed; will be implemented
in the month to come.&lt;&#x2F;li&gt;
&lt;li&gt;New leaders:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;29&quot;&gt;Alchemist&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;30&quot;&gt;Axe&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;34&quot;&gt;Rubick&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;36&quot;&gt;Centaur&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;40&quot;&gt;Bristleback&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;35&quot;&gt;Shadow Fiend&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;31&quot;&gt;Gold system&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;44&quot;&gt;Headless option&lt;&#x2F;a&gt;
(in preparation for AI&#x2F;ML experimenting).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;41&quot;&gt;Fog of War&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;46&quot;&gt;Mouse support&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;zemeroth&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zemeroth&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1341052260885942272&quot;&gt;&lt;img src=&quot;zemeroth.gif&quot; alt=&quot;Some generic gameplay demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1341052260885942272&quot;&gt;watch a footage with sound&lt;&#x2F;a&gt; 🔊&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff&lt;&#x2F;a&gt; is a minimalistic 2D turn-based tactical game.
Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The game &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1332031459985682436&quot;&gt;was migrated from good-web-game to macroquad&lt;&#x2F;a&gt;
and converted to explicit async assets loading.&lt;&#x2F;li&gt;
&lt;li&gt;Proper &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1341052260885942272&quot;&gt;sound effects &amp;amp; music were added&lt;&#x2F;a&gt;
using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;quad-snd&quot;&gt;quad-snd&lt;&#x2F;a&gt; library (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1346422661187035136&quot;&gt;more details&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The final preparations for v0.7 are wrapping up!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hands-on-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&quot;&gt;Hands-on Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hands-on-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&quot;&gt;&lt;img src=&quot;hands-on-rust.jpg&quot; alt=&quot;book cover&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&quot;&gt;&amp;quot;Hands-on Rust: Effective Learning through 2D Game Development and Play&amp;quot;&lt;&#x2F;a&gt;
is a book by &lt;a href=&quot;https:&#x2F;&#x2F;bracketproductions.com&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt;
(the author of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;the Rust Roguelike Tutorial&lt;&#x2F;a&gt;):
make fun games as you learn Rust through a series of hands-on gamedev tutorials
and real-world use of core language skills.&lt;&#x2F;p&gt;
&lt;p&gt;Recent &lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;support&#x2F;#beta-books&quot;&gt;beta releases&lt;&#x2F;a&gt; added the following chapters:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;#10: Fields of View;&lt;&#x2F;li&gt;
&lt;li&gt;#11: More Interesting Dungeons;&lt;&#x2F;li&gt;
&lt;li&gt;#12: Map Themes;&lt;&#x2F;li&gt;
&lt;li&gt;#13: Inventory and Power Ups;&lt;&#x2F;li&gt;
&lt;li&gt;#14: Deeper Dungeons;&lt;&#x2F;li&gt;
&lt;li&gt;#15: Combat Systems and Loot;&lt;&#x2F;li&gt;
&lt;li&gt;#16: Final Steps and Finishing Touches.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;triangle-from-scratch&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;triangle-from-scratch&quot;&gt;Triangle from Scratch&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#triangle-from-scratch&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;triangle-from-scratch&quot;&gt;Triangle from Scratch&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-tutorials&#x2F;triangle-from-scratch&quot;&gt;source code&lt;&#x2F;a&gt;)
is a WIP tutorial series by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Lokathor&quot;&gt;@Lokathor&lt;&#x2F;a&gt; about drawing a triangle
without using any outside crates.
Two extensive chapters were added this month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;triangle-from-scratch&#x2F;loading_opengl&#x2F;win32.html&quot;&gt;&amp;quot;Loading OpenGL with Win32 API&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;triangle-from-scratch&#x2F;web_stuff&#x2F;web_gl_with_bare_wasm.html&quot;&gt;&amp;quot;WebGL with bare WASM&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;setting-a-rust-executable-s-icon-in-windows&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&#x2F;2021&#x2F;01&#x2F;05&#x2F;setting-a-rust-windows-exe-icon&quot;&gt;Setting a Rust Executable&#x27;s Icon in Windows&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#setting-a-rust-executable-s-icon-in-windows&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;win-icons-task-bar.png&quot; alt=&quot;Windows taskbar with Way of Rhea icon on the right&quot; &#x2F;&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;way-of-rhea&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&#x27;s icon in the taskbar&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&quot;&gt;Anthropic Studios&lt;&#x2F;a&gt; has &lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&#x2F;2021&#x2F;01&#x2F;05&#x2F;setting-a-rust-windows-exe-icon&quot;&gt;shared an article&lt;&#x2F;a&gt; about
manually using &lt;code&gt;rc.exe&lt;&#x2F;code&gt; and embedding the resulting &lt;code&gt;.res&lt;&#x2F;code&gt; into your app
to set your game&#x27;s system icon on Windows.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;kraink&#x2F;setting_a_rust_executables_icon_in_win&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exploring-websocket-with-rust-and-tide&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;javierviola.com&#x2F;post&#x2F;exploring-websocket-with-rust-and-tide&#x2F;&quot;&gt;Exploring WebSocket with Rust and Tide&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#exploring-websocket-with-rust-and-tide&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tic-tac-tide.png&quot; alt=&quot;tic-tac-tide img&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;An exploration post on how to use WebSockets with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;http-rs&#x2F;tide&quot;&gt;Tide&lt;&#x2F;a&gt; framework by creating
a simple tic-tac-toc game. It&#x27;s focused on how to implement &lt;code&gt;ws&lt;&#x2F;code&gt; to enable all
time of real time apps (and games) with Rust and Tide.
You can also play &lt;a href=&quot;https:&#x2F;&#x2F;tic-tac-tide.labs.javierviola.com&#x2F;&quot;&gt;tic-tac-tide&lt;&#x2F;a&gt; online.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;engine-updates&quot;&gt;Engine Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#engine-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;..&#x2F;newsletter-005&#x2F;ggez-logo-maroon-full.svg&quot; alt=&quot;ggez logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; is a lightweight cross-platform game framework for making 2D
games with minimum friction.&lt;&#x2F;p&gt;
&lt;p&gt;The zero&#x27;th release candidate for version 0.6.0 has been released and
there has been no particularly horrific outcry of people&#x27;s games
exploding. A first release candidate with a pile of medium-sized bug
fixes should be coming in early February, hopefully soon followed by a
full release. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;milestone&#x2F;6&quot;&gt;Feedback is welcome&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Special thanks to the contributors who helped hunt bugs
and organize PR&#x27;s to get this version out the door:
@PSteinhaus, @Manghi, @AaronM04, @Systemcluster, and @Andy-Python-Programmer!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
versions 0.5.7 and 0.5.8 were released, with various changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic multisampled anti-aliasing support (with further improvements to come).&lt;&#x2F;li&gt;
&lt;li&gt;Functions for generating primitive shape meshes.&lt;&#x2F;li&gt;
&lt;li&gt;A more flexible &lt;code&gt;Rectangle&lt;&#x2F;code&gt; type.&lt;&#x2F;li&gt;
&lt;li&gt;Lots of bug fixes and docs improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For full details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, work on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;0.6&#x2F;CHANGELOG.md&quot;&gt;version 0.6&lt;&#x2F;a&gt; has begun, with a release
planned for some time in February!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dotrix&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dotrix.rs&quot;&gt;Dotrix&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dotrix&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dotrix-in-january.png&quot; alt=&quot;Fox model and egui controls for camera, light, etc&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dotrix.rs&quot;&gt;Dotrix&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;DrzwBysNRd&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;lowenware&quot;&gt;Twitter&lt;&#x2F;a&gt;) got an official
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; support and a new example demonstrating various
engine features and controls. The next big milestone for &lt;a href=&quot;https:&#x2F;&#x2F;dotrix.rs&quot;&gt;Dotrix&lt;&#x2F;a&gt; developers is
a terrain engine and editor, also made with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;. Some progress you can
already find on &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCdriNXRizbBFQhqZefaw44A&quot;&gt;YouTube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rusty-editor.jpg&quot; alt=&quot;rusty-editor screenshot&quot; &#x2F;&gt;
&lt;em&gt;A level made in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;rusty-editor&lt;&#x2F;a&gt; which is a native scene editor
for the rg3d game engine.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Twitter&lt;&#x2F;a&gt;)
is a game engine that aims to be easy to use and provide large set
of out-of-box features. Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Animation blending state machines were improved.&lt;&#x2F;li&gt;
&lt;li&gt;It&#x27;s now possible to copy nodes in-place.&lt;&#x2F;li&gt;
&lt;li&gt;The number of draw calls for UI was reduced by 70%.&lt;&#x2F;li&gt;
&lt;li&gt;Fixed clipping issues and text measurement in the UI.&lt;&#x2F;li&gt;
&lt;li&gt;Opacity for UI widgets was added.&lt;&#x2F;li&gt;
&lt;li&gt;Layout of Scroll- and Wrap- panels was fixed.&lt;&#x2F;li&gt;
&lt;li&gt;Light scatter issues for spot lights were fixed.&lt;&#x2F;li&gt;
&lt;li&gt;Support for transparent meshes.&lt;&#x2F;li&gt;
&lt;li&gt;Migration to rapier 0.5.&lt;&#x2F;li&gt;
&lt;li&gt;Animation signal handling is fixed when animation playing in reverse.&lt;&#x2F;li&gt;
&lt;li&gt;Animation tracks now are able to filter position&#x2F;scale&#x2F;rotation.&lt;&#x2F;li&gt;
&lt;li&gt;Sprite rendering fixes.&lt;&#x2F;li&gt;
&lt;li&gt;Improved copy&#x2F;paste in rusty-editor.&lt;&#x2F;li&gt;
&lt;li&gt;Lots of other small fixes and improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rkyv&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rkyv&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt; is a zero-copy deserialization framework for Rust. It&#x27;s similar to
FlatBuffers and Cap&#x27;n Proto and can be used for data storage and messaging.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.3 was released this month and brought some highly-requested features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new hashmap implementation using perfect hashing to decrease memory usage
and fix portability issues.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;code&gt;Unarchive&lt;&#x2F;code&gt; trait to enable more traditional data deserialization for
archived types.&lt;&#x2F;li&gt;
&lt;li&gt;Improved validation performance.&lt;&#x2F;li&gt;
&lt;li&gt;Better error messages and API ergonomics.&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;djkoloski.github.io&#x2F;rkyv&quot;&gt;book&lt;&#x2F;a&gt; with more narrative documentation on architecture and
internals.&lt;&#x2F;li&gt;
&lt;li&gt;More tests and realistic benchmarks against other popular serialization
frameworks.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The next update will be &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&#x2F;milestone&#x2F;5&quot;&gt;v0.4&lt;&#x2F;a&gt; and is on the way soon with a release
date around mid-February.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2021&#x2F;02&#x2F;05&#x2F;this-month-january&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Revitalized from the holiday break, the Mun core team got cracking; those
&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2021&#x2F;02&#x2F;05&#x2F;this-month-january&quot;&gt;January updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a ton of new language server features;&lt;&#x2F;li&gt;
&lt;li&gt;the ability to emit IR;&lt;&#x2F;li&gt;
&lt;li&gt;better documentation;&lt;&#x2F;li&gt;
&lt;li&gt;bug fixes and other improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gamelisp-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&quot;&gt;GameLisp&lt;&#x2F;a&gt; v0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gamelisp-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;glisp-logo.png&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&quot;&gt;GameLisp&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fleabitdev&#x2F;glsp&quot;&gt;source code&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&#x2F;playground&quot;&gt;playground&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fleabitdev&quot;&gt;@fleabitdev&lt;&#x2F;a&gt;
is a scripting language designed specifically for Rust game development.&lt;&#x2F;p&gt;
&lt;p&gt;This month, version 0.2.0 has been released. Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Any &lt;code&gt;&#x27;static&lt;&#x2F;code&gt; Rust type, including types defined by external crates,
can now be moved onto the garbage-collected heap and manipulated
by GameLisp scripts.&lt;&#x2F;li&gt;
&lt;li&gt;Rust data on the garbage-collected heap can now contain pointers to other
garbage-collected data, by implementing a &lt;code&gt;trace()&lt;&#x2F;code&gt; method.&lt;&#x2F;li&gt;
&lt;li&gt;Version 0.1 could only bind non-capturing Rust closures, but closures
which capture &lt;code&gt;&#x27;static&lt;&#x2F;code&gt; data are now fully supported.&lt;&#x2F;li&gt;
&lt;li&gt;Rust function pointers can now be passed directly to GameLisp,
rather than using the &lt;code&gt;rfn!&lt;&#x2F;code&gt; macro.
The clunky &lt;code&gt;lib!&lt;&#x2F;code&gt; and &lt;code&gt;rdata!&lt;&#x2F;code&gt; macros have also been removed.&lt;&#x2F;li&gt;
&lt;li&gt;Updated documentation starting from the &lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&#x2F;reference&#x2F;rust-bindings.html&quot;&gt;&amp;quot;Rust Bindings&amp;quot;&lt;&#x2F;a&gt;
chapter.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For full details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fleabitdev&#x2F;glsp&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;kp77vw&#x2F;version_02_of_gamelisp&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ldtk-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;ldtk-rs&quot;&gt;LDtk-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ldtk-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;ldtk-rs&quot;&gt;LDtk-rs&lt;&#x2F;a&gt; is a Rust crate for reading the &lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&quot;&gt;LDtk&lt;&#x2F;a&gt; map file format. The bindings
to the LDtk format are 100% automatically generated from the LDtk JSON Schema,
with the option to download the latest JSON Schema at build time for automatic
updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-ldtk&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_ldtk&quot;&gt;bevy_ldtk&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-ldtk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;.&#x2F;bevy_ldtk.jpg&quot; alt=&quot;LDtk Map Running in Bevy&quot; &#x2F;&gt;
&lt;em&gt;Tileset from &lt;a href=&quot;https:&#x2F;&#x2F;adamatomic.itch.io&#x2F;cavernas&quot;&gt;&amp;quot;Cavernas&amp;quot;&lt;&#x2F;a&gt; by Adam Saltsman&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;bevy_ldtk&quot;&gt;bevy_ldtk&lt;&#x2F;a&gt; is a Bevy plugin for loading &lt;a href=&quot;https:&#x2F;&#x2F;ldtk.io&quot;&gt;LDtk&lt;&#x2F;a&gt; tilemaps.&lt;&#x2F;p&gt;
&lt;p&gt;It features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;An efficient renderer that only uses 4 vertices per map layer.&lt;&#x2F;li&gt;
&lt;li&gt;Hot reloading through the Bevy asset server integration.&lt;&#x2F;li&gt;
&lt;li&gt;Heavily commented code to help others who want to see how to make their own
tilemap renderers.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;kira&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;kira&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kira&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;kira&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt; is a game audio library tailored to composers and other
people who need expressive audio.&lt;&#x2F;p&gt;
&lt;p&gt;v0.4.0 was released with a new wasm32 support, a new handle-based API, improved
error handling, and serde support for sequences, arrangements, and most config structs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;l3ma3d&#x2F;kira_game_audio_library_v040_wasm_support_serde&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&#x2F;status&#x2F;1353111739433410560&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dimforge&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&#x2F;&quot;&gt;Dimforge&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dimforge&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&#x2F;&quot;&gt;&lt;img src=&quot;dimforge.png&quot; alt=&quot;Dimforge&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&#x2F;&quot;&gt;Dimforge&lt;&#x2F;a&gt; creates open-source Rust crates for numerical simulation.
Some of the January updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;parry.rs&quot;&gt;Parry&lt;&#x2F;a&gt; was announced, the successor of ncollide for 2D and
3D collision-detection in Rust.&lt;&#x2F;li&gt;
&lt;li&gt;The new version of &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; brings many new features,
including the ability to use custom shapes,
as well as convex polygons&#x2F;polyhedrons for 2D and 3D respectively.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can read about all of the changes in the January edition of
&lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&#x2F;blog&#x2F;2021&#x2F;01&#x2F;29&#x2F;this-month-in-dimforge&quot;&gt;&amp;quot;This Month In Dimforge&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs-and-wgpu-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-and-wgpu-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-spaceship.jpg&quot; alt=&quot;Spaceship&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The community managed to squeeze the v0.7 releases out
at the end of the month. See the detailed notes on &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2021&#x2F;02&#x2F;02&#x2F;release-0.7.html&quot;&gt;gfx blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The highlight of the show is about shaders. Most of wgpu-rs shaders are
now written in &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;wgsl.html&quot;&gt;WGSL&lt;&#x2F;a&gt;,
and gfx-rs community is inviting Rust game&#x2F;graphics developers to evaluate if
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; could fulfill their shader translation needs in the future.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;imgui-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imgui-rs&#x2F;imgui-rs&quot;&gt;imgui-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#imgui-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;imgui-rs.gif&quot; alt=&quot;imgui drag drop example&quot; &#x2F;&gt;
&lt;em&gt;Drag and Drop and the new Drawing Api at Work in 0.7.0&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imgui-rs&#x2F;imgui-rs&quot;&gt;imgui-rs&lt;&#x2F;a&gt; is the Rust bindings for the ubiquitous immediate mode GUI library,
Dear ImGui.
Under new maintenance, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imgui-rs&#x2F;imgui-rs&#x2F;releases&#x2F;tag&#x2F;v0.7.0&quot;&gt;version 0.7&lt;&#x2F;a&gt; has been released, which features a new
API for raw draw calls, support for ergonomic Drag and Drop, and tons of improvements.
Notably, many functions were made &lt;code&gt;inline&lt;&#x2F;code&gt; and&#x2F;or &lt;code&gt;const&lt;&#x2F;code&gt;, including the &lt;code&gt;im_str!&lt;&#x2F;code&gt;
macro.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui_0.8.0.gif&quot; alt=&quot;egui widget gallery&quot; &#x2F;&gt;
&lt;em&gt;Some of the supported widgets in the new grid layout.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;egui&lt;&#x2F;a&gt; is a simple, fast, and highly portable immediate mode GUI library.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#080---2021-01-17---grid-layout--new-visual-style&quot;&gt;version 0.8&lt;&#x2F;a&gt; of egui was released with a new grid layout,
new look, and many smaller fixes and improvements.
You can try out egui in the &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;bevy_egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_egui.png&quot; alt=&quot;bevy_egui screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_egui&quot;&gt;bevy_egui&lt;&#x2F;a&gt; provides a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;Egui&lt;&#x2F;a&gt; integration
for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;Bevy&lt;&#x2F;a&gt; game engine.
It supports &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrk-its&#x2F;bevy_webgl2&quot;&gt;bevy_webgl2&lt;&#x2F;a&gt; and implements the full set of Egui features
(such as clipboard and opening URLs).&lt;&#x2F;p&gt;
&lt;p&gt;Try out the &lt;a href=&quot;https:&#x2F;&#x2F;mvlabat.github.io&#x2F;bevy_egui_web_showcase&#x2F;index.html&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chess-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adam-mcdaniel&#x2F;chess-engine&quot;&gt;chess-engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#chess-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;chess.png&quot; alt=&quot;cli + web version&quot; &#x2F;&gt;
&lt;em&gt;Console and web clients for the chess-engine&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adam-mcdaniel&#x2F;chess-engine&quot;&gt;chess-engine&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adam-mcdaniel&quot;&gt;@adam-mcdaniel&lt;&#x2F;a&gt; is a pure Rust, no-std, dependency-free
chess engine built to run anywhere.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I love chess a lot. It&#x27;s definitely one of my favorite games ever.
However, I&#x27;ve always been disappointed when trying to write programs
that play chess digitally (particularly in a compiled language).
Although several amazing engines exist, it&#x27;s near impossible to find
a neat library for chess-related-programming that runs on everything.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adam-mcdaniel&#x2F;chess-engine&quot;&gt;chess-engine&lt;&#x2F;a&gt; is a solution to my problem.
If you want a chess engine that runs on embedded devices, the terminal,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adam-mcdaniel&#x2F;chess-engine&#x2F;tree&#x2F;main&#x2F;examples&#x2F;chess-gui&quot;&gt;the desktop (with a gui)&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;adam-mcdaniel.github.io&#x2F;chess-engine&#x2F;docs&#x2F;book&#x2F;index.html#average-ai&quot;&gt;the web&lt;&#x2F;a&gt;,
this is probably your best bet.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;l65e86&#x2F;a_nostd_chess_engine&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dcli&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikechambers&#x2F;dcli&quot;&gt;dcli&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dcli&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dcliah.png&quot; alt=&quot;plaintext tables&quot; &#x2F;&gt;
&lt;em&gt;Example of dcliah output&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikechambers&#x2F;dcli&quot;&gt;dcli&lt;&#x2F;a&gt; by &lt;a href=&quot;www.mikechambers.com&quot;&gt;Mike Chambers&lt;&#x2F;a&gt; is a library and a collection
of utilities&amp;amp;apps that provide a command line interface (CLI) for viewing
player stats and data from Destiny 2, using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Bungie-net&#x2F;api&quot;&gt;Destiny 2 API&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;dclis - retrieves primary platform and membership ids for Destiny 2 players.&lt;&#x2F;li&gt;
&lt;li&gt;dclim - manages and syncs the remote Destiny 2 API manifest database.&lt;&#x2F;li&gt;
&lt;li&gt;dclias - downloads and syncs Destiny 2 Crucible activity history
into a local sqlite3 database file.&lt;&#x2F;li&gt;
&lt;li&gt;dclic - retrieves character ids for the specified member.&lt;&#x2F;li&gt;
&lt;li&gt;dclims - searches the Destiny 2 manifest by hash ids (from API calls).&lt;&#x2F;li&gt;
&lt;li&gt;dclitime - generates date &#x2F; time stamps for Destiny 2 weekly event moments.&lt;&#x2F;li&gt;
&lt;li&gt;dclia - displays information on player&#x27;s current activity within Destiny 2.&lt;&#x2F;li&gt;
&lt;li&gt;dcliah - displays Destiny 2 activity history and stats.&lt;&#x2F;li&gt;
&lt;li&gt;dcliad - displays Destiny 2 Crucible activity &#x2F; match details.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rust-support-in-shader-playground&quot;&gt;Rust Support in &lt;a href=&quot;http:&#x2F;&#x2F;shader-playground.timjones.io&quot;&gt;Shader Playground&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-support-in-shader-playground&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shaderplay.jpeg&quot; alt=&quot;source code in rust, compiler options, and spircv-coross output&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;shader-playground.timjones.io&quot;&gt;Shader Playground&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tgjones&#x2F;shader-playground&quot;&gt;source code&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tgjones&quot;&gt;@tgjones&lt;&#x2F;a&gt; now allows you to try out writing shaders in Rust
(using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&quot;&gt;rust-gpu&lt;&#x2F;a&gt;) without downloading or building anything.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;406&quot;&gt;#406 &amp;quot;Separate category for engines vs libraries&#x2F;tools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;454&quot;&gt;#454 &amp;quot;Newsletter: new format and more delegation&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;98&quot;&gt;#98 &amp;quot;Monthly Rust Gamedev Meetup&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;100&quot;&gt;#100 &amp;quot;Physiology simulation&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;101&quot;&gt;#101 &amp;quot;[Proposal] Abstract plane geometry library for GUI projects&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a-b-street&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;le72fi&#x2F;this_month_in_rust_gamedev_18_january_2021&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;%5BTODO%5D(https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1358162349375561729)&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #17 - December 2020</title>
            <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/017/</link>
            <guid>https://gamedev.rs/news/017/</guid>
            <description>&lt;p&gt;Welcome to the 17th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;017&#x2F;#rust-gamedev-podcast-4&quot;&gt;Rust GameDev Podcast #4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;017&#x2F;#rust-gamedev-meetup&quot;&gt;Rust Gamedev Meetup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;017&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;017&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;017&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;017&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;017&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-meetup&quot;&gt;Rust Gamedev Meetup&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;meetup.png&quot; alt=&quot;invitation card&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Rust Gamedev meetup will happen on the second Saturday of every month
at 16:00 GMT+0. The meetup will be an opportunity to chat with others
from the Rust game development community and see what people are working on.&lt;&#x2F;p&gt;
&lt;p&gt;The meetup will take place on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;Rust Gamedev Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ksflbm&#x2F;the_first_rust_gamedev_meetup&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1347286339079860225&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-gamedev-podcast-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-fedor-logachev&quot;&gt;Rust GameDev Podcast #4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-podcast-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;podcast.jpeg&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-fedor-logachev&quot;&gt;The 4th podcast episode&lt;&#x2F;a&gt; is an interview with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;Fedor Logachev&lt;&#x2F;a&gt;,
creator of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; games libraries.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We discuss the libraries&#x27; features, development, and plans for the future
as well as the accompanying book and games project that will act
as both an introduction to Rust games development and the Macroquad library.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Listen and subscribe from the following platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast (simplecast)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.apple.com&#x2F;gb&#x2F;podcast&#x2F;rust-game-dev&#x2F;id1526304768&quot;&gt;Apple Podcasts&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;show&#x2F;7HRfGnTcXkLkQd9fxJbDGj&quot;&gt;Spotify&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feeds.simplecast.com&#x2F;C6NQglnL&quot;&gt;RSS Feed&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.google.com&#x2F;feed&#x2F;aHR0cHM6Ly9mZWVkcy5zaW1wbGVjYXN0LmNvbS9DNk5RZ2xuTA&quot;&gt;Google Podcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;kit4pa&#x2F;rustgamedev_podcast_4_fedor_logachev&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;way-of-rhea-has-a-discord&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;JGeVt5XwPP&quot;&gt;Way of Rhea has a Discord!&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea-has-a-discord&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;way-of-rhea.gif&quot; alt=&quot;New Way of Rhea assets&quot; &#x2F;&gt;
&lt;em&gt;Updated visuals for interactive items.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&#x2F;way-of-rhea&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle platformer that takes place in a world
where you can only interact with objects that match your current color. The game
is being developed in a custom built Rust game engine and hot swappable
scripting language.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;More progress has been made on the hub world! The game is no longer fully
linear.&lt;&#x2F;li&gt;
&lt;li&gt;All interactive elements are getting a visual update, pictured above.&lt;&#x2F;li&gt;
&lt;li&gt;The devs have created &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;JGeVt5XwPP&quot;&gt;a Discord server&lt;&#x2F;a&gt; where you can hang out,
stay up to date on the latest developments, and if you&#x27;re interested, chat
about the implementation (see the &lt;code&gt;#tech&lt;&#x2F;code&gt; channel.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren1.jpg&quot; alt=&quot;Landscape&quot; &#x2F;&gt;
&lt;em&gt;A village over the river&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In December, Veloren &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100&quot;&gt;released its 100th devblog&lt;&#x2F;a&gt;!
This edition included sections about all aspects of the project
from 20 contributors, making it by far the longest Veloren devblog yet:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#mckol-s-veloren-journey&quot;&gt;A journey to implement a controller support with gilrs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Two sections about modelling: &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#modeling-with-gemu&quot;&gt;by @Gemu&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#modeling-with-snowram&quot;&gt;by @Snowram&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#work-by-xvar&quot;&gt;Veloren&#x27;s database persistence and inventory improvements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#combat-improvements-by-james&quot;&gt;Combat improvements: new weapon skills, better AI, and a poise system&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#network-analysis-by-xmac94x&quot;&gt;Network analysis and an overview of new Network Backend&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Overviews of &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#the-state-of-graphics-and-ui-by-imbris&quot;&gt;the state of graphics and UI&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#looking-to-the-graphical-future-by-sharp&quot;&gt;the graphical future of the game&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#ui-progress-by-pfau&quot;&gt;UI progress&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#procedural-trees-by-ccgauche&quot;&gt;Procedural generation of unique, good looking, and fun to climb trees&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#new-website-design-by-songtronix&quot;&gt;New website design prototypes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;And lots of other interesting sections with updates
and personal contributors&#x27; stories.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Other December updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Lots of work on the economic simulation:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-98#economic-simulation-update-by-christof&quot;&gt;part 1&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-99#economic-simulation-by-christof&quot;&gt;part 2&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-98&#x2F;#contributor-work&quot;&gt;Reflective water was added to the level of detail system&lt;&#x2F;a&gt;,
making far-off lakes look much better.&lt;&#x2F;li&gt;
&lt;li&gt;A plugin system is in the prototyping phase.
This will eventually allow mods to be added to the game.&lt;&#x2F;li&gt;
&lt;li&gt;An aura system was added for radial buffs around entities, for example,
being near a fireplace now allows you to heal.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;December&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-97&quot;&gt;#97&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-98&quot;&gt;#98&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-99&quot;&gt;#99&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100&quot;&gt;#100&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=8WWVe1cIu7I&quot;&gt;&lt;img src=&quot;veloren-glider.gif&quot; alt=&quot;Youtube preview img&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-100#glider-physics-by-slipped&quot;&gt;New glider physics&lt;&#x2F;a&gt; video&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In January, work will continue on 0.9. Work will be done on economic simulation,
world simulation, and combat systems. New developers are joining the project
every month, and development is moving forward quickly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;15-minute-santa&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;santa.abstreet.org&quot;&gt;15-minute Santa&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#15-minute-santa&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;santa.png&quot; alt=&quot;15-minute Santa&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;http:&#x2F;&#x2F;santa.abstreet.org&quot;&gt;15-minute Santa&lt;&#x2F;a&gt;, you deliver presents around a city,
occasionally stopping at a restaurant to refuel -- biking uphill in the snow
isn&#x27;t easy! The game uses real data from OpenStreetMap and local GIS sources to
know where shops, single-family homes, and apartments are located. In places
where zoning rules keep people separated from food, Santa will have a hard
time.&lt;&#x2F;p&gt;
&lt;p&gt;15-minute Santa was created by the &lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; team as an experiment
to see how quickly we could build a simple arcade game that gets people
thinking about how their city is designed. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;tree&#x2F;master&#x2F;santa&#x2F;src&#x2F;&quot;&gt;The code&lt;&#x2F;a&gt; doesn&#x27;t make
use of an entity-component system or an existing engine, and animation and
particle effects don&#x27;t use a custom shader. The game runs natively on Linux,
Mac, and Windows, and on web browsers. There are instructions for modding the
game and adding your own city!&lt;&#x2F;p&gt;
&lt;p&gt;A&#x2F;B Street updates will return next month. In the meantime, please comment on
the &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1oV4mdtb0ve-wf0HqbEvR9IwXLIkTeDu8a3UnJxnr2F0&quot;&gt;2021 roadmap&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egregoria&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egregoria&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egregoria.jpg&quot; alt=&quot;Egregoria farm and flour factory at night&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&#x27;s objective is to become a granular society simulation,
filled with fully autonomous agents interacting with their world in real time.
The city should evolve by itself and form interesting patterns.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;egregoria_7.html&quot;&gt;7th devlog&lt;&#x2F;a&gt; was published. Celebrating the first
anniversary of the project! Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A summary of Egregoria&#x27;s progress and ambition.&lt;&#x2F;li&gt;
&lt;li&gt;Music and sounds.&lt;&#x2F;li&gt;
&lt;li&gt;Basic economy design.&lt;&#x2F;li&gt;
&lt;li&gt;A specialized gridlock detection algorithm.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CAaZhUJ&quot;&gt;Egregoria&#x27;s Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;doukutsu-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;doukutsu-rs&#x2F;doukutsu-rs&quot;&gt;doukutsu-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#doukutsu-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;doukutsu-rs.png&quot; alt=&quot;d-rs grasstown screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;doukutsu-rs&#x2F;doukutsu-rs&quot;&gt;doukutsu-rs&lt;&#x2F;a&gt; is a remake of &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cave_Story&quot;&gt;Cave Story&lt;&#x2F;a&gt; engine,
meant to be a drop-in replacement for the original game executable
(both freeware and commercial version), focused on being a portable modding
tool (most Cave Story mods patch the executable directly, including machine
code editing&#x2F;assembly hacks) and adding various visual and gameplay-related
enhancements.&lt;&#x2F;p&gt;
&lt;p&gt;Built mainly using modified &lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&quot;&gt;ggez&lt;&#x2F;a&gt; crate, runs on desktop and Android.&lt;&#x2F;p&gt;
&lt;p&gt;Changes done during the last month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;kh79r1&#x2F;made_my_rust_remake_of_cave_story&quot;&gt;An Android port with full touchscreen controls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Work has been started on Lua API, meant for building custom stuff
on top of the engine.&lt;&#x2F;li&gt;
&lt;li&gt;Work started on pushing the project&#x27;s changes upstream and moving back
to mainline versions of crates.&lt;&#x2F;li&gt;
&lt;li&gt;Improvements to the Organya player (a simple synthesizer that plays the
in-game music using a set of 100 waves and 6 drum samples).&lt;&#x2F;li&gt;
&lt;li&gt;A bunch of missing NPCs, bosses, and other stuff were added.&lt;&#x2F;li&gt;
&lt;li&gt;The way how game loop works was redesigned, in preparation
for adding networked multiplayer support.&lt;&#x2F;li&gt;
&lt;li&gt;Countless bug fixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum-12-30-2020.jpg&quot; alt=&quot;A view of a beach area on Antorum Isle&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum&lt;&#x2F;a&gt; is a micro-multiplayer online role-playing game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt;.
The game server is written in Rust, and the official client is being developed
in Unity.&lt;&#x2F;p&gt;
&lt;p&gt;December was an important month for the game. Along with tons of little fixes
and changes, major features such as NPC Dialog were finally implemented! Check
out the dev logs for more info.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;26&quot;&gt;#26: Various Improvements&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;27&quot;&gt;#27: The Big 2020 End-Of-Year Update&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;a-zombie-shooter-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aunmag&#x2F;shooter-rust&quot;&gt;A Zombie Shooter Game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-zombie-shooter-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;9o6KjlwKyGo&quot;&gt;&lt;img src=&quot;a-zombie-shooter-game-demo.gif&quot; alt=&quot;Demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Watch a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;9o6KjlwKyGo&quot;&gt;video demo on YouTube&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aunmag&#x2F;shooter-rust&quot;&gt;A Zombie Shooter Game&lt;&#x2F;a&gt; is a work-in-progress multiplayer
top-down shooter. Actually, it&#x27;s a Rust port of an old Java game with
a very simple goal - to shoot zombies chasing after you.
The game has several
advantages, like high-quality bullet ballistics and geocentric camera rotation
relative to the player.&lt;&#x2F;p&gt;
&lt;p&gt;This month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Dummy AI.&lt;&#x2F;li&gt;
&lt;li&gt;Projectiles (shooting) synchronization over network.&lt;&#x2F;li&gt;
&lt;li&gt;Collision detection.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can discuss the project at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aunmag&#x2F;shooter-rust&#x2F;discussions&quot;&gt;its GitHub forum&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a work-in-progress multiplayer online game world. Akigi
is being developed by &lt;a href=&quot;https:&#x2F;&#x2F;chinedufn.com&quot;&gt;@chinedufn&lt;&#x2F;a&gt; for the web and desktop using a custom
Rust game engine.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;akigi.gif&quot; alt=&quot;Moving while attacking&quot; &#x2F;&gt;
&lt;em&gt;Moving while attacking. Don&#x27;t look at the shoulders.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;December updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2020&#x2F;099-2020-12-27.html#aiming&quot;&gt;Support for additive animation blending&lt;&#x2F;a&gt; was added
in order to be able to aim bows.&lt;&#x2F;li&gt;
&lt;li&gt;A somewhat operational &lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2020&#x2F;097-2020-12-13.html&quot;&gt;skill progress meter&lt;&#x2F;a&gt; was added.&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;gamedev&#x2F;comments&#x2F;k8i773&#x2F;how_i_a_mere_programmer_am_learning&quot;&gt;discussion on Reddit&lt;&#x2F;a&gt; about learning art as a programmer.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full December&#x27;s devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2020&#x2F;096-2020-12-06.html&quot;&gt;#96&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2020&#x2F;097-2020-12-13.html&quot;&gt;#97&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2020&#x2F;098-2020-12-20.html&quot;&gt;#98&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2020&#x2F;099-2020-12-27.html&quot;&gt;#99&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;swoop&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sdfgeoff.itch.io&#x2F;swoop&quot;&gt;Swoop&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#swoop&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;swoop.gif&quot; alt=&quot;Doing donuts while being overtaken&quot; &#x2F;&gt;
&lt;em&gt;Getting lapped by purple? - don&#x27;t worry, it happens to everyone&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sdfgeoff.itch.io&#x2F;swoop&quot;&gt;Swoop&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdfgeoff&quot;&gt;@sdfgeoff&lt;&#x2F;a&gt; is a procedural racing web game
written in Rust from scratch.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I&#x27;ve tried to make games in a variety of engines, but invariably got frustrated.
So I decided to throw out the engine and find out what makes game-making so complex.
It turns out that the stuff below the game engine is only slightly less friendly
than the stuff above it.&lt;&#x2F;p&gt;
&lt;p&gt;All up this game was a large experiment:
I&#x27;m not all that familiar with Rust, it was my first go at targetting WASM,
I&#x27;ve never used WebGL before, and my linear algebra is worse than I thought.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdfgeoff&#x2F;wasm_minigames&quot;&gt;The source code is available here&lt;&#x2F;a&gt; and
you can also read about the process of making the game
here: &lt;a href=&quot;https:&#x2F;&#x2F;sdfgeoff.github.io&#x2F;wasm_minigames&#x2F;a_first_game_swoop.html&quot;&gt;&amp;quot;WASM Games From Scratch&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can also play the game&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;shadertoy.com&#x2F;view&#x2F;WlScWd&quot;&gt;prototype version done in shadertoy&lt;&#x2F;a&gt;
and check out a &lt;a href=&quot;https:&#x2F;&#x2F;shadertoy.com&#x2F;view&#x2F;tltyRB&quot;&gt;prototype of the next @sdfgeoff&#x27;s project&lt;&#x2F;a&gt;
that is based on raymarching giant caves.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;harvest-hero&quot;&gt;Harvest Hero&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#harvest-hero&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;harvest_hero_snippet.gif&quot; alt=&quot;Harvest Hero Gameplay&quot; &#x2F;&gt;
&lt;em&gt;Harvest crops and whack those pesky Groobles!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Harvest Hero by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bombfuse_dev&quot;&gt;@bombfuse_dev&lt;&#x2F;a&gt; is an arcade&#x2F;roguelike game.
This month in development:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new level type called &amp;quot;Harvest Defense&amp;quot; was added.&lt;&#x2F;li&gt;
&lt;li&gt;Some quality of life features like background music and sfx volume control
were added.&lt;&#x2F;li&gt;
&lt;li&gt;The devs began working with some artists to provide a music
and pixelart makeover.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;freenukum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;silwol&#x2F;freenukum&quot;&gt;FreeNukum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#freenukum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;freenukum.png&quot; alt=&quot;The first original Duke Nukem 1 level in FreeNukum&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;silwol&#x2F;freenukum&quot;&gt;FreeNukum&lt;&#x2F;a&gt; is a free software clone of the 1991 DOS game &lt;em&gt;Duke Nukem
1&lt;&#x2F;em&gt; jump&#x27;n run by &lt;a href=&quot;https:&#x2F;&#x2F;chaos.social&#x2F;@silwol&quot;&gt;@silwol&lt;&#x2F;a&gt;. Development of the game started in 2007, back
then it was written in C using SDL1. In 2020, the codebase was gradually
migrated to Rust, after that it got updated to SDL2. The first version
fully implemented in Rust was &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;freenukum&quot;&gt;released to crates.io&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;k9dw50&#x2F;freenukum&quot;&gt;announced on Reddit&lt;&#x2F;a&gt; in December 2020.&lt;&#x2F;p&gt;
&lt;p&gt;Some of &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;silwol&#x2F;freenukum&#x2F;-&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;this month&#x27;s changes&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Controller support was added.&lt;&#x2F;li&gt;
&lt;li&gt;Some of the actors found in the original game were added.&lt;&#x2F;li&gt;
&lt;li&gt;The hero can do somersaults when jumping with boots.&lt;&#x2F;li&gt;
&lt;li&gt;The project&#x27;s wiki now has a &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;silwol&#x2F;freenukum&#x2F;-&#x2F;wikis&#x2F;FreeNukum-Screenshots&quot;&gt;&amp;quot;FreeNukum Screenshots&amp;quot; page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#freenukum:matrix.org&quot;&gt;Matrix chat room&lt;&#x2F;a&gt; is now available.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;freenukum-somersaults.gif&quot; alt=&quot;FreeNukum showing the hero making somersaults&quot; &#x2F;&gt;
&lt;em&gt;Somersaults!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;openetg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;etg.dek.im&quot;&gt;openEtG&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#openetg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;openEtG.jpg&quot; alt=&quot;openEtG login screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;etg.dek.im&quot;&gt;openEtG&lt;&#x2F;a&gt; is an open source engine that is an HTML5 successor to the original
&lt;a href=&quot;http:&#x2F;&#x2F;elementsthegame.com&quot;&gt;Elements the Game&lt;&#x2F;a&gt;, featuring additional cards and balance.
In December, 10k lines of JavaScript source were rewritten in Rust:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Overall I&#x27;ve been brainstorming this change for a couple years. So I&#x27;d already
shifted from a classical OOP mess with Shield&#x2F;Weapon&#x2F;Pillar inheriting from
Permanent to one where everything is a Thing. This also made sense because in
openEtG there&#x27;s spells like Flying Weapon which convert the player&#x27;s weapon
into a creature. So before I&#x27;d create a new Creature filled in with stats from
original weapon, whereas now it&#x27;s mostly just moving the instance into a
creature slot &amp;amp; updating its type tag.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can read the full openEtG December writeup &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;k3jy5g&#x2F;i_rewrote_10k_lines_of_js_into_rust&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;weegames&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weegames&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;weegames.jpg&quot; alt=&quot;Four Weegames minigames&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt; is a fast-paced minigame collection.&lt;&#x2F;p&gt;
&lt;p&gt;The game now has a &lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;web demo&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yeahross0&#x2F;Weegames-Demo&quot;&gt;source&lt;&#x2F;a&gt;)
made with macroquad.
Sound was recently added to the demo using the quad-snd library.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shotcaller&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;Shotcaller&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shotcaller&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shotcaller-2guis.png&quot; alt=&quot;Shotcaller dual frontend&quot; &#x2F;&gt;
&lt;em&gt;ASCII and sprites versions of Shotcaller interface.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;Shotcaller&lt;&#x2F;a&gt; is a moddable RTS&#x2F;MOBA game made with bracket-lib.&lt;&#x2F;p&gt;
&lt;p&gt;No new release is out yet, but several major updates happened:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;19&quot;&gt;Basic AI profiles&lt;&#x2F;a&gt; for leaders.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;24&quot;&gt;TreePerson&lt;&#x2F;a&gt; leader added.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;pull&#x2F;25&quot;&gt;Generic Leader 2&lt;&#x2F;a&gt; pending.&lt;&#x2F;li&gt;
&lt;li&gt;More documentation.&lt;&#x2F;li&gt;
&lt;li&gt;The game moved from specs to their own, heavily specs-based plank_ecs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Contributions welcome: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;issues&#x2F;6&quot;&gt;try add a new Leader&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cheese&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;expenses.itch.io&#x2F;cheese&quot;&gt;Cheese&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cheese&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cheese-screenshot.png&quot; alt=&quot;A screenshot of some mice shooting other mice&quot; &#x2F;&gt;
&lt;em&gt;Pew pew!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;expenses.itch.io&#x2F;cheese&quot;&gt;Cheese&lt;&#x2F;a&gt; is a small Real Time Strategy game created for the
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;game-off-2020&quot;&gt;GitHub Game Off 2020&lt;&#x2F;a&gt;. It was written using a &#x27;low-level gamedev stack&#x27;
consisting of:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt; for rendering,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;gltf&quot;&gt;gltf&lt;&#x2F;a&gt; models,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;wgpu_glyph&quot;&gt;wgpu_glyph&lt;&#x2F;a&gt; for text rendering&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;legion&quot;&gt;legion&lt;&#x2F;a&gt; for ECS&lt;&#x2F;li&gt;
&lt;li&gt;and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;lyon_tessellation&quot;&gt;lyon_tessellation&lt;&#x2F;a&gt; for rendering 2D UI elements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The game is in a finished state, but it would be relatively easy to add new
features such as unit types and buildings.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the source code at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;expenses&#x2F;cheese&quot;&gt;github.com&#x2F;expenses&#x2F;cheese&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vollmond&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;vollmond&quot;&gt;Vollmond&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vollmond&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vollmond-preview.png&quot; alt=&quot;Vollmond preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;vollmond&quot;&gt;Vollmond&lt;&#x2F;a&gt; is a small non-violent adventure in the style of Zelda 2.
You as a player are cursed and must find 4 ingredients for the famous
&lt;code&gt;Moonshot&lt;&#x2F;code&gt; disenchantment potion.&lt;&#x2F;p&gt;
&lt;p&gt;It was initially created for the Github Game Off 2020 Jam to gain experience
with WASM and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;. This month a post jam version was released.
It contains:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;implementation of user feedback,&lt;&#x2F;li&gt;
&lt;li&gt;adding music and sound effects.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;puppetmaster-&#x2F;vollmond&quot;&gt;source code&lt;&#x2F;a&gt; is available and includes the following
technical implementations:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;drawing and modifying multilayer tilemap,&lt;&#x2F;li&gt;
&lt;li&gt;tile-based animation and collision logic,&lt;&#x2F;li&gt;
&lt;li&gt;tweening und timer,&lt;&#x2F;li&gt;
&lt;li&gt;4-way top-down and sideways player movement,&lt;&#x2F;li&gt;
&lt;li&gt;independent game scenes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;how-to-revive-a-dead-rust-project&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=qoCryIy4bFE&quot;&gt;How to Revive a Dead Rust Project&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-revive-a-dead-rust-project&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=qoCryIy4bFE&quot;&gt;&lt;img src=&quot;how-to-revive-a-dead-rust-project.jpg&quot; alt=&quot;RustFest Sketchnote&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Drawing by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;visual_partner&quot;&gt;Carlo Gilmar&lt;&#x2F;a&gt;. Click to &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=qoCryIy4bFE&quot;&gt;watch the talk.&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;At &lt;a href=&quot;https:&#x2F;&#x2F;rustfest.global&#x2F;&quot;&gt;RustFest Global 2020&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;@micah_tigley&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt; talked about their
experiences collaborating together to revive the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;space_shooter_rs&lt;&#x2F;a&gt; project through
effective planning, refactoring, and documentation. The video was recently
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1341763006716407808&quot;&gt;released on YouTube&lt;&#x2F;a&gt; in December!&lt;&#x2F;p&gt;
&lt;p&gt;Since then, both developers have been working away on improving the
game. Some updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1335289462738259974&quot;&gt;Adding debug lines for hitboxes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;pull&#x2F;101&quot;&gt;Creating configurations files to store player variables&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;building-pikachu-volleyball&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Z1sxCC0CDts&quot;&gt;Building Pikachu Volleyball&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#building-pikachu-volleyball&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Z1sxCC0CDts&quot;&gt;&lt;img src=&quot;pikachu0.png&quot; alt=&quot;YouTube Preview: Video thumbnail with a crab and text&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Z1sxCC0CDts&quot;&gt;watch the video on YouTube&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Z1sxCC0CDts&quot;&gt;Building Pikachu Volleyball&lt;&#x2F;a&gt; by &lt;a href=&quot;http:&#x2F;&#x2F;youtube.com&#x2F;c&#x2F;danlogs&quot;&gt;@danlogs&lt;&#x2F;a&gt; is the latest episode
of a video series inspired by Shing Lyu&#x27;s book &lt;a href=&quot;https:&#x2F;&#x2F;amazon.com&#x2F;Practical-Rust-Projects-Computing-Applications&#x2F;dp&#x2F;1484255984&quot;&gt;Practical Rust Projects&lt;&#x2F;a&gt;.
Here, &lt;a href=&quot;http:&#x2F;&#x2F;youtube.com&#x2F;c&#x2F;danlogs&quot;&gt;@danlogs&lt;&#x2F;a&gt; re-creates the Pikachu spin-off game from 1997
by Satoshi Takenouchi - Pikachu Volleyball.&lt;&#x2F;p&gt;
&lt;p&gt;Apart from being a good way for aspiring game developers to start
understanding the gist of game dev with Rust, this video also displays some of
the language&#x27;s hardest topics (i.e. ownership, lifetimes, modules, etc.)
in a real-world application.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danbugs&#x2F;danlogs&#x2F;tree&#x2F;master&#x2F;rust&#x2F;projects&#x2F;pikachu_volleyball&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;fSWE49H&quot;&gt;danlogs&#x27;s Discord channel&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;danologue&quot;&gt;@danologue on Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;creative-coding-in-rust-re-creating-retro-screensaver&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=d9lsT4kJo44&quot;&gt;Creative Coding in Rust: Re-creating Retro Screensaver&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#creative-coding-in-rust-re-creating-retro-screensaver&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=d9lsT4kJo44&quot;&gt;&lt;img src=&quot;retro_screensaver.jpg&quot; alt=&quot;A screenshot from the coding sesion&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;You can &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=d9lsT4kJo44&quot;&gt;watch the recording here&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;timClicks&quot;&gt;@timClicks&lt;&#x2F;a&gt; live streamed a coding session featuring
&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;Nannou&lt;&#x2F;a&gt;, an open-source creative-coding framework,
which is used to recreate the Mystify screensaver that appeared in Windows 3.1.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jxhozr&#x2F;creative_coding_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;timClicks&#x2F;status&#x2F;1327789155930128387&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;drawing-bezier-curves-with-sdfs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vladjuckov.github.io&#x2F;beziers-sdf&quot;&gt;Drawing Bezier curves with SDFs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#drawing-bezier-curves-with-sdfs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;beziers.gif&quot; alt=&quot;Demo&quot; &#x2F;&gt;
&lt;em&gt;The demo is available &lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.github.io&#x2F;bezier&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A short note by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;@VladZhukov0&lt;&#x2F;a&gt; about drawing Bezier curves (strokes)
with signed distance fields.
Continuation of a &lt;a href=&quot;https:&#x2F;&#x2F;vladjuckov.github.io&#x2F;hqlines&quot;&gt;previous note&lt;&#x2F;a&gt; about drawing lines with SDF.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nannou-creative-coding-with-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ml6tpyTyXhM&quot;&gt;Nannou: Creative Coding with Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nannou-creative-coding-with-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ml6tpyTyXhM&quot;&gt;&lt;img src=&quot;nannou_creative_coding.jpg&quot; alt=&quot;A screenshot from the talk&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;You can &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ml6tpyTyXhM&quot;&gt;watch the recording here&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mactuitui&quot;&gt;Alexis André&lt;&#x2F;a&gt; gave a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ml6tpyTyXhM&quot;&gt;talk&lt;&#x2F;a&gt; at
&lt;a href=&quot;https:&#x2F;&#x2F;githubuniverse.com&#x2F;Nannou-creative-coding-with-Rust&#x2F;&quot;&gt;GitHub Universe&lt;&#x2F;a&gt; about working with Rust
and &lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;Nannou&lt;&#x2F;a&gt;, an open-source creative-coding
framework.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alexis André is an artist, researcher, and designer aiming at redefining
entertainment. In this golden age of computation and data overflow,
why is our entertainment still designed to be consumed in a passive
way? A few media are offering interactive experiences, but none of
them are designed specifically for you. In this live demo, Alexis
will create a sketch from scratch for participants to experience
what it&#x27;s like working with Nannou and Rust.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The code is available at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MacTuitui&#x2F;nannou-universe&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MacTuitui&#x2F;status&#x2F;1339863034991276035&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;undergrad-thesis-on-game-scripting-for-legion&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redcodestudios&#x2F;legion_script&quot;&gt;Undergrad Thesis on Game Scripting for Legion&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#undergrad-thesis-on-game-scripting-for-legion&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;In December 2020, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pablodiegoss&quot;&gt;@pablodiegoss&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rodrigocam&quot;&gt;@rodrigocam&lt;&#x2F;a&gt; presented their undergrad
thesis where they created a proof-of-concept scripting system for the Legion ECS,
called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redcodestudios&#x2F;legion_script&quot;&gt;Legion Script&lt;&#x2F;a&gt;.
Legion is being currently integrated into the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&quot;&gt;Amethyst game engine&lt;&#x2F;a&gt;,
and this contribution might be included in future releases.&lt;&#x2F;p&gt;
&lt;p&gt;With &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redcodestudios&#x2F;legion_script&quot;&gt;Legion Script&lt;&#x2F;a&gt;, it is possible to declare, write and read
components into Legion using Python scripts.
However, this project exports an API that can be evolved
for other languages and interpreters.&lt;&#x2F;p&gt;
&lt;p&gt;Since then, both developers have been sharing their work and receiving feedback
for the project while planning the next steps for the code, which is available
at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redcodestudios&#x2F;legion_script&quot;&gt;GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The PDF version of the thesis could be found
in &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;undergrad-thesis-on-game-scripting-for-legion&#x2F;1753&quot;&gt;this Amethyst forum thread&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;triangle-from-scratch&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;triangle-from-scratch&quot;&gt;Triangle from Scratch&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#triangle-from-scratch&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;triangle-from-scratch&quot;&gt;Triangle from Scratch&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-tutorials&#x2F;triangle-from-scratch&quot;&gt;source code&lt;&#x2F;a&gt;)
is a new tutorial series by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Lokathor&quot;&gt;@Lokathor&lt;&#x2F;a&gt;
about drawing a triangle without using any outside crates.
So far there&#x27;s just one article for opening a window using the Win32 API,
but more subjects and on more platforms will be added over time.
From the author:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The point isn&#x27;t that we specifically care about drawing the triangle.
That&#x27;s just a goal that&#x27;s easy to grasp.
The point is that we&#x27;re doing it with no dependencies as a way
to get ourselves to learn about low level OS interaction details as we go.
That said, the &amp;quot;no crates&amp;quot; rule is for educational purposes only;
please feel free to use crates in normal situations.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;wasm-games-from-scratch&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sdfgeoff.github.io&#x2F;wasm_minigames&quot;&gt;WASM Games From Scratch&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wasm-games-from-scratch&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wasm_sprite_transform.svg&quot; alt=&quot;sprite transformation explanations&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdfgeoff&quot;&gt;@sdfgeoff&lt;&#x2F;a&gt; published a book that describes the process
of building the abovementioned web game &lt;a href=&quot;https:&#x2F;&#x2F;sdfgeoff.itch.io&#x2F;swoop&quot;&gt;Swoop&lt;&#x2F;a&gt; from scratch:
&lt;a href=&quot;https:&#x2F;&#x2F;sdfgeoff.github.io&#x2F;wasm_minigames&quot;&gt;&amp;quot;WASM Games From Scratch&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Game engines are huge behemoths, and contain algorithms
for handling everything and the kitchen sink.
While that&#x27;s normally good, if you want to do something small,
or possibly do something outside the bounds of a normal game engine,
you suddenly have to learn how to do everything yourself.&lt;&#x2F;p&gt;
&lt;p&gt;Or perhaps you just like the &amp;quot;type it and run&amp;quot; style of development
for shadertoy shaders and want something similar
that you can host on your system as (pretty much) a single file.&lt;&#x2F;p&gt;
&lt;p&gt;Either way, this book chronicles my adventures
into creating WASM games from scratch in Rust.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of the topics covered by the book:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Building for WASM, event handling, WebGL, and shader basics.&lt;&#x2F;li&gt;
&lt;li&gt;Map generation using a Fourier series.&lt;&#x2F;li&gt;
&lt;li&gt;Camera positioning and drawing a map, ships, and engine trails.&lt;&#x2F;li&gt;
&lt;li&gt;Ship physics and simple AI.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;thermite-simd-melt-your-cpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;raygon-renderer&#x2F;thermite&quot;&gt;Thermite SIMD&lt;&#x2F;a&gt;: Melt Your CPU&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#thermite-simd-melt-your-cpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Thermite is a WIP SIMD library focused on providing portable SIMD (Single
Instruction, Multiple Data) acceleration of SoA (Structure of Arrays)
algorithms, using consistent-length SIMD vectors for lockstep iteration and
computation. Extensive research and work have gone into minimizing wasted CPU
cycles and making the most out of what your CPU can do.&lt;&#x2F;p&gt;
&lt;p&gt;The goal of Thermite is to provide highly optimized feature-rich backends for
SSE2, SSE4.2, AVX and AVX2, with planned support for AVX512, ARM&#x2F;Aarch64 NEON,
and WASM SIMD extensions. In addition to that, Thermite will include a highly
optimized vectorized math library with many special math functions and
algorithms, specialized for both single and double precision.&lt;&#x2F;p&gt;
&lt;p&gt;Thermite has been worked on for a little over a month now. The AVX2 backend and
vectorized math library are almost fully implemented. Pre-AVX2&#x2F;WASM&#x2F;ARM backends
are a work in progress. The latest documentation is available
&lt;a href=&quot;https:&#x2F;&#x2F;raygon-renderer.github.io&#x2F;thermite&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2021&#x2F;01&#x2F;05&#x2F;this-month-december&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;November went by without the usual monthly update from the Mun team, as they
were unable to make much headway. Instead they posted a slightly different
&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;07&#x2F;this-month-november&quot;&gt;blog&lt;&#x2F;a&gt;, expressing their desire to add a third developer to the
Mun Core Team, whom they are willing to fund themselves - albeit a token
amount.&lt;&#x2F;p&gt;
&lt;p&gt;The team was able to start ramping back up during the holiday; those
&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2021&#x2F;01&#x2F;05&#x2F;this-month-december&quot;&gt;December updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;language support for &lt;code&gt;use&lt;&#x2F;code&gt; statements;&lt;&#x2F;li&gt;
&lt;li&gt;Rust version updates and bugfixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;kira&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kira&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt; is an audio library designed to help create expressive
audio for games. It aims to fill the holes in many game engines&#x27; built-in audio
APIs with features for creating seamless music loops and scripting audio events.&lt;&#x2F;p&gt;
&lt;p&gt;Kira v0.2.0 and v0.3.0 were released recently with quite a few improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Arrangements for stitching together multiple sounds and better seamless looping&lt;&#x2F;li&gt;
&lt;li&gt;Per-sequence custom event types&lt;&#x2F;li&gt;
&lt;li&gt;Groups for controlling multiple instances at a time&lt;&#x2F;li&gt;
&lt;li&gt;Audio streams for sending arbitrary audio data to the mixer&lt;&#x2F;li&gt;
&lt;li&gt;Lots of smaller features and workflow improvements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Kira v0.4.0 is in the works with an API refactor, serde support for config
structs, and WASM support.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;kkf1jz&#x2F;kira_game_audio_library_v030_persequence_custom&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&#x2F;status&#x2F;1342878087990685700&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;polyhedron-ops&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&#x2F;polyhedron-ops&quot;&gt;polyhedron-ops&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#polyhedron-ops&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;polyhedron.jpg&quot; alt=&quot;polyhedron render&quot; &#x2F;&gt;
&lt;em&gt;Some brutalist polyhedron; rendered with 3Delight and post processed in Darktable.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&#x2F;polyhedron-ops&quot;&gt;polyhedron-ops&lt;&#x2F;a&gt; implements the &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Conway_polyhedron_notation&quot;&gt;Conway Polyhedron Operators&lt;&#x2F;a&gt;
and their extensions by George W. Hart and others.&lt;&#x2F;p&gt;
&lt;p&gt;It is based on Kit Wallace’s OpenSCAD code.
As OpenSCAD Language is functional it lends itself well
to translation into functional Rust:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Conway notation: gapcD
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; polyhedron = Polyhedron::dodecahedron()
&lt;&#x2F;span&gt;&lt;span&gt;    .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;chamfer&lt;&#x2F;span&gt;&lt;span&gt;(None, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;propellor&lt;&#x2F;span&gt;&lt;span&gt;(None, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;ambo&lt;&#x2F;span&gt;&lt;span&gt;(None, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;gyro&lt;&#x2F;span&gt;&lt;span&gt;(None, None, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;finalize&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Export as .&#x2F;polyhedron-gapcD.obj
&lt;&#x2F;span&gt;&lt;span&gt;polyhedron.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;write_to_obj&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;Path::new(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The internal representation uses mesh buffers that need furter preprocessing
before they can be sent to a GPU
but are almost fine to send to an offline renderer, as-is.&lt;&#x2F;p&gt;
&lt;p&gt;Optionally enabled features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Converting a polyhedron &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;virtualritz&#x2F;polyhedron-ops&#x2F;blob&#x2F;76a0c4b83&#x2F;examples&#x2F;bevy&#x2F;bevy.rs&quot;&gt;into a bevy Mesh&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Sending a polyhedron to an offline renderer via the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;nsi&quot;&gt;nsi&lt;&#x2F;a&gt; crate.&lt;&#x2F;li&gt;
&lt;li&gt;Writing data out as Wavefront OBJ.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;raw-gl-context&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glowcoil&#x2F;raw-gl-context&quot;&gt;raw-gl-context&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#raw-gl-context&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glowcoil&#x2F;raw-gl-context&quot;&gt;raw-gl-context&lt;&#x2F;a&gt; is a cross-platform library for OpenGL context creation which
had its initial release in December. raw-gl-context works in any situation
where a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;raw-window-handle&quot;&gt;RawWindowHandle&lt;&#x2F;a&gt; is available, so it can be used with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt; and
other windowing libraries that provide one, as well as in more diverse
situations such as audio plugins. Currently supported platforms are Windows,
macOS, and X11.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;spir-q-v0-4-10&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;penguinliong&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; v0.4.10&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spir-q-v0-4-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;penguinliong&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; is a light-weight SPIR-V query library which supports one-pass shader
parsing and reflection. The latest release, version 0.4.10, introduced customized
shader auditing by allowing the users to hook and to inspect the instructions
SPIR-Q has worked on, while with all access to its reflection intermediates.&lt;&#x2F;p&gt;
&lt;p&gt;For more information, please refer to &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;kgv4gh&#x2F;spirq_0410&quot;&gt;the original post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-gpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&quot;&gt;rust-gpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust-gpu-shaders.jpeg&quot; alt=&quot;A collage of various shadertoy.com shaders built with rust-gpu.&quot; &#x2F;&gt;
&lt;em&gt;Various shaders from shadertoy.com ported to Rust and built with rust-gpu.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&quot;&gt;rust-gpu&lt;&#x2F;a&gt; is a new codegen backend by Embark Studios for Rust, aimed at making
Rust a first class language for writing GPU shaders! This past month was the
release of rust-gpu 0.2, including a tonne of new features and capabilities.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the highlights include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shadered.org&#x2F;blog?id=4&quot;&gt;You can build and test your shaders on the web.&lt;&#x2F;a&gt; Thanks to SHADERed.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;pull&#x2F;276&quot;&gt;Support for accessing and sampling textures&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;pull&#x2F;195&quot;&gt;Initial support for compute shaders&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;pull&#x2F;254&quot;&gt;Rust&#x27;s new &lt;code&gt;asm!&lt;&#x2F;code&gt; macro now supports writing SPIR-V&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;Egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui.gif&quot; alt=&quot;Egui emojis&quot; &#x2F;&gt;
&lt;em&gt;Some of the supported emojis in the &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&quot;&gt;online demo&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;Egui&lt;&#x2F;a&gt; is an easy-to-use GUI in pure Rust.
Egui can be integrated into a game engine, or used standalone with the help of &lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;eframe&quot;&gt;eframe&lt;&#x2F;a&gt;.
This month versions 0.5, 0.6 and 0.7 were released with many improvements,
including custom fonts, emojis and improved layout engine (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;full changelog&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
versions 0.5.5 and 0.5.6 were released, with various improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Customizable &lt;code&gt;Mesh&lt;&#x2F;code&gt; colors and winding orders&lt;&#x2F;li&gt;
&lt;li&gt;Enabling&#x2F;disabling the user&#x27;s screen saver&lt;&#x2F;li&gt;
&lt;li&gt;Improved CPU usage on some devices&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For full details and a list of breaking changes, see the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&quot;&gt;ggez&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&quot;&gt;ggez&lt;&#x2F;a&gt; is a lightweight game framework for making 2D games with minimum
friction. Work has continued towards the next stable release,
incorporating last-minute API changes and fixes. The intended plan is
to freeze the API this month and make a release candidate for people to
play with it and try it out, then fix bugs and incorporate feedback into
a 0.6.0 release.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;macroquad-profiling.gif&quot; alt=&quot;macroquad_profiling&quot; &#x2F;&gt;
&lt;em&gt;Macroquad-profiler footage.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; is a cross-platform (Windows&#x2F;Linux&#x2F;macOS&#x2F;Android&#x2F;iOS&#x2F;WASM)
game framework built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.
This month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The source code of the previously announced &lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;macroquad-particles&quot;&gt;particles editor&lt;&#x2F;a&gt;
got &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;particles-editor&quot;&gt;released&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A new &lt;code&gt;telemetry&lt;&#x2F;code&gt; module was introduced exposing
the frame timing data to any third-party visualisation tool.
For in-game profiling data visualisation the &lt;code&gt;macroquad-profiler&lt;&#x2F;code&gt; crate
is available.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;platformer-book&#x2F;profiling.html&quot;&gt;A new book chapter &amp;quot;Profiling&amp;quot; was released&lt;&#x2F;a&gt;
with more information on the subject.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;physics-platformer&lt;&#x2F;code&gt; is a new optional crate based on Maddy Thorson&#x27;s
&lt;a href=&quot;https:&#x2F;&#x2F;maddythorson.medium.com&#x2F;celeste-and-towerfall-physics-d24bd2ae0fc5&quot;&gt;&amp;quot;Celeste and TowerFall Physics&amp;quot; blogpost&lt;&#x2F;a&gt; on platformers physics:
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;platformer.html&quot;&gt;web demo&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;platformer.rs&quot;&gt;source code&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Also, macroquad was featured in the episode
of the &lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-fedor-logachev&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&#x2F;status&#x2F;1336802725007396865&quot;&gt;&lt;img src=&quot;rusty-editor.jpg&quot; alt=&quot;rusty-editor screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;A level made in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;rusty-editor&lt;&#x2F;a&gt; which is a native scene editor
for the rg3d game engine.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; is a game engine that aims to be easy to use and provide large set
of out-of-box features. Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&#x2F;status&#x2F;1340755066068889603&quot;&gt;dark UI theme&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Added verbosity levels for logger.&lt;&#x2F;li&gt;
&lt;li&gt;Improved lightmap quality.&lt;&#x2F;li&gt;
&lt;li&gt;Added proper syncing between physics and scene graph.&lt;&#x2F;li&gt;
&lt;li&gt;Improved examples.&lt;&#x2F;li&gt;
&lt;li&gt;Added cylinder emitter for particle systems.&lt;&#x2F;li&gt;
&lt;li&gt;Improved lots of UI widgets and added VectorImage widget.&lt;&#x2F;li&gt;
&lt;li&gt;rg3d-sound is now able to manage multiple contexts.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;hrtf&quot;&gt;hrtf&lt;&#x2F;a&gt; crate now has 2 times better performance.&lt;&#x2F;li&gt;
&lt;li&gt;Added support for 64-bit FBX format (version 7500+).&lt;&#x2F;li&gt;
&lt;li&gt;rusty-editor now has &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&#x2F;status&#x2F;1343288956704743425&quot;&gt;navigation meshes&lt;&#x2F;a&gt; and
particle systems editor.&lt;&#x2F;li&gt;
&lt;li&gt;Lots of other small fixes and improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;rg3d&#x27;s Discord channel&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryNStepanov&quot;&gt;Dmitry Stepanov on Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;starframe&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&quot;&gt;starframe&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#starframe&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;starframe.gif&quot; alt=&quot;Current state of starframe graphics and physics&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&quot;&gt;starframe&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&quot;&gt;@molentum&lt;&#x2F;a&gt; is a work-in-progress game engine
for physics-y sidescrolling 2D games. This month, a new, more versatile
constraint solver was used to add friction and basic joints. Collision
detection accuracy and overall stability were also improved.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&#x2F;status&#x2F;1338066680724008960&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dotrix&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&quot;&gt;Dotrix&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dotrix&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;KXOr_KxMNWM&quot;&gt;&lt;img src=&quot;dotrix-in-december.gif&quot; alt=&quot;Dotrix in December&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Last month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&quot;&gt;Dotrix&lt;&#x2F;a&gt; got a major feature boost that made the engine ready for
3D games development. To demonstrate the features, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&#x2F;blob&#x2F;main&#x2F;examples&#x2F;demo&#x2F;demo.rs&quot;&gt;demo example&lt;&#x2F;a&gt;
was turned into an all-in-one proof-of-concept application.
You can see the full version on &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;KXOr_KxMNWM&quot;&gt;YouTube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In less than 300 lines of Rust code (including comments) you can get a game
prototype with an animated character, that you can control using your keyboard
and mouse, run it across some flat terrain, surrounded by a skybox with a
light source.&lt;&#x2F;p&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;DrzwBysNRd&quot;&gt;Löwenware&#x27;s Discord channel&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;lowenware&quot;&gt;@lowenware on Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-engine-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-4&quot;&gt;Bevy Engine v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-engine-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;&lt;img src=&quot;bevy_logo.png&quot; alt=&quot;bevy logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; is a refreshingly simple data-driven game engine built in Rust.
It is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;free and open source&lt;&#x2F;a&gt; forever!&lt;&#x2F;p&gt;
&lt;p&gt;This month, thanks to 66 contributors, 178 pull requests, and their
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;cart&quot;&gt;generous sponsors&lt;&#x2F;a&gt;, Bevy 0.4 was released. You can view the
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-4&quot;&gt;full Bevy 0.4 announcement here&lt;&#x2F;a&gt;. Here are some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A WebGL2 render backend.&lt;&#x2F;li&gt;
&lt;li&gt;Cross platform main function: &lt;code&gt;#[bevy_main]&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Live shader reloading.&lt;&#x2F;li&gt;
&lt;li&gt;Schedule v2 with custom stages, run criteria, fixed timestep,
and typed stage builders.&lt;&#x2F;li&gt;
&lt;li&gt;States that allow you to enable&#x2F;disable systems
according to the state your app is in.&lt;&#x2F;li&gt;
&lt;li&gt;Scenes can now be spawned as children.&lt;&#x2F;li&gt;
&lt;li&gt;Dynamic linking that significantly cuts compile times.&lt;&#x2F;li&gt;
&lt;li&gt;A new general-purpose Rust reflection API.&lt;&#x2F;li&gt;
&lt;li&gt;3D texture assets.&lt;&#x2F;li&gt;
&lt;li&gt;HIDPI fixes.&lt;&#x2F;li&gt;
&lt;li&gt;GLTF, timer, text layout, task system, logging &amp;amp; profiling improvements.&lt;&#x2F;li&gt;
&lt;li&gt;ECS improvements: flexible system parameters, improved query filter API,
and system inputs&#x2F;outputs&#x2F;chaining.&lt;&#x2F;li&gt;
&lt;li&gt;Apple Silicon support!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;kge7zy&#x2F;bevy_04&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25480321&quot;&gt;hacker news&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1340376850560905218&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Community plugin updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrk-its&#x2F;bevy_webgl2&quot;&gt;bevy_webgl2&lt;&#x2F;a&gt;:
WebGL2 renderer plugin for WASM target.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;bevy_rapier&quot;&gt;bevy_rapier&lt;&#x2F;a&gt;:
Rapier Physics&#x27; official Bevy plugin was updated to support Bevy 0.4.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&#x2F;bevy_megaui&quot;&gt;bevy_megaui&lt;&#x2F;a&gt;: A plugin for
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;megaui&quot;&gt;megaui&lt;&#x2F;a&gt; integration into Bevy.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_prototype_inline_assets&quot;&gt;bevy_prototype_inline_assets&lt;&#x2F;a&gt;:
A simple plugin for bundling assets into your binary.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;bevy_doryen&quot;&gt;bevy_doryen&lt;&#x2F;a&gt;: A plugin integrating Bevy
ECS with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;doryen-rs&quot;&gt;doryen-rs&lt;&#x2F;a&gt; Ascii
roguelike library.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_discovery&quot;&gt;bevy_discovery&lt;&#x2F;a&gt;: Automatically detects
and registers systems for you.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;btrepp&#x2F;bevy-prototype-parallax&quot;&gt;bevy_prototype_parallax&lt;&#x2F;a&gt;:
A parallax scrolling background plugin.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;kurinji&quot;&gt;Kurinji&lt;&#x2F;a&gt;: Input Map for bevy. Converts user
input from different input hardware into game specific actions, eg. keyboard
&amp;quot;Space&amp;quot; or joystick &amp;quot;A&amp;quot; can be mapped to &amp;quot;Jump&amp;quot; Action.  This allows decoupling
of the game code from device specific input api.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&#x2F;bevy-earcutr&quot;&gt;bevy-earcutr&lt;&#x2F;a&gt;: Draw polygons.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nilclass&#x2F;bevy_stl&quot;&gt;bevy_stl&lt;&#x2F;a&gt;: STL mesh asset loader plugin.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Community tutorial updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;caballerocoll.com&#x2F;blog&#x2F;bevy-chess-tutorial&quot;&gt;Making Chess Clone in 3D&lt;&#x2F;a&gt;:
Walkthrough on how to make a Chess Clone with 3D pieces.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sburris.xyz&#x2F;posts&#x2F;bevy-update-0-4&#x2F;&quot;&gt;0.3 to 0.4 Migration Guide&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine-cn.github.io&#x2F;&quot;&gt;Bevy Chinese Website(Bevy中文网)&lt;&#x2F;a&gt;: Translate
official website and The Bevy Book in Chinese.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Community game updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrk-its&#x2F;bevy-robbo&quot;&gt;Robbo&lt;&#x2F;a&gt;:
Bevy port of great 8-bit Atari game, working native and in the browser.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dmitriy-shmilo&#x2F;sio2&quot;&gt;SiO2&lt;&#x2F;a&gt;: A simple powder toy clone.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mtKeller&#x2F;snake_bevy&quot;&gt;snake_bevy&lt;&#x2F;a&gt;: It&#x27;s Snake!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DJMcNab&#x2F;life-rs&quot;&gt;DJMcNab&#x2F;life-rs&lt;&#x2F;a&gt;: Bevy reproduction of the
rules of &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Conway%27s_Game_of_Life&quot;&gt;Conway&#x27;s Game of Life&lt;&#x2F;a&gt;
on a randomised board. Alternative implementation: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Byteron&#x2F;life-rs&quot;&gt;Byteron&#x2F;life-rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join Bevy&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;gMUk5Ph&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;bevy&quot;&gt;&#x2F;r&#x2F;bevy subreddit&lt;&#x2F;a&gt;,
and follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;BevyEngine&quot;&gt;@BevyEngine on Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rpt-rust-path-tracer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ekzhang&#x2F;rpt&quot;&gt;rpt&lt;&#x2F;a&gt;: Rust Path Tracer&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rpt-rust-path-tracer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rpt-collage.jpg&quot; alt=&quot;demo renders&quot; &#x2F;&gt;
&lt;em&gt;Sample images rendered by path tracing.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ekzhang&#x2F;rpt&quot;&gt;rpt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;www.ekzhang.com&#x2F;&quot;&gt;@ekzhang&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;scanhex&quot;&gt;@scanhex&lt;&#x2F;a&gt; is a physically based, CPU-only rendering
engine written in Rust. It uses path tracing to generate realistic images of 3D
scenes.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s a lot of features, including kd-tree mesh acceleration, physical
material properties (microfacet BSDF with multiple importance sampling), HDRI
environment maps, OBJ&#x2F;MTL&#x2F;STL files, depth of field, and particle physics
simulation.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also parallelized with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rayon-rs&#x2F;rayon&quot;&gt;rayon&lt;&#x2F;a&gt; and available as a library on &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;&quot;&gt;crates.io&lt;&#x2F;a&gt;.
The entire source code, including code for the above examples and more, is very
short (~3K SLOC). Future directions include extending the renderer with
bidirectional path tracing and other features.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;k81wwi&#x2F;rpt_v01&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;textyle&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stefandevai&#x2F;textyle&quot;&gt;Textyle&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#textyle&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;textyle.png&quot; alt=&quot;Screenshot with a simple settlement map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stefandevai&#x2F;textyle&quot;&gt;Textyle&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stefandevai&quot;&gt;Stefan Devai&lt;&#x2F;a&gt; is a simple web-based tilemap editor
for 2D games built using React JS and Rust (WASM).&lt;&#x2F;p&gt;
&lt;p&gt;You can try it out now &lt;a href=&quot;https:&#x2F;&#x2F;textyle.app&#x2F;edit&quot;&gt;in the browser&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Textyle aims to simplify and speed up the process of making tilemaps for your
games. Running on the web means that you don&#x27;t have to download any additional
tools for creating your maps, and exporting it to an easy format means that you
don&#x27;t have to add additional libraries or plugins to your game.&lt;&#x2F;p&gt;
&lt;p&gt;React JS was used for the UI, WebGL for the rendering and Rust compiled to WASM
for the tilemap logic and algorithms. Right now most of the code is JavaScript,
however, most of the features in the roadmap will take advantage of Rust and
WASM. The project is in its initial stages of development, expect great
improvements to come!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;khl8jq&#x2F;textyle&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-graphics-playground&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;playground.meteorlinker.com&quot;&gt;Rust Graphics Playground&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-graphics-playground&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;playground.meteorlinker.com&quot;&gt;&lt;img src=&quot;rust-graphics-playground.gif&quot; alt=&quot;Rust Graphics Playground Demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;playground.meteorlinker.com&quot;&gt;Rust Graphics Playground&lt;&#x2F;a&gt; is a small tool that
allows you to create and share miniature graphics demos in Rust that will run
in the browser. Here are a few examples of what you can make:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;playground.meteorlinker.com&#x2F;?share=1&quot;&gt;3D Spinning Triangle&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;playground.meteorlinker.com&#x2F;?share=864&quot;&gt;3D Spinning Cube&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;playground.meteorlinker.com&#x2F;?share=682&quot;&gt;Serpinski Triangle&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;playground.meteorlinker.com&#x2F;?share=1054&quot;&gt;Serpinski Carpet&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;DixieDev&#x2F;rust-graphics-playground&quot;&gt;source code&lt;&#x2F;a&gt; is available online.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;kk6i38&#x2F;write_mini_graphics_demos_in_rust_in_the_browser&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;406&quot;&gt;#406 &amp;quot;Separate category for engines vs libraries&#x2F;tools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;18&quot;&gt;#18 &amp;quot;Set up a gamedev usergroup on users.rust-lang.org&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;23&quot;&gt;#23 &amp;quot;A pure rust SPIRV generator&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;94&quot;&gt;#94 &amp;quot;raw-window-handle maintenance&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;97&quot;&gt;#97 &amp;quot;WG brand update proposal&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;98&quot;&gt;#98 &amp;quot;Monthly Rust Gamedev Meetup&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;99&quot;&gt;#99 &amp;quot;Official Rust Gamedev Discord&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues&#x2F;1777&quot;&gt;winit is seeking new maintainers&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;kxd8kt&#x2F;this_month_in_rust_gamedev_17&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1349805081378611205&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #16 - November 2020</title>
            <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/016/</link>
            <guid>https://gamedev.rs/news/016/</guid>
            <description>&lt;p&gt;Welcome to the 16th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;016&#x2F;#rust-gamedev-podcast-3&quot;&gt;Rust GameDev Podcast #3&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;016&#x2F;#last-call-for-rust-gamedev-survey&quot;&gt;Last Call for Rust GameDev Survey&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;016&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;016&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;016&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;016&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;016&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-podcast-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-chris-parsons&quot;&gt;Rust GameDev Podcast #3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-podcast-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;podcast.jpeg&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-chris-parsons&quot;&gt;The third episode&lt;&#x2F;a&gt; is an interview with &lt;a href=&quot;https:&#x2F;&#x2F;chrismdp.com&quot;&gt;Chris Parsons&lt;&#x2F;a&gt; about
procedural history generation, custom game engines, the business
of indie games development and lessons learned from shipping his first title,
&lt;a href=&quot;http:&#x2F;&#x2F;soltrader.net&quot;&gt;Sol Trader&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Listen and Subscribe from the following platforms:
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust GameDev Podcast (simplecast)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.apple.com&#x2F;gb&#x2F;podcast&#x2F;rust-game-dev&#x2F;id1526304768&quot;&gt;Apple Podcasts&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;show&#x2F;7HRfGnTcXkLkQd9fxJbDGj&quot;&gt;Spotify&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feeds.simplecast.com&#x2F;C6NQglnL&quot;&gt;RSS Feed&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.google.com&#x2F;feed&#x2F;aHR0cHM6Ly9mZWVkcy5zaW1wbGVjYXN0LmNvbS9DNk5RZ2xuTA&quot;&gt;Google Podcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;last-call-for-rust-gamedev-survey&quot;&gt;Last Call for &lt;a href=&quot;https:&#x2F;&#x2F;surveymonkey.com&#x2F;r&#x2F;F2JYRFF&quot;&gt;Rust GameDev Survey&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#last-call-for-rust-gamedev-survey&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Our annual &lt;a href=&quot;https:&#x2F;&#x2F;surveymonkey.com&#x2F;r&#x2F;F2JYRFF&quot;&gt;Rust Game Development Ecosystem Survey&lt;&#x2F;a&gt; will be closed
at the end of this week, 11. December 2020.
It&#x27;ll only take 10 minutes, and your responses help us
better understand the state of our ecosystem and where we
should try to focus our collective efforts.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.png&quot; alt=&quot;15 minute tool&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a traffic simulation game exploring how small changes
to roads affect cyclists, transit users, pedestrians, and drivers. Any city
with OpenStreetMap coverage can be used!&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new tool to explore 15-minute neighborhoods was started.&lt;&#x2F;li&gt;
&lt;li&gt;Simpler process for &lt;a href=&quot;https:&#x2F;&#x2F;dabreegster.github.io&#x2F;abstreet&#x2F;howto&#x2F;new_city.html&quot;&gt;importing new cities&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Large internal refactoring for the GUI and initializing the simulation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren_fly.jpg&quot; alt=&quot;Landscape&quot; &#x2F;&gt;
&lt;em&gt;Endless mountains to explore&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In November, Veloren released 0.8! This is the largest version yet, with over
50k lines of code added. GamingOnLinux wrote &lt;a href=&quot;https:&#x2F;&#x2F;www.gamingonlinux.com&#x2F;2020&#x2F;11&#x2F;inspired-by-the-likes-of-cube-world-open-source-rpg-veloren-has-the-biggest-update-yet&quot;&gt;an
article&lt;&#x2F;a&gt; about the release. You can see the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;-&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#080-2020-11-28&quot;&gt;full
changelog here&lt;&#x2F;a&gt;. Veloren also spoke at MiniDebConf #2,
you can watch &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=76FPpOnshNw&quot;&gt;the recording here&lt;&#x2F;a&gt;. In November, many
improvements were made to the UI, with map and buff updates. During the 0.8 code
freeze, many networking and combat bugs were fixed. The Veloren 0.8 release
party took place on the 28th and saw a peak of 112 players online, doubling the
previous record.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TMYfrdiEJw4&quot;&gt;&lt;img src=&quot;veloren-gameplay-video.gif&quot; alt=&quot;Youtube preview img&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;0.8 gameplay video&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about specific topics from November:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-92#first-time-contributing-by-ubruntu&quot;&gt;First Time Contributing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-92#community-spotlight-kalculate&quot;&gt;Community Spotlight&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-93#performance-analysis-with-xmac94x&quot;&gt;Performance Analysis&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-94#0-8-release-schedule&quot;&gt;0.8 Release Schedule&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-94#veloren-screenshot-trailer-competition&quot;&gt;Veloren Trailer Competition&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-94#chest-of-goodies-by-zesterer&quot;&gt;Chest of Goodies&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-94#iced-transition-by-imbris&quot;&gt;Iced Transition&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-95#particle-improvements-by-timo&quot;&gt;Particle Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-95#animal-attacks-and-ai-by-slipped-and-james&quot;&gt;Animal Attacks and AI&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-96#veloren-0-8-launch&quot;&gt;Veloren 0.8 Launch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-96#what-people-are-saying-about-the-launch&quot;&gt;What People Are Saying About The Launch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-96#idea-drop-by-u-o11c&quot;&gt;Idea Drop&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;November&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-92&#x2F;&quot;&gt;#92&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-93&#x2F;&quot;&gt;#93&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-94&#x2F;&quot;&gt;#94&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-95&#x2F;&quot;&gt;#95&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-96&#x2F;&quot;&gt;#96&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In December, work will begin on 0.9. There are some discussions about larger
refactors in the codebase. Many new developers have joined and are getting up to
speed on contributing. Veloren will also reach its 100th blog post!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;veloren_adventure.jpg&quot; alt=&quot;Healing sceptre&quot; &#x2F;&gt;
&lt;em&gt;The start of an adventure&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fbsim&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IanTayler&#x2F;fbsim&quot;&gt;FBSim&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fbsim&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fbsim.png&quot; alt=&quot;FBSim initial version&quot; &#x2F;&gt;
&lt;em&gt;FBSim running with default agents.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IanTayler&#x2F;fbsim&quot;&gt;FBSim&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;iantayler.com&quot;&gt;Ian Tayler&lt;&#x2F;a&gt; is a football&#x2F;soccer game where you program the
players using Rust and try to beat a team controlled by another AI.&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the &lt;a href=&quot;https:&#x2F;&#x2F;iantayler.com&#x2F;2020&#x2F;11&#x2F;22&#x2F;fbsim-football-playing-ai-agents-in-rust&#x2F;&quot;&gt;tutorial&lt;&#x2F;a&gt; for implementing your own simple AI for FBSim,
or you can look at the code directly, which can be found on the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IanTayler&#x2F;fbsim&quot;&gt;github repo&lt;&#x2F;a&gt;. FBSim is at an early stage of development so issues and
comments are welcome!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;jz4x1f&#x2F;fbsim&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum-online&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;antorum&quot;&gt;Antorum Online&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum-online&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum-online-11-25-2020.gif&quot; alt=&quot;Two players fishing at the beach&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;antorum&quot;&gt;Antorum Online&lt;&#x2F;a&gt; is a micro-multiplayer online role-playing game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt;.
The game server is written in Rust, and the official client is being developed in
Unity.&lt;&#x2F;p&gt;
&lt;p&gt;Many important changes and new features were implemented this month. Players can
now harvest plants and go fishing! There were also some tweaks to the world
engine to support named zones on the map.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;23&quot;&gt;23: Herbology&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;24&quot;&gt;24: Fishing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;25&quot;&gt;25: Zones&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;akigi_butcher.jpg&quot; alt=&quot;Akiki butcher&quot; &#x2F;&gt;
&lt;em&gt;Akigi butcher skill&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a WIP online multiplayer game.&lt;&#x2F;p&gt;
&lt;p&gt;In November, focus was put on gameplay. Prototyping of a butcher skill was done,
which will allow for animals to be turned into raw resources. Support for
rendering shadows in the MetalRenderer was added, bringing it one step closer to
the WebGlRenderer. Lots of work was put into the ability to fire a bow. This
spanned a few weeks, however enough functionality was added for it to feel like a
solid part of gameplay. It still requires some polish, however, which will be
the focus of the beginning of December.&lt;&#x2F;p&gt;
&lt;p&gt;Full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;november-2020&#x2F;091-2020-11-01.html&quot;&gt;#091&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;november-2020&#x2F;092-2020-11-08.html&quot;&gt;#092&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;november-2020&#x2F;093-2020-11-15.html&quot;&gt;#093&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;november-2020&#x2F;094-2020-11-22.html&quot;&gt;#094&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;november-2020&#x2F;095-2020-11-29.html&quot;&gt;#095&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rymd&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;profan.itch.io&#x2F;rymd&quot;&gt;rymd&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rymd&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rymd_2020_12_02.gif&quot; alt=&quot;rymd animated combat v2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;profan.itch.io&#x2F;rymd&quot;&gt;rymd&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_profan&quot;&gt;@_profan&lt;&#x2F;a&gt; is a space shooter prototype made with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Intended as a test platform for trying out rust for prototyping games and
particularly for game AI programming purposes.&lt;&#x2F;p&gt;
&lt;p&gt;Recent updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Dynamic ship debris based on slicing source sprites into chunks.&lt;&#x2F;li&gt;
&lt;li&gt;New hostile ship type, (ranger), which fires seeking missiles.&lt;&#x2F;li&gt;
&lt;li&gt;New support ship type, (tech), which repairs friendly ships.&lt;&#x2F;li&gt;
&lt;li&gt;Toggleable hitbox visualization.&lt;&#x2F;li&gt;
&lt;li&gt;Still far too many particles.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shotcaller&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;Shotcaller&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shotcaller&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;shotcaller-2guis.png&quot; alt=&quot;Shotcaller dual frontend&quot; &#x2F;&gt;
&lt;em&gt;ASCII and sprites versions of Shotcaller interface.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;Shotcaller&lt;&#x2F;a&gt; is a moddable RTS&#x2F;MOBA game made with bracket-lib and specs.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;releases&#x2F;tag&#x2F;0.3.1&quot;&gt;v0.3.1&lt;&#x2F;a&gt; version was released.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Kenney&#x27;s micro-roguelike tileset was added.&lt;&#x2F;li&gt;
&lt;li&gt;Leaders now have an item inventory.&lt;&#x2F;li&gt;
&lt;li&gt;A handling system of stats effectors for items.&lt;&#x2F;li&gt;
&lt;li&gt;New tutorials about creating leaders and items.&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;shotcaller.jojolepro.com&#x2F;&quot;&gt;fully functional web version&lt;&#x2F;a&gt;, including tileset.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Contributions welcome: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&#x2F;issues&#x2F;6&quot;&gt;try add a new Leader&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;space-shooter&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#space-shooter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;space_shooter_12-03-2020.gif&quot; alt=&quot;space_shooter_rs gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt; project is a game in development by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo Supina&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;Micah Tigley&lt;&#x2F;a&gt;. It is a 2D &amp;quot;shoot-em-up&amp;quot; game that takes place in space and is
inspired by games like &lt;a href=&quot;https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;Raiden_(video_game)&quot;&gt;Raiden&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;The_Binding_of_Isaac_(video_game)&quot;&gt;Binding of Isaac&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Exciting new additions have been made in November!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Micah added a &lt;a href=&quot;https:&#x2F;&#x2F;snipboard.io&#x2F;ql60oz.jpg&quot;&gt;&amp;quot;paused&amp;quot; text overlay&lt;&#x2F;a&gt; to provide a visual indication for when
the game is paused.&lt;&#x2F;li&gt;
&lt;li&gt;Carlo added a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1331680041453953025&quot;&gt;new armor system&lt;&#x2F;a&gt; that gives a chance for destroyed enemies to
drop armor consumables that can block a single hit from any damage source.&lt;&#x2F;li&gt;
&lt;li&gt;Work on a new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;pull&#x2F;93&quot;&gt;Missile Launcher enemy&lt;&#x2F;a&gt; has begun!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;game-off-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;game-off-2020&quot;&gt;Game Off 2020&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-off-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gh-gameoff.png&quot; alt=&quot;game off logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;game-off-2020&quot;&gt;Game Off&lt;&#x2F;a&gt; is an annual game jam, where participants spend the month
of November creating games based on a secret theme.&lt;&#x2F;p&gt;
&lt;p&gt;Game Off 2020 theme was &amp;quot;MOONSHOT&amp;quot;.
Here are some of the games made with Rust:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vleue.itch.io&#x2F;wotm&quot;&gt;&amp;quot;War of the Moons&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;FrancoisMockers&quot;&gt;@FrancoisMockers&lt;&#x2F;a&gt;
made with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mockersf&#x2F;wotm&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your goal is to conquer the planet, but it&#x27;s not possible until you
control all the moons. The end result is not completely what I wanted,
but it was a nice occasion to try &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;rapier&lt;&#x2F;a&gt; for physics and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;lyon&lt;&#x2F;a&gt; to draw
shapes from &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;go-wotm.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;grzi.itch.io&#x2F;starlight-1961&quot;&gt;&amp;quot;Starlight 1961&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyThulliez&quot;&gt;@grzi&lt;&#x2F;a&gt;
made with &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;amethyst&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grzi&#x2F;starlight-1961&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A die and retry landing game where you control a spaceship, its fuel and health
inside 10 different levels. Each level is made up of enemies (cannons,
plasma doors, saw blades, etc.), bonuses (fuel, health) and coins.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyThulliez&quot;&gt;@grzi&lt;&#x2F;a&gt; also published a devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;www.wootlab.io&#x2F;blog&#x2F;my-journey-into-github-gameoff-2020&quot;&gt;&amp;quot;My journey into Github GameOff 2020&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;starlight-1961.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;snoozetime.itch.io&#x2F;everfight-gameoff2020&quot;&gt;&amp;quot;Everfight&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SnoozeTime&quot;&gt;@SnoozeTime&lt;&#x2F;a&gt;
made with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SnoozeTime&#x2F;spacegame&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Battle hordes of human spaceships in order to reach the moon.
Wave after wave, the enemy becomes stronger.
Unlock infinite mode once you finished the game and try to beat
your personal record.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;everfight.jpg&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hands-on-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&#x2F;&quot;&gt;Hands-on Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hands-on-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&#x2F;&quot;&gt;&lt;img src=&quot;hands-on-rust.jpg&quot; alt=&quot;Hands-On Rust&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pragprog.com&#x2F;titles&#x2F;hwrust&#x2F;hands-on-rust&#x2F;&quot;&gt;&amp;quot;Hands-on Rust: Effective Learning through 2D Game Development and Play&amp;quot;&lt;&#x2F;a&gt;
by Herbert Wolverson is now in beta. The book teaches Rust through game development
examples, and is targeted at readers who have some experience with writing code
in other languages. It teaches beginner to intermediate-level Rust. It also teaches
high-level gamedev concepts, notably Entity-Component System (ECS) theory.&lt;&#x2F;p&gt;
&lt;p&gt;After walking you through installing Rust, a few simple examples teach the language
basics. Then you put these together to make &amp;quot;Flappy Dragon&amp;quot; - a simple Flappy Bird
clone. The book then changes gear and begins to build a dungeon crawler (roguelike)
with tile graphics. The first beta walks you through the basics, &amp;quot;Flappy Dragon&amp;quot;
and making an ECS-based dungeon crawler skeleton - focused on teaching basic Rust,
ECS composition and control flow. Beta 2 added health, a heads-up display, combat
and win&#x2F;lose conditions - focused on making the user comfortable with Rust&#x27;s
amazing iterator system. Beta 3 will add fields-of-view, more dungeon designs and
map theming - focused on teaching trait use and creation.&lt;&#x2F;p&gt;
&lt;p&gt;Beta 1 launched November 11th, Beta 2 launched November 25th. The next beta is
expected December 8th.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-rust-is-the-future-of-gamedev&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thefuntastic.com&#x2F;blog&#x2F;why-rust-is-the-future-game-dev&quot;&gt;Why Rust is the Future of GameDev&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#why-rust-is-the-future-of-gamedev&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thefuntastic.com&quot;&gt;@thefuntastic&lt;&#x2F;a&gt; published an article detailing why Rust has the potential
to be significant for the future of programming in games:
the origins of the language, overview of the main technical features,
why Rust&#x27;s popularity grows, the state of the ecosystem,
main challenges lying ahead, and links
to some Rust gamedev resources and communities.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jqux1s&#x2F;why_rust_is_the_future_of_game_development&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25037147&quot;&gt;hacker news&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-to-build-a-multiplayer-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Yb-QR3Vm3sk&quot;&gt;How to Build a Multiplayer Game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-build-a-multiplayer-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Yb-QR3Vm3sk&quot;&gt;&lt;img src=&quot;talk-multiplayer-game.jpg&quot; alt=&quot;A screenshot from the talk&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;You can &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Yb-QR3Vm3sk&quot;&gt;watch the recording here&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; gave a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Yb-QR3Vm3sk&quot;&gt;talk&lt;&#x2F;a&gt; about
how to build a multiplayer game with actix-web that people with
any modern browser shipping JavaScript, Canvas Context2D and Websocket can play.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;How coding a system with so many independently moving parts is less about
the bits and bytes but more about the high-level capabilities rust offers.
In this talk Stefan Schindler @dns2utf8 focused on how he designed
the whole system from concept to implementation including
hosting it on a CO2 neutral server.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can play the MultiPlayer Snake game itself on &lt;a href=&quot;https:&#x2F;&#x2F;mps.estada.ch&quot;&gt;mps.estada.ch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, a &lt;a href=&quot;https:&#x2F;&#x2F;estada.ch&#x2F;2020&#x2F;11&#x2F;2&#x2F;how-to-build-a-multiplayer-game-rustfest-global-2020-pre-event&quot;&gt;follow-up text note&lt;&#x2F;a&gt; was released.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ecs-scheduler-thoughts-part-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratysz.github.io&#x2F;article&#x2F;scheduling-1&#x2F;&quot;&gt;ECS scheduler thoughts, part 1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecs-scheduler-thoughts-part-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ratysz&quot;&gt;@Ratys&lt;&#x2F;a&gt; wrote an article about system schedulers in &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Entity_component_system&quot;&gt;ECS&lt;&#x2F;a&gt;. It contains
an overview of the scheduling problem itself, covers the constraints a solution
to it should consider, and dissects schedulers of &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; engine and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;yaks&quot;&gt;&lt;code&gt;yaks&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; as
examples.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chess-game-in-rust-using-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;caballerocoll.com&#x2F;blog&#x2F;bevy-chess-tutorial&#x2F;&quot;&gt;Chess game in Rust using Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#chess-game-in-rust-using-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_chess.gif&quot; alt=&quot;Tutorial result&quot; &#x2F;&gt;
&lt;em&gt;Chess gameplay&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;guimcaballero&quot;&gt;@guimcaballero&lt;&#x2F;a&gt; published a tutorial on using Bevy 0.3 to make a Chess clone in
3d. Most of the concepts are explained along the way, from how to load meshes to
how to select pieces and board squares, using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aevyrie&#x2F;bevy_mod_picking&#x2F;&quot;&gt;bevy_mod_picking&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;learn-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&quot;&gt;Learn Wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learn-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Development of new tutorial content has slowed down due to wgpu still being in
development. &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;sotrh&quot;&gt;@sotrh&lt;&#x2F;a&gt; has committed to continue maintaining the project through
the coming version changes, and plans to add more new content when the API
solidifies. He with the help of other contributors such as GitHub user
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kanerogers&quot;&gt;@kanerogers&lt;&#x2F;a&gt; worked through a series of issues to polish the repository before
the content freeze.
In addition to that he added a &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;showcase&#x2F;compute&quot;&gt;compute pipeline showcase&lt;&#x2F;a&gt;
and an &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;showcase&#x2F;imgui-demo&quot;&gt;imgui showcase&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In other news @sotrh has started a &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;sotrh&quot;&gt;Patreon&lt;&#x2F;a&gt; to help fund research
and development on the Learn Wgpu site as well as other wgpu related projects.&lt;&#x2F;p&gt;
&lt;p&gt;You can learn more &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;news&quot;&gt;on the Learn Wgpu news page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;cargo-mobile&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.brainiumstudios.com&#x2F;2020&#x2F;11&#x2F;24&#x2F;cargo-mobile.html&quot;&gt;cargo-mobile&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cargo-mobile&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.brainiumstudios.com&#x2F;2020&#x2F;11&#x2F;24&#x2F;cargo-mobile.html&quot;&gt;&lt;img src=&quot;cargo-mobile.jpg&quot; alt=&quot;Bevy&#x27;s Breakout example running on an iPhone XR&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Bevy&#x27;s Breakout example running on an iPhone XR&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.brainiumstudios.com&#x2F;2020&#x2F;11&#x2F;24&#x2F;cargo-mobile.html&quot;&gt;cargo-mobile&lt;&#x2F;a&gt; is a tool created by &lt;a href=&quot;http:&#x2F;&#x2F;www.brainiumstudios.com&#x2F;site&#x2F;index.html&quot;&gt;Brainium Studios&lt;&#x2F;a&gt; to simplify Rust mobile
development. It generates Xcode and Android Studio projects, and provides handy
commands for building and deploying apps to iOS and Android devices.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;profiling&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;profiling&quot;&gt;profiling&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#profiling&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;profiling&quot;&gt;profiling&lt;&#x2F;a&gt; was released on crates.io. This crate provides a very
thin abstraction over instrumented profiling crates like &lt;code&gt;puffin&lt;&#x2F;code&gt;, &lt;code&gt;optick&lt;&#x2F;code&gt;,
&lt;code&gt;tracy&lt;&#x2F;code&gt;, and &lt;code&gt;superluminal-perf&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Mark up your code like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;profiling&lt;&#x2F;span&gt;&lt;span&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;some_function&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;burn_time&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt; i in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5 &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        profiling::scope!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Looped Operation&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;burn_time&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And get visualizations like this (&lt;code&gt;optick&lt;&#x2F;code&gt; and &lt;code&gt;puffin&lt;&#x2F;code&gt; shown):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;optick.jpeg&quot;&gt;&lt;img src=&quot;optick-small.png&quot; alt=&quot;Screenshot of Optick Profiler&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rkyv&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rkyv&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;rkyv&quot;&gt;rkyv&lt;&#x2F;a&gt; is a zero-copy deserialization framework for Rust. It&#x27;s similar to
FlatBuffers and Cap&#x27;n Proto and can be used for data storage and messaging.&lt;&#x2F;p&gt;
&lt;p&gt;It has a handful of features that make it stand out:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;No schema restrictions.&lt;&#x2F;li&gt;
&lt;li&gt;HashMap support out of the box.&lt;&#x2F;li&gt;
&lt;li&gt;Trait object support through the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;rkyv_dyn&quot;&gt;&lt;code&gt;rkyv_dyn&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; crate.&lt;&#x2F;li&gt;
&lt;li&gt;Validation through the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djkoloski&#x2F;bytecheck&quot;&gt;&lt;code&gt;bytecheck&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; crate, suitable for untrusted and
potentially malicious data.&lt;&#x2F;li&gt;
&lt;li&gt;Safe mutable archives with pinning.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Reddit user &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jx32e8&#x2F;rkyv_02_and_bytecheck_validation_mutable_archives&#x2F;gcyfoqc&quot;&gt;vlmutolo&lt;&#x2F;a&gt; also made a &lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;%7Evlmutolo&#x2F;rkyv-bench&#x2F;tree&#x2F;master&#x2F;src&#x2F;main.rs&quot;&gt;toy benchmark&lt;&#x2F;a&gt; comparing rkyv against serde
and bincode and found that rkyv had promising initial numbers:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;serialize (bincode):    89 ns&#x2F;iter
&lt;&#x2F;span&gt;&lt;span&gt;serialize (rkyv):       86 ns&#x2F;iter
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;deserialize (bincode):  118 ns&#x2F;iter
&lt;&#x2F;span&gt;&lt;span&gt;deserialize (rkyv):     16 ns&#x2F;iter
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A write-up on the &lt;a href=&quot;https:&#x2F;&#x2F;davidkoloski.me&#x2F;blog&#x2F;rkyv-architecture&#x2F;&quot;&gt;architecture and internals of rkyv&lt;&#x2F;a&gt; is also available.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jss6h4&#x2F;rkyv&quot;&gt;&#x2F;r&#x2F;rust (v0.1)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jx32e8&#x2F;rkyv_02&quot;&gt;&#x2F;r&#x2F;rust (v0.2)&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;assets-manager-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&quot;&gt;assets_manager&lt;&#x2F;a&gt; v0.4&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#assets-manager-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&quot;&gt;assets_manager&lt;&#x2F;a&gt; provides a convenient way to work with external files, making
resources caching and hot-reloading easy and straightforward.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.4.0 was released this month, bringing loads of improvements.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;Source&lt;&#x2F;code&gt; trait, to load assets from anywhere. It makes the crate usable in
WebAssembly.&lt;&#x2F;li&gt;
&lt;li&gt;Assets that can load other assets, with a transparent integration with
hot-reloading. Using a manifest file has never been so easy!&lt;&#x2F;li&gt;
&lt;li&gt;Improved performance.&lt;&#x2F;li&gt;
&lt;li&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&#x2F;releases&#x2F;tag&#x2F;v0.4.0&quot;&gt;full changelog&lt;&#x2F;a&gt; for more information.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;terra-mach&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lykhonis&#x2F;terramach&quot;&gt;Terra Mach&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#terra-mach&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;terramach.gif&quot; alt=&quot;Dashboard demo&quot; &#x2F;&gt;
&lt;em&gt;Terra Mach dashboard demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lykhonis&#x2F;terramach&quot;&gt;Terra Mach&lt;&#x2F;a&gt; is a mapping frontend system to build graphical interfaces
for devices. It focuses on experiences around statistical data (graphs, diagrams),
mapping, and user input. When it comes to user experience, elements a user
interacts with are flexible enough to build many common experiences. Terra Mach
is highly inspired by Flutter. It leverages graphics library Skia to enable
highly performant 2D graphics.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;glam-v0-11-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt; v0.11.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glam-v0-11-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt; is a simple and fast linear algebra crate for games and graphics.&lt;&#x2F;p&gt;
&lt;p&gt;This month version 0.11.2 was released. There were a number of important changes
since the last newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;The vector accessor methods for setting and getting individual vector elements
were replaced with direct access support. This means that now instead of needing
to use &lt;code&gt;.x()&lt;&#x2F;code&gt;, &lt;code&gt;.set_x(x)&lt;&#x2F;code&gt; or &lt;code&gt;.mut_x() = x&lt;&#x2F;code&gt; the element may be accessed
directly via &lt;code&gt;.x = x&lt;&#x2F;code&gt; and so on.&lt;&#x2F;p&gt;
&lt;p&gt;The reason that this was not done originally was that some types are backed by
SIMD types which do not support direct access. For these types direct access is
now supported with &lt;code&gt;Deref&lt;&#x2F;code&gt; and &lt;code&gt;DerefMut&lt;&#x2F;code&gt; implementations.&lt;&#x2F;p&gt;
&lt;p&gt;The direct access support was added in version 0.10.1 along side the accessor
methods. The accessor methods were deprecated in 0.10.2 and  have been removed
in 0.11.0.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;winit&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#winit&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt; is a cross-platform window creation and event loop management library.&lt;&#x2F;p&gt;
&lt;p&gt;winit is looking for a new web platform maintainer! If you&#x27;re
interested, or know anyone who is, you can reach out via the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues&#x2F;1777&quot;&gt;tracking issue&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fluffl&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;K-C-DaCosta&#x2F;fluffl&quot;&gt;Fluffl&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fluffl&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;K-C-DaCosta&#x2F;fluffl&quot;&gt;Fluffl&lt;&#x2F;a&gt; is a WIP generic media layer for graphics, IO, and audio
for desktop and the browser.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The only reason I wrote this crate at all was because I personally wanted
to just have a generic interface were I can just write my OpenGL apps once
and have that build to both desktop and the browser
with little to no modification to source code.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Two demos are available atm:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic graphics (using raw OpenGL via the &amp;quot;glow&amp;quot; crate) and audio demo:
&lt;a href=&quot;https:&#x2F;&#x2F;k-c-dacosta.github.io&#x2F;wasm_bins&#x2F;examples&#x2F;audio_ex_1&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Breakout clone demo: &lt;a href=&quot;https:&#x2F;&#x2F;k-c-dacosta.github.io&#x2F;wasm_bins&#x2F;examples&#x2F;brick_demo&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;jthdoq&#x2F;fluffl_a_multimedia_layer&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rapier&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rapier&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;&lt;img src=&quot;rapier-logo.svg&quot; alt=&quot;Rapier logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; is a set of 2D and 3D physics engines for games, animation and
robotics written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;12&#x2F;01&#x2F;this-month-in-dimforge&#x2F;&quot;&gt;This month&lt;&#x2F;a&gt; the version 0.4.0 has been released with
exciting new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the ability to read contact and proximity information from the narrow-phase.&lt;&#x2F;li&gt;
&lt;li&gt;the ability to lock some translations and&#x2F;or rotations for a rigid-body
without using joints.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The following demo shows examples of translation locking (on the blue cuboid)
and rotation locking (full locking on the capsule, partial locking on the
cuboid):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;rapier-demo.gif&quot; alt=&quot;Rapier features&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A cross-platform determinism bug appearing on MacOS with the new Apple M1
ARM processor has also been fixed.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;www.rapier.rs&#x2F;docs&#x2F;user_guides&#x2F;rust_bevy_plugin&#x2F;getting_started&quot;&gt;bevy_rapier&lt;&#x2F;a&gt; plugin for the Bevy game engine has been updated to support
all the aforementioned features. In addition, it supports:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the automatic removal of rigid-bodies, colliders, and joints when the entity
they are attached to are removed from the Bevy ECS.&lt;&#x2F;li&gt;
&lt;li&gt;the ability to attach multiple colliders to a single rigid-body using Bevy
Hierarchy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;salva&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;salva.rs&quot;&gt;Salva&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#salva&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;salva.rs&quot;&gt;&lt;img src=&quot;salva-logo.svg&quot; alt=&quot;Salva logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;salva.rs&quot;&gt;Salva&lt;&#x2F;a&gt; is a set of 2D and 3D particle-based fluids simulation engines for
games and animation written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Starting &lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;12&#x2F;01&#x2F;this-month-in-dimforge&#x2F;&quot;&gt;this month&lt;&#x2F;a&gt; Salva 0.5.0 no longer supports
&lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&quot;&gt;nphysics&lt;&#x2F;a&gt; for simulating rigid-bodies. Instead, it implements two-ways
coupling with &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; (see the
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dimforge&#x2F;status&#x2F;1329467380158898183&quot;&gt;demo&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;In addition to the Rapier integration, it is now possible to query Salva
to retrieve all the fluid particles located inside an AABB. This can be
useful for, e.g., spawning new particles ensuring there isn&#x27;t anything
there already.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rib&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bmatthieu3&#x2F;rib&quot;&gt;rib&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rib&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rib.gif&quot; alt=&quot;rib&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Parsing a 3D model file and understanding the different links between bone
matrices, keyframes and vertices is a task that can take a lot of time and
motivation of the developer. On top of that, combining the different bone
transform matrices for the current frame is often error prone.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bmatthieu3&#x2F;rib&quot;&gt;rib&lt;&#x2F;a&gt; is an attempt to tackle these problems and might help you save time.
Current features of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bmatthieu3&#x2F;rib&quot;&gt;rib&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support of collada files coming from the latest Blender version.&lt;&#x2F;li&gt;
&lt;li&gt;Precomputation of the bone matrices expressed in the world space so that you
just have to pass it to your shader for traditional GPU skinning.&lt;&#x2F;li&gt;
&lt;li&gt;Interpolation between keyframes.&lt;&#x2F;li&gt;
&lt;li&gt;(De)&#x2F;serialization in binary thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;bincode&quot;&gt;bincode&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bmatthieu3&#x2F;rib&quot;&gt;rib&lt;&#x2F;a&gt; can be greatly extended, for example with the support of other format
handling skeleton data, such as the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KhronosGroup&#x2F;glTF&#x2F;blob&#x2F;master&#x2F;README.md&quot;&gt;glTF&lt;&#x2F;a&gt; format.
Contributions are more than welcome.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kira&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kira&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tesselode&#x2F;kira&quot;&gt;Kira&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&quot;&gt;@tesselode&lt;&#x2F;a&gt; is an audio library designed to help create expressive
audio for games. It aims to fill the holes in many game engines&#x27; built-in audio
APIs with features for creating seamless music loops and scripting audio events.&lt;&#x2F;p&gt;
&lt;p&gt;v0.2.0 is coming out soon with an Arrangements feature for creating complex pieces
out of individual sounds, tween easing, panning support, and workflow improvements.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jxd9zz&#x2F;announcing_kira_dynamic_audio_library_for_games&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tesselode&#x2F;status&#x2F;1329559760111357954&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs-and-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-and-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-big-picture.svg&quot; alt=&quot;gfx-picture&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The gfx-rs team has published a post &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2020&#x2F;11&#x2F;16&#x2F;big-picture.html&quot;&gt;&amp;quot;The Big Picture&amp;quot;&lt;&#x2F;a&gt; providing
the overview of all projects in the works, and how they are connected to each other.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; has moved from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx-extras&quot;&gt;gfx-extras&lt;&#x2F;a&gt; to the new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;gpu-alloc&quot;&gt;gpu-alloc&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;gpu-descriptor&quot;&gt;gpu-descriptor&lt;&#x2F;a&gt;
libraries by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&quot;&gt;@zakarumych&lt;&#x2F;a&gt;. These are backend-agnostic, which allows &lt;code&gt;wgpu&lt;&#x2F;code&gt;
to now depend on &lt;code&gt;gfx-hal&lt;&#x2F;code&gt; directly without intermediates. Patching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt;
will now be easier, without the need to release every little change.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, all the latest &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; code has landed into Gecko, and new
features and fixes are implemented in Firefox. That allows it to run
most of the updated &lt;a href=&quot;https:&#x2F;&#x2F;austineng.github.io&#x2F;webgpu-samples&quot;&gt;WebGPU samples&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;iced-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt; v0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iced-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;iced-game-of-life.gif&quot; alt=&quot;Iced - Game of Life example&quot; &#x2F;&gt;
&lt;em&gt;The new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;tree&#x2F;0.2&#x2F;examples&#x2F;game_of_life&quot;&gt;Game of Life example&lt;&#x2F;a&gt;, made with Iced&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Iced is an experimental cross-platform GUI library focused on simplicity and
type-safety. Inspired by &lt;a href=&quot;https:&#x2F;&#x2F;elm-lang.org&quot;&gt;Elm&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;637&quot;&gt;A new minor version&lt;&#x2F;a&gt; was released this month containing a bunch of
improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;An OpenGL renderer powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&#x2F;glow&quot;&gt;&lt;code&gt;glow&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;&lt;code&gt;glutin&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. It is an alternative to
the default &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;&lt;code&gt;wgpu&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; renderer.&lt;&#x2F;li&gt;
&lt;li&gt;A trait-based approach to react to mouse and keyboard interactions in the
&lt;code&gt;Canvas&lt;&#x2F;code&gt; widget.&lt;&#x2F;li&gt;
&lt;li&gt;Basic overlay support, allowing the superposition of interactive widgets on
top of other widgets.&lt;&#x2F;li&gt;
&lt;li&gt;A drop-down selector widget built on top of the overlay support.&lt;&#x2F;li&gt;
&lt;li&gt;A widget that displays a QR code, powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&#x2F;qrcode-rust&quot;&gt;&lt;code&gt;qrcode&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Additional internal enhancements, like event capturing and a faster event
loop.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;k1hkxq&#x2F;iced_a_crossplatform_gui_library_new_release&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kas-v0-6-and-kas-text-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; v0.6 and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas-text&quot;&gt;KAS-text&lt;&#x2F;a&gt; v0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kas-v0-6-and-kas-text-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kas-markdown.png&quot; alt=&quot;KAS markdown&quot; &#x2F;&gt;
&lt;em&gt;Markdown parsing demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhardy&quot;&gt;@dhardy&lt;&#x2F;a&gt; is a general-purpose UI toolkit; its
initial aim is &amp;quot;old school&amp;quot; desktop apps with good keyboard and touchscreen
support. Unlike many modern immediate-mode UIs, KAS&#x27;s widgets retain state,
allowing minimal per-frame updates. KAS supports embedded WebGPU graphics now,
and plans to support embedded usage and additional rendering systems.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas-text&quot;&gt;KAS-text&lt;&#x2F;a&gt; v0.2 saw a significant revision to its API, including support for
rich text (bold, italic, underline, size and some layout improvements).
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; v0.6 pulls in those changes and adds a few fixes and QoL improvements.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egui-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;Egui&lt;&#x2F;a&gt; v0.4&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui.png&quot; alt=&quot;online demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&quot;&gt;Egui&lt;&#x2F;a&gt; is a highly portable immediate mode GUI library in pure Rust.
This month a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#040---2020-11-28&quot;&gt;v0.4.0 version&lt;&#x2F;a&gt; was released
with much-improved text editing, and many bugfixes.
Check out an &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&quot;&gt;updated online demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;egui_web&quot;&gt;egui_web&lt;&#x2F;a&gt; v0.4.0 was released, with a simple fetch API -
&lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&#x2F;example.html&quot;&gt;online example&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;miniquad_kms.gif&quot; alt=&quot;miniquad_wayland&quot; &#x2F;&gt;
&lt;em&gt;Miniquad running on raspberry pi 4 with a SPI screen.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; is cross-platform windowing and rendering library.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;www.kernel.org&#x2F;doc&#x2F;html&#x2F;v4.15&#x2F;gpu&#x2F;drm-kms.html&quot;&gt;KMS&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;pull&#x2F;158&quot;&gt;PR&lt;&#x2F;a&gt; landed on miniquad.
Now miniquad can run on without neither X11 or Wayland,
right on the Linux kernel with KMS.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;macroquad_particles.gif&quot; alt=&quot;macroquad_particles&quot; &#x2F;&gt;
&lt;em&gt;Small editor footage.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; is a cross-platform (Windows&#x2F;Linux&#x2F;macOS&#x2F;Android&#x2F;iOS&#x2F;WASM)
game framework built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month macroquad got particle system editor aiming for simple 2d pixel-art
style effects: &lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;macroquad-particles&quot;&gt;try it out online here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dotrix&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&quot;&gt;Dotrix&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dotrix&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dotrix-rendering.png&quot; alt=&quot;Animated low-poly character rendered by Dotrix&quot; &#x2F;&gt;
&lt;em&gt;A screenshot of running low-poly female model&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The goal of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lowenware&#x2F;dotrix&quot;&gt;Dotrix&lt;&#x2F;a&gt; is to become a 3D engine for the new RPG project. The
engine is free and open source, delivering a set of common high-level features
like skeletal animation, skybox, terrain, camera controlling, input mapping and
many others. It is built on top of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; with an ECS core
which is a part of the engine.&lt;&#x2F;p&gt;
&lt;p&gt;Currently supported features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Linear ECS with systems as simple functions, that can have optional context.&lt;&#x2F;li&gt;
&lt;li&gt;Import of textures from PNG files.&lt;&#x2F;li&gt;
&lt;li&gt;Import of multiple assets from GLTF files (textures, meshes, skins and
animations).&lt;&#x2F;li&gt;
&lt;li&gt;FPS and delta time counters.&lt;&#x2F;li&gt;
&lt;li&gt;Rendering of meshes and simple scenes with light and camera controls.&lt;&#x2F;li&gt;
&lt;li&gt;Rendering of skeletal animations.&lt;&#x2F;li&gt;
&lt;li&gt;3 showcase demo applications.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Next in sprint:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Input management and mapping;&lt;&#x2F;li&gt;
&lt;li&gt;Full camera control with mouse;&lt;&#x2F;li&gt;
&lt;li&gt;Skybox renderer.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
versions 0.5.3 and 0.5.4 were released, with some frequently requested features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;Mesh&lt;&#x2F;code&gt; API, allowing users to create arbitrary 2D geometry&lt;&#x2F;li&gt;
&lt;li&gt;Experimental support for high-DPI rendering&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There has also been numerous bug fixes and documentation improvements. For full
details and a list of breaking changes, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;old-gods&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;schell&#x2F;old-gods&quot;&gt;Old Gods&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#old-gods&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;old-gods-logo.png&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;schell&#x2F;old-gods&quot;&gt;Old Gods&lt;&#x2F;a&gt; is an WIP game engine meant for games
targeting the web and SDL2.
It reads Tiled map files into a specs based entity component system.
Rendering is handled by HtmlCanvasElement or the built-in SDL2 renderer.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;k25hh8&#x2F;the_old_gods_game_engine&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ogmo3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;ogmo3&quot;&gt;ogmo3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ogmo3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;ogmo3&quot;&gt;ogmo3&lt;&#x2F;a&gt; is a Rust crate for parsing projects and levels created with
&lt;a href=&quot;https:&#x2F;&#x2F;ogmo-editor-3.github.io&#x2F;&quot;&gt;Ogmo Editor 3&lt;&#x2F;a&gt;. This month, version 0.1 was released, adding serialization
support, and helper methods for unpacking layer data. The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;ogmo3&#x2F;blob&#x2F;main&#x2F;examples&#x2F;sample.rs&quot;&gt;sample code&lt;&#x2F;a&gt;
has also been updated to show the new helpers in action.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ggez-bun.png&quot; alt=&quot;lots of overlapping bunnies&quot; &#x2F;&gt;
&lt;em&gt;ggez bunnymark - 60,000 buns at 60 FPS&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; is a 2D game framework inspired by Love2D. The project is chugging
along getting everything prepared for a 0.6 release at the end of 2020,
and a lot of work has been done in the last month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;All major dependencies have been updated, including a long-overdue
update to &lt;code&gt;winit&lt;&#x2F;code&gt; 0.23.&lt;&#x2F;li&gt;
&lt;li&gt;Over a dozen pull requests have been merged, large and small.&lt;&#x2F;li&gt;
&lt;li&gt;A bunch of old issues have been cleaned up.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Major features to look forward to include far better math performance, a
&lt;code&gt;MeshBatch&lt;&#x2F;code&gt; type, better ergonomics on Linux Wayland, and more. There&#x27;s
lots of work still to be done though. A bunch of issues are out of date
and need triage, docs need to be proofread, and especially examples need
be updated and tested on every platform imaginable. Try out the &lt;code&gt;devel&lt;&#x2F;code&gt;
branch and give it a go!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryS36934349&#x2F;status&#x2F;1328797761874046977&quot;&gt;&lt;img src=&quot;rg3d_instancing.jpg&quot; alt=&quot;a scene with lightning and multiple hi-poly character models&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Geometry instancing demo.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; is a game engine that aims to be easy to use and provide large set
of out-of-box features. Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Migrated to nalgebra from custom linear algebra.&lt;&#x2F;li&gt;
&lt;li&gt;Replaced custom physics engine with Rapier.&lt;&#x2F;li&gt;
&lt;li&gt;Implemented sound backend for macOS.&lt;&#x2F;li&gt;
&lt;li&gt;Environment mapping - now objects can have reflections.&lt;&#x2F;li&gt;
&lt;li&gt;Implemented geometry instancing - now you can render tons of objects with
low overhead.&lt;&#x2F;li&gt;
&lt;li&gt;Performance improvements.&lt;&#x2F;li&gt;
&lt;li&gt;Added &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Gobo_(lighting)&quot;&gt;gobo&lt;&#x2F;a&gt; for spot lights.&lt;&#x2F;li&gt;
&lt;li&gt;Added CPU lightmapper - it is possible now to &amp;quot;bake&amp;quot; static lighting
into a texture to improve performance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;rg3d&#x27;s Discord channel&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryS36934349&quot;&gt;Dmitry Stepanov on Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;another-world-suite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;malandrin&#x2F;another-world-suite&quot;&gt;Another World Suite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#another-world-suite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;aws.png&quot; alt=&quot;multiple windows with asm and sprites&quot; &#x2F;&gt;
&lt;em&gt;debugger and resource viewer&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;malandrin&#x2F;another-world-suite&quot;&gt;Another World Suite&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;cesarbotana.com&#x2F;&quot;&gt;@c_botana&lt;&#x2F;a&gt; is a Rust
implementation of the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Another_World_(video_game)&quot;&gt;&amp;quot;Another World&amp;quot;&lt;&#x2F;a&gt; (&amp;quot;Out of This World&amp;quot; in USA)
game engine, compiled to WebAssembly to run it in the web.
It also includes a debugger and a resources viewer.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;malandrin.github.io&#x2F;another-world-suite&quot;&gt;Try it out here!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;c_botana&#x2F;status&#x2F;1327593089989554178&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;f1-telemetry-tui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aldidana&#x2F;f1-telemetry-tui&quot;&gt;F1 Telemetry TUI&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#f1-telemetry-tui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;f1-tui.gif&quot; alt=&quot;f1-telemetry-tui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aldidana&#x2F;f1-telemetry-tui&quot;&gt;F1 Telemetry TUI&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aldidana&quot;&gt;@aldidana&lt;&#x2F;a&gt; is a terminal telemetry tool for F1 video games.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aldidana&#x2F;status&#x2F;1323185465319596032&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevmnist&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vleue.itch.io&#x2F;bevmnist-poc&quot;&gt;bevmnist&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevmnist&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevmnist.gif&quot; alt=&quot;demo of running inferences for all digits&quot; &#x2F;&gt;
&lt;em&gt;Running through all digits&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vleue.itch.io&#x2F;bevmnist-poc&quot;&gt;bevmnist&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;FrancoisMockers&quot;&gt;@FrancoisMockers&lt;&#x2F;a&gt; is a PoC for running
inferences from a neural network in a game made with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt;, that can run in
WASM (source code on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vleue&#x2F;bevmnist&quot;&gt;github&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sonos&#x2F;tract&quot;&gt;tract&lt;&#x2F;a&gt;, the goal was to test running neural network inferences from a
game. &lt;a href=&quot;http:&#x2F;&#x2F;yann.lecun.com&#x2F;exdb&#x2F;mnist&#x2F;&quot;&gt;MNIST handwritten digits classification&lt;&#x2F;a&gt; is the &amp;quot;hello world&amp;quot; of
neural networks, and has small enough networks available in &lt;a href=&quot;https:&#x2F;&#x2F;onnx.ai&quot;&gt;onnx&lt;&#x2F;a&gt; format that
can run in real time in WASM. This project also has github actions that will
build and release a &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt; game to itch.io for Linux, macOS, Windows and WASM.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;96&quot;&gt;#96 &amp;quot;New WG members&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues&#x2F;1777&quot;&gt;winit is seeking new maintainers&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;k9fy3y&#x2F;this_month_in_rust_gamedev_16&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1336454550006456321&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #15 - October 2020</title>
            <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/015/</link>
            <guid>https://gamedev.rs/news/015/</guid>
            <description>&lt;p&gt;Welcome to the 15th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;015&#x2F;#annual-survey-from-the-rust-gamedev-wg&quot;&gt;Annual Survey from the Rust GameDev WG&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;015&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;015&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;015&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;015&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;015&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;annual-survey-from-the-rust-gamedev-wg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;surveymonkey.com&#x2F;r&#x2F;F2JYRFF&quot;&gt;Annual Survey from the Rust GameDev WG&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#annual-survey-from-the-rust-gamedev-wg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;As we did &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;survey-01&quot;&gt;last year&lt;&#x2F;a&gt;, we are once again running
a Rust Game Development Ecosystem Survey. It&#x27;ll only take 10 minutes,
and your responses help us better understand the state of our ecosystem
and where we should try to focus our collective efforts.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren_clouds.jpeg&quot; alt=&quot;Landscape&quot; &#x2F;&gt;
&lt;em&gt;Endless mountains to explore&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In October, lots of work was done on the UI, and a buff system. There was an
overhaul done to the staff item that gives it new primary and secondary attacks.
There has also been work done on the axe and bow. The cloud system was
overhauled and brought a cheaper way to compute the 3D noise that the system uses.
The skill bar was overhauled to implement a new design that could handle the new
buff system. This was also the first overhaul in over a year. A SFX system is in
the works to allow effects to be mapped to blocks, for sounds like crickets or
birds.&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics from October:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-88#gemu&quot;&gt;Modelling Process&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-89#staff-overhaul-by-sam&quot;&gt;Staff Overhaul&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-89#new-skillbar-and-buffs-visuals-pfau&quot;&gt;New Skillbar and Buffs Visuals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-90#cloud-improvements-by-zesterer&quot;&gt;Cloud Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-91#buffs-by-sam&quot;&gt;Buffs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-91#alignment-and-hostility-by-adam&quot;&gt;Alignment and Hostility&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-91#fixing-ci-by-xmac94x&quot;&gt;Fixing CI&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;October&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-88&quot;&gt;#88&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-89&quot;&gt;#89&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-90&quot;&gt;#90&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-91&quot;&gt;#91&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In November, Veloren will release 0.8. Veloren will also be speaking at
MiniDebConf on November 22nd.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;veloren_wolves.jpeg&quot; alt=&quot;Healing sceptre&quot; &#x2F;&gt;
&lt;em&gt;Team hunt&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crate-before-attack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crate-before-attack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;&lt;img src=&quot;crate-before-attack.gif&quot; alt=&quot;Leaderboard Histogram&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Interactive Histogram with Race Results&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CrateAttack&quot;&gt;koalefant (@CrateAttack)&lt;&#x2F;a&gt;
is a skill-based multiplayer game where frogs fight and race using their sticky
tongues as grappling hooks.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;play&quot;&gt;browser build&lt;&#x2F;a&gt; can be played online.&lt;&#x2F;p&gt;
&lt;p&gt;Changes since the last update:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added a global leaderboard that visualizes Race and Training results in an
interactive histogram.&lt;&#x2F;li&gt;
&lt;li&gt;Tweaked frogs physics to make them more bouncy, added an option that would
keep tongue connected as long as a key is being pressed.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;j87I8akUTkc&quot;&gt;Online Ghosts&lt;&#x2F;a&gt; were added. One can now compete with real
players instead of AI when playing Race mode.&lt;&#x2F;li&gt;
&lt;li&gt;Improved load-times: level graphics is now quantized with an 8-bit palette,
signed distance fields that are used for collisions are now generated offline.
Downloads are cached in an IndexedDB, so subsequent starts are even faster.&lt;&#x2F;li&gt;
&lt;li&gt;Multiple bugs were fixed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More details are in &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20201001-september-update&quot;&gt;September&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20201029-october-update&quot;&gt;October&lt;&#x2F;a&gt; DevLog entries and in
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UC_xMilPTLuuE5iLs1Ml9zow&quot;&gt;YouTube-channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egregoria&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egregoria&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egregoria.jpg&quot; alt=&quot;Egregoria roads at night&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&#x27;s objective is to become a granular society simulation,
filled with fully autonomous agents interacting with their world in real-time.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;egregoria_6.html&quot;&gt;6th devlog&lt;&#x2F;a&gt; was published. Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Island generation.&lt;&#x2F;li&gt;
&lt;li&gt;Day&#x2F;night cycle.&lt;&#x2F;li&gt;
&lt;li&gt;Human AI via utility systems.&lt;&#x2F;li&gt;
&lt;li&gt;Specs to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;legion&quot;&gt;legion 0.3&lt;&#x2F;a&gt; port.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;See also &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=mfvAuvC-XLg&quot;&gt;the recent video&lt;&#x2F;a&gt; showcasing very basic AI.&lt;&#x2F;p&gt;
&lt;p&gt;Join &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CAaZhUJ&quot;&gt;Egregoria&#x27;s Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;jkcllc&#x2F;egregoria_devblog_6&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.png&quot; alt=&quot;A&#x2F;B Street on the web&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a traffic simulation game exploring how small changes
to roads affect cyclists, transit users, pedestrians, and drivers. Any city
with OpenStreetMap coverage can be used!&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;abstreet.s3-website.us-east-2.amazonaws.com&#x2F;dev&#x2F;&quot;&gt;web version&lt;&#x2F;a&gt; launched, powered by &lt;code&gt;winit&lt;&#x2F;code&gt;, &lt;code&gt;glow&lt;&#x2F;code&gt;, and other
dependencies having support for WebAssembly;&lt;&#x2F;li&gt;
&lt;li&gt;an &lt;a href=&quot;http:&#x2F;&#x2F;abstreet.s3-website.us-east-2.amazonaws.com&#x2F;osm_demo&#x2F;&quot;&gt;OpenStreetMap viewer&lt;&#x2F;a&gt; with 100 cities imported;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;thought bubbles&amp;quot; for cars looking for parking, by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelkirk&quot;&gt;Michael&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;slow portions of a trip highlighted in the info panel, by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NoSuchThingAsRandom&#x2F;&quot;&gt;Sam&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;worship-the-sun&quot;&gt;Worship The Sun&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#worship-the-sun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;worship-sun.jpg&quot; alt=&quot;Worship The Sun&quot; &#x2F;&gt;
&lt;em&gt;One of the many unique and confounding puzzles in the game&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Worship The Sun is a dark, mysterious 2D puzzle-platform game with computer
science themes. It introduces the player to a rich language of puzzle elements
and challenges them to solve difficult puzzles that require experimentation,
comprehension, and internalisation of the game&#x27;s mechanics.&lt;&#x2F;p&gt;
&lt;p&gt;The game is built using a custom engine that sits on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;legion&quot;&gt;legion&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;, and a handful of other crates. It features dynamic lighting, a
flexible particle system, bespoke collision behaviour, and a Vim-inspired level
editor. The majority of game assets are hand drawn in &lt;a href=&quot;https:&#x2F;&#x2F;procreate.art&#x2F;&quot;&gt;Procreate&lt;&#x2F;a&gt;
and painstakingly animated.&lt;&#x2F;p&gt;
&lt;p&gt;The game is a few months into development with a release target of late 2021.
You can read about how swimming was added to the game in &lt;a href=&quot;https:&#x2F;&#x2F;tuzz.tech&#x2F;blog&#x2F;taking-the-plunge&quot;&gt;GameDev Note 1:
Taking the Plunge&lt;&#x2F;a&gt; which contains a sneak peek at some of the levels.
For updates and possible playtesting opportunities, follow
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;chrispatuzzo&quot;&gt;@chrispatuzzo&lt;&#x2F;a&gt; and a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;WorshipTheSunGame&quot;&gt;&#x2F;r&#x2F;WorshipTheSunGame&lt;&#x2F;a&gt; subreddit.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cyberplant.xyz&quot;&gt;Garden&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden_scaled_1.png&quot; alt=&quot;Garden&quot; &#x2F;&gt;
&lt;em&gt;A couple of trees growing and basking in the sun&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cyberplant.xyz&quot;&gt;Garden&lt;&#x2F;a&gt; is a procedural tree-growing, strategical ecosystem-restoration
and biological simulation game with an infinite amount of plant species where
every leaf is simulated, and the natural resources are scarce.
Every specimen is unique, as the plants grow by responding to the live changes in
the environment.
The player has to balance many complex mechanics to sustain life and go
forward in the game.
The game and the custom engine are developed in Rust with an OpenGL backend.&lt;&#x2F;p&gt;
&lt;p&gt;Garden developers (temporary name) are preparing for a demo release in a couple
of months by tying everything together into a coherent experience.
The game is also continually optimized to run on less powerful GPUs,
so that everyone can enjoy it.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the &lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;october_2020&quot;&gt;updates from the October devlog&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Near-infinite variety of plant species
achieved through treating branch segments as Markov chains
(enabling different growth speeds and probabilities
for other segment types&#x27; growth from one another)
and simulating photosynthesis as an electrical circuit
(enabling sugar storage in the form of root vegetables, for example).&lt;&#x2F;li&gt;
&lt;li&gt;Concrete brick destruction mechanics were implemented.
Dust particles for the animation that appears upon breaking,
as well as the debris, were also added to the game.&lt;&#x2F;li&gt;
&lt;li&gt;Saving and loading are almost complete.&lt;&#x2F;li&gt;
&lt;li&gt;A watering can was added.&lt;&#x2F;li&gt;
&lt;li&gt;Smoother soil and debris outlines.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Follow the developers &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;epcc10&quot;&gt;@epcc10&lt;&#x2F;a&gt; on Twitter for more updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a WIP online multiplayer game.&lt;&#x2F;p&gt;
&lt;p&gt;In October, more progress was made on the editor tool for placing entity spawn
points. Work was started on prototyping the hunting skill. Functionality was
added to allow focusing for TextAreas in the user interface. Improvements were
made to the engine&#x27;s asset management code to make it more generalized.&lt;&#x2F;p&gt;
&lt;p&gt;Full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;october-2020&#x2F;087-2020-10-04.html&quot;&gt;#087&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;october-2020&#x2F;088-2020-10-11.html&quot;&gt;#088&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;october-2020&#x2F;089-2020-10-18.html&quot;&gt;#089&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;october-2020&#x2F;090-2020-10-25.html&quot;&gt;#090&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sun-prison&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ropewalker&#x2F;sun_prison&quot;&gt;Sun Prison&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sun-prison&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sun_prison.gif&quot; alt=&quot;Sun Prison gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ropewalker&#x2F;sun_prison&quot;&gt;Sun Prison&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dmitrywithouti&quot;&gt;Dima Lazarev&lt;&#x2F;a&gt; is a WIP turn-based
meditation on Rubik&#x27;s cube, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ropewalker&#x2F;bevy_sokoban&quot;&gt;Sokoban&lt;&#x2F;a&gt;, and roguelikes, being
implemented with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy engine&lt;&#x2F;a&gt;.
The game is in the very early stages of development,
but it is already possible to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dmitrywithouti&#x2F;status&#x2F;1309025584039768064&quot;&gt;get lost in the dark&lt;&#x2F;a&gt;
or to be &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dmitrywithouti&#x2F;status&#x2F;1309982656260648960&quot;&gt;eaten by zombies&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dmitrywithouti&quot;&gt;@dmitrywithouti&lt;&#x2F;a&gt; on Twitter for updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;camp-misty&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ReeCocho&#x2F;camp-misty&quot;&gt;Camp Misty&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#camp-misty&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;camp-misty.PNG&quot; alt=&quot;Camp Misty Title Screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ReeCocho&#x2F;camp-misty&quot;&gt;Camp Misty&lt;&#x2F;a&gt; is an asymmetric
multiplayer game played on the command line. The game is played with two
people. One of the players is a helpless victim searching for car parts. If
they find all of the parts, they can repair their car and escape the camp. The
other player is a ruthless killer who is trying to hunt down the victim.&lt;&#x2F;p&gt;
&lt;p&gt;The game was created as a learning exercise in about two weeks by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ReeCocho&quot;&gt;@ReeCocho&lt;&#x2F;a&gt;, with contributions from the many helpful members of &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum-online&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&quot;&gt;Antorum Online&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum-online&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum-online-10-29-2020.jpg&quot; alt=&quot;A small marketplace area with a few merchants&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Antorum Online is a micro-multiplayer online role-playing game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt;.
The game server is written in Rust, and the current &amp;quot;official&amp;quot; client is being
developed in Unity. The server can be self-hosted, and the network protocol is
open, so even custom clients that adhere to the protocol can connect and play.&lt;&#x2F;p&gt;
&lt;p&gt;Two more devlogs were published this month, regarding work done to implement
shops, character creation, and a few other features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;21&quot;&gt;21: Belmart, Shops, And Bartering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratwizard.dev&#x2F;dev-log&#x2F;antorum&#x2F;22&quot;&gt;22: Character Creation And Customization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;the-honor-sagas&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;khonsulabs.itch.io&#x2F;honorsagas&quot;&gt;The Honor Sagas&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-honor-sagas&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;honor.png&quot; alt=&quot;game&#x27;s banner&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;khonsulabs.itch.io&#x2F;honorsagas&quot;&gt;The Honor Sagas&lt;&#x2F;a&gt; is an early-in-development 2d MMORPG project.
October was the first month of development, and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ectonDev&quot;&gt;@ectonDev&lt;&#x2F;a&gt; wrote
&lt;a href=&quot;https:&#x2F;&#x2F;khonsulabs.itch.io&#x2F;honorsagas&#x2F;devlog&#x2F;192252&#x2F;the-honor-sagas-devtober-postmortem&quot;&gt;a postmortem&lt;&#x2F;a&gt; of the progress made while participating
in &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;devtober-2020&quot;&gt;#Devtober&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;project-yawc&quot;&gt;Project YAWC&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#project-yawc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;yawc.png&quot; alt=&quot;An in-progress game of Project YAWC.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project YAWC is a turn-based strategy game in the style of Advance Wars in
development by junkmail. October saw the release of Alpha 3, including
dynamically generated info cards and minor networking changes. For inquiries or
if you are interested in playtesting, contact projectyawc(at)gmail.com.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;power-kick&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kakoeimon.itch.io&#x2F;power-kick&quot;&gt;Power Kick&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#power-kick&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;power-kick-shot.png&quot; alt=&quot;Power Kick&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kakoeimon.itch.io&#x2F;power-kick&quot;&gt;Power Kick&lt;&#x2F;a&gt; is a one screen platform game inspired by similar old arcade games
like Bubble Bobble and SnowBros.
Your task is to hit the enemies till they get dizzy and then kick them out of
their misery to proceed to the next stage. The kicked enemies will hit the
colliding enemies with a possibility to create a chain reaction
(similar to the pushed snowball in SnowBros).&lt;&#x2F;p&gt;
&lt;p&gt;The game has 20 stages and in stage 10 and 20 you will face a helicopter boss.&lt;&#x2F;p&gt;
&lt;p&gt;Can be played solo on the web through WebAssembly or up to two players
in the downloadable version:
the first player with the keyboard and the second one with a joypad.&lt;&#x2F;p&gt;
&lt;p&gt;The development took around two weeks thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rymd&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;profan.itch.io&#x2F;rymd&quot;&gt;rymd&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rymd&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rymd_2020_11_05.gif&quot; alt=&quot;rymd animated combat&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;profan.itch.io&#x2F;rymd&quot;&gt;rymd&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_profan&quot;&gt;@_profan&lt;&#x2F;a&gt; is a space shooter prototype made with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;.
Intended as a test platform for trying out rust for prototyping games and
particularly for game AI programming purposes.&lt;&#x2F;p&gt;
&lt;p&gt;Development started at the end of October, recent additions include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic enemy AI behaviour mostly based on steering behaviours.&lt;&#x2F;li&gt;
&lt;li&gt;Possibly the world&#x27;s most nauseating physics-driven camera.&lt;&#x2F;li&gt;
&lt;li&gt;Too many particles.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;pGLOWrpg&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg.gif&quot; alt=&quot;walking through a forest&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;@pGLOWrpg&lt;&#x2F;a&gt; (Procedurally Generated Living Open World RPG) is a long-term
project in development by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt;, which aims to be a text-based game with
maximum portability and &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;_jgzAddgEPU&quot;&gt;accessibility&lt;&#x2F;a&gt;
and focus on replayability, interactions, and emergent narrative.&lt;&#x2F;p&gt;
&lt;p&gt;For the past month the main focus of the development was on:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improving the UI.&lt;&#x2F;li&gt;
&lt;li&gt;Implementing the input autocomplete system.&lt;&#x2F;li&gt;
&lt;li&gt;Implementing save data import and parsing.&lt;&#x2F;li&gt;
&lt;li&gt;Implementing world navigation system.&lt;&#x2F;li&gt;
&lt;li&gt;Implementing rudimentary CLI graphics (for debugging and some future use).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Main features of the reported (pre-alpha) version are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to generate and explore one or many worlds (see previous news).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For main feature reports and dev blogs follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;@pGLOWrpg&lt;&#x2F;a&gt; on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;space-shooter&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#space-shooter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;space_shooter_11-03-2020.gif&quot; alt=&quot;space shooter boss fight&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt; project is a game in development by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo Supina&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;Micah Tigley&lt;&#x2F;a&gt;. It is a 2D &amp;quot;shoot-em-up&amp;quot; game that takes place in space and is
inspired by games like &lt;a href=&quot;https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;Raiden_(video_game)&quot;&gt;Raiden&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;The_Binding_of_Isaac_(video_game)&quot;&gt;Binding of Isaac&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Recent development has been focused on creating an online book for documentation
for the game. While still a work in progress, the following content is now
available:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.github.io&#x2F;space_shooter_rs&#x2F;gameplay.html&quot;&gt;Gameplay&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.github.io&#x2F;space_shooter_rs&#x2F;contributing.html&quot;&gt;Contributing Code&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.github.io&#x2F;space_shooter_rs&#x2F;add_item.html&quot;&gt;Adding Items&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you&#x27;re interested in hearing about planning
an effective code refactor for a project using ECS, make sure to check out
&lt;a href=&quot;https:&#x2F;&#x2F;rustfest.global&#x2F;session&#x2F;22-project-necromancy-how-to-revive-a-dead-rust-project&#x2F;&quot;&gt;How to Revive a Dead Rust Project&lt;&#x2F;a&gt; at &lt;a href=&quot;https:&#x2F;&#x2F;rustfest.global&#x2F;&quot;&gt;RustFest Global 2020&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;weegames&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weegames&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;sstqGppo7L4&quot;&gt;&lt;img src=&quot;weegames.png&quot; alt=&quot;Jumping across walls minigame&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to see &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;sstqGppo7L4&quot;&gt;a demo video&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yeahross0&#x2F;weegames&quot;&gt;source code&lt;&#x2F;a&gt;)
is a fast-paced minigame collection.&lt;&#x2F;p&gt;
&lt;p&gt;There are now 40 minigames in the collection.
New features in the latest release include boss games and high scores.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;canon-collision&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;canoncollision.com&quot;&gt;Canon Collision&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#canon-collision&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;canon_collision.gif&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;canoncollision.com&quot;&gt;Canon Collision&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&quot;&gt;@rukai&lt;&#x2F;a&gt; is an Undertale + Homestuck
fan-made platform fighter with powerful tools for modding.&lt;&#x2F;p&gt;
&lt;p&gt;This month, he completed the abstractions needed for character-specific logic.
Notable changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1302250049972314112&quot;&gt;toriel&#x27;s fireball&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1299311125285142529&quot;&gt;wobbly fireball shaders&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1297507398693736448&quot;&gt;items that can be picked up and thrown&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1314872752642297856&quot;&gt;character specific logic&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;galaxy-sim-github-io&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;galaxy-sim.github.io&quot;&gt;galaxy-sim.github.io&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#galaxy-sim-github-io&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;galaxy-sim.gif&quot; alt=&quot;Simulation demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;galaxy-sim.github.io&quot;&gt;galaxy-sim.github.io&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Katsutoshii&#x2F;barnes-hut-rs&quot;&gt;source&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;zephybite&quot;&gt;@zephybite&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;joshikatsu&quot;&gt;@joshikatsu&lt;&#x2F;a&gt;
is a colliding galaxies simulation based on &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Barnes-Hut_simulation&quot;&gt;Barnes-Hut and direct algorithms&lt;&#x2F;a&gt;.
The project is written using Rust, ThreeJS, and WASM.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;zephybite&#x2F;status&#x2F;1311384855276470272&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ludum-dare-47&quot;&gt;Ludum Dare 47&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ludum-dare-47&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;47&quot;&gt;Ludum Dare&lt;&#x2F;a&gt; is a regular game jam event,
during which developers create games from scratch in a weekend
based on a theme suggested by the community.&lt;&#x2F;p&gt;
&lt;p&gt;LD47&#x27;s theme was &amp;quot;Stuck in a loop&amp;quot;.
Here are some of the games made with Rust:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;47&#x2F;the-island&quot;&gt;&amp;quot;The Island&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&quot;&gt;@kuviman&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kuviman&#x2F;ludumdare47&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A multiplayer online sandbox game.
Explore, craft, and try to escape the island
(spoiler: you can not, you are stuck in a loop).
The world regenerates where you don&#x27;t see.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Check out the devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;blog.kuviman.com&#x2F;2020&#x2F;10&#x2F;18&#x2F;ludumdare47.html&quot;&gt;&amp;quot;LudumDare 47 - The Island&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;ld47-island.gif&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;47&#x2F;time-ghosts&quot;&gt;&amp;quot;Time Ghosts&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Healthire&quot;&gt;@Healthire&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Healthire&#x2F;ld47&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You have a limited time to collect the next part for the Machine,
when 12 seconds have passed time rewinds and you have to start over.
But don’t worry, your past self is still around
to repeat your past actions.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;ld47-time-ghosts.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;47&#x2F;quantum-loops&quot;&gt;&amp;quot;Quantum Loops&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;necauqua&quot;&gt;@necauqua&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;necauqua&#x2F;quantum-loops&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a particle forced to exist in a quantum loop
and it really hates being real!
Disrupt the quantum levels with most efficient use of your energy
to let it escape back into nothing!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;ld47-quantum-loops.gif&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;47&#x2F;keep-inside&quot;&gt;&amp;quot;Keep Inside&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidB&quot;&gt;@davidB&lt;&#x2F;a&gt; made with Bevy
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidB&#x2F;ld47_keep_inside&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A solo pong on a circle.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;ld47-keep-inside.gif&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mockersf&#x2F;kmanb&quot;&gt;&amp;quot;Keep Moving and Nobody Burns&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;FrancoisMockers&quot;&gt;@FrancoisMockers&lt;&#x2F;a&gt;
made with Bevy (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mockersf&#x2F;kmanb&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aim for the high score while avoid getting burned either
by that big wall of fire or by your own bombs!
Every round, the game will get harder, but you will earn more points.
To help you, blowing up those crates may drop bonus
that will make your bombs more useful.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;ld47-nobody-burns.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;47&#x2F;bloody-baron&quot;&gt;&amp;quot;Bloody Baron&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;torresguilherme&quot;&gt;@torresguilherme&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;torresguilherme&#x2F;bloody-baron&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You’re in a building with 9 other people, and one of them is a brutal killer.
Don’t get caught by them, and use your abilities and your logic skills
to solve the mystery and vote the right person in the trial!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;ld47-bloody-baron.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;47&#x2F;soy-content&quot;&gt;&amp;quot;Soy Content&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;walterpie&quot;&gt;@walterpie&lt;&#x2F;a&gt; made with Bevy
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;walterpie&#x2F;ldjam-47&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A misleading puzzle game with a twist.
Find your way in a non-euclidean maze of interconnected rooms.
Warning: Game doesn&#x27;t contain any Soy.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;ld47-soy.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;how-to-wgpu-winit-ecs-pixels&quot;&gt;How to: WGPU + Winit + ECS + Pixels&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-wgpu-winit-ecs-pixels&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nyxtom&quot;&gt;@nyxtom&lt;&#x2F;a&gt; published several articles on game
development for Entity-Component-Systems, Windowing and Event Loops, and WGPU.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nyxtom.dev&#x2F;2020&#x2F;10&#x2F;06&#x2F;ecs-in-rust&#x2F;&quot;&gt;ECS in Rust&lt;&#x2F;a&gt; -
written as a high level introduction to entity component systems and
using the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt; crate.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nyxtom.dev&#x2F;2020&#x2F;10&#x2F;07&#x2F;winit-rust&#x2F;&quot;&gt;Winit and Pixels&lt;&#x2F;a&gt; -
introduces cross platform window management&#x2F;event loops and provides a
tutorial for writing simple pixel graphics and 2d game development using
the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;pixels&lt;&#x2F;a&gt; crate (based on WGPU).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nyxtom.dev&#x2F;2020&#x2F;10&#x2F;08&#x2F;framebuffers&#x2F;&quot;&gt;Framebuffers, WGPU and Rust&lt;&#x2F;a&gt; -
an in-depth analysis of high-level graphics terminology and a full length
tutorial for setting up the api and clearing the screen with WGPU.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;creating-a-snake-clone-in-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mbuffett.com&#x2F;posts&#x2F;bevy-snake-tutorial&#x2F;&quot;&gt;Creating a Snake Clone in Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#creating-a-snake-clone-in-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;bevy_snake.gif&quot; alt=&quot;Snake clone tutorial output&quot; &#x2F;&gt;
&lt;em&gt;Gameplay of snake clone&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Bevy is a rapidly growing game engine written in Rust. This tutorial walks
through creating a snake clone, introducing Bevy concepts on the way. The
tutorial covers resources, systems, timers, entities, components, materials,
creating a grid system, and spawning&#x2F;despawning entities.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-ffi-microsoft-flight-simulator-sdk&quot;&gt;Rust FFI: Microsoft Flight Simulator SDK&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-ffi-microsoft-flight-simulator-sdk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=jNNz4h3iIlw&quot;&gt;&lt;img src=&quot;video-ffi-msfs.jpg&quot; alt=&quot;Preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;twitter.com&#x2F;ryan_levick&quot;&gt;@ryan_levick&lt;&#x2F;a&gt; made two livestreams about Rust FFI and SDK for
Microsoft Flight Simulator 2020.
You can watch recordings here:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=jNNz4h3iIlw&quot;&gt;Part 1&lt;&#x2F;a&gt;: bindgen, C ABIs, linkers, and more.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=ugiR9M16fwg&quot;&gt;Part 2&lt;&#x2F;a&gt;: more high-level concerns like API design
and making an idiomatic API.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;ryanlevick&quot;&gt;@ryanlevick on Twitch&lt;&#x2F;a&gt; for future streams.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;j92jc0&#x2F;rust_ffi_microsoft_flight_simulator_sdk_part_1&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-to-rust-sdl2-opengl-on-the-web&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.therocode.net&#x2F;2020&#x2F;10&#x2F;a-guide-to-rust-sdl2-emscripten&quot;&gt;How to: Rust + SDL2 + OpenGL on the Web&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-to-rust-sdl2-opengl-on-the-web&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;therocode&quot;&gt;@Therocode&lt;&#x2F;a&gt; published an &lt;a href=&quot;https:&#x2F;&#x2F;blog.therocode.net&#x2F;2020&#x2F;10&#x2F;a-guide-to-rust-sdl2-emscripten&quot;&gt;article&lt;&#x2F;a&gt; that
explains how to port games to the web using Emscripten.
It is not only useful if you have an existing game to port, but
also if you are looking for a starting point for a new application.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jmeqan&#x2F;how_to_rust_sdl2_opengl_on_the_web&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-psp&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;overdrivenpotato&#x2F;rust-psp&quot;&gt;rust-psp&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-psp&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust-psp-tetris-small.jpg&quot; alt=&quot;tetris on rust-psp&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Move over Tetris Effect and Tetris 99, the first game has been created with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;overdrivenpotato&#x2F;rust-psp&quot;&gt;rust-psp&lt;&#x2F;a&gt;, and it&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sajattack&#x2F;rust-psp&#x2F;tree&#x2F;tetris&#x2F;examples&#x2F;tetris&quot;&gt;Tetris&lt;&#x2F;a&gt;! This was a big step because it proves that
rust-psp is ready for game development, even though it&#x27;s still &lt;code&gt;#![no_std]&lt;&#x2F;code&gt;.
&lt;code&gt;std&lt;&#x2F;code&gt; support is a work in progress, and the project is always open to new
contributors to the library, the tooling, or people who want to make PSP games
in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Another development for rust-psp this month is &lt;a href=&quot;https:&#x2F;&#x2F;psp.re&quot;&gt;reverse engineering&lt;&#x2F;a&gt;
of the Sony library for the hardware vector floating point unit of the PSP.
All the vector and matrix operations provided by the Sony library have been
PR&#x27;ed to rust-psp&#x27;s main repo, and there are still more functions to come.&lt;&#x2F;p&gt;
&lt;p&gt;To stay up to date on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;overdrivenpotato&#x2F;rust-psp&quot;&gt;rust-psp&lt;&#x2F;a&gt; development, you can join the project&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;tvGzD4GqvF&quot;&gt;Discord&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sajattack&quot;&gt;@sajattack&lt;&#x2F;a&gt; on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gbemu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlueBlazin&#x2F;gbemu&quot;&gt;gbemu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gbemu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gbemu.png&quot; alt=&quot;screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlueBlazin&#x2F;gbemu&quot;&gt;gbemu&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlueBlazin&quot;&gt;@BlueBlazin&lt;&#x2F;a&gt; is a Gameboy&#x2F;Gameboy Color Emulator which
&lt;a href=&quot;https:&#x2F;&#x2F;gbemu.netlify.app&quot;&gt;runs in the browser&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;... I wrote the emu just for myself as a learning experience.
So it&#x27;s lacking in a lot of features you&#x27;d expect from one made
for others to use, and it&#x27;s also not mobile-friendly unfortunately
(but I&#x27;ll work on that soon).
Still, it may be of some interest to someone here :D&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;j8vw84&#x2F;i_made_a_gameboygameboy_color_emulator&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;skyline-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ultimate-research&#x2F;skyline-rs&quot;&gt;skyline-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#skyline-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;smash_x_rust.png&quot; alt=&quot;SSB &amp;amp; Rust logos&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ultimate-research&#x2F;skyline-rs&quot;&gt;skyline-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jam1garner&quot;&gt;@jam1garner&lt;&#x2F;a&gt; is a project seeking to allow Rust code to
unofficially use the Nintendo Switch SDK focused on modding.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jam1garner&quot;&gt;@jam1garner&lt;&#x2F;a&gt; made a blog post, &lt;a href=&quot;https:&#x2F;&#x2F;jam1.re&#x2F;blog&#x2F;rust-for-game-modding&quot;&gt;Rust for Modding Smash Ultimate&lt;&#x2F;a&gt;,
focused on detailing why Rust was such a good fit for modding games on the
Switch and his experience porting Rust to the Nintendo Switch.
It also features updates regarding:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Crates for working with Nintendo and Namco textures formats
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jam1garner&#x2F;bntx&quot;&gt;bntx&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jam1garner&#x2F;nutexb&quot;&gt;nutexb&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;An auto-updater client and server for Rustaceans writing Switch mods.&lt;&#x2F;li&gt;
&lt;li&gt;The introduction of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;skyline-rs&#x2F;skyline-web&quot;&gt;skyline-web&lt;&#x2F;a&gt;, a new library for working
with the Switch&#x27;s web browser.&lt;&#x2F;li&gt;
&lt;li&gt;Additions to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jam1garner&#x2F;rust-std-skyline&quot;&gt;skyline fork&lt;&#x2F;a&gt; of the Rust standard library.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shared-arena&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebastiencs&#x2F;shared-arena&quot;&gt;shared-arena&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shared-arena&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebastiencs&#x2F;shared-arena&quot;&gt;shared-arena&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;0x5eb&quot;&gt;@0x5eb&lt;&#x2F;a&gt; is a thread-safe &amp;amp; efficient memory pool.
Memory pools are useful for speeding up dynamic (de)allocation
of large amounts of data of the same size.&lt;&#x2F;p&gt;
&lt;p&gt;shared-arena provides three memory pools with different trade-offs:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;shared-arena.png&quot; alt=&quot;SharedArena, Arena, Pool&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The crate uses unsafe in a few places,
but the code is covered by the miri interpreter, valgrind and 3 sanitizers
(address, leak, and memory) &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebastiencs&#x2F;shared-arena&#x2F;blob&#x2F;master&#x2F;.github&#x2F;workflows&quot;&gt;on each commit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jddens&#x2F;announcing_shared_arena&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;glam-v0-10-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt; v0.10.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glam-v0-10-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt; is a simple and fast linear algebra crate for games and graphics.&lt;&#x2F;p&gt;
&lt;p&gt;This month v0.10.0 was released.
There were a lot of additions in this update and a small breaking change.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The return type of &lt;code&gt;Vec4::truncate()&lt;&#x2F;code&gt; was changed from &lt;code&gt;Vec3A&lt;&#x2F;code&gt; to &lt;code&gt;Vec3&lt;&#x2F;code&gt; which
is a breaking change and thus the version jumped from 0.9 to 0.10.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Vector swizzle functions similar to those found in &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;opengl&#x2F;wiki&#x2F;Data_Type_(GLSL)#Swizzling&quot;&gt;GLSL&lt;&#x2F;a&gt; were added. Swizzle
functions allow a vector&#x27;s elements to be reordered. The result can be a vector
of a different size to the input. Swizzles are implemented with SIMD
instructions where possible, e.g. for the &lt;code&gt;Vec4&lt;&#x2F;code&gt; type.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; v = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;vec4&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;4.0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Reverse elements of `v`.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; If SIMD is supported this will use a vector shuffle.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; wzyx = v.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;wzyx&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; yzw = v.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;yzw&lt;&#x2F;span&gt;&lt;span&gt;(); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Swizzle the yzw elements of `v` into a `Vec3`
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; xy = v.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;xy&lt;&#x2F;span&gt;&lt;span&gt;(); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; You can swizzle from a `Vec4` to a `Vec2`
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; yyxx = xy.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;yyxx&lt;&#x2F;span&gt;&lt;span&gt;(); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; And back again
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-embedded.github.io&#x2F;book&#x2F;intro&#x2F;no-std.html&quot;&gt;no_std&lt;&#x2F;a&gt; support was added, using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;libm&quot;&gt;libm&lt;&#x2F;a&gt; for math functions that are not
implemented in &lt;code&gt;core&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Optional support for the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;bytemuck&quot;&gt;bytemuck&lt;&#x2F;a&gt; crate was added, this allows appropriate
glam types to be cast into &lt;code&gt;&amp;amp;[u8]&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For a full list of changes see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;glam changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;density-mesh&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;density-mesh&quot;&gt;density-mesh&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#density-mesh&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;density-mesh.png&quot; alt=&quot;output example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;density-mesh&quot;&gt;density-mesh&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is an image density&#x2F;height map to mesh generator.
It consists of two crates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;density-mesh-core - generates mesh from density map.&lt;&#x2F;li&gt;
&lt;li&gt;density-mesh-image - generates density map from image.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A typical use case would be to use two of them to create mesh from images
but in case you have your own image handler, you can stick to the core module
and produce density maps by yourself.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s also a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;density-mesh#cli&quot;&gt;CLI tool&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;j73ijj&#x2F;densitymesh_image_to_2d_mesh_converter&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rapier&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rapier&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;&lt;img src=&quot;rapier-logo.svg&quot; alt=&quot;Rapier logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; is a set of 2D and 3D physics engines for games, animation and
robotics written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;11&#x2F;01&#x2F;this-month-in-dimforge&#x2F;&quot;&gt;This month&lt;&#x2F;a&gt; the version 0.3.0 has been released with exciting
new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;cylinders and cones as collider shapes;&lt;&#x2F;li&gt;
&lt;li&gt;collision groups (with bit masks) and collision filters (with callbacks)
for deciding what pairs of colliders can touch;&lt;&#x2F;li&gt;
&lt;li&gt;the ability to set the mass of rigid-bodies explicitly;&lt;&#x2F;li&gt;
&lt;li&gt;linear and angular damping, to progressively slow down rigid-bodies;&lt;&#x2F;li&gt;
&lt;li&gt;the ability to attach some user-defined data (of type &lt;code&gt;u128&lt;&#x2F;code&gt;) to any
collider or rigid-body.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dimforge&#x2F;status&#x2F;1321138642778206211&quot;&gt;&lt;img src=&quot;rapier-demo.gif&quot; alt=&quot;Rapier features&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;www.rapier.rs&#x2F;docs&#x2F;user_guides&#x2F;rust_bevy_plugin&#x2F;getting_started&quot;&gt;bevy_rapier&lt;&#x2F;a&gt; plugin for the Bevy game engine has been updated to support
all the aforementioned features.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, a &lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;10&#x2F;01&#x2F;this-month-in-dimforge#rapier-continuous-benchmarking&quot;&gt;continuous benchmarking&lt;&#x2F;a&gt; infrastructure has been set
up to make sure performance regressions can be detected early.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;physme&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;walterpie&#x2F;physme&quot;&gt;physme&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#physme&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;walterpie&#x2F;physme&quot;&gt;Physme&lt;&#x2F;a&gt; is not your typical physics engine. It doesn&#x27;t exactly simulate
real world physics and it never will. Instead, it has only two goals:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;To provide satisfying real-time dynamics for 2D and 3D games.&lt;&#x2F;li&gt;
&lt;li&gt;To have a simple to use API.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Physme will only work with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt; and is not made to support other game
engines.
The current release supports bevy 0.2, but work is being done to support
bevy 0.3.&lt;&#x2F;p&gt;
&lt;p&gt;The current feature set includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Rigid bodies&lt;&#x2F;li&gt;
&lt;li&gt;Multiple colliders per body&lt;&#x2F;li&gt;
&lt;li&gt;Static and semikinematic bodies&lt;&#x2F;li&gt;
&lt;li&gt;Sensor bodies&lt;&#x2F;li&gt;
&lt;li&gt;Oriented bounding boxes&lt;&#x2F;li&gt;
&lt;li&gt;Fixed, mechanical and spring joints&lt;&#x2F;li&gt;
&lt;li&gt;Broad phase&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All of the above-listed features are supported in both 2D and 3D.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;31&#x2F;this-month-october&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;31&#x2F;this-month-october&quot;&gt;October updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a plugin for mdbook to test Mun code;&lt;&#x2F;li&gt;
&lt;li&gt;support for modules and visibility;&lt;&#x2F;li&gt;
&lt;li&gt;the ability to generate enum ABI types;&lt;&#x2F;li&gt;
&lt;li&gt;bug fixes and other improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;building-blocks&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&quot;&gt;building-blocks&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#building-blocks&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;building-blocks.gif&quot; alt=&quot;Meshing Example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&quot;&gt;Building Blocks&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;@bonsairobo&lt;&#x2F;a&gt;
is an engine-agnostic voxel library that implements real-time data structures
and algorithms for: edits on compressed maps, meshing, search, and collisions.&lt;&#x2F;p&gt;
&lt;p&gt;The library has recently seen two releases:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&#x2F;releases&#x2F;tag&#x2F;v0.1.0&quot;&gt;v0.1.0 release notes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;building-blocks&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;v0.2.0 release notes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To prove out the functionality of the library, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;voxel-mapper&quot;&gt;voxel-mapper&lt;&#x2F;a&gt;
project was ported to use building-blocks instead of ilattice3.
This resulted in improved performance and memory usage
when doing large edits and working with large maps:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;voxel-mapper.gif&quot; alt=&quot;Terraforming demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Join &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CnTNjwb&quot;&gt;Building Blocks&#x27;s Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-gpu-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;releases&#x2F;tag&#x2F;v0.1&quot;&gt;Rust GPU v0.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gpu-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustgpu.jpg&quot; alt=&quot;Rust GPU Sky&quot; &#x2F;&gt;
&lt;em&gt;Sky example in Rust GPU&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&quot;&gt;Rust GPU&lt;&#x2F;a&gt; is a project backed by &lt;a href=&quot;https:&#x2F;&#x2F;www.embark-studios.com&#x2F;&quot;&gt;Embark Studios&lt;&#x2F;a&gt;
to make Rust a first-class language and ecosystem for building GPU code.&lt;&#x2F;p&gt;
&lt;p&gt;Although still in very early stages of development,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;rust-gpu&#x2F;releases&#x2F;tag&#x2F;v0.1&quot;&gt;Rust GPU released v0.1 in October&lt;&#x2F;a&gt;,
and has already garnered over 2000 stars on Github.
Currently, compiling and running very simple shaders
works, and a significant portion of the core library also compiles. While things
like if-statements and while-loops are working, many things aren&#x27;t implemented yet.
For example, for-loops, iterators and match&#x2F;switch aren&#x27;t supported yet. That
means that while being technically usable, Rust GPU is far from being
production-ready.&lt;&#x2F;p&gt;
&lt;p&gt;The motivation behind the project:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Historically in games, GPU programming has been done through writing either
HLSL, or to a lesser extent GLSL. These are simple programming languages that
have evolved along with rendering APIs over the years. However, as game engines
have evolved, these languages have failed to provide mechanisms for dealing with
large codebases, and have generally stayed behind the curve compared to other
programming languages.&lt;&#x2F;p&gt;
&lt;p&gt;In part this is because it&#x27;s a niche language for a niche market, and in part
this has been because the industry as a whole has sunk quite a lot of time and
effort into the status quo. While over-all better alternatives to both languages
exist, none of them are in a place to replace HLSL or GLSL. Either because they
are vendor locked, or because they don&#x27;t support the traditional graphics
pipeline. Examples of this include CUDA and OpenCL. And while attempts have been
made to create language in this space, none of them have gained any notable
traction in the gamedev community.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The code for the sky example above:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;spirv&lt;&#x2F;span&gt;&lt;span&gt;(entry = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fragment&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;pub fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main_fs&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;: Input&amp;lt;Vec4&amp;gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;output&lt;&#x2F;span&gt;&lt;span&gt;: Output&amp;lt;Vec4&amp;gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; dir: Vec3 = input.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;truncate&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; cs_pos = Vec4(dir.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, -dir.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; ws_pos = {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; p = clip_to_world.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;mul_vec4&lt;&#x2F;span&gt;&lt;span&gt;(cs_pos);
&lt;&#x2F;span&gt;&lt;span&gt;        p.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;truncate&lt;&#x2F;span&gt;&lt;span&gt;() &#x2F; p.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3
&lt;&#x2F;span&gt;&lt;span&gt;    };
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; dir = (ws_pos - eye_pos).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;normalize&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; color = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;sky&lt;&#x2F;span&gt;&lt;span&gt;(dir, sun_pos); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; evaluate Preetham sky model
&lt;&#x2F;span&gt;&lt;span&gt;    output.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;store&lt;&#x2F;span&gt;&lt;span&gt;(color.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;extend&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.0&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jg056t&#x2F;introducing_rustgpu_v01&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24858172&quot;&gt;Hacker News&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;repi&#x2F;status&#x2F;1319274584915365888&quot;&gt;Twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;gfx-rs support for D3D has been improved. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;@kvark&lt;&#x2F;a&gt; landed a few critical fixes
in the DX12 backend, including the proper handle freeing, compressed textures
support, blend factors, and debug markers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cwfitzgerald&quot;&gt;@cwfitzerald&lt;&#x2F;a&gt; brought DX11 backend practically to the 1st tier with titanic
work spread over a dozen of pull requests.
It is now able to run &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BVE-Reborn&#x2F;bve-reborn&quot;&gt;bve-reborn&lt;&#x2F;a&gt; correctly:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;bve-reborn-dx11.jpg&quot; alt=&quot;bve-reborn on dx11&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ggez-0-6-call-for-contributions&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;&quot;&gt;ggez&lt;&#x2F;a&gt; 0.6 Call for Contributions&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ggez-0-6-call-for-contributions&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;code&gt;ggez&lt;&#x2F;code&gt; game library traditionally tries to make at least one release
at the end of each year, and that is fast approaching.  While the
graphics engine rewrite is still a work in progress, there&#x27;s plenty of
other useful updates to be made.  Bugfixes, dependency updates, and other
ergonomic fixes are all on the table.  A lot of work has already been
done: removing &lt;code&gt;nalgebra&lt;&#x2F;code&gt; from the public API in favor of just using
&lt;code&gt;mint&lt;&#x2F;code&gt;, re-working some dependencies to improve build times, and
updating and cleaning up a pile of minor issues.  However, there&#x27;s still
about a hundred accumulated bugs and PR&#x27;s to triage and figure out, and
a lot of testing to do.  Please help!  The release checklist is
available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;milestone&#x2F;6&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;miniquad_wayland.gif&quot; alt=&quot;miniquad_wayland&quot; &#x2F;&gt;
&lt;em&gt;Miniquad compiled from scratch and running on Wayland.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; is cross-platform windowing and rendering library.&lt;&#x2F;p&gt;
&lt;p&gt;This month two big PRs got into the final review stage:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;pull&#x2F;152&quot;&gt;Native Wayland support&lt;&#x2F;a&gt;:
as usual, no third-party dependencies or C code involved;
Clean build time for Wayland examples are about 3s.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;pull&#x2F;135&quot;&gt;The Metal backend PR&lt;&#x2F;a&gt; showed good signs of life,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;quad.rs&quot;&gt;quad&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;offscreen.rs&quot;&gt;offscreen&lt;&#x2F;a&gt; examples got successfully run on Metal.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;macroquad.gif&quot; alt=&quot;macroquad-gif&quot; &#x2F;&gt;
&lt;em&gt;Macroquad-particles real-life example&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; is a cross-platform (Windows&#x2F;Linux&#x2F;macOS&#x2F;Android&#x2F;iOS&#x2F;WASM)
game framework built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month was about polishing 0.3-alpha version.
Important things that got fixed:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Text rendering was reimplemented with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mooman219&#x2F;fontdue&quot;&gt;fontdue&lt;&#x2F;a&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;text.rs&quot;&gt;example&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;macroquad_text.html&quot;&gt;web demo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;A long-term &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;issues&#x2F;45&quot;&gt;issue with Android resources system&lt;&#x2F;a&gt;
got fixed.&lt;&#x2F;li&gt;
&lt;li&gt;Particle system was released:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;particles&#x2F;examples&#x2F;particles.rs&quot;&gt;example&lt;&#x2F;a&gt;, [web demo][particles-web-demo].&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And special shoutout goes to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cedric-h&#x2F;donuts&quot;&gt;donuts&lt;&#x2F;a&gt; game by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cedric-h&quot;&gt;@cedric-h&lt;&#x2F;a&gt; - a simple game
made in a couple of days, like a jam game.
It&#x27;s a really good showcase of macroquad&#x27;s approach to simple game code
that allows hardcoding and hacks for empowering gameplay experiments.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryS36934349&#x2F;status&#x2F;1312836831390687232&quot;&gt;&lt;img src=&quot;rg3d.jpg&quot; alt=&quot;a scene with lightning and a hi-poly character model&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; is a game engine that aims to be easy to use and provide large set
of out-of-box features. Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Implemented fully asynchronous resource loading.&lt;&#x2F;li&gt;
&lt;li&gt;Added compressed textures support (DXT1, DTX3, DTX5).&lt;&#x2F;li&gt;
&lt;li&gt;Added filtering and wrapping options for textures.&lt;&#x2F;li&gt;
&lt;li&gt;Added sky box.&lt;&#x2F;li&gt;
&lt;li&gt;Added texture import options for resource manager.&lt;&#x2F;li&gt;
&lt;li&gt;All dependencies were moved to rg3d workspace, so there is no need to
manually download them when working with the latest version of the engine.&lt;&#x2F;li&gt;
&lt;li&gt;Extracted HRTF code in the separate &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;hrtf&quot;&gt;crate&lt;&#x2F;a&gt;, so it could be used
without rg3d.&lt;&#x2F;li&gt;
&lt;li&gt;Lots of other bugfixes and improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;rg3d&#x27;s Discord channel&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryS36934349&quot;&gt;Dmitry Stepanov on twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-engine-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-3&quot;&gt;Bevy Engine v0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-engine-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;&lt;img src=&quot;bevy_logo.png&quot; alt=&quot;bevy logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; is a refreshingly simple data-driven game engine built in Rust.
It is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;free and open source&lt;&#x2F;a&gt; forever!&lt;&#x2F;p&gt;
&lt;p&gt;This month, thanks to 59 contributors, 122 pull requests, and their
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;cart&quot;&gt;generous sponsors&lt;&#x2F;a&gt;, Bevy 0.3 was released. You can view the
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-3&quot;&gt;full Bevy 0.3 announcement here&lt;&#x2F;a&gt;. Here are some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Initial Android and iOS support&lt;&#x2F;li&gt;
&lt;li&gt;Asset system improvements:
&lt;ul&gt;
&lt;li&gt;Asset handle reference counting&lt;&#x2F;li&gt;
&lt;li&gt;Asset loaders can now load multiple assets&lt;&#x2F;li&gt;
&lt;li&gt;Sub asset loading&lt;&#x2F;li&gt;
&lt;li&gt;Asset dependencies&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;GLTF scene loader&lt;&#x2F;li&gt;
&lt;li&gt;Bevy ECS improvements
&lt;ul&gt;
&lt;li&gt;Query ergonomics: query.iter() returns a real iterator now!&lt;&#x2F;li&gt;
&lt;li&gt;100% lockless parallel ECS&lt;&#x2F;li&gt;
&lt;li&gt;Performance improvements&lt;&#x2F;li&gt;
&lt;li&gt;Thread local resources&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Flexible mesh vertex attributes and index buffer specialization&lt;&#x2F;li&gt;
&lt;li&gt;WASM asset loading, touch input, transform re-rewrite, gamepad settings,
plugin Groups, dynamic Window Settings, documentation search-ability.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jnirl3&#x2F;bevy_03&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24983956&quot;&gt;hacker news&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1323731853304422400&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Community updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&#x2F;docs&#x2F;user_guides&#x2F;rust_bevy_plugin&#x2F;getting_started&quot;&gt;bevy_rapier 0.5&lt;&#x2F;a&gt;:
The Rapier Physics project released updates to their official Bevy plugins, which
add support for Bevy 0.3 as well as the latest Rapier features
&lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;11&#x2F;01&#x2F;this-month-in-dimforge&quot;&gt;announced here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_easings&quot;&gt;bevy_easings&lt;&#x2F;a&gt;:
A plugin for easing a component value to another value, mainly used
to animate transition between two transforms, but usable for other components.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;bevy_miniquad&quot;&gt;bevy_miniquad&lt;&#x2F;a&gt;:
A plugin replacing winit windowing and render pipeline with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; library.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;walterpie&#x2F;physme&quot;&gt;physme&lt;&#x2F;a&gt;:
A simplistic physics engine for both 2D and 3D simulation.
Physically inaccurate, but feels satisfying and is easy to use.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smokku&#x2F;bevy_networking_turbulence&quot;&gt;bevy_networking_turbulence&lt;&#x2F;a&gt;:
Networking plugin running on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;naia-rs&#x2F;naia-socket&quot;&gt;naia-socket&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyren&#x2F;turbulence&quot;&gt;turbulence&lt;&#x2F;a&gt; libraries.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mbuffett.com&#x2F;posts&#x2F;bevy-snake-tutorial&#x2F;&quot;&gt;Making a Snake Clone&lt;&#x2F;a&gt;:
Walkthrough on how to make a snake clone.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshuajbouw&#x2F;bevy_tilemap&quot;&gt;bevy_tilemap&lt;&#x2F;a&gt;:
A plugin with generic types for rendering multi-threaded chunk-based tile
maps.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidB&#x2F;ld47_keep_inside&quot;&gt;Keep Inside&lt;&#x2F;a&gt;:
A solo pong on a circle (made for Ludum Dare 47)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mockersf&#x2F;kmanb&quot;&gt;Keep Moving and Nobody Burns&lt;&#x2F;a&gt;:
A bomberman against time (made for Ludum Dare 47)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join the Bevy&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;gMUk5Ph&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;bevy&quot;&gt;&#x2F;r&#x2F;bevy subreddit&lt;&#x2F;a&gt;,
and follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;BevyEngine&quot;&gt;@BevyEngine on Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
versions 0.5.1 and 0.5.2 were released, fulfilling some long-standing feature
requests:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Custom error types can now be used in your game loop&lt;&#x2F;li&gt;
&lt;li&gt;Custom shaders gained support for multiple texture samplers and color uniforms&lt;&#x2F;li&gt;
&lt;li&gt;Methods were added to &lt;code&gt;Texture&lt;&#x2F;code&gt; and &lt;code&gt;Canvas&lt;&#x2F;code&gt; for writing pixel data at runtime&lt;&#x2F;li&gt;
&lt;li&gt;Various helpful &lt;code&gt;std&lt;&#x2F;code&gt; traits were implemented for &lt;code&gt;Color&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For full details and a list of breaking changes, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ogmo3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;ogmo3&quot;&gt;ogmo3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ogmo3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;ogmo3&quot;&gt;ogmo3&lt;&#x2F;a&gt; is a Rust crate for parsing projects and levels created with
&lt;a href=&quot;https:&#x2F;&#x2F;ogmo-editor-3.github.io&#x2F;&quot;&gt;Ogmo Editor 3&lt;&#x2F;a&gt;. It is loosely modeled after &lt;code&gt;ogmo-3-lib&lt;&#x2F;code&gt;, the Haxe reference
implementation of an Ogmo level parser.&lt;&#x2F;p&gt;
&lt;p&gt;This month, it was released onto crates.io for the first time, and a
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;ogmo3&#x2F;blob&#x2F;main&#x2F;examples&#x2F;sample.rs&quot;&gt;full example&lt;&#x2F;a&gt; was added, showing how a simple project can be
loaded into a game engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wilds&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;wilds&quot;&gt;Wilds&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wilds&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wilds.1.png&quot; alt=&quot;Demo: sponza atrium&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;wilds&quot;&gt;Wilds&lt;&#x2F;a&gt; is very early in development game engine.&lt;&#x2F;p&gt;
&lt;p&gt;It features a renderer that uses Vulkan &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;registry&#x2F;vulkan&#x2F;specs&#x2F;1.2-extensions&#x2F;man&#x2F;html&#x2F;VK_KHR_ray_tracing.html&quot;&gt;ray-tracing extension&lt;&#x2F;a&gt; supported
by NVidia RTX cards and future AMD cards.
Screenshot above is rendered using &lt;a href=&quot;https:&#x2F;&#x2F;morgan3d.github.io&#x2F;articles&#x2F;2019-04-01-ddgi&#x2F;&quot;&gt;DDGI&lt;&#x2F;a&gt; technique implemented exclusively
with Rust and GLSL for shaders.
In the whole scene there is only one directional light source - &amp;quot;sun&amp;quot; -
and no &amp;quot;ambient&amp;quot; light.
All geometry in viewport is shadowed from &amp;quot;sun&amp;quot; and is lit with diffuse
illumination.&lt;&#x2F;p&gt;
&lt;p&gt;To keep things as simple as possible the engine uses &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;hecs&quot;&gt;Hecs&lt;&#x2F;a&gt; - minimalistic
ECS library.
Assets are loaded asynchronously using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zakarumych&#x2F;goods&quot;&gt;Goods&lt;&#x2F;a&gt; asset manager.&lt;&#x2F;p&gt;
&lt;p&gt;Traditional rasteriazation rendering pipeline and support &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; backend are planned
to support wider range of platforms&#x2F;hardware.&lt;&#x2F;p&gt;
&lt;p&gt;Implementing GUI system and basic editor is also a priority goal.&lt;&#x2F;p&gt;
&lt;p&gt;Follow progress &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;zakarum4&quot;&gt;on Twitter&lt;&#x2F;a&gt;.
Contributions and feedback are always welcome.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fastnbt-fastanvil&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;owengage&#x2F;fastnbt&quot;&gt;fastnbt &amp;amp; fastanvil&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fastnbt-fastanvil&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;fastnbt.png&quot; alt=&quot;output example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;owengage&#x2F;fastnbt&quot;&gt;fastnbt&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;owengage&quot;&gt;@owengage&lt;&#x2F;a&gt; is a fast parsing library
for Minecraft&#x27;s NBT and Anvil formats.&lt;&#x2F;p&gt;
&lt;p&gt;The project consists of several crates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;fastnbt - fast deserializer and parser for Minecraft: Java Edition&#x27;s
NBT data format.&lt;&#x2F;li&gt;
&lt;li&gt;fastanvil - for rendering Minecraft worlds to maps.&lt;&#x2F;li&gt;
&lt;li&gt;fastnbt-tools - various tools for NBT&#x2F;Anvil, notably a map renderer.&lt;&#x2F;li&gt;
&lt;li&gt;anvil-wasm - an entirely in-the-browser map renderer.
Demo at &lt;a href=&quot;https:&#x2F;&#x2F;owengage.com&#x2F;anvil&quot;&gt;owengage.com&#x2F;anvil&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The project supports only the latest version of Minecraft (1.16 at the moment).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jj6k9b&#x2F;any_minecraft_fans&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mcproto&quot;&gt;mcproto&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mcproto&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;mcproto by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twister915&quot;&gt;@Twister915&lt;&#x2F;a&gt; is an implementation of the Minecraft multiplayer
network protocol in Rust. It consists of three crates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twister915&#x2F;mcproto-rs&quot;&gt;mcproto-rs&lt;&#x2F;a&gt; - the protocol itself,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twister915&#x2F;mctokio&quot;&gt;mctokio&lt;&#x2F;a&gt; - tokio I&#x2F;O stuff,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twister915&#x2F;rustcord&quot;&gt;rustcord&lt;&#x2F;a&gt; - a layer 7 server-switching proxy implementation (WIP).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jcbawo&#x2F;the_entire_minecraft_protocol_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ajour-world-of-warcraft-addon-manager&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;getajour.com&quot;&gt;Ajour&lt;&#x2F;a&gt; - World of Warcraft Addon Manager&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ajour-world-of-warcraft-addon-manager&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;getajour.com&quot;&gt;&lt;img src=&quot;ajour-banner.jpg&quot; alt=&quot;Ajour Banner&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;getajour.com&quot;&gt;Ajour&lt;&#x2F;a&gt; is a World of Warcraft addon manager written in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt; as GUI
library. The project is completely advertisement free, privacy respecting, and
open source.&lt;&#x2F;p&gt;
&lt;p&gt;October updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Catalog support for installing addons.&lt;&#x2F;li&gt;
&lt;li&gt;Beta, PTR support.&lt;&#x2F;li&gt;
&lt;li&gt;Release channels on addons.&lt;&#x2F;li&gt;
&lt;li&gt;CLI options to run Ajour headless.&lt;&#x2F;li&gt;
&lt;li&gt;Community driven API.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;ajour&quot;&gt;Discord server&lt;&#x2F;a&gt; and say hi.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;getajour.com&quot;&gt;&lt;img src=&quot;ajour-ui.png&quot; alt=&quot;Ajour UI&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;proton-5-13-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&quot;&gt;Proton&lt;&#x2F;a&gt; 5.13-1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#proton-5-13-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;In addition to adding Linux Support for more Windows-exclusive games,
Valve Software&#x27;s wine-based translation layer for Linux: Proton now
includes Rust as part of its build system.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;tree&#x2F;proton_5.13&#x2F;media-converter&quot;&gt;Media Converter&lt;&#x2F;a&gt;, is a Proton module
written in Rust as a gstreamer plugin to convert certain media encodings
from one format to another.&lt;&#x2F;p&gt;
&lt;p&gt;Documentation for building Proton is available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&quot;&gt;Github&lt;&#x2F;a&gt;.
Further documentation on Media Converter and its source code is available
on the module&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ValveSoftware&#x2F;Proton&#x2F;tree&#x2F;proton_5.13&#x2F;media-converter&quot;&gt;repository&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;269&quot;&gt;#269 &amp;quot;Proper style guide&#x2F;contributing guidelines&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;21&quot;&gt;#21 &amp;quot;Planning a survey for Rust game developers&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;94&quot;&gt;#94 &amp;quot;raw-window-handle maintenance&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&quot;&gt;rust-gamedev&#x2F;ecs_bench_suite&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&#x2F;issues&#x2F;14&quot;&gt;#14 &amp;quot;Also benchmark in debug mode&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;jr2170&#x2F;this_month_in_rust_gamedev_15_october_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1325853594512396289&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #14 - September 2020</title>
            <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/014/</link>
            <guid>https://gamedev.rs/news/014/</guid>
            <description>&lt;p&gt;Welcome to the 14th issue of the Rust GameDev Workgroup&#x27;s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;014&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;014&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;014&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;014&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;014&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)
_image caption_

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren_river.png&quot; alt=&quot;Landscape&quot; &#x2F;&gt;
&lt;em&gt;Deer by the riverside&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In September, Veloren hit 5000 commits to the main repo! A privilege escalation
bug was found in the game. It was quickly patched, and a PSA was sent out to
notify server owners of its presence. A Discord bot was created to help manage a
testing server. Airshipper, Veloren&#x27;s launcher, saw the release of version
0.4.0. Lots of work is going on to improve the state of Veloren&#x27;s server
infrastructure. A stress test was run with 15 players to see how smaller server
could handle running the game.&lt;&#x2F;p&gt;
&lt;p&gt;Improvements were made to the chunk compression which resulted in a ~7x memory
reduction in their storage. The settings menu has been overhauled, along with
many other elements of the UI. A stone golem boss was merged, adding a new boss
to dungeons. Work has been done on beam weapons and collisions, resulting in a
significantly improved healing sceptre.&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics from September:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-84#compilation-breakdown-by-angelonfira&quot;&gt;Compilation Breakdown&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-85#improved-server-metrics-to-improve-server-performance-by-xmac94x&quot;&gt;Improved Server Metrics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-86#psa-privilege-escalation-bug&quot;&gt;PSA: Privilege Escalation bug&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-86#animation-changes-by-slipped&quot;&gt;Animation Changes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-86#attack-updates-by-sam&quot;&gt;Attack Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-86#beam-collisions-by-sam&quot;&gt;Beam Collisions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-87#sceptre-rework-by-sam&quot;&gt;Sceptre Rework&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-87#memory-optimizations-by-sharp&quot;&gt;Memory Optimizations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;posts&#x2F;art-blog-no-7-41635011&quot;&gt;Art Blog #7&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;September&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-84&quot;&gt;#84&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-85&quot;&gt;#85&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-86&quot;&gt;#86&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-87&quot;&gt;#87&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;veloren_night.png&quot; alt=&quot;Healing sceptre&quot; &#x2F;&gt;
&lt;em&gt;A reprise from hunting at night&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In October, Veloren will keep pushing towards more scalable infrastructure.
Tests are happening to move towards a Kubernetes cluster to manage more
infrastructure from code. Optimizations will keep coming in as we find places to
improve. 0.8 may release sometime this month, however, the exact date is yet to
be set.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.png&quot; alt=&quot;Isometric buildings and textured areas&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a traffic simulation game exploring how small changes
to roads affect cyclists, transit users, pedestrians, and drivers. Any city
with OpenStreetMap coverage can be used!&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;finished support for driving on the left side of the road;&lt;&#x2F;li&gt;
&lt;li&gt;isometric buildings and support for textures by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelkirk&quot;&gt;Michael&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;a flurry of major UI updates, thanks to the return of the project&#x27;s UX
designer;&lt;&#x2F;li&gt;
&lt;li&gt;an option to disable parking simulation, to workaround missing data;&lt;&#x2F;li&gt;
&lt;li&gt;alleyways imported from OSM;&lt;&#x2F;li&gt;
&lt;li&gt;more realistic traffic signal timing constraints, thanks to
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NoSuchThingAsRandom&#x2F;&quot;&gt;Sam&lt;&#x2F;a&gt;, a new contributor.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;garden&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden.jpeg&quot; alt=&quot;screenshot: trees and water&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.
Some of the updates from &lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;september&#x2F;&quot;&gt;the September devlog&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The project switched to Nvidia’s PhysX from a custom physics engine.&lt;&#x2F;li&gt;
&lt;li&gt;More accurate plant clone placement.&lt;&#x2F;li&gt;
&lt;li&gt;Significant rendering performance improvements.&lt;&#x2F;li&gt;
&lt;li&gt;Work on saving and loading system has begun.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;galangua&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tyfkda.github.io&#x2F;galangua&#x2F;&quot;&gt;galangua&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#galangua&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;galangua.png&quot; alt=&quot;screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tyfkda.github.io&#x2F;galangua&#x2F;&quot;&gt;galangua&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tyfkda&quot;&gt;@tyfkda&lt;&#x2F;a&gt; is a dynamic 2D shoot &#x27;em up game,
written in Rust using SDL2.
It works on the desktop as well as in the browser.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tyfkda&#x2F;galangua&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;&lt;img src=&quot;way-of-rhea-header.jpg&quot; alt=&quot;Way of Rhea logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle platformer that takes place in a world where you can
only interact with items that match your current color.
Changes since the last update:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The circuit level has been reworked:
it&#x27;s now split into three different levels
and the puzzles are better tutorialized, and there are more of them.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A tiny amount of screen shake was added to the game.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Work has begun on a couple of new levels for the ice biome
In this biome, you have to learn to predict the behavior of the
crabs to solve the puzzles.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;way-of-rhea-ice-biome-snowcrab.png&quot; alt=&quot;Ice Biome&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anthropicst&quot;&gt;@AnthropicSt&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; on Twitter or
&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;newsletter&#x2F;signup&#x2F;tech&quot;&gt;sign up for the mailing list&lt;&#x2F;a&gt; for updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;citybound&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aeplay.org&#x2F;citybound&quot;&gt;Citybound&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#citybound&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;citybound.png&quot; alt=&quot;Live editing of procedural architecture rules&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aeplay.org&#x2F;citybound&quot;&gt;Citybound&lt;&#x2F;a&gt; is a city simulation and city building game. This month,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ae_play&quot;&gt;Anselm Eickhoff&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;Citybound&#x2F;comments&#x2F;j2xg2s&#x2F;sneak_peek_custom_procedural_architecture&quot;&gt;a small demo&lt;&#x2F;a&gt; of his domain specific language
for procedural architecture, which is interpreted by Rust and now supports
hot-code reload of building rules in the running game.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recall-singularity&quot;&gt;Recall Singularity&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#recall-singularity&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;recall_singularity.png&quot; alt=&quot;Demo of the basic ship collision&quot; &#x2F;&gt;
&lt;em&gt;A ray-traced selection of modules&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Recall Singularity is a game about designing autonomous factory ships and
stations created by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month a new devlog was posted:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recall-singularity-in-sep-2020-e2f33a85fd7c&quot;&gt;&amp;quot;Recall Singularity in Sep 2020&amp;quot;&lt;&#x2F;a&gt;.
You can also check out a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=kUIiU9LtOFY&quot;&gt;status update and progress video here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improving the robustness of the game core and networking.&lt;&#x2F;li&gt;
&lt;li&gt;Ship sections and standalone ships.&lt;&#x2F;li&gt;
&lt;li&gt;Different synchronization algorithms for different game modes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;mimas&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&#x2F;mimas&quot;&gt;Mimas&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mimas&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mimas.png&quot; alt=&quot;Mimas screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&#x2F;mimas&quot;&gt;Mimas&lt;&#x2F;a&gt; is a WIP voxel engine and game, inspired by Minetest and Minecraft.
It&#x27;s been in development for almost 2 years and has recently seen a public
prototype release 0.4.0.&lt;&#x2F;p&gt;
&lt;p&gt;Several of the current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Procedural map generation with hilly landscape, trees, flowers, water, and caves&lt;&#x2F;li&gt;
&lt;li&gt;Map manipulation (removal&#x2F;addition of blocks)&lt;&#x2F;li&gt;
&lt;li&gt;Crafting&lt;&#x2F;li&gt;
&lt;li&gt;Chests&lt;&#x2F;li&gt;
&lt;li&gt;Textures (taken from the Minetest project, under CC-BY-SA license)&lt;&#x2F;li&gt;
&lt;li&gt;Tools&lt;&#x2F;li&gt;
&lt;li&gt;QUIC based network protocol with SRP based authentication&lt;&#x2F;li&gt;
&lt;li&gt;Multiplayer: chat, (hardcoded) avatars&lt;&#x2F;li&gt;
&lt;li&gt;Ability to add custom content (e.g. blocks) using a toml format&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Imgur screenshot &lt;a href=&quot;https:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;vvo7len&quot;&gt;gallery&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nox-futura-rust-edition&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;noxfutura&quot;&gt;Nox Futura (Rust Edition)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nox-futura-rust-edition&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;noxfutura.jpeg&quot; alt=&quot;Gameplay screenshots&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;noxfutura&quot;&gt;Nox Futura&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
is an open-source long-term passion project,
a Dwarf-Fortress and RimWorld inspired base building game.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;ivgdnj&#x2F;sharing_saturday_329&#x2F;g5t5lo0&quot;&gt;recent updates&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The WGPU-based rendered is undergoing a major restructure.&lt;&#x2F;li&gt;
&lt;li&gt;The game was updated to Legion 0.3 - it required rewriting a lot of code,
but the new syntax sugar is a joy to use, and the backend is even faster now.&lt;&#x2F;li&gt;
&lt;li&gt;The Greedy Voxel algorithm was significantly improved.&lt;&#x2F;li&gt;
&lt;li&gt;OBJ models are now supported - useful for things like tree&#x2F;vegetation geometry,
which can now use a stylized low-poly graphic without the added weight
of a bunch of cubes.&lt;&#x2F;li&gt;
&lt;li&gt;Palette-based rendering - the output system is now constrained
to a 256 color palette, mostly to play with stylized 3D rendering.&lt;&#x2F;li&gt;
&lt;li&gt;New format for data files that combines multiple RON objects in one place.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;pGLOWrpg&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg_banner.png&quot; alt=&quot;pGLOWrpg banner&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;@pGLOWrpg&lt;&#x2F;a&gt; (Procedurally Generated Living Open World RPG) is a long-term
project in development by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt;, which aims to be a text-based game with
maximum portability and accessibility and focus on interactions and emergent
narrative.&lt;&#x2F;p&gt;
&lt;p&gt;The pGLOWrpg meets its first official anniversary on September the 15th
and goes public at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;roalyr&#x2F;pglowrpg&quot;&gt;pGLOWrpg repo&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;For the past month the main focus of the development was on:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improving the UI.&lt;&#x2F;li&gt;
&lt;li&gt;Major refactoring.&lt;&#x2F;li&gt;
&lt;li&gt;Unification of I&#x2F;O means.&lt;&#x2F;li&gt;
&lt;li&gt;Making things ready for publication.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Main features of the reported version are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to generate one or many worlds from customizable presets.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to have output in both raw (b&#x2F;w .png) and colorized images.&lt;&#x2F;li&gt;
&lt;li&gt;Generated data is as follows: terrain, watermask, biomes, rivers, geological regions,
rainfall, and temperature.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For main feature reports and dev blogs follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;@pGLOWrpg&lt;&#x2F;a&gt; on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oh-no-lava&quot;&gt;Oh no, Lava!&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oh-no-lava&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ohnolava_troligtvis.gif&quot; alt=&quot;shooting water into lava&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Oh no, Lava!&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;captainfleppo&quot;&gt;@captainfleppo&lt;&#x2F;a&gt; is the working title
of a platforming game which take inspiration
from an old iOS game created back in 2014. The game is running with &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt;
as its core. The gameplay isn&#x27;t there yet, but you as a player need to jump on
furnitures, collect coins, and fight lava&#x2F;fire based enemies with your water gun.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zemeroth&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zemeroth&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;zemeroth_chain.gif&quot; alt=&quot;Summoner imps throw a swordsman around&quot; &#x2F;&gt;
&lt;em&gt;Be careful with chained reaction attacks!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff&lt;&#x2F;a&gt; is a minimalistic 2D turn-based tactical game.
Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The game now &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1306651821314891776&quot;&gt;stores simulated text lifetimes&lt;&#x2F;a&gt; for each tile
during the event processing to reduce popup text overlapping.&lt;&#x2F;li&gt;
&lt;li&gt;Push bombs are more useful now: they still don&#x27;t cause direct damage,
but &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1304458740758970368&quot;&gt;now they can push away other bombs too&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1297239743269412864&quot;&gt;All the assets sources are merged into the main repository&lt;&#x2F;a&gt;
and the project now uses &lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;resvg&quot;&gt;resvg&lt;&#x2F;a&gt; instead of console Inkscape
for svg-&amp;gt;png rendering.&lt;&#x2F;li&gt;
&lt;li&gt;Abilities &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1300817277714075648&quot;&gt;don&#x27;t have parameters now&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Dynamic depth-sorting &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1310603877507620865&quot;&gt;was implemented&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The work on adding sounds continues:
check out the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1303736184045174785&quot;&gt;video of the first results&lt;&#x2F;a&gt; 🔊.&lt;&#x2F;li&gt;
&lt;li&gt;Smaller UI improvements and bugfixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a WIP online multiplayer game.
In September, lots of work was done on terrain sculpting systems. Another tool
was added, allowing material painting onto the terrain. Along with the scenery
placement tool, there are now three separate tools in the editor&#x27;s arsenal.&lt;&#x2F;p&gt;
&lt;p&gt;Full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;september-2020&#x2F;083-2020-09-06.html&quot;&gt;#083&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;september-2020&#x2F;084-2020-09-13.html&quot;&gt;#084&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;september-2020&#x2F;085-2020-09-20.html&quot;&gt;#085&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;september-2020&#x2F;086-2020-09-27.html&quot;&gt;#086&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bugout&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Terkwood&#x2F;BUGOUT&quot;&gt;BUGOUT&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bugout&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;BUGOUT.jpg&quot; alt=&quot;Play Go against AI and friends on the web&quot; &#x2F;&gt;
&lt;em&gt;Playing KataGo AI in 9x9&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Terkwood&#x2F;BUGOUT&quot;&gt;BUGOUT&lt;&#x2F;a&gt; is a web application which allows you to play Go&#x2F;Baduk&#x2F;Weiqi
against a leading AI (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lightvector&#x2F;KataGo&quot;&gt;KataGo&lt;&#x2F;a&gt;).
It provides a multiplayer mode so that you can play other humans,
either by joining a public queue or sharing a private URL to your friend.&lt;&#x2F;p&gt;
&lt;p&gt;The user interface is lifted from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SabakiHQ&#x2F;Sabaki&quot;&gt;Sabaki&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The initial installation&#x27;s AI is powered by an energy-efficient
&lt;a href=&quot;https:&#x2F;&#x2F;developer.nvidia.com&#x2F;embedded&#x2F;jetson-nano-developer-kit&quot;&gt;dev board&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;BUGOUT is marching actively toward production, at which point the
team will publish the website address and invite users.
The author anticipates being finished with the production release
prior to Jan 1, 2021.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetris-bane&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;andrew-jones.itch.io&#x2F;tetris-bane&quot;&gt;Tetris Bane&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetris-bane&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tetris-bane.png&quot; alt=&quot;Tetris Bane&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;andrew-jones.itch.io&#x2F;tetris-bane&quot;&gt;Tetris Bane&lt;&#x2F;a&gt; is an open-source Tetris clone
that mixes things up with multiple game modes.
There&#x27;s a hard bane mode, classic mode for the purists,
ultra hard metal mode, and a chill mode.
Tetris Bane challenges you to get more then 2 lines in metal mode.&lt;&#x2F;p&gt;
&lt;p&gt;You can &lt;a href=&quot;https:&#x2F;&#x2F;andrew-jones.itch.io&#x2F;tetris-bane&quot;&gt;download&lt;&#x2F;a&gt; the game for Windows, macOS and Linux.&lt;&#x2F;p&gt;
&lt;p&gt;The game is written using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-SDL2&#x2F;rust-sdl2&quot;&gt;rust-sdl2&lt;&#x2F;a&gt;.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andii1701&#x2F;tetris-bane&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;project-yawc&quot;&gt;Project YAWC&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#project-yawc&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;project_yawc.png&quot; alt=&quot;Screenshot of an in-progress game of Project YAWC&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project YAWC is an in-progress Advance-Wars style strategy game being developed
by junkmail using &lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&#x2F;&quot;&gt;ggez&lt;&#x2F;a&gt; as a framework. The game is currently in a closed alpha
state with working netplay. September saw the release of version A2, including
revamped netcode and the full core set of units.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;space-shooter-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;space_shooter_rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#space-shooter-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;space_shooter_rs.gif&quot; alt=&quot;space_shooter_rs_gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;space_shooter_rs&lt;&#x2F;a&gt; is a 2D shooter game made with the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; game engine.
It is inspired by games like Raiden and the Binding of Isaac.&lt;&#x2F;p&gt;
&lt;p&gt;In September, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;Micah Tigley&lt;&#x2F;a&gt; joined the project and has been collaborating with
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo Supina&lt;&#x2F;a&gt; to refactor a significant chunk of the codebase. Lots of work has
been on collision detection, combat, and movement. This will allow for easier
future development.&lt;&#x2F;p&gt;
&lt;p&gt;Both developers wrote about the work and their experiences developing space_shooter_rs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;micronote.tech&#x2F;2020&#x2F;10&#x2F;How-to-Revive-a-Dead-Project&quot;&gt;How to Revive a Dead Project&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mtigley.dev&#x2F;posts&#x2F;contributing_to_spaceshooter_rs&quot;&gt;Collaborating on Amethyst showcase project: space_shooter_rs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;so-you-want-to-live-reload-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fasterthanli.me&#x2F;articles&#x2F;so-you-want-to-live-reload-rust&quot;&gt;So You Want to Live-Reload Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#so-you-want-to-live-reload-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cool-bear.png&quot; alt=&quot;cool bear with glasses&quot; &#x2F;&gt;
&lt;em&gt;Cool bear&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fasterthanli.me&#x2F;&quot;&gt;@fasterthanlime&lt;&#x2F;a&gt; published a giant blog post
&lt;a href=&quot;https:&#x2F;&#x2F;fasterthanli.me&#x2F;articles&#x2F;so-you-want-to-live-reload-rust&quot;&gt;&amp;quot;So you want to live-reload Rust&amp;quot;&lt;&#x2F;a&gt;
- a very deep technical dive into reloading a dylib
and a bunch of related issues.
Lots of interesting insights for folks who want
to better understand nuances of hot reloading.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;j0ajdy&#x2F;so_you_want_to_livereload_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-wasm-hotreload&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shekohex&#x2F;rust-wasm-hotreload&quot;&gt;rust-wasm-hotreload&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-wasm-hotreload&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shekohex&#x2F;rust-wasm-hotreload&quot;&gt;rust-wasm-hotreload&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ShekoHex&quot;&gt;@ShekoHex&lt;&#x2F;a&gt; is a PoC of using WebAssemply
as a hot-reloadable code logic at runtime without restarting the host process.
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ShekoHex&#x2F;status&#x2F;1302973994417651714&quot;&gt;Check out a video demo here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;learn-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&quot;&gt;Learn WGPU&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learn-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sothr&quot;&gt;@sothr&lt;&#x2F;a&gt; released another chapter
of the &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&quot;&gt;&amp;quot;Learn WGPU&amp;quot;&lt;&#x2F;a&gt; tutorial:
&lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;intermediate&#x2F;tutorial13-threading&quot;&gt;&amp;quot;Threading WGPU Resource Loading with Rayon&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the whole tutorial &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;news&#x2F;#_0-6&quot;&gt;was upgraded to WGPU v0.6&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;is-it-easy-to-draw-a-line&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vladjuckov.github.io&#x2F;hqlines&#x2F;&quot;&gt;Is It Easy to Draw a Line?&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#is-it-easy-to-draw-a-line&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;lines_hexstrat.jpeg&quot; alt=&quot;hexagonal strategy map with region borders&quot; &#x2F;&gt;
&lt;em&gt;Example of result chains.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A small note by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;@VladZhukov0&lt;&#x2F;a&gt; about drawing lines and chains
with signed distance fields.
The resulted lines are nice looking on edges and have rounded corners.
Chains for this article are assumed to be opaque.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.github.io&#x2F;lines&#x2F;&quot;&gt;online demo&lt;&#x2F;a&gt;
and its &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pum-purum-pum-pum&#x2F;Lines&quot;&gt;source code&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;opengl-preprocessor-for-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codecrash.me&#x2F;an-opengl-preprocessor-for-rust&quot;&gt;OpenGL Preprocessor for Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#opengl-preprocessor-for-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;With the full power of Cargo build scripts and &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.app&quot;&gt;Tera&lt;&#x2F;a&gt;, you can create an advanced
GLSL preprocessor which can generate code conditionally, in loops, and even
inherit code from other templates.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;opengl_preprocessor.png&quot; alt=&quot;An OpenGL preprocessor for Rust&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Writing plain GLSL code is uncomfortable, code is quite often is duplicated, libraries
aren&#x27;t something natural for GLSL (means you can&#x27;t out of the box do #include &amp;quot;library.glsl&amp;quot;).
The last point is especially problematic if some constants actually originate in
your game logic (like the number of player types). Updating these values manually
in your shader code is repetitive and prone to both error and simple forgetfulness.
It&#x27;s really helpful to build some kind of preprocessor for your GLSL code,
which can include other files, so you can organize your code into manageable chunks.
With the power of &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.app&quot;&gt;Tera&lt;&#x2F;a&gt;, it&#x27;s now easy to accomplish.
Because Rust is also often used for web projects, which need a lot of templated
web-pages preprocessing, we can borrow such technology for our needs,
combine it with cargo build scripts and create a compile-time preprocessing tool.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-gamedev-ecs-and-bevy&quot;&gt;Rust, Gamedev, ECS, and Bevy&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-ecs-and-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ecs-bevy-tutorial.png&quot; alt=&quot;Bevy hello world code snippet and two game screenshots, one displaying two blue spheres in a grey canvas and another one displaying a gameboy colored tile game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;hugopeixoto&quot;&gt;@hugopeixoto&lt;&#x2F;a&gt; released a couple of blog posts on ECS and Bevy,
including a tutorial on how to get started.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;hugopeixoto.net&#x2F;articles&#x2F;rust-gamedev-ecs-bevy.html&quot;&gt;first part&lt;&#x2F;a&gt; gives us an in depth overview of what ECS.
It starts with pseudocode for an object oriented approach
and goes through several iterations until we get to the ECS paradigm.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;hugopeixoto.net&#x2F;articles&#x2F;rust-gamedev-ecs-bevy-p2.html&quot;&gt;second part&lt;&#x2F;a&gt; is a tutorial on how to use &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;bevy&lt;&#x2F;a&gt;,
a data driven game engine built in Rust.
It goes over the basic features of the engine,
using the example presented in the first part.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;flappy-bird-in-bevy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Qjc0V58lB7A&quot;&gt;Flappy Bird in Bevy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flappy-bird-in-bevy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Qjc0V58lB7A&quot;&gt;&lt;img src=&quot;tantan_bevy.png&quot; alt=&quot;tantan preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;TantanDev&quot;&gt;@TantanDev&lt;&#x2F;a&gt; is back with &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Qjc0V58lB7A&quot;&gt;another video&lt;&#x2F;a&gt;!
In this one, they made a Flappy Bird clone using Bevy
and shared their experience programming with it.&lt;&#x2F;p&gt;
&lt;p&gt;The source code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;flappy_bevy&quot;&gt;can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;real-time-global-illumination-in-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ixocl2&#x2F;real_time_diffuse_global_illumination&quot;&gt;Real-Time Global Illumination in WGPU&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#real-time-global-illumination-in-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ixocl2&#x2F;real_time_diffuse_global_illumination&quot;&gt;&lt;img src=&quot;diff-gi.gif&quot; alt=&quot;diff-gi-gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Infinite light bounces in Cornell Box&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;u&#x2F;DI2edd&quot;&gt;DI2edd&lt;&#x2F;a&gt; shared his &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ixocl2&#x2F;real_time_diffuse_global_illumination&quot;&gt;real-time diffuse global illumination demo on &#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;.
It&#x27;s written in 100% Rust and uses WGPU for graphics, proving that the API
is an excellent choice even for advanced computer graphics applications.&lt;&#x2F;p&gt;
&lt;p&gt;The technique provides real time global illumination for static lambertian
geometry, and is the implementation of the 2017 paper &lt;a href=&quot;https:&#x2F;&#x2F;arisilvennoinen.github.io&#x2F;Projects&#x2F;RTGI&#x2F;index.html&quot;&gt;&amp;quot;Real-time Global
Illumination by Precomputed Local Reconstruction
from Sparse Radiance Probes&amp;quot;&lt;&#x2F;a&gt;,
which proposes a spherical harmonics-based approach to solve the rendering equation
in real time.&lt;&#x2F;p&gt;
&lt;p&gt;In practice, this means that the expensive light transport calculations are performed
in a precomputation step, which relies on - among others - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Twinklebear&#x2F;embree-rs&quot;&gt;embree-rs&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;nalgebra&quot;&gt;nalgebra&lt;&#x2F;a&gt; to produce a compressed
representation of the scene that is then used for lighting reconstruction at runtime.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;legion-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;legion-ecs-v0.3&quot;&gt;legion v0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#legion-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;legion_violin.png&quot; alt=&quot;Benchmarks&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;legion&quot;&gt;Legion&lt;&#x2F;a&gt; is among Rust&#x27;s fastest and most powerful ECS libraries.
After months in development, v0.3 has finally been released to crates.io.
This is a huge release amounting to a near total rewrite of the library
and a major step towards a stable 1.0 release.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;legion-ecs-v0.3&quot;&gt;Check out the v0.3 announcement post&lt;&#x2F;a&gt;
for an overview of the new API and all the updates.&lt;&#x2F;p&gt;
&lt;p&gt;The project&#x27;s repo has also been moved to the Amethyst org
to reflect its close collaboration with the Amethyst community.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;io6evk&#x2F;legion_v03&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;thunderdome&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;thunderdome&quot;&gt;Thunderdome&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#thunderdome&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;thunderdome&quot;&gt;Thunderdome&lt;&#x2F;a&gt; is a &lt;del&gt;gladitorial&lt;&#x2F;del&gt; generational arena library inspired by
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;generational-arena&quot;&gt;generational-arena&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;slotmap&quot;&gt;slotmap&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;slab&quot;&gt;slab&lt;&#x2F;a&gt;. It provides constant time
insertion, lookup, and removal via small (8 byte) keys that stay 8 bytes when
wrapped in &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Data structures like Thunderdome&#x27;s &lt;code&gt;Arena&lt;&#x2F;code&gt; store values and return keys that can
be later used to access those values. These keys are stable across removals and
have a generation counter to solve the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ABA_problem&quot;&gt;ABA Problem&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span&gt; arena = Arena::new();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; foo = arena.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Foo&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; bar = arena.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Bar&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(arena[foo], &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Foo&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(arena[bar], &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Bar&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;arena[bar] = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Replaced&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(arena[bar], &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Replaced&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; foo_value = arena.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;remove&lt;&#x2F;span&gt;&lt;span&gt;(foo);
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(foo_value, Some(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Foo&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The slot previously used by foo will be reused for baz.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; baz = arena.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Baz&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(arena[baz], &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Baz&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; foo is no longer a valid key.
&lt;&#x2F;span&gt;&lt;span&gt;assert_eq!(arena.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(foo), None);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LPGhatguy&#x2F;status&#x2F;1303375906493276160&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fontdue&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mooman219&#x2F;fontdue&quot;&gt;Fontdue&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fontdue&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mooman219&#x2F;fontdue&quot;&gt;Fontdue&lt;&#x2F;a&gt; is a simple, no_std, pure Rust, TrueType &amp;amp; OpenType
font rasterizer and layout tool.
It strives to make interacting with fonts as fast as possible,
and currently has the lowest end to end latency for a font rasterizer.&lt;&#x2F;p&gt;
&lt;p&gt;Fontdue depends on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RazrFalcon&#x2F;ttf-parser&quot;&gt;ttf-parser&lt;&#x2F;a&gt; for parsing fonts,
which supports a wide range of TrueType and OpenType features.&lt;&#x2F;p&gt;
&lt;p&gt;A non-goal of this library is to be allocation free and have a fast,
&amp;quot;zero cost&amp;quot; initial load.
Fontdue does make allocations and depends on the alloc crate.
Fonts are fully parsed on creation and relevant information is stored
in a more convenient to access format.
Unlike other font libraries, the font structures have no lifetime dependencies
since it allocates its own space.&lt;&#x2F;p&gt;
&lt;p&gt;Project&#x27;s roadmap:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;v1.0: fontdue is designed to be a replacement for
rusttype, ab_glyph, parts of glyph_brush, and glyph_brush_layout.
This is a class of font libraries that don&#x27;t tackle shaping.&lt;&#x2F;li&gt;
&lt;li&gt;v2.0: Shaping - the complex layout of text such as Arabic and Devanagari
- will be added.
There are two potential pure Rust libraries (allsorts or rustybuzz)
that are candidates for providing a shaping backend to Fontdue,
but are relatively immature right now.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ilnd41&#x2F;fontdue&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ultraviolet-v0-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fusha.moe&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.6&quot;&gt;ultraviolet v0.6&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultraviolet-v0-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fu5ha&quot;&gt;@fu5ha&lt;&#x2F;a&gt; is a crate for computer-graphics
and games-related linear algebra, but &lt;em&gt;fast&lt;&#x2F;em&gt;,
both in terms of productivity and in terms of runtime performance.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;fusha.moe&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.6&quot;&gt;ultraviolet v0.6&lt;&#x2F;a&gt; was released.
Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Support for 256-bit wide AVX vectors and instructions
as well as 128-bit wide SSE instructions which were already supported.&lt;&#x2F;li&gt;
&lt;li&gt;Support for f64&#x2F;double precision floats under the f64 feature,
including f64x2 and f64x4 SIMD-accelerated types.&lt;&#x2F;li&gt;
&lt;li&gt;Support for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;mint&quot;&gt;mint&lt;&#x2F;a&gt; for most scalar types.&lt;&#x2F;li&gt;
&lt;li&gt;Lots of smaller API and performance improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ir24mp&#x2F;announcing_ultraviolet_06&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;01&#x2F;this-month-september&#x2F;&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;01&#x2F;this-month-september&#x2F;&quot;&gt;September updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;on-going work for multi-file projects;&lt;&#x2F;li&gt;
&lt;li&gt;build pipeline improvements;&lt;&#x2F;li&gt;
&lt;li&gt;bug fixes in the Mun compiler and C++ bindings;&lt;&#x2F;li&gt;
&lt;li&gt;a lot of refactors and quality of life improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;audir&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;norse-rs&#x2F;audir&quot;&gt;audir&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#audir&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;norse-rs&#x2F;audir&quot;&gt;audir&lt;&#x2F;a&gt; is a low level audio library supporting Windows (WASAPI), Linux (Pulse)
and Android (OpenSLES &amp;amp; AAudio).&lt;&#x2F;p&gt;
&lt;p&gt;It aims at providing a minimal and mostly unsafe but feature-rich API on top of
common audio backends with focus on gaming applications. The initial release
version 0.1.0 provides basic recording and playback support for all available
backends, including a small music player example!&lt;&#x2F;p&gt;
&lt;p&gt;Currently looking into coupling with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RustAudio&#x2F;dasp&quot;&gt;dasp&lt;&#x2F;a&gt; for dsp audio graphs to provide
a higher level entry point.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crevice&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;crevice&quot;&gt;Crevice&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crevice&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&#x2F;crevice&quot;&gt;Crevice&lt;&#x2F;a&gt; is a library that helps define GLSL-compatible (std140) structs for
use in uniform and storage buffers. It uses new &lt;code&gt;const fn&lt;&#x2F;code&gt; capabilities
stabilized in &lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2020&#x2F;08&#x2F;27&#x2F;Rust-1.46.0.html&quot;&gt;Rust 1.46.0&lt;&#x2F;a&gt; to align types with explicitly zeroed padding.&lt;&#x2F;p&gt;
&lt;p&gt;Crevice depends heavily on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;mint&quot;&gt;mint&lt;&#x2F;a&gt; to support almost any Rust math library. It
also contains helpers for safely sizing and writing buffers, making dynamic
buffer layout a breeze.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span&gt;(AsStd140)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span&gt;MainUniform {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;orientation&lt;&#x2F;span&gt;&lt;span&gt;: mint::ColumnMatrix3&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f32&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span&gt;: mint::Vector3&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f32&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;scale&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f32&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; value = MainUniform {
&lt;&#x2F;span&gt;&lt;span&gt;    orientation: cgmath::Matrix3::identity().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;into&lt;&#x2F;span&gt;&lt;span&gt;(),
&lt;&#x2F;span&gt;&lt;span&gt;    position: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3.0&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;into&lt;&#x2F;span&gt;&lt;span&gt;(),
&lt;&#x2F;span&gt;&lt;span&gt;    scale: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;4.0&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;upload_data_to_gpu&lt;&#x2F;span&gt;&lt;span&gt;(value.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;as_std140&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;as_bytes&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LPGhatguy&#x2F;status&#x2F;1308499131212599296&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;femtovg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;femtovg&#x2F;femtovg&quot;&gt;FemtoVG&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#femtovg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;femtovg.png&quot; alt=&quot;femtovg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;femtovg&#x2F;femtovg&quot;&gt;FemtoVG&lt;&#x2F;a&gt; is a 2D canvas API in Rust, based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;memononen&#x2F;nanovg&quot;&gt;nanovg&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Currently, FemtoVG uses OpenGL as a rendering backend. A Metal backend is 95%
done, and a wgpu backend is on the roadmap. The project is definitely looking
for contributors.&lt;&#x2F;p&gt;
&lt;p&gt;Unlike NanoVG, FemtoVG has full text-shaping support thanks to harfbuzz.&lt;&#x2F;p&gt;
&lt;p&gt;FemtoVG, just like the original NanoVG, is based on the &lt;em&gt;stencil-then-cover&lt;&#x2F;em&gt;
approach presented in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;femtovg&#x2F;femtovg&#x2F;blob&#x2F;master&#x2F;assets&#x2F;gpupathrender.pdf&quot;&gt;GPU-accelerated Path Rendering&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;V69VdVu&quot;&gt;Discord channel&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;femtovg&quot;&gt;FemtoVG on twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs-and-gfx-portability&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;portability&quot;&gt;gfx-portability&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-and-gfx-portability&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gfx-logo.png&quot; alt=&quot;gfx-rs logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;portability&quot;&gt;gfx-portability&lt;&#x2F;a&gt; is a Vulkan portability implementation based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt;.
It&#x27;s basically a drop-in implementation of Vulkan on top of Metal and D3D12,
useful on platforms that don&#x27;t have native Vulkan support, or have buggy drivers.&lt;&#x2F;p&gt;
&lt;p&gt;It released version &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;portability&#x2F;releases&#x2F;tag&#x2F;0.8.1&quot;&gt;0.8.1&lt;&#x2F;a&gt;
with official support for the new &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;registry&#x2F;vulkan&#x2F;specs&#x2F;1.2-extensions&#x2F;man&#x2F;html&#x2F;VK_KHR_portability_subset.html&quot;&gt;KHR portability extension&lt;&#x2F;a&gt;,
as well as a few other extensions, plus a number of correctness fixes.&lt;&#x2F;p&gt;
&lt;p&gt;gfx-rs team asks Rust users of Vulkano, Ash, and other Vulkan-only wrappers to try
out the gfx-portability as a solution on macOS and relevant Windows 10 platforms.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt; itself, the DX12 backend, and the descriptor indexing feature support
got improved. There has been a push to get DX11 backend in a solid shape,
and it can now run &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt; pretty well 🎉.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;riddle&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vickles&#x2F;riddle&quot;&gt;Riddle&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#riddle&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vickles&#x2F;riddle&quot;&gt;Riddle&lt;&#x2F;a&gt; is a Rust media library in the vein of SDL,
building as far as possible on the most active&#x2F;standard Rust libraries
(winit, wgpu, image, etc). Riddle is deliberately not an engine, or a framework.
It is a library devoted to exposing media related features in a unified way while
avoiding prescribing program structure. It provides abstractions over windowing,
input, audio, image loading&#x2F;manipulation and provides a basic wgpu based 2D
renderer.
The &lt;a href=&quot;https:&#x2F;&#x2F;vickles.github.io&#x2F;riddle&#x2F;0.1.0&#x2F;riddle&quot;&gt;docs&lt;&#x2F;a&gt; contain runnable examples for most methods and types.&lt;&#x2F;p&gt;
&lt;p&gt;The goal is to provide a stable foundation, resilient to developments in the Rust
gamedev ecosystem, on which games, custom engines, and other media applications can
be built.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;j0xa3s&#x2F;riddle_010&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bracket-lib&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;Bracket-Lib&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bracket-lib&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; (previously &lt;code&gt;rltk_rs&lt;&#x2F;code&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
is a Rust implementation of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Bracket-lib is going through a stability pass, focusing on freezing the API.
It will be featured in the author&#x27;s upcoming book:
&lt;em&gt;Hands-on Rust: Effective Learning through 2D Game Development and Play&lt;&#x2F;em&gt;.
The book should be going into early access&#x2F;beta in time for the next newsletter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;not-fl3&quot;&gt;&lt;img src=&quot;quadgames.gif&quot; alt=&quot;quadgames&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Games built with miniquad&#x2F;macroquad.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a cross-platform
(Windows&#x2F;Linux&#x2F;macOS&#x2F;Android&#x2F;iOS&#x2F;WASM)
game framework build on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month 0.3 preview was released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improved &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;macroquad&#x2F;0.3.0-alpha.0&#x2F;macroquad&#x2F;index.html&quot;&gt;documentation&lt;&#x2F;a&gt; on docs.rs.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Screen reading shaders and a &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;platformer-book&#x2F;screen-reading.html&quot;&gt;tutorial about them&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Updated &amp;quot;shadertoy&amp;quot; - small interactive GLSL playground - example.
Check out the &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;shadertoy.html&quot;&gt;web demo&lt;&#x2F;a&gt; and its &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;shadertoy.rs&quot;&gt;source code&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;shadertoy.html&quot;&gt;&lt;img src=&quot;shadertoy.gif&quot; alt=&quot;shadertoy&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&quot;&gt;@not-fl3&lt;&#x2F;a&gt; (the main developer of all current *quad projects)
has been added to the GitHub Sponsors.
Check out the project&#x27;s story, vision, and roadmap
on the new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;not-fl3&quot;&gt;sponsors page&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
version &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1301210538299609088&quot;&gt;0.5&lt;&#x2F;a&gt; was released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cargo feature flags, allowing you to remove unused functionality and
shrink your build&lt;&#x2F;li&gt;
&lt;li&gt;Relative mouse events and infinite mouse movement (allowing for FPS-style
control schemes)&lt;&#x2F;li&gt;
&lt;li&gt;Extra methods for getting and setting the state of a playing sound&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For full details and a list of breaking changes, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, this month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;puppetmaster-&quot;&gt;puppetmaster&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;puppetmaster-&#x2F;tetrapack&quot;&gt;tetrapack&lt;&#x2F;a&gt;, a set of useful
extensions for Tetra. This includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Helpful timer types&lt;&#x2F;li&gt;
&lt;li&gt;Looping background music&lt;&#x2F;li&gt;
&lt;li&gt;Custom mouse cursors&lt;&#x2F;li&gt;
&lt;li&gt;Input utility functions&lt;&#x2F;li&gt;
&lt;li&gt;Tilemaps and tile animations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;bevy-engine-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-2&quot;&gt;Bevy Engine v0.2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-engine-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;&lt;img src=&quot;bevy_logo.png&quot; alt=&quot;bevy logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; is a refreshingly simple data-driven game engine built in Rust.
It is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&quot;&gt;free and open source&lt;&#x2F;a&gt; forever!&lt;&#x2F;p&gt;
&lt;p&gt;This month, thanks to 87 contributors, 174 pull requests, and their
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;cart&quot;&gt;generous sponsors&lt;&#x2F;a&gt;, Bevy 0.2 was released. You can view the
&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;bevy-0-2&quot;&gt;full Bevy 0.2 announcement here&lt;&#x2F;a&gt;. Here are some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Async Task System: Bevy now has a brand new async-friendly task system,
which enables the creation of context-specific task pools. For example, you might
have separate pools for compute, IO, networking, etc. This also provides the
flexibility to load balance work appropriately according to work type and&#x2F;or priority.
This new task system completely replaces Rayon and the cpu usage wins were huge!&lt;&#x2F;li&gt;
&lt;li&gt;Initial Web Platform Support: (A subset of) Bevy now runs on the web using
WebAssembly&#x2F;WASM! Specifically, Bevy apps can run Bevy ECS schedules, react to
input events, create an empty canvas (using winit), and a few other things. This
is a huge first step, but it is important to call out that there are still a
number of missing pieces, such as 2D&#x2F;3D rendering, multi-threading, and sound.&lt;&#x2F;li&gt;
&lt;li&gt;Parallel Queries: Systems that use queries already run in parallel,
but before this change the queries themselves could not be iterated in parallel.
Bevy 0.2 adds the ability to easily iterate queries in parallel, which builds on
top of the new Async Task System.&lt;&#x2F;li&gt;
&lt;li&gt;Transform System Rewrite: Bevy&#x27;s old transform system used separate
&lt;code&gt;Translation&lt;&#x2F;code&gt;, &lt;code&gt;Rotation&lt;&#x2F;code&gt;, and &lt;code&gt;Scale&lt;&#x2F;code&gt; components as the &amp;quot;source of truth&amp;quot;,
which were then synced to a &lt;code&gt;LocalTransform&lt;&#x2F;code&gt; component after each update. There
are Good Reasons™ to use this approach, but it created a &amp;quot;lag&amp;quot; between the
calculated LocalTransform and the source components and dataflow between components
is hard to reason about. This problem was resolved by making a newer, simpler
transform system that uses a consolidated &lt;code&gt;Transform&lt;&#x2F;code&gt; type.&lt;&#x2F;li&gt;
&lt;li&gt;Joystick&#x2F;Gamepad Input: The Bevy Input plugin now has cross-platform support
for most controllers thanks to the gilrs library!&lt;&#x2F;li&gt;
&lt;li&gt;Bevy ECS Performance Improvements: generational entity IDs,
read-only queries, lock-free world APIs, direct component lookup.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Community plugin updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dimforge&#x2F;bevy_rapier&quot;&gt;bevy_rapier&lt;&#x2F;a&gt;:
Rapier Physics&#x27; official Bevy plugin was updated to support Bevy 0.2.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_ninepatch&quot;&gt;bevy_ninepatch&lt;&#x2F;a&gt;:
Display 9-Patch UI elements, where you can specify how
different parts of a PNG should grow.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aevyrie&#x2F;bevy_mod_picking&quot;&gt;bevy_mod_picking&lt;&#x2F;a&gt;: 3d cursor
picking and highlighting.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_contrib_colors&quot;&gt;bevy_contrib_colors&lt;&#x2F;a&gt;:
A simple color library.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bevy_prototype_input_map&quot;&gt;bevy_input_map&lt;&#x2F;a&gt;:
Converts user inputs from different input hardware into game specific actions.
Ex: keyboard &amp;quot;Space&amp;quot; or joystick &amp;quot;A&amp;quot; can be mapped to a &amp;quot;Jump&amp;quot; Action.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nilirad&#x2F;bevy_prototype_lyon&quot;&gt;bevy_prototype_lyon&lt;&#x2F;a&gt;:
Draw 2D shapes, like triangles, circles, and beziers.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakobhellermann&#x2F;bevy-contrib-inspector&quot;&gt;bevy_contrib_inspector&lt;&#x2F;a&gt;:
Visually edit fields of your bevy resources in a browser or native view.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;iw1yyp&#x2F;bevy_02&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24530698&quot;&gt;hacker news&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1307445918535315456&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryS36934349&quot;&gt;&lt;img src=&quot;rg3d.jpg&quot; alt=&quot;a scene with lightning and a hi-poly character model&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to watch a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryS36934349&#x2F;status&#x2F;1312836831390687232&quot;&gt;video demo of one of the new examples&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; is a game engine that aims to be easy to use and provide large set
of out-of-box features. Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Render to texture - it is possible to render scenes into textures.&lt;&#x2F;li&gt;
&lt;li&gt;Added support for scenes made in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;rusty-editor&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Added sprite graph node.&lt;&#x2F;li&gt;
&lt;li&gt;Added simple lightmapper (still WIP).&lt;&#x2F;li&gt;
&lt;li&gt;Added new UI widgets and features:
&lt;ul&gt;
&lt;li&gt;Message box - classic message box with different combinations of buttons.&lt;&#x2F;li&gt;
&lt;li&gt;Wrap panel - arranges its children by rows or columns with wrapping.&lt;&#x2F;li&gt;
&lt;li&gt;File browser - a browser for file system.&lt;&#x2F;li&gt;
&lt;li&gt;Color picker - classic HSV+RGB+Alpha color picker.&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Bring into view&amp;quot; for scroll panel.&lt;&#x2F;li&gt;
&lt;li&gt;Replaced font rasterizer by fontdue.&lt;&#x2F;li&gt;
&lt;li&gt;Improved hotkeys in text box.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Improved performance and documentation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;xENF5Uh&quot;&gt;rg3d&#x27;s Discord channel&lt;&#x2F;a&gt;
or follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;DmitryS36934349&quot;&gt;Dmitry Stepanov on twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rusty-editor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;rusty-editor&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rusty_editor.jpg&quot; alt=&quot;rusty editor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;rusty-editor&lt;&#x2F;a&gt; is a scene editor for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; engine.
Some of the recently added features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;asset browser + asset previewer,&lt;&#x2F;li&gt;
&lt;li&gt;multiselection,&lt;&#x2F;li&gt;
&lt;li&gt;improved properties editor,&lt;&#x2F;li&gt;
&lt;li&gt;lots of other small improvements and fixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;godot-rust-v0-9&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;&quot;&gt;godot-rust&lt;&#x2F;a&gt; v0.9&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-rust-v0-9&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;godot.png&quot; alt=&quot;cute logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;&quot;&gt;godot-rust&lt;&#x2F;a&gt; provides high-level Rust bindings
to the &lt;a href=&quot;http:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot game engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;release-notes&#x2F;0-9-0&#x2F;&quot;&gt;v0.9 was released&lt;&#x2F;a&gt;.
Besides lots of quality-of-life improvements, this update brings a massive
redesign of the API in order to solve long-standing soundness problems.
As there&#x27;re numerous breaking changes,
a &lt;a href=&quot;https:&#x2F;&#x2F;godot-rust.github.io&#x2F;book&#x2F;migrating-0-8.html&quot;&gt;chapter about migration from 0.8&lt;&#x2F;a&gt; was added
to the user guide.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;21&quot;&gt;#21 &amp;quot;Planning a survey for Rust game developers&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;93&quot;&gt;#93 &amp;quot;Consider creating a game math library benchmark for the working group&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&quot;&gt;rust-gamedev&#x2F;ecs_bench_suite&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&#x2F;issues&#x2F;13&quot;&gt;#13 &amp;quot;How results will be updated?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;j722i5&#x2F;this_month_in_rust_gamedev_14_september_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1313986312156966913&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #13 - August 2020</title>
            <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/013/</link>
            <guid>https://gamedev.rs/news/013/</guid>
            <description>&lt;p&gt;Welcome to the 13th issue of the Rust GameDev Workgroup’s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;013&#x2F;#rust-gamedev-podcast&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;013&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;013&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;013&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;013&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;013&#x2F;#meeting-minutes&quot;&gt;Meeting Minutes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;013&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;rust-gamedev-podcast&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-gamedev-podcast&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;podcast.jpeg&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;richardpatching.com&quot;&gt;Richard @patchfx Patching&lt;&#x2F;a&gt; started
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&quot;&gt;Rust GameDev Podcast&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Over the lockdown period I have been working on a new podcast
for Rust game developers. I have been interviewing indie teams
and library creators, discussing custom engines, procedural generation,
open source and the business of games development.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-team-veloren&quot;&gt;The first episode&lt;&#x2F;a&gt; is an interview
with the team behind Veloren, an open-source multiplayer
voxel RPG written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Find out about the game&#x27;s origin, its engine development,
pros and cons of a big open-source project, CI and build pipeline,
importance of artists, procedural generation,
community building, managing players&#x27; expectations,
and upcoming developments.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-herbert-wolverson-bracket-lib&quot;&gt;The second episode&lt;&#x2F;a&gt; is an interview with Herbert Wolverson,
creator of &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; (pka RLTK), &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;thebracket.itch.io&#x2F;nox-futura&quot;&gt;Nox Futura&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A very wide-ranging interview covering many interesting topics:
where the bracket-lib came from and what the creator is doing now,
as well as practical questions and issues discovered
in the course of creating their game, [Nox Futura].
Lots of interesting talk about a new Rust games development book
Herbert is writing, C++ vs Rust, learning Rust, code architecture and
ECS&#x27;s in roguelikes, emergent behavior, and hilarious bugs in Dwarf Fortress.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The show has been distributed on most major platforms
for you to listen and subscribe:
&lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;&quot;&gt;Rust Game Dev Podcast (simplecast)&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.apple.com&#x2F;gb&#x2F;podcast&#x2F;rust-game-dev&#x2F;id1526304768&quot;&gt;Apple Podcasts&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;show&#x2F;7HRfGnTcXkLkQd9fxJbDGj&quot;&gt;Spotify&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feeds.simplecast.com&#x2F;C6NQglnL&quot;&gt;RSS Feed&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;podcasts.google.com&#x2F;feed&#x2F;aHR0cHM6Ly9mZWVkcy5zaW1wbGVjYXN0LmNvbS9DNk5RZ2xuTA&quot;&gt;Google Podcasts&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;crate-before-attack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crate-before-attack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;&lt;img src=&quot;crate-before-attack.jpeg&quot; alt=&quot;Camera debugging in Crate Before Attack&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Debugging camera motion: highlighted areas are points of interest&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CrateAttack&quot;&gt;koalefant (@CrateAttack)&lt;&#x2F;a&gt;
is a skill-based multiplayer game where frogs combat their friends
while navigating the landscape with their sticky tongues.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;play&quot;&gt;playable browser build&lt;&#x2F;a&gt; can be tried online.&lt;&#x2F;p&gt;
&lt;p&gt;Recent changes are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Training mode improvements, including a new map &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;cukyVXQ0n0c&quot;&gt;Dungeon&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;www.behance.net&#x2F;spoon_tar&quot;&gt;Kesha Astafyev&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;3y7Hfa-v3e8&quot;&gt;Better camera motion&lt;&#x2F;a&gt;:
multiple points of interest are tracked dynamically.&lt;&#x2F;li&gt;
&lt;li&gt;Improved GPU performance by merging multiple render passes into one.&lt;&#x2F;li&gt;
&lt;li&gt;Added control hints.&lt;&#x2F;li&gt;
&lt;li&gt;Numerous bugfixes and tweaks.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More details are in &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20200831-august-update&#x2F;&quot;&gt;August DevLog-entry&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren-landscape1.jpeg&quot; alt=&quot;Landscape&quot; &#x2F;&gt;
&lt;em&gt;Landscape with new LoD and lighting&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In August, Veloren 0.7 was released! Airshipper, Veloren&#x27;s launcher, also got
updated to 0.4.0. Veloren was featured in the inaugural episode of the &lt;a href=&quot;https:&#x2F;&#x2F;rustgamedev.com&#x2F;episodes&#x2F;interview-with-team-veloren&quot;&gt;Rust
Game Dev Podcast&lt;&#x2F;a&gt;. Although the 0.7 release party saw the
largest number of concurrent players at 57, it ran into some significant issues
which you can read about below.&lt;&#x2F;p&gt;
&lt;p&gt;The largest merge in Veloren so far also happened in August. It included
monumental changes to lighting and added level of detail functionality to see
far-off mountains. Lots of work has been done on the animation, combat, SFX, and
UX front. Animations for movement and combat were added and improved. Work
continued on particle systems, which have been added to Veloren in places like
campfires, fireworks, and weapons.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;veloren-sceptre.gif&quot; alt=&quot;Healing sceptre&quot; &#x2F;&gt;
&lt;em&gt;Healing sceptre with the new particle system&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics from August:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-79#airshipper-0-4-progress-by-songtronix&quot;&gt;Airshipper 0.4.0 Progress&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-79#animation-and-movement-updates-by-slipped&quot;&gt;Animation and Movement Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-80#particle-timing-by-lobster&quot;&gt;Particle Timing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;0.7 Release: &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-81#0-7-release-party-statistics&quot;&gt;Party Statistics&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-81#0-7-release-party-kick-disaster-by-xmac94x&quot;&gt;Kick Disaster&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-81#sharp-s-lighting-and-world-changes-branch&quot;&gt;Lighting and World Changes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-82#0-8-intro-meeting&quot;&gt;0.8 Intro Meeting&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-82#audio-with-ellinia&quot;&gt;Audio SFX&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-83#photo-gallery&quot;&gt;Photo Gallery&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;August&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-79&quot;&gt;#79&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-80&quot;&gt;#80&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-81&quot;&gt;#81&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-82&quot;&gt;#82&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-83&quot;&gt;#83&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In September, work on 0.8 will continue. Some large systems being worked on
include networking, improved persistence stability, and player experience. Game
design is working on improving the connection between the experience a new
player has, and the current game design. The in-progress 0.8 version will likely
be completed more quickly than 0.7, as to not include too many changes.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.png&quot; alt=&quot;Two-way cycletracks and shared left-turn lanes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a traffic simulation game exploring how small changes
to roads affect cyclists, transit users, pedestrians, and drivers. Any city
with OpenStreetMap coverage can be used!&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Multiple traffic signals can be edited together.&lt;&#x2F;li&gt;
&lt;li&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;dabreegster.github.io&#x2F;abstreet&#x2F;dev&#x2F;api.html&quot;&gt;API&lt;&#x2F;a&gt; and tools were added, to control maps and simulation
from any language.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelkirk&quot;&gt;Michael Kirk&lt;&#x2F;a&gt;, a new team member, fixed HiDPI scaling issues in a
consistent way.&lt;&#x2F;li&gt;
&lt;li&gt;Many new cities imported, with better support for countries that drive on the
left and support for using alternate languages from OpenStreetMap for roads
and buildings.&lt;&#x2F;li&gt;
&lt;li&gt;Backwards compatibility for a player&#x27;s edits to the map.&lt;&#x2F;li&gt;
&lt;li&gt;Two-way cycletracks and roads with multiple direction changes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;egregoria&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egregoria&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egregoria.png&quot; alt=&quot;Egregoria buildings screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Egregoria&quot;&gt;Egregoria&lt;&#x2F;a&gt;&#x27;s objective is to become a granular society simulation,
filled with fully autonomous agents interacting with their world in real time.
Egregoria was previously known as Scale,
but was renamed to fit the theme better.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;egregoria_5.html&quot;&gt;5th devlog&lt;&#x2F;a&gt; was published, talking about
the renaming, project management, buildings and scripting.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;CAaZhUJ&quot;&gt;Discord&lt;&#x2F;a&gt; server was launched to discuss the project.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;igzbl9&#x2F;egregoria_devblog_5&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cary&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;specificprotagonist.itch.io&#x2F;cary&quot;&gt;Cary&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cary&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;specificprotagonist.itch.io&#x2F;cary&quot;&gt;&lt;img src=&quot;cary_screenshot.png&quot; alt=&quot;Dodging bullets and carrying Cary to temporary safety&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;https:&#x2F;&#x2F;specificprotagonist.itch.io&#x2F;cary&quot;&gt;Cary&lt;&#x2F;a&gt; the player has to bring the titular character to the exit by carrying
them or otherwise making sure they don&#x27;t – nor the player themselves –
touch any of the traps.
Easier said than done when you have limited stamina and Cary keeps running
into spikes.&lt;&#x2F;p&gt;
&lt;p&gt;Made with hecs and wgpu (no framework), but uses WebGL on the web
because of the current implementation status of WebGPU.&lt;&#x2F;p&gt;
&lt;p&gt;Made during the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;extra-credits-game-jam-6&quot;&gt;Extra Credits game jam&lt;&#x2F;a&gt;,
it&#x27;s a rather small game.
It can be played in the browser or downloaded at &lt;a href=&quot;https:&#x2F;&#x2F;specificprotagonist.itch.io&#x2F;cary&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;&lt;img src=&quot;way-of-rhea-play-nyc.png&quot; alt=&quot;Anthropic&#x27;s virtual booth at Play NYC&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Anthropic&#x27;s virtual booth at &lt;a href=&quot;https:&#x2F;&#x2F;www.play-nyc.com&#x2F;&quot;&gt;Play NYC&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is a puzzle platformer that takes place in a world where you can
only interact with items that match your current color.&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea has a &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&#x2F;&quot;&gt;free Steam demo&lt;&#x2F;a&gt; temporarily available as part of
&lt;a href=&quot;https:&#x2F;&#x2F;www.play-nyc.com&#x2F;&quot;&gt;Play NYC&lt;&#x2F;a&gt;!
The new demo includes a level that wasn&#x27;t part of the Steam Game Festival,
showing off how circuit puzzles will work in the game. Since Play NYC
couldn&#x27;t be in person this year, the devs temporarily themed this level to look
like last year&#x27;s Play NYC venue, included placing virtual booths for other games
throughout the level.&lt;&#x2F;p&gt;
&lt;p&gt;Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anthropicst&quot;&gt;@AnthropicSt&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; on Twitter or
&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;newsletter&#x2F;signup&#x2F;tech&quot;&gt;sign up for the mailing list&lt;&#x2F;a&gt; for updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vange-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vange-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vangers-shadows.jpeg&quot; alt=&quot;vangers-shadow&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt; is the project of re-implementing the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Vangers&quot;&gt;Vangers&lt;&#x2F;a&gt; game (from 1998)
in Rust using modern development practices, parallel computations, and GPU.&lt;&#x2F;p&gt;
&lt;p&gt;This month vange-rs got real-time shadows!
See &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;i32p6r&#x2F;realtime_hybrid_shadows_in_vangers&quot;&gt;video on &#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt; and technical description
on the &lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2020&#x2F;08&#x2F;04&#x2F;shadows.html&quot;&gt;Hybrid Shadows&lt;&#x2F;a&gt; post of the blog.&lt;&#x2F;p&gt;
&lt;p&gt;Another exciting development - the new bruteforce rendering technique allowing
to shift the camera behind the mechos as in 3rd person view.
See &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;igejxy&#x2F;vangers_3rd_person_camera&quot;&gt;video on &#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt; and technical description on
the &lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2020&#x2F;08&#x2F;29&#x2F;bar-painting.html&quot;&gt;Bar Painting&lt;&#x2F;a&gt; post of the blog.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden.jpeg&quot; alt=&quot;screenshot: concrete, trees, shadows&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.
Some of the updates from &lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;july-august&#x2F;&quot;&gt;the July &amp;amp; August devlog&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new player inventory system;&lt;&#x2F;li&gt;
&lt;li&gt;Better collision detection and camera movement;&lt;&#x2F;li&gt;
&lt;li&gt;Minimalist, scrollable text-based GUI for choosing which species to plant
or the type of material to build with (or destroy) something;&lt;&#x2F;li&gt;
&lt;li&gt;Plant growth now depends directly on the amount of light
every individual leaf receives, calculated on the GPU;&lt;&#x2F;li&gt;
&lt;li&gt;Variable leaf alignment and ease of creating variety;&lt;&#x2F;li&gt;
&lt;li&gt;Better bark, detailed trunks, and new species;&lt;&#x2F;li&gt;
&lt;li&gt;Completely new lighting using GI.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chillscapes&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;khonsulabs.itch.io&#x2F;chillscapes&quot;&gt;Chillscapes&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#chillscapes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;chillscapes_main_menu.png&quot; alt=&quot;Chillscapes Main Menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;khonsulabs&#x2F;chillscapes&quot;&gt;Chillscapes&lt;&#x2F;a&gt; is a lo-fi
rhythm experience created for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;neoc03-rhythm-jam&quot;&gt;NEOC#03 Rhythm Game Jam&lt;&#x2F;a&gt;. Using
layerable lo-fi music tracks, the game has you tap with the rhythm of the loops
being added, before changing the music up by adding another loop into the mix.
Last week, &lt;a href=&quot;https:&#x2F;&#x2F;community.khonsulabs.com&#x2F;t&#x2F;chillscapes-retrospective-and-kludgine-update&#x2F;28&quot;&gt;a retrospective update was published&lt;&#x2F;a&gt;
reflecting on what the developer&#x27;s takeaways were from the experience.&lt;&#x2F;p&gt;
&lt;p&gt;Chillscapes is written using an early-in-development 2d engine,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;khonsulabs&#x2F;kludgine&quot;&gt;Kludgine&lt;&#x2F;a&gt;. For audio playback, rodio was utilized. The source code is
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;khonsulabs&#x2F;chillscapes&quot;&gt;available on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dwarf-seeks-fortune&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;dwarf_seeks_fortune&quot;&gt;Dwarf Seeks Fortune&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dwarf-seeks-fortune&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;dwarf_seeks_fortune&quot;&gt;&lt;img src=&quot;dwarf_seeks_fortune.png&quot; alt=&quot;Dwarf Seeks Fortune&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Collect all keys to unlock the door to the next level&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;dwarf_seeks_fortune&quot;&gt;Dwarf Seeks Fortune&lt;&#x2F;a&gt; is a puzzle-platformer made with the Amethyst game
engine. Its developer, Jazarro, has partnered with the Amethyst organization
to make it an official Amethyst showcase game. It aims to be a learning
resource for anyone looking to get started with Amethyst.&lt;&#x2F;p&gt;
&lt;p&gt;The game currently sports a growing feature set, two playable levels and an
early version of an integrated level editor. It is ready for your
contributions, so if you&#x27;re interested, check out the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;dwarf_seeks_fortune&#x2F;blob&#x2F;master&#x2F;CONTRIBUTING.md&quot;&gt;contributor&#x27;s guide&lt;&#x2F;a&gt; or the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;dwarf_seeks_fortune&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;good first issues&lt;&#x2F;a&gt;.
If you have any questions, open an issue on GitHub or approach
Jazarro on &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;invite&#x2F;amethyst&quot;&gt;the Amethyst discord&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a WIP online multiplayer game.&lt;&#x2F;p&gt;
&lt;p&gt;This month was mostly dedicated to the custom engine&#x27;s scenery placement tool
(&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;082-2020-08-30.html&quot;&gt;video demo&lt;&#x2F;a&gt;).
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;080-2020-08-16.html&quot;&gt;Terrain code refactoring and other required groundwork&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;082-2020-08-30.html#mouse-terrain-intersection&quot;&gt;Mouse-terrain intersection&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;082-2020-08-30.html#play-mode-place-mode&quot;&gt;Switching between Play and Place modes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;082-2020-08-30.html#user-interfaces&quot;&gt;Custom UI system&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;078-2020-08-02.html&quot;&gt;#078&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;079-2020-08-09.html&quot;&gt;#079&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;080-2020-08-16.html&quot;&gt;#080&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;081-2020-08-23.html&quot;&gt;#081&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;august-2020&#x2F;082-2020-08-30.html&quot;&gt;#082&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;simple-physics&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&#x2F;SIMple-Physics&#x2F;&quot;&gt;SIMple Physics&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#simple-physics&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&#x2F;SIMple-Physics&#x2F;posts&#x2F;Gifs&#x2F;&quot;&gt;&lt;img src=&quot;simple-physics-wave.gif&quot; alt=&quot;SIMple Mechanics wave preset&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;One of SIMple Mechanic&#x27;s Lua presets, a colorful wave of bouncing circles&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&#x2F;SIMple-Physics&#x2F;&quot;&gt;SIMple Physics&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&quot;&gt;@mkhan45&lt;&#x2F;a&gt; is a set of educational physics
simulators meant to help students and teachers conduct labs without expensive equipment
or in person classes. Each simulator uses serializable graphs, object inspection,
Lua scripting, and a few other features to help students learn. Currently, there
is a simulator for mechanics&#x2F;projectile motion and one for universal gravitation,
but the goal is to include one for electronics&#x2F;magnetism and one for waves&#x2F;optics.&lt;&#x2F;p&gt;
&lt;p&gt;Written in Rust using &lt;code&gt;ggez&lt;&#x2F;code&gt;, &lt;code&gt;specs&lt;&#x2F;code&gt;, &lt;code&gt;imgui-rs&lt;&#x2F;code&gt;, and &lt;code&gt;nphysics&lt;&#x2F;code&gt;,
this project&#x27;s goals include:
performance, accessibility&#x2F;portability, ease of use, and extensibility.&lt;&#x2F;p&gt;
&lt;p&gt;To find out more about the project, visit the site &lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&#x2F;SIMple-Physics&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;,
watch some cool gifs &lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&#x2F;SIMple-Physics&#x2F;posts&#x2F;Gifs&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;, or read the GitHub page
&lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&#x2F;SIMple-Physics&#x2F;posts&#x2F;Gifs&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ibk2rf&#x2F;announcing_simple_physics&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;writing-nes-emulator-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bugzmanov.github.io&#x2F;nes_ebook&#x2F;index.html&quot;&gt;Writing NES Emulator in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#writing-nes-emulator-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nes_emulator_rust.png&quot; alt=&quot;writing nes emulator&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Writing NES Emulator in Rust&amp;quot; is a tutorial by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bugzmanov&quot;&gt;@bugzmanov&lt;&#x2F;a&gt; on creating a fully
capable NES&#x2F;Famicom emulator from scratch in the online book format. It walks
through major steps of emulating NES platform components to run
all-time classics, like Pacman, Donkey Kong, and Super Mario Bros.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a fun way of getting into hardware internals and fundamentals of
computer systems. The tutorial also covers game-dev basics and how to
work with graphics in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;www.libsdl.org&#x2F;&quot;&gt;SDL2&lt;&#x2F;a&gt; library.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;beginning-game-development-with-amethyst&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GFi_EdS_s_c&quot;&gt;Beginning Game Development with Amethyst&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#beginning-game-development-with-amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GFi_EdS_s_c&quot;&gt;&lt;img src=&quot;rustconf-amethyst-talk.png&quot; alt=&quot;youtube preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=GFi_EdS_s_c&quot;&gt;watch the talk&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Getting started with Rust + gamedev can be intimidating. At
&lt;a href=&quot;https:&#x2F;&#x2F;rustconf.com&quot;&gt;RustConf 2020&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;micah_tigley&quot;&gt;Micah Tigley&lt;&#x2F;a&gt; gave a talk about their experience
beginning game development using the &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;&quot;&gt;Amethyst&lt;&#x2F;a&gt; game engine and
learning about ECS by implementing examples that aim to be accessible for
beginners.&lt;&#x2F;p&gt;
&lt;p&gt;Supporting blog posts for the talk:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mtigley.dev&#x2F;posts&#x2F;sprite-animations-with-amethyst&quot;&gt;&amp;quot;Creating a Simple Spritesheet Animation with Amethyst&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mtigley.dev&#x2F;posts&#x2F;running-animation&quot;&gt;&amp;quot;Running Animation&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mtigley.dev&#x2F;posts&#x2F;camera-follow-system&quot;&gt;&amp;quot;Camera Follow System&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The source code for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tigleym&#x2F;sprite_animations_demo&quot;&gt;demo can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chargrid-roguelike-tutorial-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.org&#x2F;roguelike-tutorial-2020&#x2F;&quot;&gt;Chargrid Roguelike Tutorial 2020&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#chargrid-roguelike-tutorial-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;chargrid-roguelike-tutorial-2020.png&quot; alt=&quot;Chargrid Roguelike Tutorial 2020&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;chargrid&#x2F;&quot;&gt;Chargrid&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&quot;&gt;@stevebob&lt;&#x2F;a&gt; is a collection of crates for building
applications with text UIs that run in terminals, graphical windows, and web
pages. It was made specifically with roguelike development in mind, though is
general-purpose enough to be used for other applications.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.org&#x2F;roguelike-tutorial-2020&#x2F;&quot;&gt;Chargrid Roguelike Tutorial 2020&lt;&#x2F;a&gt;
is a tutorial series about making a traditional roguelike from scratch
using chargrid for rendering and input handling. Reference code is available in
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;chargrid-roguelike-tutorial-2020&quot;&gt;this git repo&lt;&#x2F;a&gt;
organized with one branch for each subsection.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;event-chaining-as-a-decoupling-method-in-ecs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.jojolepro.com&#x2F;blog&#x2F;2020-08-20_event_chaining&#x2F;&quot;&gt;Event Chaining as a Decoupling Method in ECS&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#event-chaining-as-a-decoupling-method-in-ecs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;event-chain-assets-graph.png&quot; alt=&quot;graph: FileSignal -&amp;gt; AssetSignal -&amp;gt; AssetEvent&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&quot;&gt;@jojolepro&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;www.jojolepro.com&#x2F;blog&#x2F;2020-08-20_event_chaining&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; that provides
an in-depth look at how using events in entity-component-system architectures
can improve system reusability dramatically.&lt;&#x2F;p&gt;
&lt;p&gt;Using events in this way also allows for:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;easier testing,&lt;&#x2F;li&gt;
&lt;li&gt;additional configurability,&lt;&#x2F;li&gt;
&lt;li&gt;possible performance improvements,&lt;&#x2F;li&gt;
&lt;li&gt;higher reusability - especially if using generics.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The blog also has an &lt;a href=&quot;https:&#x2F;&#x2F;www.jojolepro.com&#x2F;blog&#x2F;blog.xml&quot;&gt;RSS feed&lt;&#x2F;a&gt; and more in-depth posts about
game development are planned.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ecs-bench-suite&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&quot;&gt;ecs_bench_suite&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecs-bench-suite&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ecs-bench.png&quot; alt=&quot;Summary results table&quot; &#x2F;&gt;
&lt;em&gt;The full benchmark report is available &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;ecs_bench_suite&#x2F;target&#x2F;criterion&#x2F;report&#x2F;index.html&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TomGillen&quot;&gt;@TomGillen&lt;&#x2F;a&gt; (author of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;legion&quot;&gt;Legion&lt;&#x2F;a&gt; ECS) released
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&quot;&gt;ecs_bench_suite&lt;&#x2F;a&gt; - a suite of benchmarks designed to test and compare
Rust ECS library performance across a variety of challenging circumstances.
Later, the project was adopted by the Rust GameDev WG
so that all Rust ECS developers can converge on a neutral,
community-maintained benchmark.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;icczxh&#x2F;ecs_bench_suite&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rapier-2d-and-3d-physics-engines-focused-on-performance&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;08&#x2F;25&#x2F;announcing-the-rapier-physics-engine&quot;&gt;Rapier: 2D and 3D Physics Engines Focused on Performance&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rapier-2d-and-3d-physics-engines-focused-on-performance&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;&lt;img src=&quot;rapier-logo.svg&quot; alt=&quot;Rapier logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&quot;&gt;Rapier&lt;&#x2F;a&gt; is a new set of 2D and 3D physics engines written 100% in Rust.
It is 5 to 10 times faster than &lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&quot;&gt;nphysics&lt;&#x2F;a&gt;, close to the performances of the
CPU version of PhysX, and often slightly faster than Box2D.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;08&#x2F;25&#x2F;announcing-the-rapier-physics-engine&quot;&gt;For its first release&lt;&#x2F;a&gt; Rapier includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;rigid-body dynamics;&lt;&#x2F;li&gt;
&lt;li&gt;colliders and sensors;&lt;&#x2F;li&gt;
&lt;li&gt;joint constraints;&lt;&#x2F;li&gt;
&lt;li&gt;optional serialization of the physics state;&lt;&#x2F;li&gt;
&lt;li&gt;optional cross-platform determinism on IEEE-754 compliant targets;&lt;&#x2F;li&gt;
&lt;li&gt;optional explicit SIMD and parallelism;&lt;&#x2F;li&gt;
&lt;li&gt;JavaScript bindings with official NPM packages.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This new physics engine is developed by the recently created &lt;a href=&quot;https:&#x2F;&#x2F;dimforge.com&quot;&gt;Dimforge&lt;&#x2F;a&gt;
single-member Open-Source company &lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;08&#x2F;18&#x2F;rustsim-becomes-dimforge&quot;&gt;replacing&lt;&#x2F;a&gt; the former
Rustsim organization created on GitHub by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebcrozet&#x2F;&quot;&gt;@sebcrozet&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;igkul2&#x2F;announcing_rapier_2d_and_3d_physics_engines&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;neocogi-s-libraries&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NeoCogi&quot;&gt;NeoCogi&#x27;s Libraries&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#neocogi-s-libraries&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;jude3d.jpeg&quot; alt=&quot;Jude3D&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;neocogi.com&quot;&gt;Jude3D&lt;&#x2F;a&gt; is a web based 3D sculpting application.
It&#x27;s a WebAssembly application, written in C&#x2F;C++ and compiled using Emscripten
but after much thinking, the authors decided to move the development to Rust!&lt;&#x2F;p&gt;
&lt;p&gt;Many problems arise when moving existing C&#x2F;C++&#x2F;WebAssembly code to Rust.
The two most important ones:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The new code should still interop with the already existing code.&lt;&#x2F;li&gt;
&lt;li&gt;Payload size matters on the web: your WASM app should be as small as possible.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These led the authors to drop using Rust&#x27;s std in favor to their own libs (&lt;code&gt;!#[no_std]&lt;&#x2F;code&gt;),
at least until the std library crates are split up accordingly and stabilized,
for example, the &lt;code&gt;alloc&lt;&#x2F;code&gt; crate.&lt;&#x2F;p&gt;
&lt;p&gt;The good news is that they are
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NeoCogi&quot;&gt;releasing most of the libraries as they make them as open source&lt;&#x2F;a&gt;!
Also, a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NeoCogi&#x2F;rs-glfw3-gles2-test&quot;&gt;WASM glfw3&#x2F;GLES2 example&lt;&#x2F;a&gt; that showcases the libs
is included (&lt;a href=&quot;https:&#x2F;&#x2F;neocogi.github.io&#x2F;rs-glfw3-gles2-test&quot;&gt;live demo&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cute-c2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;c2&quot;&gt;cute-c2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cute-c2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cute-c2-collision.gif&quot; alt=&quot;cute-c2 collision&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;cute-c2 is a 2D collision detection library that has had its first release to
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;c2&quot;&gt;crates.io&lt;&#x2F;a&gt;. The library is a Rust wrapper around the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RandyGaul&#x2F;cute_headers&#x2F;blob&#x2F;master&#x2F;cute_c2.h&quot;&gt;c2.h&lt;&#x2F;a&gt; library.&lt;&#x2F;p&gt;
&lt;p&gt;The library can detect collisions between circles, rectangles, capsules and
up to eight-sided convex polygons. There are also functions for manifold
generation, the GJK algorithm, and ray casting operations. There is an example
program in the repository.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hexasphere-v1-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;hexasphere&quot;&gt;hexasphere&lt;&#x2F;a&gt; v1.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hexasphere-v1-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hexasphere.gif&quot; alt=&quot;hexasphere example gif&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;hexasphere&quot;&gt;hexasphere&lt;&#x2F;a&gt; library provides a customizable interface for subdividing 3D
triangle meshes. Custom and stateful interpolation functions can be implemented
as well as per-vertex attributes.&lt;&#x2F;p&gt;
&lt;p&gt;All that&#x27;s required to define a base shape are the initial vertices, triangles
based on the indices of the vertices in the initial vertices, and numbered
edges. As long as the winding of the triangles remains consistent throughout
the base mesh, all of the resulting triangles will retain that winding.&lt;&#x2F;p&gt;
&lt;p&gt;This library also provides a few interesting base shapes (which can be used alone
if the shape is not subdivided):
Icosahedron, Tetrahedron, Cube, Square Plane, Triangle Plane
(all of which are pictured above).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blitz-path&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BezPowell&#x2F;blitz-path&quot;&gt;blitz-path&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#blitz-path&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BezPowell&#x2F;blitz-path&quot;&gt;blitz-path&lt;&#x2F;a&gt; is a new crate providing
an implementation of the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Jump_point_search&quot;&gt;JPS&lt;&#x2F;a&gt;
pathfinding algorithm.&lt;&#x2F;p&gt;
&lt;p&gt;JPS is an optimization of the A* search algorithm for uniform-cost grids, which
are common in games. While fully functional, the code is still in an early
state and any suggestions for improvements - especially on how best to
integrate it with the existing ecosystem - are greatly appreciated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;08&#x2F;30&#x2F;this-month-august&#x2F;&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;08&#x2F;30&#x2F;this-month-august&#x2F;&quot;&gt;August updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;compiler support for type aliases;&lt;&#x2F;li&gt;
&lt;li&gt;shared diagnostics between compiler and language server;&lt;&#x2F;li&gt;
&lt;li&gt;support for the official &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;inkwell&quot;&gt;inkwell&lt;&#x2F;a&gt; crate;&lt;&#x2F;li&gt;
&lt;li&gt;refactors and quality of life improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;inline-tweak&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;inline_tweak&quot;&gt;inline_tweak&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#inline-tweak&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;inline-tweak.gif&quot; alt=&quot;Demo with moving traffic lights&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;inline_tweak&quot;&gt;inline_tweak&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&quot;&gt;@Uriopass&lt;&#x2F;a&gt; is a library that allows you to
tweak at runtime any number literal directly from your code.
It works by parsing the file when a change occurs
(inspired by &lt;a href=&quot;http:&#x2F;&#x2F;blog.tuxedolabs.com&#x2F;2018&#x2F;03&#x2F;13&#x2F;hot-reloading-hardcoded-parameters.html&quot;&gt;this blogpost&lt;&#x2F;a&gt; from Tuxedo labs).
Usage example:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span&gt;inline_tweak::tweak;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;loop &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Try changing the value while the application is running
&lt;&#x2F;span&gt;&lt;span&gt;    println!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, tweak!(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3.14&lt;&#x2F;span&gt;&lt;span&gt;));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A &lt;code&gt;watch!()&lt;&#x2F;code&gt; macro that sleeps until the file is modified is also provided.&lt;&#x2F;p&gt;
&lt;p&gt;The library is minimal, only requiring the &lt;code&gt;lazy_static&lt;&#x2F;code&gt; dependency
to hold modified values.
In release mode, the tweaking code is disabled and compiled away.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;yacurses&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;crates&#x2F;yacurses&quot;&gt;yacurses&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#yacurses&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lib.rs&#x2F;crates&#x2F;yacurses&quot;&gt;yacurses&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lokathor&quot;&gt;@Lokathor&lt;&#x2F;a&gt; is a cross-platform curses bindings crate that&#x27;s
small, simple, easy to understand, and most importantly safe to use.
It wraps over &lt;code&gt;ncurses&lt;&#x2F;code&gt; on Unix and a bundled &lt;code&gt;pdcurses&lt;&#x2F;code&gt; on Windows.
If you&#x27;re looking to make a terminal-based roguelike
(or any other terminal-based game), give it a try.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;spir-q-v0-4-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; v0.4.6&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spir-q-v0-4-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; is a light-weight shader reflection library, which allows you to query
the types, offsets, sizes and even names in your shaders procedurally.&lt;&#x2F;p&gt;
&lt;p&gt;This month v0.4.2..v0.4.6 versions were released.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Specialization constants enumeration.&lt;&#x2F;li&gt;
&lt;li&gt;Dynamically sized multi-binding support.&lt;&#x2F;li&gt;
&lt;li&gt;Improved entrypoint debug printing.&lt;&#x2F;li&gt;
&lt;li&gt;Better manifest merging method for pipeline construction.&lt;&#x2F;li&gt;
&lt;li&gt;Bugfixes and various small API improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;i6hxh6&#x2F;spirq_042&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;inline-spir-v&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;inline-spirv-rs&quot;&gt;Inline SPIR-V&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#inline-spir-v&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;inline-spirv-demo.png&quot; alt=&quot;inline-spirv&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;inline-spirv-rs&quot;&gt;Inline SPIR-V&lt;&#x2F;a&gt; is a single-crate build-time shader compilation library based on
shaderc which provides procedural macros to help you translate shader sources,
in either GLSL or HLSL, inline or from-file, into SPIR-Vs and embed the SPIR-Vs
right inside your code as &lt;code&gt;u32&lt;&#x2F;code&gt; slices. Despite basic shader compilation,
&lt;code&gt;inline-spirv&lt;&#x2F;code&gt; also support &lt;code&gt;#include&lt;&#x2F;code&gt; directives, macro substitution,
post-compile optimization, as well as descriptor auto-binding.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ic1005&#x2F;inline_spirv&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rspirv-reflect-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Traverse-Research&#x2F;rspirv-reflect&quot;&gt;rspirv-reflect&lt;&#x2F;a&gt; v0.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rspirv-reflect-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;traverse-research-banner.png&quot; alt=&quot;Traverse Research banner&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;traverseresearch.nl&quot;&gt;Traverse Research&lt;&#x2F;a&gt; has created the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Traverse-Research&#x2F;rspirv-reflect&quot;&gt;rspirv-reflect&lt;&#x2F;a&gt; library to replace
their very basic use-case of the existing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gwihlidal&#x2F;spirv-reflect-rs&quot;&gt;spirv-reflect-rs&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KhronosGroup&#x2F;SPIRV-Reflect&quot;&gt;spirv-reflect&lt;&#x2F;a&gt;
libraries that are already out there. The current iteration of &lt;code&gt;rspirv-reflect&lt;&#x2F;code&gt;
is pretty minimal, but it allows you to extract the binding setup from a SPIR-V
binary. &lt;code&gt;rspirv-reflect&lt;&#x2F;code&gt; supports the latest version of SPIR-V (version 1.5 as
of writing) and it also supports all the new shader stages (both ray tracing
and mesh&#x2F;task shaders) as well as the existing ones.&lt;&#x2F;p&gt;
&lt;p&gt;Traverse Research wanted to reduce their reliance on C and C++ unsafe
libraries and at the same time they needed to support newer features that were
slow to become available in the existing &lt;code&gt;spirv-reflect&lt;&#x2F;code&gt; library. The primary
use-case for this library is in conjunction with the Rust wrapper around the
DirectX Shader Compiler (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;DirectXShaderCompiler&quot;&gt;dxc&lt;&#x2F;a&gt;), called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Traverse-Research&#x2F;hassle-rs&quot;&gt;hassle-rs&lt;&#x2F;a&gt; that Traverse Research
also built.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs-and-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;wgpu.rs&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-and-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-water.gif&quot; alt=&quot;wgpu-rs water&quot; &#x2F;&gt;
&lt;em&gt;wgpu-rs&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;tree&#x2F;master&#x2F;examples&#x2F;water&quot;&gt;water example&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;gfx-rs project and wgpu ecosystem have observed the release of 0.6 versions! 🎉&lt;&#x2F;p&gt;
&lt;p&gt;Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Reworked project structure:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wgpu-core&lt;&#x2F;code&gt; - a safe pure-Rust internal API, implementing WebGPU specification;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;wgpu-rs&lt;&#x2F;code&gt; - the idiomatic Rust wrapper;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;wgpu-native&lt;&#x2F;code&gt; - the C API wrapper, aiming to be compatible with &lt;a href=&quot;https:&#x2F;&#x2F;dawn.googlesource.com&#x2F;dawn&quot;&gt;Dawn&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Gecko and Servo - for implementing WebGPU API in the browsers.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Ability to record API traces, replay them on a different machine,
and run data-driven tests.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;write_buffer&lt;&#x2F;code&gt; and &lt;code&gt;write_texture&lt;&#x2F;code&gt; for update the GPU data
without intermediate staging buffers or encoders.&lt;&#x2F;li&gt;
&lt;li&gt;A number of powerful native-only extensions, such as descriptor indexing,
as well as web-compatible extensions like depth-clamping.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; v0.2 - an experimental shader translation library.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;wgpu.rs&#x2F;#showcase&quot;&gt;showcase gallery&lt;&#x2F;a&gt; was updated.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Read about the details on &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2020&#x2F;08&#x2F;18&#x2F;release-0.6.html&quot;&gt;gfx-rs blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sothr&quot;&gt;@sothr&lt;&#x2F;a&gt; has reworked the
&lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&#x2F;beginner&#x2F;tutorial7-instancing&#x2F;#the-instance-buffer&quot;&gt;wgpu instancing tutorial&lt;&#x2F;a&gt;.
See discussion at &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;i8np5v&#x2F;simplified_instancing_tutorial_learn_wgpu&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kas-v0-5-and-kas-text-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; v0.5 and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas-text&quot;&gt;KAS-text&lt;&#x2F;a&gt; v0.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kas-v0-5-and-kas-text-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kas-text-layout.png&quot; alt=&quot;KAS text layout&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhardy&quot;&gt;@dhardy&lt;&#x2F;a&gt; is a general purpose UI toolkit; its
initial aim is &amp;quot;old school&amp;quot; desktop apps with a good keyboard and touchscreen
support. Unlike many modern immediate-mode UIs, KAS&#x27;s widgets retain state,
allowing minimal per-frame updates. KAS supports embedded WebGPU graphics now,
and will (eventually) support being embedded within other contexts (requiring
only a supply of input events and implementation of some basic graphics routines).&lt;&#x2F;p&gt;
&lt;p&gt;KAS v0.5 switches to a new crate for text layout,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas-text&quot;&gt;KAS-text&lt;&#x2F;a&gt;. KAS-text is a text layout
engine supporting multi-line editing, shaping and bidirectional text; future
versions will also support formatting. KAS-text is not tied to any particular
raster or render system; its positioned-glyph output is relatively easy to
adapt to crates like &lt;code&gt;wgpu_glyph&lt;&#x2F;code&gt; and &lt;code&gt;gfx_glyph&lt;&#x2F;code&gt;.
For more, see the article &lt;a href=&quot;https:&#x2F;&#x2F;kas-gui.github.io&#x2F;blog&#x2F;why-kas-text.html&quot;&gt;&amp;quot;Why I created KAS-text&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;egui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;&quot;&gt;Egui&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#egui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;egui.png&quot; alt=&quot;Egui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilk&#x2F;egui&#x2F;&quot;&gt;Egui&lt;&#x2F;a&gt; is a highly portable immediate mode GUI library in pure Rust.
Egui can be integrated anywhere you can paint textured triangles.
You can compile Egui to WASM and render it on a web page using &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;egui_web&quot;&gt;egui_web&lt;&#x2F;a&gt;
or compile and run natively using &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;egui_glium&quot;&gt;egui_glium&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;emilk.github.io&#x2F;egui&#x2F;index.html&quot;&gt;Egui web demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Example:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;Window::new(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Debug&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;show&lt;&#x2F;span&gt;&lt;span&gt;(ui.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;ctx&lt;&#x2F;span&gt;&lt;span&gt;(), |&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ui&lt;&#x2F;span&gt;&lt;span&gt;| {
&lt;&#x2F;span&gt;&lt;span&gt;    ui.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;label&lt;&#x2F;span&gt;&lt;span&gt;(format!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello, world &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;123&lt;&#x2F;span&gt;&lt;span&gt;));
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; ui.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Save&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;).clicked {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;my_save_function&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    ui.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;text_edit&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span&gt; my_string);
&lt;&#x2F;span&gt;&lt;span&gt;    ui.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(Slider::f32(&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span&gt; value, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.0&lt;&#x2F;span&gt;&lt;span&gt;..=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;));
&lt;&#x2F;span&gt;&lt;span&gt;});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;hzwvsk&#x2F;emigui_deserves_more_love&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;voxel-mapper&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;voxel-mapper&quot;&gt;voxel-mapper&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#voxel-mapper&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;voxel-mapper.jpeg&quot; alt=&quot;Demo: some terrain painted as grass, snow, dirt, etc&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;voxel-mapper&quot;&gt;voxel-mapper&lt;&#x2F;a&gt; is a library and in-game editor for voxel maps, smooth or cubey.
The ultimate goal of the project is to make it easy for artists and programmers
alike to generate volumetric game content, either manually or procedurally.
The library&#x27;s author &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;@bonsairobo&lt;&#x2F;a&gt; has also written a couple posts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&#x2F;smooth-voxel-mapping-a-technical-deep-dive-on-real-time-surface-nets-and-texturing-ef06d0f8ca14&quot;&gt;&amp;quot;Smooth Voxel Mapping: a Technical Deep Dive on Real-time Surface Nets and Texturing&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&#x2F;a-3rd-person-camera-in-complex-voxel-world-523944d5335c&quot;&gt;&amp;quot;A 3rd Person Camera in a Complex Voxel World&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Upcoming on the roadmap are procedural generation algorithms for generating
maps, new kinds of voxels, and graphical improvements. Currently, the library
and editor depend on the Amethyst engine version 0.15, but there is a desire to
make the library engine-agnostic. Contributions are welcome!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bevy-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bevy-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;&quot;&gt;&lt;img src=&quot;bevy_logo.png&quot; alt=&quot;bevy logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;Bevy&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cart&quot;&gt;@cart&lt;&#x2F;a&gt; is a brand new, refreshingly simple data-driven
game engine built in Rust. It aims to be:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Capable&lt;&#x2F;strong&gt;: Offer a complete 2D and 3D feature set.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Simple&lt;&#x2F;strong&gt;: Easy for newbies to pick up, but infinitely flexible
for power users.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Data Focused&lt;&#x2F;strong&gt;: Data-oriented architecture using
the Entity Component System paradigm.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Modular&lt;&#x2F;strong&gt;: Use only what you need. Replace what you don&#x27;t like.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Fast&lt;&#x2F;strong&gt;: App logic should run quickly, and when possible, in parallel.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Productive&lt;&#x2F;strong&gt;: Changes should compile quickly ... waiting isn&#x27;t fun.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These last few weeks have been big for the Bevy project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Bevy was announced and &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&quot;&gt;open sourced on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Bevy&#x27;s features were introduced in the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;introducing-bevy&quot;&gt;&amp;quot;Introducing Bevy&amp;quot;&lt;&#x2F;a&gt;
blog post.&lt;&#x2F;li&gt;
&lt;li&gt;Had a staggering number of people join the community.
This required some quick planning to handle the new size,
which they outlined in the &lt;a href=&quot;https:&#x2F;&#x2F;bevyengine.org&#x2F;news&#x2F;scaling-bevy&quot;&gt;Scaling Bevy&lt;&#x2F;a&gt; blog post.&lt;&#x2F;li&gt;
&lt;li&gt;Added an official &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;awesome-bevy&quot;&gt;awesome-bevy repo&lt;&#x2F;a&gt;
with a huge number of community plugins, games, apps, and learning materials.&lt;&#x2F;li&gt;
&lt;li&gt;Rapier, a new pure-rust physics engine,
released an &lt;a href=&quot;https:&#x2F;&#x2F;www.dimforge.com&#x2F;blog&#x2F;2020&#x2F;08&#x2F;25&#x2F;announcing-the-rapier-physics-engine&#x2F;#reaching-out-to-other-communities-bevy-and-javascript&quot;&gt;official Bevy plugin&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Thanks to the generosity of individuals and companies, they quickly met
their first two funding goals on @cart&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;cart&quot;&gt;Github Sponsors page&lt;&#x2F;a&gt;:
&amp;quot;sustainable development&amp;quot; and &amp;quot;@cart makes minimum wage working on Bevy&amp;quot;.&lt;&#x2F;li&gt;
&lt;li&gt;Bevy received a glowing review from the Amethyst Engine team and they agreed
to collaborate in certain areas.
See the &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;bevy-engine-addressing-the-elephant-in-the-room&quot;&gt;Addressing the Elephant in the Room&lt;&#x2F;a&gt;
thread on the Amethyst forum for more details.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Bevy users started sharing their work
on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;channels&#x2F;691052431525675048&#x2F;692648638823923732&quot;&gt;Bevy Discord showcase channel&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;bevy_showcase.png&quot; alt=&quot;bevy showcase&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In addition to the initial Bevy GitHub release, 114 pull requests
were merged this month. Some highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A custom &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;pull&#x2F;384&quot;&gt;async task system for Bevy&lt;&#x2F;a&gt;,
which significantly improves CPU usage and paves the way for future async work.&lt;&#x2F;li&gt;
&lt;li&gt;Refactored data-driven ECS shader code to make it more maintainable, fix some bugs,
and ready to be optimized via the ECS change detection apis.&lt;&#x2F;li&gt;
&lt;li&gt;Support for &amp;quot;logical or&amp;quot; ECS queries as a compliment to the default &amp;quot;logical and&amp;quot;.&lt;&#x2F;li&gt;
&lt;li&gt;Numerous CI improvements.&lt;&#x2F;li&gt;
&lt;li&gt;Use shaderc to compile shaders for iOS builds.&lt;&#x2F;li&gt;
&lt;li&gt;GLTF loading improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Bevy also made good progress on its three focus areas:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;issues&#x2F;254&quot;&gt;Editor-Ready UI&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;issues&#x2F;179&quot;&gt;Physically Based Rendering (PBR)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;issues&#x2F;255&quot;&gt;Scenes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;i7bcwu&#x2F;introducing_bevy&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24123283&quot;&gt;hacker news&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cart_cart&#x2F;status&#x2F;1292903435155599361&quot;&gt;twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;bevy-engine-addressing-the-elephant-in-the-room&quot;&gt;amethyst forum&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;minigene&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.github.com&#x2F;jojolepro&#x2F;minigene&quot;&gt;Minigene&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#minigene&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.github.com&#x2F;jojolepro&#x2F;minigene&quot;&gt;Minigene&lt;&#x2F;a&gt; is a tiled and ASCII game engine made by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jojolepro&quot;&gt;@jojolepro&lt;&#x2F;a&gt;.
It allows to very simply create complex games running on desktop as well as
in the browser.&lt;&#x2F;p&gt;
&lt;p&gt;While it is still under heavy development, a lot can be done already:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Easily create ECS systems.&lt;&#x2F;li&gt;
&lt;li&gt;Create tiled and ASCII entities.&lt;&#x2F;li&gt;
&lt;li&gt;Create GUI elements.&lt;&#x2F;li&gt;
&lt;li&gt;Move entities around with A* pathfinding.&lt;&#x2F;li&gt;
&lt;li&gt;and much more!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tetra&quot;&gt;Tetra&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
versions &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1289857217198317568&quot;&gt;0.4.1&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1294316642680426497&quot;&gt;0.4.2&lt;&#x2F;a&gt; were released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved Serde support;&lt;&#x2F;li&gt;
&lt;li&gt;Various fixes and improvements to the built-in &lt;code&gt;Camera&lt;&#x2F;code&gt; type;&lt;&#x2F;li&gt;
&lt;li&gt;Many documentation improvements, based on user feedback.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In addition, Tetra 0.5 is planned for release in early September. For more
information on the upcoming changes, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md&quot;&gt;changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;piston&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pistondevelopers&#x2F;piston&quot;&gt;Piston&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#piston&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;piston-logo.png&quot; alt=&quot;text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pistondevelopers&#x2F;piston&quot;&gt;Piston&lt;&#x2F;a&gt; is a modular game engine written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;A new &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;TkDnS9x&quot;&gt;Piston Discord Channel&lt;&#x2F;a&gt; has been set up
for the Piston project.&lt;&#x2F;p&gt;
&lt;p&gt;Piston consists of a core library &amp;quot;piston&amp;quot; which itself are composed of
smaller libraries for abstracting input, window and event loop.
This design helps reducing breaking changes in the ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;The core library &lt;code&gt;pistoncore-input&lt;&#x2F;code&gt; is now stabilized and reached 1.0!
This is the most important core abstraction, because it glues all
libraries that are not independent of the core.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pistondevelopers&#x2F;dyon&quot;&gt;Dyon&lt;&#x2F;a&gt; is a rusty dynamically typed scripting language.
It is developed and maintained as part of the Piston project,
but can be used as a standalone library.&lt;&#x2F;p&gt;
&lt;p&gt;Dyon is designed from the bottom up to be a good gamedev scripting language for Rust.
It uses a lifetime checker instead of garbage collection, a mutability checker,
optional namespaces and ad-hoc types, named argument syntax,
4D vectors and HTML colors, plus a lot more features!&lt;&#x2F;p&gt;
&lt;p&gt;Recently, Dyon got better macro integration for native Rust types
using &lt;code&gt;#&lt;&#x2F;code&gt; as a prefix.
Here is an example of this feature is being tested in
an experimental offline 3D renderer (not open sourced):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;&#x2F;&#x2F; Called by `set_simple(scene: _, sdf: _, id: _)`.
&lt;&#x2F;span&gt;&lt;span&gt;dyon_fn!{fn set_simple__scene_sdf_id(
&lt;&#x2F;span&gt;&lt;span&gt;    scene: #&amp;amp;mut SimpleScene,
&lt;&#x2F;span&gt;&lt;span&gt;    sdf: #&amp;amp;Sdf,
&lt;&#x2F;span&gt;&lt;span&gt;    id: f64
&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    scene.sdfs[id as usize] = sdf.clone()
&lt;&#x2F;span&gt;&lt;span&gt;}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To follow updates on Dyon, check out the subreddit &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;dyon&#x2F;&quot;&gt;&#x2F;r&#x2F;dyon&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pistondevelopers&#x2F;graphics&quot;&gt;Piston-Graphics&lt;&#x2F;a&gt; is a library for 2D graphics, written in Rust,
that works with multiple backends.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Stencil::Increment&lt;&#x2F;code&gt; has been added and the ecosystem
has been updated to the latest version.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;The research branch of the Piston project, AdvancedResearch,
has released a new ECS library &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;advancedresearch&#x2F;nano_ecs&quot;&gt;Nano-ECS&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This ECS design stores all components in a single array
and uses bit masks for enabling&#x2F;disabling components.
An entity can have maximum 64 components and must be initialized
with all components it uses in the future.
Each entity has a slice into the array that stores all components.
The &lt;code&gt;World&lt;&#x2F;code&gt; object, &lt;code&gt;Component&lt;&#x2F;code&gt; and systems are generated using macros.&lt;&#x2F;p&gt;
&lt;p&gt;One research project with Nano-ECS is to prototype a UI framework
for Rust with a UI editor (not open sourced yet).
This project uses Piston-Graphics by default,
but can generate draw commands for processing by other 2D APIs.
It is also possible to override rendering of widgets for
custom looks with Piston-Graphics, which is often useful in gamedev.
Recently, this project has gotten to a place where
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PistonDeveloper&#x2F;status&#x2F;1299840279374110720&quot;&gt;tree-view interaction&lt;&#x2F;a&gt; is working.&lt;&#x2F;p&gt;
&lt;p&gt;You can follow development at &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PistonDeveloper&quot;&gt;@PistonDeveloper at Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst-v0-15-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;release-0.15.1&quot;&gt;Amethyst v0.15.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-v0-15-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;amethyst-logo.png&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; is a game engine and tool-set
for ambitious game developers.&lt;&#x2F;p&gt;
&lt;p&gt;This month a &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;release-0.15.1&quot;&gt;v0.15.1 version was released&lt;&#x2F;a&gt;.
Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New book chapters for &lt;a href=&quot;https:&#x2F;&#x2F;book.amethyst.rs&#x2F;stable&#x2F;ui.html&quot;&gt;UI&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;book.amethyst.rs&#x2F;stable&#x2F;tiles.html&quot;&gt;Tiles&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;tree&#x2F;v0.15.1&#x2F;examples&quot;&gt;Updated examples&lt;&#x2F;a&gt;, with special attention to the pong example;&lt;&#x2F;li&gt;
&lt;li&gt;Switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;blob&#x2F;v0.15.1&#x2F;.github&#x2F;workflows&#x2F;ci.yml&quot;&gt;GitHub Actions for CI&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Lots of API improvements and bug fixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;blob&#x2F;master&#x2F;docs&#x2F;CHANGELOG.md#0151---2020-08-14&quot;&gt;full changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;v0.16 plans include a full migration to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;legion&quot;&gt;Legion ECS&lt;&#x2F;a&gt;
and a big site face lift.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ibvheq&#x2F;amethyst_engine_v0151&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;starframe&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&quot;&gt;starframe&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#starframe&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;starframe-demo.gif&quot; alt=&quot;Current state of starframe graphics and physics&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0lentum&#x2F;starframe&quot;&gt;starframe&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&quot;&gt;@molentum&lt;&#x2F;a&gt; is a work-in-progress 2D game engine
for physics-y sidescrolling games. This month it received
&lt;a href=&quot;https:&#x2F;&#x2F;molentum.me&#x2F;blog&#x2F;starframe-architecture&#x2F;&quot;&gt;an experimental graph-based entity system&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The next area of focus is going to be fleshing out the physics with
generalized constraints, which will enable things like friction and joints.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;iju3xq&#x2F;starframe_devlog_architecture_ecs_graph&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;molentum_&#x2F;status&#x2F;1300034941816897542&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mochi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;richardanaya&#x2F;mochi&quot;&gt;mochi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mochi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mochi.jpg&quot; alt=&quot;A running app on a physical device&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;richardanaya&#x2F;mochi&quot;&gt;mochi&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;richardanaya&quot;&gt;@richardanaya&lt;&#x2F;a&gt; is a game engine oriented toward
low-power mobile Linux phones&#x2F;tablets.
It&#x27;s written in Rust and uses Gtk and Cairo.
All drawing is done with an &lt;a href=&quot;https:&#x2F;&#x2F;gtk-rs.org&#x2F;docs&#x2F;cairo&#x2F;struct.Context.html&quot;&gt;Cairo Context&lt;&#x2F;a&gt; that mochi
has extended to do some really &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;mochi&#x2F;latest&#x2F;mochi&#x2F;trait.MochiCairoExt.html&quot;&gt;common graphics operations&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This project is super alpha but usable.
Current features include: touch, screen rotation, atlases, sounds.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;richardanaya&#x2F;pinephone-cairo-game-starter&quot;&gt;pinephone-cairo-game-starter&lt;&#x2F;a&gt; is a starter for creating
a Cairo-based game in Rust for &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;PinePhone&quot;&gt;PinePhone&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;i2389n&#x2F;how_to_build_a_pinephone_game_using_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bird-puffin-profiler&quot;&gt;🐦 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;puffin&quot;&gt;Puffin&lt;&#x2F;a&gt; Profiler&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bird-puffin-profiler&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;puffin.png&quot; alt=&quot;Puffin flamegraph shown with puffin-imgui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;puffin&quot;&gt;Puffin&lt;&#x2F;a&gt; is a simple instrumentation profiler created by &lt;a href=&quot;https:&#x2F;&#x2F;www.embark-studios.com&#x2F;&quot;&gt;Embark&lt;&#x2F;a&gt;
where you can opt-in to profile parts of your code.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;my_function&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    puffin::profile_function!():
&lt;&#x2F;span&gt;&lt;span&gt;    ...
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;... {
&lt;&#x2F;span&gt;&lt;span&gt;        puffin::profile_scope_data!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;load_image&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, image_name):
&lt;&#x2F;span&gt;&lt;span&gt;        ...
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The collected profile data can be viewed ingame with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Gekkio&#x2F;imgui-rs&quot;&gt;imgui-rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;optick-profiler&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;optick.dev&#x2F;&quot;&gt;Optick&lt;&#x2F;a&gt; Profiler&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#optick-profiler&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=p57TV5342fo&quot;&gt;&lt;img src=&quot;optick-video.jpg&quot; alt=&quot;A screenshot from the video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to watch a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=p57TV5342fo&quot;&gt;video tutorial &#x2F; features overview&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;optick.dev&#x2F;&quot;&gt;Optick&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bombomby&quot;&gt;@bombomby&lt;&#x2F;a&gt; is a lightweight C++ profiler for games
that provides access for all the necessary tools required for
efficient performance analysis and optimization:
instrumentation, switch-contexts, sampling, GPU counters.&lt;&#x2F;p&gt;
&lt;p&gt;This month Rust API for Optick was released: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bombomby&#x2F;optick-rs&quot;&gt;optick-rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, a set of procedural macros for simplifying the process of code markup
were published: &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;optick-attr&quot;&gt;optick-attr&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Instrument current function
&lt;&#x2F;span&gt;&lt;span&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;optick_attr&lt;&#x2F;span&gt;&lt;span&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;profile&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span&gt;() { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* Do some stuff*&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Generate performance capture for function
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; to {dir}&#x2F;capture_name(date-time).opt.
&lt;&#x2F;span&gt;&lt;span&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;optick_attr&lt;&#x2F;span&gt;&lt;span&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;capture&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;capture_name&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;pub fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;wowaddonmanager-v1-0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MR2011&#x2F;wowAddonManager&quot;&gt;wowAddonManager&lt;&#x2F;a&gt; v1.0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wowaddonmanager-v1-0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wowAddonManager-example.png&quot; alt=&quot;wowAddonManager Example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MR2011&#x2F;wowAddonManager&quot;&gt;wowAddonManager&lt;&#x2F;a&gt; is a terminal user interface for managing World of
Warcraft addons on Linux made by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mreimsbach&quot;&gt;@mreimsbach&lt;&#x2F;a&gt;. It allows installing addons
from &lt;a href=&quot;https:&#x2F;&#x2F;www.curseforge.com&#x2F;wow&#x2F;addons&quot;&gt;Curseforge&lt;&#x2F;a&gt; for WoW Classic as well as WoW Retail.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fdehau&#x2F;tui-rs&quot;&gt;tui-rs&lt;&#x2F;a&gt; library was used to create the interface and &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.redox-os.org&#x2F;redox-os&#x2F;termion&quot;&gt;Termion&lt;&#x2F;a&gt; was used to
communicate with the TTY.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;intellij-ron&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;intellij-ron&quot;&gt;intellij-ron&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#intellij-ron&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;ron&quot;&gt;RON&lt;&#x2F;a&gt; (Rusty Object Notation) is a simple readable data serialization format
that looks similar to Rust syntax and is designed
to support all of &lt;a href=&quot;https:&#x2F;&#x2F;serde.rs&#x2F;data-model.html&quot;&gt;Serde&#x27;s data model&lt;&#x2F;a&gt;.
RON is relatively popular amongst Rust game developers.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JonahHenriksson&quot;&gt;@JonahHenriksson&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;intellij-ron&quot;&gt;intellij-ron&lt;&#x2F;a&gt; - a new plugin
that adds &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;ron&quot;&gt;RON&lt;&#x2F;a&gt;  support to IntelliJ-based IDEs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ictnsc&#x2F;ive_created_an_free_open_source_intellij_plugin&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sia-parser-viewer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Football_Manager&quot;&gt;&amp;quot;.sia&amp;quot; Parser &amp;amp; Viewer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sia-parser-viewer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;football-manager.jpeg&quot; alt=&quot;sia_viewer demo: A textured model&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Stromberg90&quot;&gt;@Stromberg90&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Stromberg90&#x2F;football-manager-tools&quot;&gt;Football Manager Tools&lt;&#x2F;a&gt; - a set of tools
for working with &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Football_Manager&quot;&gt;Football Manager&#x27;s&lt;&#x2F;a&gt; 3D mesh format(.sia).
Amongst them:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sia_parser&lt;&#x2F;code&gt; - a Rust crate for parsing .sia files.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;sia_viewer&lt;&#x2F;code&gt; - a standalone Mesh(.sia) Viewer.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;89&quot;&gt;#89 &amp;quot;Moving ecs_bench to GDWG&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;93&quot;&gt;#93 &amp;quot;Consider creating a game math library benchmark for the working group&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;233&quot;&gt;#233 &amp;quot;Custom Domain&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&quot;&gt;rust-gamedev&#x2F;ecs_bench_suite&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&#x2F;issues&#x2F;6&quot;&gt;#6 &amp;quot;Benchmark compile times&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;ecs_bench_suite&#x2F;issues&#x2F;13&quot;&gt;#13 &amp;quot;How results will be updated?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;SIMple-Mechanics&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;SIMple Mechanic&#x27;s good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Bevy&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ioftll&#x2F;this_month_in_rust_gamedev_13_august_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1303073032660037635&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #12 - July 2020</title>
            <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/012/</link>
            <guid>https://gamedev.rs/news/012/</guid>
            <description>&lt;p&gt;Welcome to the twelfth issue of the Rust GameDev Workgroup’s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;012&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;012&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;012&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;012&#x2F;#meeting-minutes&quot;&gt;Meeting Minutes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;012&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;012&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;012&#x2F;#bonus&quot;&gt;Bonus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ochre-4k-intro&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codeslow.com&#x2F;2020&#x2F;07&#x2F;writing-winning-4k-intro-in-rust.html&quot;&gt;ochre&lt;&#x2F;a&gt; - 4K Intro&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ochre-4k-intro&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=SIkkYRQ07tU&quot;&gt;&lt;img src=&quot;4k-into-youtube.jpeg&quot; alt=&quot;Youtube preview: mountains &amp;amp; spheres&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=SIkkYRQ07tU&quot;&gt;watch the demo on Youtube&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Jani Peltonen has recently released a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;janiorca&#x2F;sphere_dance&quot;&gt;4K intro&lt;&#x2F;a&gt;
which is completely written in Rust and GLSL
and published an article &lt;a href=&quot;https:&#x2F;&#x2F;www.codeslow.com&#x2F;2020&#x2F;07&#x2F;writing-winning-4k-intro-in-rust.html&quot;&gt;&amp;quot;Writing a winning 4K intro in Rust&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A 4K intro is a demo where the entire program (including any data)
has to be 4096 bytes or less so it is important
that the code is as space efficient as possible.
Rust has a bit of a reputation for creating bloated executables so I wanted
to find out if is possible to create very space efficient code with it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;enbbxu&#x2F;writing_a_4k_intro_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23742870&quot;&gt;hacker news&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;robo-instructus-1-year-later&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2020&#x2F;07&#x2F;16&#x2F;1-year-later.html&quot;&gt;Robo Instructus: 1 Year Later&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus-1-year-later&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;robo-os.jpg&quot; alt=&quot;game logo + OS logos&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One year ago &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; released the &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;www.roboinstruct.us&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; puzzle game
on &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Steam&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;bigabgames.itch.io&#x2F;robo-instructus&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month Alex released a devlog post &lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2020&#x2F;07&#x2F;16&#x2F;1-year-later.html&quot;&gt;&amp;quot;Robo Instructus: 1 Year Later&amp;quot;&lt;&#x2F;a&gt;
about how well the game did after the release:
sales by platform&#x2F;country&#x2F;OS, player feedback &amp;amp; reviews, etc.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;People mostly don’t publish sales figures,
I guess it makes more business sense to be vague.
But maybe these will be helpful or interesting in some way.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Also, Alex continues to maintain and polish the game: &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;newshub&#x2F;app&#x2F;1032170&#x2F;view&#x2F;4355495589078346745&quot;&gt;1.29 version&lt;&#x2F;a&gt;
brings auto-scrolling improvements, better lang parsing,
bugfixes, and dependency updates.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;hsf2su&#x2F;robo_instructus_1_year_later&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crate-before-attack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crate-before-attack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;&lt;img src=&quot;crate-before-attack.gif&quot; alt=&quot;Golf Club in Crate Before Attack&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;A new weapon: the Golf Club&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CrateAttack&quot;&gt;koalefant (@CrateAttack)&lt;&#x2F;a&gt;
is a skill-based grappling hook multiplayer game where frogs combat their friends
while navigating the landscape with their sticky tongues.&lt;&#x2F;p&gt;
&lt;p&gt;A summary of July changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Gameplay: added a new melee weapon:
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;UYxZQh68T6E&quot;&gt;the Golf Club&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Maps: added new map &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;D63xy7sXStk&quot;&gt;Ruins&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;www.behance.net&#x2F;spoon_tar&quot;&gt;Kesha Astafyev&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Animation: added eye tracking, frogs will track the closest danger
with their eyes such as a projectile or a pet.&lt;&#x2F;li&gt;
&lt;li&gt;Lobby: it is now possible to observe a match after it was started,
added chat, user list with country flags, match details, and map previews.&lt;&#x2F;li&gt;
&lt;li&gt;Localization: the game comes in three languages now: English, Spanish, Russian.&lt;&#x2F;li&gt;
&lt;li&gt;Numerous bugfixes and tweaks.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Here is &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;play&quot;&gt;a Playable Browser build&lt;&#x2F;a&gt;.
More details are on &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC_xMilPTLuuE5iLs1Ml9zow&quot;&gt;the YouTube channel&lt;&#x2F;a&gt;
and in &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20200731-july-update&#x2F;&quot;&gt;July Update DevLog-entry&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wonder&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;wonder&quot;&gt;Wonder&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wonder&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;wonder&quot;&gt;&lt;img src=&quot;wonder-screenshot.png&quot; alt=&quot;Lines drawn with a ball ready to roll down them&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;wonder&quot;&gt;Wonder&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kettle11&#x2F;LD46&quot;&gt;source code&lt;&#x2F;a&gt;) is a casual physics puzzle game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kettlecorn&quot;&gt;@kettlecorn&lt;&#x2F;a&gt;
made for the web with WebAssembly, browser APIs, and no game framework.
The objective is to collect all the stars on each level
by drawing lines for the ball to roll along.&lt;&#x2F;p&gt;
&lt;p&gt;The game was made in 48 hours for the
&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&quot;&gt;Ludum Dare game jam&lt;&#x2F;a&gt; that occurred in April.
@kettlecorn recently published an article going into the technical and
creative challenges encountered making the game:
&lt;a href=&quot;https:&#x2F;&#x2F;ianjk.com&#x2F;rust-gamejam&#x2F;&quot;&gt;&amp;quot;Making a Game in 48 hours with Rust and WebAssembly&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Wonder can be &lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;wonder&quot;&gt;played in the browser on itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vlad-zhukov-s-online-rts-prototype&quot;&gt;Vlad Zhukov&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1288091150339969024&quot;&gt;Online RTS Prototype&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vlad-zhukov-s-online-rts-prototype&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1288091150339969024&quot;&gt;&lt;img src=&quot;hex_strat_gameplay.gif&quot; alt=&quot;gameplay demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;Vlad Zhukov&lt;&#x2F;a&gt; shared a video of a WIP multiplayer online strategy game
where you fight with other players for territory.
Currently, there are two types of resources and 5 types of buildings.
To build on the tile you need to occupy it with your warriors first.
The player who occupied all enemies&#x27; tiles win.&lt;&#x2F;p&gt;
&lt;p&gt;The game is written with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;
and a custom GUI library.
Some parts of the game are promised to be open-sourced in the future.
Read more about crates used in this project &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;hzdzqg&#x2F;my_new_online_strategy_game&#x2F;fzk4l25&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1288091150339969024&quot;&gt;twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;hzdzqg&#x2F;my_new_online_strategy_game&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.jpeg&quot; alt=&quot;screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a traffic simulation game exploring
how small changes to roads affect cyclists, transit users, pedestrians,
and drivers.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;releases&quot;&gt;versions v0.2.2..v0.2.5&lt;&#x2F;a&gt; were released.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new random traffic scenario generator that makes people go between
houses and workplaces.&lt;&#x2F;li&gt;
&lt;li&gt;New commute pattern explorer tool.&lt;&#x2F;li&gt;
&lt;li&gt;New character art to give cutscenes a bit more personality.&lt;&#x2F;li&gt;
&lt;li&gt;Lots of pathfinding and user interface improvements.&lt;&#x2F;li&gt;
&lt;li&gt;Bugfixes and improved performance (especially startup time on large maps).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;Tennis Academy Dash&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tennis_academy.gif&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;Tennis Academy Dash&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1285298082033348609&quot;&gt;v0.2&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;This release features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a layering&#x2F;scene management system&lt;&#x2F;li&gt;
&lt;li&gt;transitioning between UI scenes and game scenes&lt;&#x2F;li&gt;
&lt;li&gt;improving the level loading to work with string config files&lt;&#x2F;li&gt;
&lt;li&gt;adding a 5th level&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;protochess&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;protochess.com&#x2F;&quot;&gt;protochess&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#protochess&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;protochess.com&#x2F;&quot;&gt;&lt;img src=&quot;protochess.gif&quot; alt=&quot;demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;protochess.com&#x2F;&quot;&gt;protochess&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;raytran&#x2F;protochess&quot;&gt;source&lt;&#x2F;a&gt;) is an online multiplayer chess website
that lets you build custom pieces&#x2F;boards.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Want a piece that can move like a knight + queen? Sure.
Want to play on a 16x16 sized board? Impractical but you can do it!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The frontend is written in Svelte with routing from Routify
and styling with the Bulma CSS framework.
All the chess logic is written in Rust, and compiled to WebAssembly to run singleplayer.
The multiplayer websocket server uses Warp
and is modeled after &lt;a href=&quot;https:&#x2F;&#x2F;www.mattkeeter.com&#x2F;projects&#x2F;pont&#x2F;&quot;&gt;this project&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;hki9fu&#x2F;protochesscom_a_chess_website_that_lets_you_play&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nox-futura-rust-edition&quot;&gt;Nox Futura (Rust Edition)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nox-futura-rust-edition&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nox-futura.jpeg&quot; alt=&quot;SSAO demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bracketproductions.com&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt;
(the author of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;&quot;&gt;the Rust Roguelike Tutorial&lt;&#x2F;a&gt;)
continues porting their old &lt;a href=&quot;https:&#x2F;&#x2F;thebracket.itch.io&#x2F;nox-futura&quot;&gt;&amp;quot;Nox Futura&amp;quot; project&lt;&#x2F;a&gt; to Rust.
The game uses wgpu, Legion, and Dear ImGui.&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;noxfutura&quot;&gt;The project&#x27;s repo is now public&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Voxel-friendly SSAO;&lt;&#x2F;li&gt;
&lt;li&gt;The render pipeline is now about 75% done;&lt;&#x2F;li&gt;
&lt;li&gt;Jobs board, buildings creation, and lumberjacking;&lt;&#x2F;li&gt;
&lt;li&gt;3D cursor and mouse picking;&lt;&#x2F;li&gt;
&lt;li&gt;Voxelized Vegetation and growing trees;&lt;&#x2F;li&gt;
&lt;li&gt;Improved A* pathfinding and performance in general.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out Sharing Saturday devlogs for more detailed reports:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;hktr2y&#x2F;sharing_saturday_318&#x2F;fwutz7n&quot;&gt;#1&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;hp04g6&#x2F;sharing_saturday_319&#x2F;fxnsn8h&quot;&gt;#2&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;ht6wcc&#x2F;sharing_saturday_320&#x2F;fygjvkg&quot;&gt;#3&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;hxcvp8&#x2F;sharing_saturday_321&#x2F;fz5atmd&quot;&gt;#4&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;camping-textcamp&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;text.camp&#x2F;&quot;&gt;🏕 Textcamp!&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#camping-textcamp&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;textcamp.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;peat&quot;&gt;@peat&lt;&#x2F;a&gt; released a simple multiplayer demo of &lt;a href=&quot;http:&#x2F;&#x2F;play.text.camp:8080&#x2F;&quot;&gt;Textcamp&lt;&#x2F;a&gt;, a
text-based adventure game.&lt;&#x2F;p&gt;
&lt;p&gt;The goal of Textcamp is to build a modern &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;MUD&quot;&gt;MUD&lt;&#x2F;a&gt; platform that can be played
by &lt;a href=&quot;https:&#x2F;&#x2F;text.camp&#x2F;&quot;&gt;&lt;em&gt;anyone, anywhere&lt;&#x2F;em&gt;&lt;&#x2F;a&gt;. It&#x27;s very early in development, so please
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;textdotcamp&quot;&gt;say hello&lt;&#x2F;a&gt; if you&#x27;re interested in contributing code or
stories!&lt;&#x2F;p&gt;
&lt;p&gt;This demo features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic scene, mob, and item templating, with spawning and combat.&lt;&#x2F;li&gt;
&lt;li&gt;Multiplayer authentication and support for hundreds of players.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;canon-collision&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;canoncollision.com&quot;&gt;Canon Collision&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#canon-collision&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;canon-collision.png&quot; alt=&quot;Basic Projectiles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;canoncollision.com&quot;&gt;Canon Collision&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&quot;&gt;@rukai&lt;&#x2F;a&gt; is an Undertale + Homestuck
fan-made platform fighter with powerful tools for modding.&lt;&#x2F;p&gt;
&lt;p&gt;This month, he started work on the project again after taking a break.
Notable changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1287377878460456963&quot;&gt;basic projectiles&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=sSrBGpT-Ebs&quot;&gt;WIP grab implementation (with some humorous results)&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=AaPkRSNhoSM&quot;&gt;New animations + attacks&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1279324105125163008&quot;&gt;custom shaders&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;pGLOWrpg&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg_12.gif&quot; alt=&quot;Improved river pathfinding, paths respect topography&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;@pGLOWrpg&lt;&#x2F;a&gt; (Procedurally Generated Living Open World RPG) is a long-term
project in development by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt;, which aims to be a text-based game with
maximum portability and accessibility and focus on interactions and emergent
narrative.&lt;&#x2F;p&gt;
&lt;p&gt;For the past month(s) the main focus of the development was on the river
generation system in the worldgen. Main features of the river generator are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;High robustness with most edge cases covered;&lt;&#x2F;li&gt;
&lt;li&gt;Single-pass with subsequent iterations generation, with numerous options to
tweak the process for either precision of the pattern or speed of generation;&lt;&#x2F;li&gt;
&lt;li&gt;Rivers are sorted upon intersections, their widths are adjusted, waterfalls
are formed when necessary;&lt;&#x2F;li&gt;
&lt;li&gt;Inflow and outflow directions are recorded for each cell, which allows
following the river upstream or downstream;&lt;&#x2F;li&gt;
&lt;li&gt;Simple yet effective erosion model implemented, which ensures no upwards flows
are allowed;&lt;&#x2F;li&gt;
&lt;li&gt;Each stream has its unique ID, which will later be linked to the stream data;&lt;&#x2F;li&gt;
&lt;li&gt;Streams have 12 orders of magnitude from smallest brooks to major rivers;&lt;&#x2F;li&gt;
&lt;li&gt;All the options are available to user under &amp;quot;General&amp;quot;, &amp;quot;Advanced&amp;quot; and
&amp;quot;Very advanced&amp;quot; sections for any level of fine-tuning.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Further development will involve re-factoring of the code and making it ready
to be published prior to implementing new features. For small dev reports follow
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pglowrpg&quot;&gt;@pGLOWrpg&lt;&#x2F;a&gt; on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sandbox&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;sandbox&quot;&gt;Sandbox&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sandbox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sandbox_screenshot.png&quot; alt=&quot;Sandbox screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;sandbox&quot;&gt;Sandbox&lt;&#x2F;a&gt; is a falling sand game by JMS55 that provides a variety of fun
particle types to place, and then you get to watch the resulting interactions!&lt;&#x2F;p&gt;
&lt;p&gt;As they didn&#x27;t make it in time for last month&#x27;s newsletter, this month&#x27;s edition
covers the work they did in June and July:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Released version 1.0 and 1.1, created a flatpak package and associated metadata,
and published it to &lt;a href=&quot;https:&#x2F;&#x2F;flathub.org&#x2F;apps&#x2F;details&#x2F;com.github.jms55.Sandbox&quot;&gt;Flathub&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Several new particles such as Fire, Mirror, Glitch, and some hidden ones,
and tweaked or overhalled almost every other particle!&lt;&#x2F;li&gt;
&lt;li&gt;A fancy new glow post process effect for Acid&#x2F;Fire&#x2F;Electricity,
created using wgpu-rs compute shaders.
&lt;ul&gt;
&lt;li&gt;As a precursor to this, they made a PR to the pixels crate that removes the
old RenderPass approach in favor of giving the user direct access to wgpu.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Made a slick new icon and background for the game.&lt;&#x2F;li&gt;
&lt;li&gt;Added a video recording feature using gstreamer-rs and x264enc,
and then later removed it (for now).
&lt;ul&gt;
&lt;li&gt;Moving from recording the raw texture generated for pixels
to the post-processed texture from wgpu
involved a major overhaul, and it proved too glitchy and slow.
Hopefully, it will be revived later, in the form of recording user inputs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Many structural improvements, such as less glitchy particle
placement with Bresenham&#x27;s line algorithm,
better error handling, and ensuring particles
are only ever stored on the heap.&lt;&#x2F;li&gt;
&lt;li&gt;Performance improvements, including generating noise in a separate thread.&lt;&#x2F;li&gt;
&lt;li&gt;Currently WIP: UI using imgui.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;sandbox_icon.svg&quot; alt=&quot;Sandbox icon&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Got any ideas? Leave an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;sandbox&quot;&gt;issue on github&lt;&#x2F;a&gt;, or add it yourself!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pushin-boxes&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;septum.io&#x2F;games&#x2F;pushin-boxes&quot;&gt;Pushin&#x27; Boxes&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pushin-boxes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;septum.itch.io&#x2F;pushin-boxes&quot;&gt;&lt;img src=&quot;pushin_boxes_gameplay.gif&quot; alt=&quot;Pushin&#x27; Boxes gameplay&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;septum.io&#x2F;games&#x2F;pushin-boxes&quot;&gt;Pushin&#x27; Boxes&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;septum.itch.io&#x2F;pushin-boxes&quot;&gt;itch&lt;&#x2F;a&gt;)
is a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Sokoban&quot;&gt;Sokoban&lt;&#x2F;a&gt; clone made with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;septum___&quot;&gt;@septum&lt;&#x2F;a&gt;. It features 16 levels of puzzling box-pushin&#x27; action
where the player controls a little robot (named プシン).
Check out a &lt;a href=&quot;https:&#x2F;&#x2F;septum.io&#x2F;blog&#x2F;my-first-game&quot;&gt;blog post&lt;&#x2F;a&gt; about the game&#x27;s release.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;septum___&#x2F;pushin_boxes&quot;&gt;The source code is available on GitLab&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;don-t-stop&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;superahtoms.itch.io&#x2F;dont-stop&quot;&gt;Don&#x27;t Stop&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#don-t-stop&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dont-stop.gif&quot; alt=&quot;gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;superahtoms.itch.io&#x2F;dont-stop&quot;&gt;Don&#x27;t Stop&lt;&#x2F;a&gt; by @superahtoms is a rhythm game
written using Rust and SDL2 for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;gmtk-2020&quot;&gt;GMTK 2020 jam&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ever just wanted to keep dancing but the fuzz wants you to stop?
Well now you can! Just keep on dancing, don&#x27;t let the bouncers grab you
while you&#x27;re doing it or your fun stops!
Keep being the life of the party because you are Party Pat!&lt;&#x2F;p&gt;
&lt;p&gt;Be like wind, be fast, dance and don&#x27;t get caught!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;hq0ecp&#x2F;gmtk_submission_dont_stop&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shotcaller&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;shotcaller&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shotcaller&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shotcaller&quot;&gt;shotcaller&lt;&#x2F;a&gt; is a WIP quick (~7mins) ASCII-rendered RTS&#x2F;MOBA game.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the way &amp;quot;MOBA&amp;quot; games such as DOTA2 or LoL are usually played,
the captain of the team is the default shotcaller.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The shotcaller needs to be unbiased and not have tunnel vision.
You need to be able to think in the future and tell
what would happen if you did this or that.
This becomes crucial when deciding to base-race or teleport back to defend.
~reddit-user&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Everyone on the team can play the part of Shotcaller on occasion.
The act of shotcalling is not typically the most prevalent activity of any player,
even for a captain — after all, they also need to play their hero.&lt;&#x2F;p&gt;
&lt;p&gt;But in this game, all you do is shotcalling and big-picture strategizing.
The game plays as if you were controlling the 6th-person-in-the-booth “coach” player,
and your team (of AI-played bots) actually follows
your instructions to the letter, within their designed constraints.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The game is in an early stage of development,
&lt;a href=&quot;https:&#x2F;&#x2F;www.notion.so&#x2F;Shotcaller-7374d2b2819c42ccb40f01dc7089d419&quot;&gt;check out the design document&lt;&#x2F;a&gt; for details and plans.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;on-fps-game-progress-2&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;atilkockar.com&#x2F;on-fps-game-progress-2&#x2F;&quot;&gt;On FPS Game Progress #2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#on-fps-game-progress-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;NIJNgr9zeXk&quot;&gt;&lt;img src=&quot;fps-game-2.jpeg&quot; alt=&quot;fps-game-screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to watch &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;NIJNgr9zeXk&quot;&gt;footage from the game&#x27;s current state&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On this update, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pingFromHeaven&quot;&gt;@pingFromHeaven&lt;&#x2F;a&gt; talks about the lighting implementation that
sets the tone for the game, how Rust is good at shortening the debugging
times, which is especially valuable when working directly with OpenGL and why
he doesn&#x27;t describe what the game is about.&lt;&#x2F;p&gt;
&lt;p&gt;The next update is going to be about establishing the mood further, which
includes a more elaborate environment with more details, basic SFX and
particles.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zemeroth&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zemeroth&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;zemeroth.jpeg&quot; alt=&quot;new agent info panel&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff&lt;&#x2F;a&gt; is a minimalistic 2D turn-based tactical game.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the recent updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The game got a new development roadmap: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1280874966855176199&quot;&gt;&amp;quot;Final Push&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;UI updates: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1284154997190594560&quot;&gt;widget stretching&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1284418956296626176&quot;&gt;more informative &amp;quot;dots&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;A few actions &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1282051985907298306&quot;&gt;got additional effects&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The work on adding sounds has begun.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren-sunrise.gif&quot; alt=&quot;Sunrise&quot; &#x2F;&gt;
&lt;em&gt;Sunrise&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In July, Veloren reached its 1000th merge! Lots of work has been done towards
the 0.7 release. The release date has been pushed from the beginning of August
to mid-August. A loot table system was added to item drops. Lots of work has
been done on animations and quadrupeds. Networking has switched to a new
system. Significant improvements have been made to pathfinding system to improve
fast quadruped movement. Particle systems are being implemented and optimized. A
crafting GUI has been added. Translations have stabilized significantly, and
there is a framework for translators to know what needs to be done.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;veloren-fire.gif&quot; alt=&quot;Fire particles&quot; &#x2F;&gt;
&lt;em&gt;Progress on the particle system&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics from July:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-75#networking-milestone-by-xmac94x&quot;&gt;Networking Milestone&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-75#the-case-of-the-disappearing-entities-by-imbris&quot;&gt;The Case of the Disappearing Entities&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-75#pathfinding-with-zesterer&quot;&gt;Pathfinding&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-75#guid-insights-by-sharp&quot;&gt;GUID Insights&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-76#particle-system-by-lobster&quot;&gt;Particle System&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-76#we-need-your-help-for-translations-this-is-how-it-s-done-by-xmac94x&quot;&gt;Translation Help&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-77#particle-improvements-by-lobster&quot;&gt;Particle Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-77#cpu-workloads-by-angelonfira&quot;&gt;CPU Workloads&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-78#refactoring-world-size-by-sharp&quot;&gt;Refactoring WORLD_SIZE&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;July&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-75&quot;&gt;#75&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-76&quot;&gt;#76&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-77&quot;&gt;#77&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-78&quot;&gt;#78&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In August, 0.7 will be released. Work will continue on castle and cave
generation. The inaugural episode of the Rust Game Dev podcast will be released,
which features an interview by Veloren developers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;veloren-quadrupeds.png&quot; alt=&quot;Quadrupeds&quot; &#x2F;&gt;
&lt;em&gt;Quadruped overhaul&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-on-ios-with-sdl2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.aclysma.com&#x2F;rust-on-ios-with-sdl2&#x2F;&quot;&gt;Rust on iOS with SDL2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-on-ios-with-sdl2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.aclysma.com&#x2F;rust-on-ios-with-sdl2&#x2F;&quot;&gt;&lt;img src=&quot;rust-ios-sdl2-screenshot.png&quot; alt=&quot;Rust on iOS with SDL2 demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;blog.aclysma.com&#x2F;rust-on-ios-with-sdl2&#x2F;&quot;&gt;tutorial&lt;&#x2F;a&gt; that describes setting up
Rust&#x2F;SDL2 on iOS. The resulting app can run in the simulator as well as on
physical devices. &lt;a href=&quot;https:&#x2F;&#x2F;www.libsdl.org&#x2F;download-2.0.php&quot;&gt;SDL2&lt;&#x2F;a&gt; is a mature library providing basic rendering,
audio, and input support. It can also be used to set up an opengl or vulkan
surface. This demo is using &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;sdl2&quot;&gt;Rust-SDL2&lt;&#x2F;a&gt; for bindings.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-sokoban-tutorial&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sokoban.iolivia.me&quot;&gt;Rust Sokoban Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-sokoban-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust_sokoban.png&quot; alt=&quot;sokoban update&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Rust Sokoban tutorial is an online book aimed at Rust gamedev beginners
which walks through making a simple Sokoban game using ggez and ECS (with specs).
It tries to teach the basics of architecting in ECS and basic Rust concepts
through a hands-on approach.&lt;&#x2F;p&gt;
&lt;p&gt;This month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the book was officially released on July 10th;&lt;&#x2F;li&gt;
&lt;li&gt;the project received 3 external contributions;&lt;&#x2F;li&gt;
&lt;li&gt;a few text edits were done, including fixing an issue with code
snippets not appearing correctly;&lt;&#x2F;li&gt;
&lt;li&gt;work on translations has started (🇨🇳 translation coming soon 🤞).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can follow
the release discussion &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1281641563257360384&quot;&gt;on Twitter&lt;&#x2F;a&gt;,
provide feedback &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;iolivia&#x2F;rust-sokoban&quot;&gt;on github&lt;&#x2F;a&gt; and
read the book at &lt;a href=&quot;https:&#x2F;&#x2F;sokoban.iolivia.me&quot;&gt;sokoban.iolivia.me&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;make-pong-with-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=TUE_HSgQiG0&quot;&gt;Make Pong with Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#make-pong-with-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=TUE_HSgQiG0&quot;&gt;&lt;img src=&quot;video-pong-tutorial.jpeg&quot; alt=&quot;youtube preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=TUE_HSgQiG0&quot;&gt;watch the tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Tantan22430802&quot;&gt;TanTan&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=TUE_HSgQiG0&quot;&gt;video tutorial&lt;&#x2F;a&gt;
that guides you through all the step of making a pong game in Rust
using the GGEZ framework.&lt;&#x2F;p&gt;
&lt;p&gt;The source code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;rusty_pong&quot;&gt;can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;an-introduction-to-data-oriented-design-in-rust&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jamesmcm.github.io&#x2F;blog&#x2F;2020&#x2F;07&#x2F;25&#x2F;intro-dod&#x2F;#en&quot;&gt;An Introduction to Data-Oriented Design in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#an-introduction-to-data-oriented-design-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;data_oriented_design.svg&quot; alt=&quot;vector vs linked list perf&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Data-Oriented Design is an approach to program optimization focused on
considering the features and limitations of the target hardware, and
carefully controlling the memory layout of data to take advantage of
those.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;http:&#x2F;&#x2F;jamesmcm.github.io&#x2F;blog&#x2F;2020&#x2F;07&#x2F;25&#x2F;intro-dod&#x2F;#en&quot;&gt;this article&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jamesmcm&quot;&gt;jamesmcm&lt;&#x2F;a&gt; provides benchmarks and
code for four example scenarios:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;AoS_and_SoA&quot;&gt;Array of Structs vs. Struct of Arrays&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Branching in a hot loop&lt;&#x2F;li&gt;
&lt;li&gt;Iteration in a vector vs. a linked list&lt;&#x2F;li&gt;
&lt;li&gt;Monomorphisation vs. &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;ch17-02-trait-objects.html#trait-objects-perform-dynamic-dispatch&quot;&gt;Dynamic Dispatch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The full article is available &lt;a href=&quot;http:&#x2F;&#x2F;jamesmcm.github.io&#x2F;blog&#x2F;2020&#x2F;07&#x2F;25&#x2F;intro-dod&#x2F;#en&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-n-games-talk&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;0Bj-5C2Zfqs?t=1404&quot;&gt;&amp;quot;Rust&#x27;N&#x27;Games&amp;quot; Talk&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-n-games-talk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;0Bj-5C2Zfqs?t=1404&quot;&gt;&lt;img src=&quot;rust-n-games-youtube.jpeg&quot; alt=&quot;youtube preview: a slide with Tower Rangers game&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;0Bj-5C2Zfqs?t=1404&quot;&gt;watch the talk&lt;&#x2F;a&gt;.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;During the recent &lt;a href=&quot;https:&#x2F;&#x2F;berline.rs&#x2F;2020&#x2F;07&#x2F;28&#x2F;rust-and-tell.html&quot;&gt;&amp;quot;Rust and Tell&amp;quot;&lt;&#x2F;a&gt; online event
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;extrawurst&quot;&gt;Stephan @extrawurst Dilly&lt;&#x2F;a&gt; gave a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;0Bj-5C2Zfqs?t=1404&quot;&gt;&amp;quot;Rust&#x27;N&#x27;Games&amp;quot; talk&lt;&#x2F;a&gt;
about their experience of using Rust in games at &lt;a href=&quot;https:&#x2F;&#x2F;www.gameroasters.com&#x2F;&quot;&gt;Gameroasters&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;a-servo-browser-plugin-for-unity&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.mozvr.com&#x2F;a-browser-plugin-for-unity&quot;&gt;A Servo Browser Plugin for Unity&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-servo-browser-plugin-for-unity&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;servo-unity.png&quot; alt=&quot;Functional scheme&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MozillaReality&#x2F;servo-unity&quot;&gt;Servo for Unity&lt;&#x2F;a&gt; is a Unity native plugin and a set
of Unity C# script components allow third parties to incorporate
Servo browser windows into Unity scenes.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.mozvr.com&#x2F;a-browser-plugin-for-unity&quot;&gt;A blog post about the project&lt;&#x2F;a&gt; gives a good
overview of the project goals, capabilities, architecture, challenges,
and future development plans.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;big-brain&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zkat&#x2F;big-brain&quot;&gt;big-brain&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#big-brain&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zkat&#x2F;big-brain&quot;&gt;big-brain&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;zkat__&quot;&gt;Kat Marchán&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Utility_system&quot;&gt;utility AI&lt;&#x2F;a&gt; library for games,
built on the specs ECS.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;It lets you define complex, intricate AI behaviors for your entities
based on their perception of the world.
Definitions are almost entirely data-driven, using plain .ron files,
and you only need to program considerations (entities that look at your game world),
and actions (entities that perform actual behaviors upon the world).
No other code is needed for actual AI behavior.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;weasel-v0-8&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&quot;&gt;weasel&lt;&#x2F;a&gt; v0.8&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weasel-v0-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&quot;&gt;weasel&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&quot;&gt;@Trisfald&lt;&#x2F;a&gt; is a customizable battle system for turn-based games.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&#x2F;releases&#x2F;tag&#x2F;v0.8.0&quot;&gt;v0.8 was released&lt;&#x2F;a&gt;.
Highlights include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New event types&lt;&#x2F;li&gt;
&lt;li&gt;Inanimate objects&lt;&#x2F;li&gt;
&lt;li&gt;Status effects&lt;&#x2F;li&gt;
&lt;li&gt;Many new examples&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;naia&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;naia-rs&#x2F;naia&quot;&gt;naia&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#naia&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;naia-rs&#x2F;naia&quot;&gt;naia&lt;&#x2F;a&gt; (&lt;strong&gt;n&lt;&#x2F;strong&gt;etworking &lt;strong&gt;a&lt;&#x2F;strong&gt;rchitecture for &lt;strong&gt;i&lt;&#x2F;strong&gt;nteractive &lt;strong&gt;a&lt;&#x2F;strong&gt;pplications)
is a cross-platform (currently WebAssembly &amp;amp; Linux) networking engine that intends
to make multiplayer game development in Rust dead simple and lightning fast.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;At the highest level, you register Event and Entity implementations
in a module shared by Client &amp;amp; Server.
Then, naia will facilitate sending&#x2F;receiving those Events between Client &amp;amp; Server,
and also keep a pool of tracked Entities synced with each Client
for whom they are &amp;quot;in-scope&amp;quot;.
Entities are &amp;quot;scoped&amp;quot; to Clients with whom they share the same Room,
as well as being sufficiently customizable to, for example,
only keep Entities persisted &amp;amp; synced while within a Client&#x27;s viewport
or according to some other criteria.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;hj2eey&#x2F;naia&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;voronator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fesoliveira014&#x2F;voronator-rs&quot;&gt;voronator&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#voronator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;voronator.png&quot; alt=&quot;Voronoi diagram example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fesoliveira014&#x2F;voronator-rs&quot;&gt;voronator&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fesoliveira0&quot;&gt;Felipe Santos&lt;&#x2F;a&gt; is ...
a Rust port of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;d3&#x2F;d3-delaunay&quot;&gt;d3-delaunay&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mapbox&#x2F;delaunator&quot;&gt;delaunator&lt;&#x2F;a&gt; libraries
that provide delaunay triangulation and Voronoi diagram generation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;hjbl0y&#x2F;introducing_voronator&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;07&#x2F;30&#x2F;this-month-july&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&quot;&gt;Rustacean Station&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;020-mun&quot;&gt;a podcast about Mun&lt;&#x2F;a&gt;
in which the Mun Core Team sat down with host Jeremy
to talk about why they chose Rust to develop Mun. If you are interested in
having an inside look into Mun&#x27;s origins and evolution, we recommend you check
it out - or any of Rustacean Station&#x27;s other podcasts for that matter!&lt;&#x2F;p&gt;
&lt;p&gt;Their additional &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;07&#x2F;30&#x2F;this-month-july&quot;&gt;July updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;initial support for the Language Server Protocol;&lt;&#x2F;li&gt;
&lt;li&gt;a community entry for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;issues&#x2F;220&quot;&gt;Make It or Break It content&lt;&#x2F;a&gt; of Spaceship
recreated with Mun &amp;amp; Rust;&lt;&#x2F;li&gt;
&lt;li&gt;CLI support for creating Mun projects;&lt;&#x2F;li&gt;
&lt;li&gt;performance benchmarks and improvements;&lt;&#x2F;li&gt;
&lt;li&gt;bugfixes and improved documentation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ash-window&quot;&gt;ash(-window)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ash-window&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ash-window&quot;&gt;&lt;code&gt;ash-window&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, an interoperability library for &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ash&quot;&gt;&lt;code&gt;ash&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;raw-window-handle&quot;&gt;&lt;code&gt;raw-window-handle&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;,
is now part of the &lt;code&gt;ash&lt;&#x2F;code&gt; repository and will be updated more closely
with new &lt;code&gt;ash&lt;&#x2F;code&gt; releases.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;grr-0-8&quot;&gt;grr 0.8&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#grr-0-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;msiglreith&#x2F;grr&quot;&gt;&lt;code&gt;grr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; is a modern OpenGL 4.5+ wrapper.
It provides a cleaned up API built around Vulkan&#x27;s naming scheme.
The latest release further pushes the crate towards
full compatibility with the core features.&lt;&#x2F;p&gt;
&lt;p&gt;Most notable changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added support for a bunch of Formats&lt;&#x2F;li&gt;
&lt;li&gt;Extended transfer operations (Attachment &amp;lt;-&amp;gt; Host &amp;lt;-&amp;gt; Buffer &amp;lt;-&amp;gt; Image)&lt;&#x2F;li&gt;
&lt;li&gt;Raw context access&lt;&#x2F;li&gt;
&lt;li&gt;Shader &amp;amp; Pipeline log control&lt;&#x2F;li&gt;
&lt;li&gt;Device submission control&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Special thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;masonium&quot;&gt;@masonium&lt;&#x2F;a&gt;
for contributing a lot of these features and fixes!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;miniquad_ios.jpg&quot; alt=&quot;miniquad ios&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; is a safe and cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;This month opengl backend of miniquad was successfully ported to iOS.
With this update &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&quot;&gt;good-web-game&lt;&#x2F;a&gt; and all the games
build directly with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; can be run on IOS, Android, WASM,
Linux, macOS and Windows!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wgpu.rs&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tuitui-grass-field.jpeg&quot; alt=&quot;procgen dynamic &amp;quot;grass field&amp;quot;&quot; &#x2F;&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MacTuitui&quot;&gt;@MacTuitui&lt;&#x2F;a&gt;&#x27;s everyday &lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;nannou&lt;&#x2F;a&gt; experiment #1274&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The work is ongoing to validate all the incoming commands and guarantee API safety.
Special thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GabrielMajeri&quot;&gt;@GabrielMajeri&lt;&#x2F;a&gt; for helping to convert assertions
into errors at &lt;code&gt;wgpu&lt;&#x2F;code&gt; level.
The wgpu devs are also introspecting shader requirements
and matching them against the pipelines, but this will take more effort
before it will become universally available.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cwfitzgerald&quot;&gt;@cwfitzgerald&lt;&#x2F;a&gt; has been busy adding a few handy native-only extensions,
such as descriptor indexing and push constants.
They have also converted the project&#x27;s logging to &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;tracing&quot;&gt;tracing&lt;&#x2F;a&gt;,
setting up the infrastructure for CPU profiling.&lt;&#x2F;p&gt;
&lt;p&gt;In the past 2 months, the API for descriptor structures in &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt;
have been undergoing a turbulent period.
First, non-exhaustive semantics led to introduction of constructors.
Then, efforts to reduce code duplication inside &lt;code&gt;wgpu&lt;&#x2F;code&gt; project has led to the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;pull&#x2F;460&quot;&gt;bovine invasion&lt;&#x2F;a&gt; on wgpu-rs API side.
The devs are figuring out the plan to address that with a builder pattern now,
which will address both the &lt;code&gt;Cow&lt;&#x2F;code&gt;s and non-exhaustives,
hopefully putting an end to the turbulence.&lt;&#x2F;p&gt;
&lt;p&gt;In the meantime, &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt; ecosystem is flourishing with applications and libraries.
The &lt;a href=&quot;https:&#x2F;&#x2F;wgpu.rs&#x2F;#showcase&quot;&gt;showcase gallery&lt;&#x2F;a&gt; was updated with a few shiny images.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Finally, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kunalmohan&quot;&gt;@kunalmohan&lt;&#x2F;a&gt; has been busy
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;projects&#x2F;24&quot;&gt;implementing WebGPU in Servo&lt;&#x2F;a&gt;, based on &lt;code&gt;wgpu&lt;&#x2F;code&gt;.
Thanks to this work, Servo is currently ahead of Gecko
in terms of API being up-to-date and covered 🎉.
It&#x27;s already capable of rendering most of the examples,
and the devs are looking forward to the day when the same Rust code
(rendering with &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt;) will be deployable to the Web,
and viewable from Firefox, Servo, Chrome, and other browsers.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;luminance-v0-40&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phaazon.net&#x2F;blog&#x2F;luminance-0.40&quot;&gt;luminance v0.40&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#luminance-v0-40&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;luminance-logo.svg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&quot;&gt;@phaazon&lt;&#x2F;a&gt; is a type-safe, type-level and stateless
graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;phaazon.net&#x2F;blog&#x2F;luminance-0.40&quot;&gt;luminance v0.40 got released&lt;&#x2F;a&gt;.
Some of the highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The complete backend&#x2F;architecture redesign.&lt;&#x2F;li&gt;
&lt;li&gt;A new platform crate has appeared:
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance-sdl2&quot;&gt;luminance-sdl2&lt;&#x2F;a&gt;, which adds support for the sdl2 crate.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance-webgl&quot;&gt;luminance-webgl&lt;&#x2F;a&gt; and luminance-web-sys, to support the Web!&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;tree&#x2F;master&#x2F;luminance-examples-web&quot;&gt;luminance-examples-web&lt;&#x2F;a&gt; crate is available to test with &lt;code&gt;yarn&lt;&#x2F;code&gt; easily.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance-front&quot;&gt;luminance-front&lt;&#x2F;a&gt;, which is a front crate to ease working with luminance types.&lt;&#x2F;li&gt;
&lt;li&gt;The type system experience has been greatly improved. Most of the time,
you will not have to annotate types anymore — like Program or Tess.&lt;&#x2F;li&gt;
&lt;li&gt;About &lt;code&gt;Tess&lt;&#x2F;code&gt;, a BIG update has landed, has it’s now heavily typed
(vertex type, index type, vertex instance data type, memory interleaving type).&lt;&#x2F;li&gt;
&lt;li&gt;More render states features, such as the possibility to enable or disable
depth writes, separate RGB&#x2F;alpha blending, etc. etc.&lt;&#x2F;li&gt;
&lt;li&gt;Also, the &lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;learn-luminance&#x2F;&quot;&gt;luminance book&lt;&#x2F;a&gt; got updated.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A complete changes list and a migration guide can be found
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;luminance&#x2F;CHANGELOG.md#040&quot;&gt;in the CHANGELOG&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;luminance-0.41 got released a few days after to fix some type design problems with
the gates, and to enhance the error flow in graphics pipelines, revisited to be more
flexible and seamless.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out the
&lt;a href=&quot;https:&#x2F;&#x2F;phaazon.net&#x2F;blog&#x2F;typesafe-deinterleaving&quot;&gt;&amp;quot;The compile-time deinterleaving interface&amp;quot;&lt;&#x2F;a&gt;
blog post that delves deep into this new feature.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;hsgfav&#x2F;the_new_luminance_is_there&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;graphene-vulkan-render-graph&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ApoorvaJ&#x2F;graphene&quot;&gt;Graphene&lt;&#x2F;a&gt; - Vulkan Render Graph&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphene-vulkan-render-graph&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;graphene.png&quot; alt=&quot;execution flow example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ApoorvaJ&#x2F;graphene&quot;&gt;Graphene&lt;&#x2F;a&gt; is a Vulkan render graph. Still heavily a work in progress,
it is built to be a simpler abstraction over Vulkan, with long-term ambitions to
serve as a graphics test-bench.&lt;&#x2F;p&gt;
&lt;p&gt;Currently, it implements a mesh render pass followed by a chromatic aberration
post-process in less than &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ApoorvaJ&#x2F;graphene&#x2F;blob&#x2F;a1ee574d92445f4cff195ca517af2912ebfce697&#x2F;src&#x2F;demos&#x2F;00&#x2F;main.rs&quot;&gt;250 lines of Rust code&lt;&#x2F;a&gt;.
Current features include easy Vulkan initialization, automatic swapchain
resizing, glTF mesh loading, and shader hot-reloading.
Check out a &lt;a href=&quot;https:&#x2F;&#x2F;apoorvaj.io&#x2F;render-graphs-1&#x2F;&quot;&gt;&amp;quot;Render graphs&amp;quot; blog post&lt;&#x2F;a&gt;
for a more in-depth introduction to the project.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;graphene-demo.jpeg&quot; alt=&quot;chromatic aberration demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow progress on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ApoorvaJ&#x2F;graphene&quot;&gt;GitHub&lt;&#x2F;a&gt; or on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ApoorvaJ&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vulkan-renderer-name-tbd&quot;&gt;Vulkan Renderer (Name TBD)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vulkan-renderer-name-tbd&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ks_HQbejHE4&quot;&gt;&lt;img src=&quot;vulkan-renderer-prototype.jpeg&quot; alt=&quot;Vulkan renderer on iOS prototype&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to watch &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ks_HQbejHE4&quot;&gt;the video demo&lt;&#x2F;a&gt; running on iOS.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;renderer_prototype&quot;&gt;new vulkan-based renderer&lt;&#x2F;a&gt; that
uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;atelier-assets&quot;&gt;atelier-assets&lt;&#x2F;a&gt; to load 3D scenes exported from blender.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The objective of this repo is to build a scalable, flexible, data driven
renderer. Scalable in the sense of performance as well as suitability for
use in large, real-world projects. This means streaming, LODs, visibility
systems, and multi-threaded draw call submission need to be possible.
Additionally it means thinking through how an asset pipeline would work for
a team with dedicated artists and supporting workflow-friendly features
like hot reloading assets, possibly on remote devices.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This video demonstrates the renderer running on iOS and receiving asset updates
via wifi. The scene is &amp;quot;sponza&amp;quot; exported from blender. Vulkan is supported on
windows and linux natively. Support for macOS and iOS is via the
well-established &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KhronosGroup&#x2F;MoltenVK&quot;&gt;MoltenVK&lt;&#x2F;a&gt; project.&lt;&#x2F;p&gt;
&lt;p&gt;The demo was ported from PC to iOS over a single weekend and out of
approximately 300 crate dependencies (including complex, OS-specific ones like
tokio), all but a few worked out-of-the-box!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ludusavi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mtkennerly&#x2F;ludusavi&quot;&gt;Ludusavi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ludusavi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ludusavi.gif&quot; alt=&quot;Demo of Ludusavi GUI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mtkennerly&#x2F;ludusavi&quot;&gt;Ludusavi&lt;&#x2F;a&gt; is a tool written in Rust by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mtkennerly&quot;&gt;@mtkennerly&lt;&#x2F;a&gt; for backing up PC game
save data. It has backup info for more than 7,000 games, is cross-platform for
Windows, Linux, and Mac, and has a GUI as well as a command line interface.
The GUI was created using the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt; crate.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mtkennerly&#x2F;ludusavi-manifest&quot;&gt;backup info&lt;&#x2F;a&gt; is sourced from &lt;a href=&quot;https:&#x2F;&#x2F;www.pcgamingwiki.com&#x2F;wiki&#x2F;Home&quot;&gt;PCGamingWiki&lt;&#x2F;a&gt; so that everyone can help to
expand the data, and it&#x27;s stored in a documented format so that other backup
tools can share the same data set. A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mtkennerly&#x2F;ludusavi-playnite&quot;&gt;plugin&lt;&#x2F;a&gt; for &lt;a href=&quot;https:&#x2F;&#x2F;playnite.link&quot;&gt;Playnite&lt;&#x2F;a&gt; was also just
released.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;langcraft&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SuperTails&#x2F;langcraft&quot;&gt;Langcraft&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#langcraft&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SuperTails&#x2F;langcraft&quot;&gt;Langcraft&lt;&#x2F;a&gt; is the Minecraft LLVM target you&#x27;ve never wanted.&lt;&#x2F;p&gt;
&lt;p&gt;Langcraft started as a dare to the &lt;code&gt;#lang-dev&lt;&#x2F;code&gt; channel of the Rust
Community Discord to be able to parse Rust code in Minecraft.
Naturally, it grew into a full code generator that can translate
most LLVM IR to
&lt;a href=&quot;https:&#x2F;&#x2F;minecraft.gamepedia.com&#x2F;Data_Pack&quot;&gt;Minecraft data packs&lt;&#x2F;a&gt;,
the game&#x27;s deliberately-limited in-game scripting language. Langcraft
is entirely language independent, so any language with an LLVM-based
compiler can (with the right API bindings) run in Minecraft. Currently,
bindings to both C and Rust exist. While not as visually impressive as
a redstone computer, Langcraft does stretch the bounds of the game quite
a bit, using jukeboxes for memory, armor stands to represent pointers,
and rearranging compiled code to make it run in the bounds of the data
packs&#x27; fixed instruction limit.&lt;&#x2F;p&gt;
&lt;p&gt;This is all, naturally, entirely useless. The project is also still
heavily work-in-progress and does not pretend to be stable, but it is
usable. A handwritten interpreter for a Rust-like language has already
been demonstrated running, and even more complex projects like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dhole&#x2F;chip8-rs.git&quot;&gt;CHIP-8
emulators&lt;&#x2F;a&gt; function (albeit at
extremely slow speed).&lt;&#x2F;p&gt;
&lt;p&gt;You can watch a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Cx0w5Wn9pPU&quot;&gt;video of Rust interpreter running Fizzbuzz&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Cx0w5Wn9pPU&quot;&gt;&lt;img src=&quot;longcraft-video.jpeg&quot; alt=&quot;youtube preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;!-- ## Popular Workgroup Issues in Github --&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- An optional section for new jobs related to Rust gamedev --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.embark-studios.com&quot;&gt;Embark&lt;&#x2F;a&gt; is looking to hire Open Source Engineer
specifically to work on Rust projects (Remote or Stockholm, Sweden):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;At Embark, we love the openness and collaborative nature
of the quickly growing ecosystem and community around Rust,
including its tens of thousands of open source crates.
We&#x27;re committed to supporting a thriving open source ecosystem
for game development in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;As an Open Source Engineer at Embark, you will work with our community
and engineering teams on open source.
You&#x27;ll help maintain and develop our open source presence,
and be a key link between Embark and the greater software ecosystem.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can find all of the details on their &lt;a href=&quot;https:&#x2F;&#x2F;www.embark-studios.com&#x2F;jobs&#x2F;910166-open-source-engineer&quot;&gt;job offer page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Btw, Embark are also &lt;a href=&quot;https:&#x2F;&#x2F;www.embark-studios.com&#x2F;jobs&#x2F;915561-internship-software-engineer-rust&quot;&gt;looking for Software Engineer interns&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;embark-logo-bg.jpg&quot; alt=&quot;Embark&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=OVYQs3KY2EE&quot;&gt;&lt;img src=&quot;shar-youtube.jpeg&quot; alt=&quot;youtube preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to watch &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=OVYQs3KY2EE&quot;&gt;SHAR&#x27;s Greenlight trailer&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;shar&quot;&gt;SHAR&lt;&#x2F;a&gt; (Russian &amp;quot;Шар&amp;quot; - ball) by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; (author of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;)
is a 3rd-person online action game that aims to create unique experience
combining destructible world and team-based ball game.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;SHAR is an action combination of tactical and sports game in the destructible world.
The rules are extremely simple: two teams, one ball.
The team that carries the ball into the opponent&#x27;s gates gets a score,
the team with the most score at the end of the game is the winner.
However, this is where things get interesting!
Players have the variety of skills and tricks and destructible environment
to fiddle around to slam the opponent and win the game.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of the game&#x27;s features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A network-synchronized physics engine powered by bullet-rs;&lt;&#x2F;li&gt;
&lt;li&gt;A bunch of physics-based player skills;&lt;&#x2F;li&gt;
&lt;li&gt;Extensive build-in editors for game maps, skeletal animation,
effects &amp;amp; particle systems;&lt;&#x2F;li&gt;
&lt;li&gt;Modding support.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The game was built on top of a homegrown game engine using:
winit, glium, imgui-rs, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;tinyecs&quot;&gt;tinyecs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;awesomium-rs&quot;&gt;awesomium-rs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nickbrowne&#x2F;ears&quot;&gt;ears&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=nXR8f4r6ggM&quot;&gt;&lt;img src=&quot;shar-talk.jpeg&quot; alt=&quot;A screenshot from the recording&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;During RustFest Zurich 2017, Fedor gave a self-descriptive talk
&amp;quot;SHAR: Rust&#x27;s gamedev experience&amp;quot;.
You can &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=nXR8f4r6ggM&quot;&gt;watch the recording here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The game was in active development around 2016-2017.
In 2017 the game &lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;sharedfiles&#x2F;filedetails&#x2F;?id=868228143&quot;&gt;passed Steam Greenlight&lt;&#x2F;a&gt;.
During 2018 &lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;shar&#x2F;devlog&#x2F;52720&#x2F;time-to-move-on&quot;&gt;the project was suspended&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;i4uhta&#x2F;this_month_in_rust_gamedev_12_july_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1291405227191611392&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #11 - June 2020</title>
            <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/011/</link>
            <guid>https://gamedev.rs/news/011/</guid>
            <description>&lt;p&gt;Welcome to the eleventh issue of the Rust GameDev Workgroup’s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#legion-game-jam&quot;&gt;Legion Game Jam&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#meeting-minutes&quot;&gt;Meeting Minutes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;011&#x2F;#bonus&quot;&gt;Bonus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;legion-game-jam&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;legion-jam-rustlang&quot;&gt;Legion Game Jam&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#legion-game-jam&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;Roman_Empire&quot;&gt;&lt;img src=&quot;roman-empire.jpeg&quot; alt=&quot;The Roman Empire at its greatest extent&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &amp;quot;Legion&amp;quot; game jam by &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;profile&#x2F;laticoda&quot;&gt;Laticoda&lt;&#x2F;a&gt; is about
&lt;a href=&quot;https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;Roman_Empire&quot;&gt;the Roman Empire&lt;&#x2F;a&gt; for the background theme
and ECS paradigm for the technical side.
The conditions are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Open-source &amp;amp; Rust only.&lt;&#x2F;li&gt;
&lt;li&gt;Projects should use some ECS library
(you can choose &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TomGillen&#x2F;legion&quot;&gt;Legion&lt;&#x2F;a&gt; if you don&#x27;t have one).&lt;&#x2F;li&gt;
&lt;li&gt;Team working and recycling old assets are allowed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Submissions open to August 1st 2020.&lt;&#x2F;p&gt;
&lt;p&gt;It can be RPG, strategic, arcade or else; multi or solo. What you want.
Just try to include a little bit of history and culture taste.
Don&#x27;t be afraid, it is not ranked.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Also, participants are encouraged to
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;legion-jam-rustlang&#x2F;community&quot;&gt;document the development process at the event&#x27;s forum&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;way-of-rhea&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;way-of-rhea&quot;&gt;Way of Rhea&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=eVrbZss_B3g&quot;&gt;&lt;img src=&quot;way-of-rhea.jpeg&quot; alt=&quot;Way of Rhea Trailer&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to see the latest version of the game&#x27;s trailer&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;way-of-rhea&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;steam&lt;&#x2F;a&gt;)
is an upcoming puzzle platformer that takes place in a world
where you can only interact with objects that match your current color.
It&#x27;s being built in a custom engine, and custom scripting language both written
in Rust by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;Mason Remaley&lt;&#x2F;a&gt;. This month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A demo was released as part of the
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;sale&#x2F;gamefestival&quot;&gt;Steam Game Festival&lt;&#x2F;a&gt;!
The festival has since ended, so the demo is no longer available.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;masonremaley&quot;&gt;@masonremaley&lt;&#x2F;a&gt; ran An AMA &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;hc7vex&#x2F;i_just_released_a_demo&quot;&gt;at &#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;IndieDev&#x2F;comments&#x2F;hc7mf2&#x2F;i_just_released_a_demo&quot;&gt;&#x2F;r&#x2F;IndieDev&lt;&#x2F;a&gt; about the development of the game.&lt;&#x2F;li&gt;
&lt;li&gt;The studio hosted a &lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1110620&#x2F;discussions&#x2F;0&#x2F;2569815696856844856&quot;&gt;speedrun competition&lt;&#x2F;a&gt; as part
of the Steam festival, &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;AmYU0TXc4Ls&quot;&gt;here&#x27;s the winning run&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;A colorblind friendly mode was added to the game,
and &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;newshub&#x2F;app&#x2F;1110620&#x2F;view&#x2F;2445966074565244552&quot;&gt;a couple other changes&lt;&#x2F;a&gt; were made in response
to feedback from the festival.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Follow development updates on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anthropicst&quot;&gt;the game&#x27;s Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;www.anthropicstudios.com&#x2F;newsletter&#x2F;signup&#x2F;tech&quot;&gt;subscribe to its newsletter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street-adjust-traffic-patterns-in-real-cities&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; - Adjust Traffic Patterns in Real Cities&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street-adjust-traffic-patterns-in-real-cities&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;abstreet-evaluating-impacts.gif&quot; alt=&quot;Measuring the effects of changes&quot; &#x2F;&gt;
&lt;em&gt;Measuring the effects of some changes&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abstreet.org&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a traffic simulation game exploring how
small changes to roads affect cyclists, transit users, pedestrians, and drivers.&lt;&#x2F;p&gt;
&lt;p&gt;June highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Alpha release with a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=LxPD4n_1-LU&quot;&gt;trailer&lt;&#x2F;a&gt;, an excited reaction from
&lt;a href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;Seattle&#x2F;comments&#x2F;hdtucd&#x2F;ab_street_think_you_can_fix_seattles_traffic&#x2F;&quot;&gt;r&#x2F;seattle&lt;&#x2F;a&gt;, and some
&lt;a href=&quot;https:&#x2F;&#x2F;www.thestranger.com&#x2F;slog&#x2F;2020&#x2F;06&#x2F;29&#x2F;43999454&#x2F;ab-streets-game-lets-you-create-the-seattle-street-grid-of-your-dreams&quot;&gt;local press coverage&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Support for parking lots, automatically inferring the number and position of
individual slots from OpenStreetMap geometry&lt;&#x2F;li&gt;
&lt;li&gt;Names of roads shown in-game, in a way that doesn&#x27;t cause clutter with agents
moving nearby&lt;&#x2F;li&gt;
&lt;li&gt;Work starting on light rail and restricting through-traffic to zones&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A&#x2F;B Street uses a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;tree&#x2F;master&#x2F;ezgui&#x2F;&quot;&gt;custom GUI library&lt;&#x2F;a&gt;, leveraging &lt;code&gt;glium&lt;&#x2F;code&gt;, &lt;code&gt;usvg&lt;&#x2F;code&gt;, and
&lt;code&gt;lyon&lt;&#x2F;code&gt;. Help with Rust and visual&#x2F;game design is always welcome! Check out the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;blob&#x2F;master&#x2F;docs&#x2F;roadmap.md&quot;&gt;roadmap&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&quot;&gt;good first issues&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crate-before-attack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crate-before-attack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;LLAc9_cOR9o&quot;&gt;&lt;img src=&quot;crate_before_attack.gif&quot; alt=&quot;In-game visual scripting prototype&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;In-game visual scripting prototype&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CrateAttack&quot;&gt;koalefant (@CrateAttack)&lt;&#x2F;a&gt;
is a skill-based grappling hook multiplayer game where frogs combat their friends
while navigating the landscape with their sticky tongues.&lt;&#x2F;p&gt;
&lt;p&gt;A summary of recent changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Visuals: added two new artist-painted levels:
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;IOmD1LRJ6NA&quot;&gt;Space&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;UgIBNolI7Wo&quot;&gt;Dinosaurs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Gameplay: &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;IUBZgusI7aI&quot;&gt;AI can now play all game modes&lt;&#x2F;a&gt;,
added Quick Game option,&lt;&#x2F;li&gt;
&lt;li&gt;In-game &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;LLAc9_cOR9o&quot;&gt;visual scripting prototype&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Physics tweaks and &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;r5BAe03MRZo&quot;&gt;improved terrain normal sampling&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Multiplayer: added in-game chat, private matches with secret links,
improved game setup UI. Numerous bugfixes and tweaks&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;play&quot;&gt;Playable Browser build&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More details in &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20200630-june-update&#x2F;&quot;&gt;June Update DevLog-entry&lt;&#x2F;a&gt;
and on &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC_xMilPTLuuE5iLs1Ml9zow&quot;&gt;the YouTube channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-june-devlog&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;: June Devlog&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-june-devlog&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden.jpeg&quot; alt=&quot;screenshot: concrete &amp;amp; trees&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.
Some of the updates from &lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;june&quot;&gt;the June devlog&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Soil collision detection &amp;amp; changes to the soil column generation.&lt;&#x2F;li&gt;
&lt;li&gt;Plant sim &amp;amp; terrain updates happen at different times &amp;amp; separately.&lt;&#x2F;li&gt;
&lt;li&gt;Proper Global Illumination research.&lt;&#x2F;li&gt;
&lt;li&gt;Automatic in-game texture reloading.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren-wolf.gif&quot; alt=&quot;Animation improvements&quot; &#x2F;&gt;
&lt;em&gt;Animation improvements&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In June, Veloren did a big interview with GamingOnLinux, be sure to &lt;a href=&quot;https:&#x2F;&#x2F;www.gamingonlinux.com&#x2F;2020&#x2F;06&#x2F;interviewed-veloren-an-upcoming-foss-multiplayer-voxel-rpg&quot;&gt;check it
out&lt;&#x2F;a&gt;! Veloren&#x27;s lead artist also started a weekly blog
about his work on Veloren, which you can see &lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;posts&#x2F;weekly-blog-no-1-37819335&quot;&gt;here&lt;&#x2F;a&gt;. Veloren recently
reached the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;explore&#x2F;projects&#x2F;starred&quot;&gt;first page&lt;&#x2F;a&gt; of most starred projects on Gitlab! The
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UCmRjlnKnSRRihWPPNasl_Qw&quot;&gt;Veloren Youtube channel&lt;&#x2F;a&gt; also reached 1000
subscribers.&lt;&#x2F;p&gt;
&lt;p&gt;A lot has been done over the last month towards 0.7, which is slated to release
at the beginning of August. Lots of work has been done improving UI and
animations. These will help towards the goal of 0.7 being the &amp;quot;progression&amp;quot;
update. Many improvements have been made to the continuous integration system to
make it more reliable and faster. Mac support was added to Airshipper, the
Veloren launcher. Significant work was done on the world simulation front. This
includes economic simulations that will represent trade and resource pricing in
settlements and cities. Castle generation is also now in the works.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;veloren2.jpeg&quot; alt=&quot;Work on castle generation&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Test coverage and documentation has started to improve, and a workflow around it
is being developed. The project is now hosting a &lt;a href=&quot;https:&#x2F;&#x2F;docs.veloren.net&#x2F;veloren_voxygen&#x2F;index.html&quot;&gt;proper documentation
site&lt;&#x2F;a&gt; that is updated with each merge. A #ux working group was
created to facilitate discussions on improvements to player interactions in
Veloren. Lots of translations were merged, including Swedish, Polish, and
Brazilian Portugese. The skill system is moving on to implementation, being a
coordinated effort between the game design, art, and combat working groups.&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics from June:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-70#mod-analysis-by-bottledbyte&quot;&gt;Mod Analysis&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-70#improving-ci-by-xmac94x&quot;&gt;Improving CI&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-72#economic-research-by-zesterer&quot;&gt;Economic Research&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-72#compilation-improvements-by-xmac94x&quot;&gt;Compilation Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-73#improving-test-coverage-by-angelonfira&quot;&gt;Improving Test Coverage&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-74#skill-system-work-by-xvar&quot;&gt;Skill System Work&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-74#animation-updates&quot;&gt;Animation updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;June&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-70&quot;&gt;#70&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-71&quot;&gt;#71&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-72&quot;&gt;#72&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-73&quot;&gt;#73&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-74&quot;&gt;#74&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In July, work will be done to complete the progression systems. There will be
financial meetings held to discuss how funds from the project&#x27;s Open Collective
will be distributed.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=aS26sqT09Pw&quot;&gt;a talk about open source and Veloren&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=aS26sqT09Pw&quot;&gt;&lt;img src=&quot;veloren-talk.jpeg&quot; alt=&quot;Veloren talk&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zero-to-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&quot;&gt;Zero to Game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zero-to-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;zerotogame-destruction.gif&quot; alt=&quot;ships with greater thrust explode&quot; &#x2F;&gt;
&lt;em&gt;The initial destruction prototype applied across different thrust levels&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&quot;&gt;Zero to Game&lt;&#x2F;a&gt; is a project that documents
the creation of an independent space game from zero.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;My plan for this website is to narrate my independent development
of a computer game in the Rust programming language.
I&#x27;ve never done this before, and so I hope to be able to show you
the progression right from zero all the way up to a game.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Zero game programming experience.&lt;&#x2F;li&gt;
&lt;li&gt;Zero experience in the Rust programming language.&lt;&#x2F;li&gt;
&lt;li&gt;Zero experience making assets, images, sounds, models, etcetera.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Currently published posts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&#x2F;dev&#x2F;findingzero&quot;&gt;#1 &amp;quot;Finding Zero&amp;quot;&lt;&#x2F;a&gt;
- where the game development journey is beginning.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&#x2F;dev&#x2F;inspiringdesign&quot;&gt;#2 &amp;quot;Inspiring Design&amp;quot;&lt;&#x2F;a&gt;
- how Factorio, Screeps, and Space Station 13 are inspiring the game&#x27;s design.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&#x2F;dev&#x2F;pickingtechnology&quot;&gt;#3 &amp;quot;Picking Technology&amp;quot;&lt;&#x2F;a&gt;
- researching a technology path for the game project to start out on.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&#x2F;dev&#x2F;leadingdesignchallenges&quot;&gt;#4 &amp;quot;Leading Design Challenges&amp;quot;&lt;&#x2F;a&gt;
- the spacetime issues with combining gameplay inside and outside of spaceships.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&#x2F;dev&#x2F;fastspaceshipphysics&quot;&gt;#5 &amp;quot;Fast Spaceship Physics&amp;quot;&lt;&#x2F;a&gt;
- prototyping a spaceship physics simulation aimed at speed.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&#x2F;dev&#x2F;physicaldestruction&quot;&gt;#6 &amp;quot;Physical Destruction&amp;quot;&lt;&#x2F;a&gt;
- the structure and implementation of a spaceship destruction prototype.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zerotoga.me&#x2F;dev&#x2F;renderinginrust&quot;&gt;#7 &amp;quot;Rendering in Rust&amp;quot;&lt;&#x2F;a&gt;
- working through from tutorial code to meet the needs
of the game&#x27;s first Rust scene render.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;pont&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pont.mattkeeter.com&quot;&gt;Pont&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pont&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pont_screenshot.png&quot; alt=&quot;Screenshot of the Pont board game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Pont is a multiplayer online board game based on
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Qwirkle&quot;&gt;Qwirkle&lt;&#x2F;a&gt;, implemented by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;impraxical&quot;&gt;Matt Keeter&lt;&#x2F;a&gt;.
Both the client and server are written in Rust,
using WebAssembly to run the client in the browser
without any Javascript (besides a small shim).&lt;&#x2F;p&gt;
&lt;p&gt;It can be played online &lt;a href=&quot;https:&#x2F;&#x2F;pont.mattkeeter.com&quot;&gt;here&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;The system architecture is described in a &lt;a href=&quot;https:&#x2F;&#x2F;mattkeeter.com&#x2F;projects&#x2F;pont&quot;&gt;blog post&lt;&#x2F;a&gt;
and the source is available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkeeter&#x2F;pont&quot;&gt;on Github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gu1bq5&#x2F;pont_a_board_game_in_rust_webassembly&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23649369&quot;&gt;Hacker News&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;scale.png&quot; alt=&quot;Scale screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt;&#x27;s objective is to become a granular society simulation,
filled with fully autonomous agents interacting with their world in real time.&lt;&#x2F;p&gt;
&lt;p&gt;The 4th &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;scale_4.html&quot;&gt;devlog&lt;&#x2F;a&gt; was published, talking about
the new renderer based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt;, pathfinding, parking,
curved roads and a new crate extracted from the project called &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;flat_spatial&quot;&gt;flat_spatial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;henx2n&#x2F;scale_devblog_4&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;runner&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jayrave&#x2F;runner&quot;&gt;runner&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#runner&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vimeo.com&#x2F;428851779&quot;&gt;&lt;img src=&quot;runner_gameplay_sample.png&quot; alt=&quot;Runner gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jayrave&#x2F;runner&quot;&gt;runner&lt;&#x2F;a&gt; is a simple side-scrolling endless runner game that takes place in
a bright world that only has our fearless adventurer &amp;amp; a few pesky beings
that are bent on keeping her from running! It uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt; for &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Entity_component_system&quot;&gt;ECS&lt;&#x2F;a&gt;
and has multiple frontends: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-SDL2&#x2F;rust-sdl2&quot;&gt;sdl2&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ryanisaacg&#x2F;quicksilver&quot;&gt;quicksilver&lt;&#x2F;a&gt;.
Between the two frontends it can target the majority of the platforms:
Web, Mac, Linux, Windows (untested) &amp;amp; possible even iOS &amp;amp; Android.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;animal-chess&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;netcan&#x2F;AnimalChess&quot;&gt;Animal Chess&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#animal-chess&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;animal-chess.jpeg&quot; alt=&quot;Part of the game map&quot; &#x2F;&gt;
&lt;em&gt;Part of the game map&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;netcan&#x2F;AnimalChess&quot;&gt;Animal Fight Chess&lt;&#x2F;a&gt; (斗兽棋, &amp;quot;Doe Show Chee&amp;quot;) by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;netcan&quot;&gt;@netcan&lt;&#x2F;a&gt;
is a Rust implementation of a popular Chinese game.&lt;&#x2F;p&gt;
&lt;p&gt;To win the game, one player must successfully move any animal into
the Den(兽穴) of the opponent or eat all animals of the opponent.
The basic move is just one space either forward, backward, left, or right.
The pieces never move diagonally.
Each player has eight pieces,
&lt;a href=&quot;http:&#x2F;&#x2F;ancientchess.com&#x2F;graphics-rules&#x2F;dou_shou_qi_jungle_game-pieces-values.jpg&quot;&gt;different animals with different degrees of power&lt;&#x2F;a&gt;,
a larger power piece can eat a little power piece, but rat can eat elephant.
Here&#x27;s a picture of the pieces, their English names,
and relative powers indicated by a number.
See full rules at &lt;a href=&quot;http:&#x2F;&#x2F;ancientchess.com&#x2F;page&#x2F;play-doushouqi.htm&quot;&gt;ancientchess.com&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Jungle_(board_game)&quot;&gt;Wikipedia&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The project uses alpha beta pruning algorithm for AI and provides
a python module to use AlphaZero algorithm for training.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rs-type&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;akiross&#x2F;rs-type&quot;&gt;rs-type&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rs-type&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rs-type.png&quot; alt=&quot;screenshot: planets and words&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;akiross&#x2F;rs-type&quot;&gt;rs-type&lt;&#x2F;a&gt; is a WIP typing game
inspired by &lt;a href=&quot;https:&#x2F;&#x2F;zty.pe&#x2F;&quot;&gt;zty.pe&lt;&#x2F;a&gt;.
It can load &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KDE&#x2F;ktouch&#x2F;tree&#x2F;master&#x2F;data&#x2F;courses&quot;&gt;KTouch courses&lt;&#x2F;a&gt;
and also has a built-in basic vector drawing tool for painting backgrounds.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;guacamole-runner&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EllenNyan&#x2F;guacamole-runner&quot;&gt;Guacamole Runner&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#guacamole-runner&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;guacamole.gif&quot; alt=&quot;gif&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EllenNyan&#x2F;guacamole-runner&quot;&gt;Guacamole Runner&lt;&#x2F;a&gt; is a small game made with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;Tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leudz&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; in approximately 2 days
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;EllenNyan0214&quot;&gt;@EllenNyan&lt;&#x2F;a&gt;.
The game&#x27;s concept is that the player is constantly falling
and must jump off planes to stay in the air.
When they go over the top of the dirt tiles
they plant flowers which gives them points.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wooting-snake&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;wooting_snake&quot;&gt;Wooting Snake&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wooting-snake&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wooting_snake.gif&quot; alt=&quot;Video of snaky keyboard lights in action&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;wooting_snake&quot;&gt;Wooting Snake&lt;&#x2F;a&gt; is a snake game where the visuals
are represented on your keyboard lights, instead of a computer screen.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Tantan22430802&quot;&gt;TanTan&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;OhhscXz-60g&quot;&gt;video&lt;&#x2F;a&gt;
documenting the process of making this project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;boundless&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abrigante1&#x2F;boundless&#x2F;tree&#x2F;production&quot;&gt;boundless&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#boundless&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;boundless.jpeg&quot; alt=&quot;terrain, bg trees, and a character&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abrigante.com&#x2F;&quot;&gt;Anthony Brigante&lt;&#x2F;a&gt; started working on a 2D sandbox game.
Two devlogs were released this month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abrigante.com&#x2F;post&#x2F;2020&#x2F;06&#x2F;04&#x2F;Hello-Rust.html&quot;&gt;&amp;quot;Hello, Rust&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;abrigante.com&#x2F;post&#x2F;2020&#x2F;06&#x2F;08&#x2F;From-Sandbox-To-Production-Rendering.html&quot;&gt;&amp;quot;From Sandbox to Production - Rendering&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;weegames&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weegames&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=A_GqhZ_7EIw&quot;&gt;&lt;img src=&quot;weegames.jpg&quot; alt=&quot;Weegames&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to see &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=A_GqhZ_7EIw&quot;&gt;a demo video&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeahross.itch.io&#x2F;weegames&quot;&gt;Weegames&lt;&#x2F;a&gt; is a fast-paced minigame collection.
There are 23 odd games all made using free images and sounds.
The more minigames you beat the faster they get.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yeahross0&#x2F;weegames&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blub&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wumpf&#x2F;blub&quot;&gt;blub&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#blub&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;blub-fluid.gif&quot; alt=&quot;Fluid demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wumpf&#x2F;blub&quot;&gt;blub&lt;&#x2F;a&gt; is a WIP 3D fluid simulation playground build with wgpu-rs and imgui-rs.
It focuses primarily on hybrid approaches lagrangian&#x2F;eularian approaches
(PIC&#x2F;FLIP&#x2F;APIC..). Check the project&#x27;s README for more details.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hypervis-4d-physics-visualization&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=_22oxXEX_xc?t=709&quot;&gt;Hypervis: 4D Physics Visualization&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hypervis-4d-physics-visualization&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=_22oxXEX_xc?t=709&quot;&gt;&lt;img src=&quot;ldn-4d-talk.jpeg&quot; alt=&quot;Screenshot of the talk&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=_22oxXEX_xc?t=709&quot;&gt;Tyler Zhang gave a talk&lt;&#x2F;a&gt; at
London Virtual Talks about the theory and implementation
of 4D physics visualization.
The demo&#x27;s source code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;t-veor&#x2F;hypervis&quot;&gt;could be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;boids-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.bitsacm.in&#x2F;a-fistful-of-boids&quot;&gt;Boids in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#boids-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1ri4x-jCX8SA9oX8OqDIKtXhYIrEKlGjO&#x2F;view&quot;&gt;&lt;img src=&quot;rboids-video.jpeg&quot; alt=&quot;Boids demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click to watch &lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1ri4x-jCX8SA9oX8OqDIKtXhYIrEKlGjO&#x2F;view&quot;&gt;the video demo&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;twitu&quot;&gt;@twitu&lt;&#x2F;a&gt; has published a three-part blog series
about simulating a group of virtual agents (boids)
that will swim around an enclosed space behaving like a school of fish.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a beautiful application of procedural graphics generation,
where simple rules create complex patterns.
It&#x27;s almost entirely inspired by Sebastian Lague&#x27;s
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=bqtqltqcQhw&quot;&gt;Coding Adventure with boids&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.bitsacm.in&#x2F;a-fistful-of-boids&quot;&gt;A fistful of boids&lt;&#x2F;a&gt;
- Setting up the scene and basic animation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.bitsacm.in&#x2F;for-a-few-boids-more&quot;&gt;For a few boids more&lt;&#x2F;a&gt;
- Generating boids and obstacle avoidance&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.bitsacm.in&#x2F;the-school-the-boid-and-the-rusty&quot;&gt;The school, the boid and the Rusty&lt;&#x2F;a&gt;
- Simulating a flock, parallelism and benchmarking performance&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;twitu&#x2F;rboids&quot;&gt;The source code with tagged stages is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gsldbi&#x2F;3d_boids&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;doom-fire&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;r-marques&#x2F;doomfire&quot;&gt;DOOM Fire&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#doom-fire&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;doom-fire.gif&quot; alt=&quot;The fire effect itself&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;r-marques&#x2F;doomfire&quot;&gt;doomfire&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;r-marques&quot;&gt;@r-marques&lt;&#x2F;a&gt; is Rust implementations of the DOOM fire effect
(based on &lt;a href=&quot;https:&#x2F;&#x2F;fabiensanglard.net&#x2F;doom_fire_psx&quot;&gt;Fabien Sanglard&#x27;s blog post&lt;&#x2F;a&gt;)
using different 2d graphics libraries:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emoon&#x2F;rust_minifb&quot;&gt;minifb&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;pixels&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rust-SDL2&#x2F;rust-sdl2&quot;&gt;sdl2&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&quot;&gt;wasm-bindgen&lt;&#x2F;a&gt;
+ &lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;API&#x2F;Canvas_API&quot;&gt;Canvas API&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This could be helpful for someone new to rust and trying
to get into game development and looking for the right libraries to use.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gvcj6d&#x2F;doom_fire_implemented_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-psp&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;overdrivenpotato&#x2F;rust-psp&quot;&gt;rust-psp&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-psp&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;psp.gif&quot; alt=&quot;demo-gif&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Just what everyone&#x27;s always wanted, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;overdrivenpotato&#x2F;rust-psp&quot;&gt;Rust on the Sony PSP&lt;&#x2F;a&gt;! 😆&lt;&#x2F;p&gt;
&lt;p&gt;This project is a port and improvement of the unofficial C&#x2F;C++ PSPSDK from
2005 It does not require a custom GCC toolchain to be installed. Only Rust
nightly and a cargo subcommand.&lt;&#x2F;p&gt;
&lt;p&gt;The psp crate provides a &lt;code&gt;psp::sys&lt;&#x2F;code&gt; submodule that houses the entire Sony PSP
API. The authors are working to have these interfaces merged into the libc crate.
The PSP, unfortunately, uses non-standard dynamic linking,
(and some libraries are statically linked!), so function definitions
marked extern are not enough. Eventually, this sys lib will be wrapped with a more
rust-friendly library.&lt;&#x2F;p&gt;
&lt;p&gt;Rather than patching LLVM or rustc, the rust-psp team has also merged a
&lt;code&gt;mipsel-sony-psp&lt;&#x2F;code&gt; target upstream, and published cargo-psp. This is a subcommand
that works exactly like cargo build, except it also builds the crate into a
PSP-specific executable format called &lt;code&gt;PRX&lt;&#x2F;code&gt; and packages that into an
&lt;code&gt;EBOOT.PBP&lt;&#x2F;code&gt;, the standard format for a PSP Homebrew.&lt;&#x2F;p&gt;
&lt;p&gt;The crate has reached full user-mode parity with the unofficial C&#x2F;C++ SDK.
Kernel-mode support still needs to be worked on. Aside from library
imports, there is also support for PSP-specific custom assembly instructions
via the &lt;code&gt;vfpu_asm!&lt;&#x2F;code&gt; macro, with no need for a custom compiler toolchain.
There is also optional &lt;code&gt;embedded-graphics&lt;&#x2F;code&gt; support and a function to benchmark
or time your code.&lt;&#x2F;p&gt;
&lt;p&gt;The next major milestone for rust-psp is std support.
If you are interested in helping out, please feel free to join the rust-psp
channel in the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;WY8XhDG&quot;&gt;PSP Homebrew discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;glam&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glam&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt; is a simple and fast linear algebra crate for games and graphics.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#090---2020-06-28&quot;&gt;glam 0.9&lt;&#x2F;a&gt; was published to crates.io. This update is a breaking
change from 0.8.&lt;&#x2F;p&gt;
&lt;p&gt;In 0.9 the &lt;code&gt;Vec3&lt;&#x2F;code&gt; type was changed from being a 128 byte SIMD vector type to a
tuple of three floats. This changes the size of &lt;code&gt;Vec3&lt;&#x2F;code&gt; from 16 bytes to 12 bytes
and the alignment from 16 bytes to 4 bytes. This might not affect all users but
if &lt;code&gt;Vec3&lt;&#x2F;code&gt; was used in a context where the size or alignment mattered, such as in
FFI or as input to shaders, this could cause breakage.&lt;&#x2F;p&gt;
&lt;p&gt;The SIMD parts of &lt;code&gt;Vec3&lt;&#x2F;code&gt; were moved to a new type, &lt;code&gt;Vec3A&lt;&#x2F;code&gt; (&lt;code&gt;A&lt;&#x2F;code&gt; for Aligned)
which is 16 byte aligned and thus 16 bytes in size.  The &lt;code&gt;Vec3A&lt;&#x2F;code&gt; type is still
there for users who want the performance benefits of the SIMD implementation.&lt;&#x2F;p&gt;
&lt;p&gt;The motivation for this change was that it is potentially surprising and
confusing for new users that the &lt;code&gt;Vec3&lt;&#x2F;code&gt; type was not 12 bytes. Also, it&#x27;s common
that users needed a &lt;code&gt;Vec3&lt;&#x2F;code&gt; that was just 12 bytes.&lt;&#x2F;p&gt;
&lt;p&gt;While glam is reasonably stable it has not yet reached a 1.0 release so it
seemed like now is the time to address such issues in the API.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;06&#x2F;30&#x2F;this-month-june&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mun-languageserver.gif&quot; alt=&quot;Language Server Diagnostics in action&quot; &#x2F;&gt;
&lt;em&gt;Mun language server diagnostics in action&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;After the dust of the &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;16&#x2F;release-mun-v0-2-0&quot;&gt;Mun v0.2 release&lt;&#x2F;a&gt; settled, this month&#x27;s focus
has been on fixing several issues found by community members, improving the
overall quality of the code base and working towards the next release: Mun v0.3.&lt;&#x2F;p&gt;
&lt;p&gt;Their &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;06&#x2F;30&#x2F;this-month-june&quot;&gt;June updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;issues&#x2F;220&quot;&gt;&lt;em&gt;Make It or Break It&lt;&#x2F;em&gt; contest&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;several fixes for issues that arose thanks to the contest;&lt;&#x2F;li&gt;
&lt;li&gt;the foundation for Mun projects;&lt;&#x2F;li&gt;
&lt;li&gt;an initial language server setup;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gamelisp&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&#x2F;&quot;&gt;GameLisp&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gamelisp&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;glisp-logo.png&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&#x2F;&quot;&gt;GameLisp&lt;&#x2F;a&gt; (glisp) is a scripting language built for and in Rust and utilizes
syntax from the LISP family of programming languages. It provides a fast and
efficient garbage collector that runs every frame instead of freezing a thread.&lt;&#x2F;p&gt;
&lt;p&gt;GameLisp also provides &lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&#x2F;playground&#x2F;&quot;&gt;a playground&lt;&#x2F;a&gt; to experiment with
different projects. A reference guide is also &lt;a href=&quot;https:&#x2F;&#x2F;gamelisp.rs&#x2F;reference&#x2F;&quot;&gt;available&lt;&#x2F;a&gt; as
well as &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;glsp&#x2F;0.1.0&#x2F;glsp&#x2F;&quot;&gt;API documentation&lt;&#x2F;a&gt; for integration into Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The crate has had its &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;glsp&#x2F;&quot;&gt;initial release&lt;&#x2F;a&gt;, a roadmap and ways
to contribute are available on GameLisp&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fleabitdev&#x2F;glsp&#x2F;&quot;&gt;Github Respository&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;safe-arch-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lokathor&#x2F;safe_arch&quot;&gt;safe_arch&lt;&#x2F;a&gt; v0.5&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#safe-arch-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lokathor&#x2F;safe_arch&quot;&gt;safe_arch&lt;&#x2F;a&gt; is a crate by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;lokathor&quot;&gt;@lokathor&lt;&#x2F;a&gt; that safely exposes
CPU arch intrinsics via &lt;code&gt;#[cfg()]&lt;&#x2F;code&gt;.
This month v0.4 and v0.5 versions were released.
The main improvements are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;256 bit supports&lt;&#x2F;li&gt;
&lt;li&gt;Almost all the API was reworked for better naming consistency&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;yaks&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;yaks&quot;&gt;yaks&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#yaks&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;yaks&quot;&gt;yaks&lt;&#x2F;a&gt; is a minimalistic framework for automatic multithreading
of &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;hecs&quot;&gt;&lt;code&gt;hecs&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; ECS library using &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;rayon&quot;&gt;Rayon&lt;&#x2F;a&gt; data-parallelism library.&lt;&#x2F;p&gt;
&lt;p&gt;While the project itself started earlier this year, with this month&#x27;s release
&lt;code&gt;yaks&lt;&#x2F;code&gt; gained an overhauled API, further leaning into the promise of
simplicity:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;systems are any functions or closures of a specific signature,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Executor&lt;&#x2F;code&gt; is a container for one or more systems,&lt;&#x2F;li&gt;
&lt;li&gt;system execution order can be defined when building an &lt;code&gt;Executor&lt;&#x2F;code&gt;
to create concurrent chains of systems,&lt;&#x2F;li&gt;
&lt;li&gt;resources used by systems (any data that is not associated with an entity)
are now borrowed for the duration of execution, instead of being owned
by the framework.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All items in the library are exhaustively documented, and the repository
contains a fully annotated example.&lt;&#x2F;p&gt;
&lt;p&gt;Enabled-by-default &lt;code&gt;parallel&lt;&#x2F;code&gt; cargo feature can be disabled to force
everything in &lt;code&gt;yaks&lt;&#x2F;code&gt; to become single-threaded, which allows using code
written with the framework on platforms without threading - notably, web.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is cross-platform
(Windows&#x2F;Linux&#x2F;macOS&#x2F;Android&#x2F;WASM) game framework
build on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The project now has &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;WfEp6ut&quot;&gt;a Discord community server&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#quad-general:matrix.org&quot;&gt;Matrix bridge&lt;&#x2F;a&gt;)
with channels for all the quad-family projects:
miniquad, macroquad, good-web-game, and nanoserde.&lt;&#x2F;p&gt;
&lt;p&gt;Also, two new examples came from the awesome macroquad community:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;snake&amp;quot; - try it &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;snake.html&quot;&gt;in the browser&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;snake.rs&quot;&gt;source&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;snake.html&quot;&gt;&lt;img src=&quot;macroquad_snake.gif&quot; alt=&quot;snake demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;asteroids&amp;quot; - try it &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;asteroids.html&quot;&gt;in the browser&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;asteroids.rs&quot;&gt;source&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;asteroids.html&quot;&gt;&lt;img src=&quot;macroquad_asteroids.gif&quot; alt=&quot;asteroids&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;megaui is macroquad&#x27;s imgui-like UI system.
Recently, megaui got decent input widgets: input fields, editboxes, and sliders.
All of them support copy-pasting back and forth from the browser.
Check out &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;ui.html&quot;&gt;the web demo&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;ui.rs&quot;&gt;source&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;macroquad_ui.gif&quot; alt=&quot;ui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;nanoserde&#x2F;&quot;&gt;nanoserde&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a fork of makepad-tinyserde
with syn&#x2F;quote&#x2F;proc_macro2 dependencies removed.
It attempts to solve a serde&#x27;s problems of long clean compilation time,
increased incremental build time, and build artifacts size.
nanoserde may be useful when the whole game has less than a minute
clean build time and spending ~40s on serde is unreasonable.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;&amp;gt; cargo tree
&lt;&#x2F;span&gt;&lt;span&gt;nanoserde v0.1.0 (&#x2F;..&#x2F;nanoserde)
&lt;&#x2F;span&gt;&lt;span&gt;└── nanoserde-derive v0.1.0 (&#x2F;..&#x2F;nanoserde&#x2F;derive)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Some benchmarks and tiled map deserializing example
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;nanoserde-bench&quot;&gt;could be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra-0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1275778769077317637&quot;&gt;Tetra 0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra-0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;Tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1275778769077317637&quot;&gt;version 0.4&lt;&#x2F;a&gt; was released, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A rework of the text rendering API, which improves performance and fixes a
number of long-standing bugs&lt;&#x2F;li&gt;
&lt;li&gt;Functions for capturing the player&#x27;s mouse&lt;&#x2F;li&gt;
&lt;li&gt;Various tweaks and bug fixes under the hood&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;tetra.seventeencups.net&#x2F;distributing&#x2F;&quot;&gt;a new guide has been added to Tetra&#x27;s website&lt;&#x2F;a&gt;, listing some
things to consider when distributing your game to the public. This guide is
still a work in progress, so contributions are welcomed!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nodefx&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&quot;&gt;NodeFX&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nodefx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1276609598699581442&quot;&gt;&lt;img src=&quot;nodefx.png&quot; alt=&quot;NodeFX&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project &amp;quot;NodeFX&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&quot;&gt;Christian Vallentin (@MrVallentin)&lt;&#x2F;a&gt;
is an unnamed node-based tool for creating GLSL shaders in real-time,
entirely written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;This month added support for both 2D and 3D SDF nodes. The above screenshot is
a meta example of creating a node using some of the 2D SDF primitives and
operations.
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1276961197645008896&quot;&gt;An example of some 3D SDFs can be found on Twitter.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Next month is all about adding more UI, to make the application more
user-friendly and fully-fledged. After UI has been added, there is a planned
release of the application.
More information can be found on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gold&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Vurich&#x2F;goeld&quot;&gt;Göld&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gold&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;goeld.jpg&quot; alt=&quot;Chumtoad&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Vurich&#x2F;goeld&quot;&gt;Göld&lt;&#x2F;a&gt; is a WIP game engine for hacking together 3D games using old tech.
It uses wgpu-rs and is based on the simple mental model of PyGame or Löve,
but for Goldsrc&#x2F;Quake-era tech.&lt;&#x2F;p&gt;
&lt;p&gt;The ultimate goal of the project is to have a simple engine that can do
basically everything that many simplistic 3D games will need,
without making an attempt at being too general.&lt;&#x2F;p&gt;
&lt;p&gt;Current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Quake 2 maps loading (although not Quake&#x2F;Goldsrc maps yet)
and rendering with proper BSP culling and frustum culling.&lt;&#x2F;li&gt;
&lt;li&gt;Loading and rendering of HL1 models.&lt;&#x2F;li&gt;
&lt;li&gt;Simple dynamic lighting system.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;gwqbxl&#x2F;been_working_on_a_webgpurust_reimplementation&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;arsenal-game-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;arsenal&quot;&gt;Arsenal Game Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#arsenal-game-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;arsenal&quot;&gt;Arsenal&lt;&#x2F;a&gt; is the concept for a 2D and 3D game engine that is fully integrated
with &lt;a href=&quot;https:&#x2F;&#x2F;blender.org&quot;&gt;Blender&lt;&#x2F;a&gt; and built on a Rust core. The engine will be built around an
entity component system ( probably &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leudz&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; ) for its performance and game
design advantages. The vision of Arsenal is to build an Open Source game engine
that is suitable for games of any scale and that is easily approachable by a
wide audience of both complete beginners and seasoned experts.&lt;&#x2F;p&gt;
&lt;p&gt;Arsenal currently has a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;arsenal&#x2F;releases&#x2F;tag&#x2F;v0.1.0&quot;&gt;POC&lt;&#x2F;a&gt; working, but there is no support for
adding custom game logic. The next major step for Arsenal is to get initial
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leudz&#x2F;shipyard&#x2F;issues&#x2F;96&quot;&gt;scripting support&lt;&#x2F;a&gt; in Shipyard. The scripting plan for
Arsenal borrows heavily from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rfcs&#x2F;blob&#x2F;master&#x2F;0001-scripting.md&quot;&gt;Amethyst scripting RFC&lt;&#x2F;a&gt;
with the first target scripting language being Python. Other languages that are
candidates for being added later are be &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt;, Lua, and maybe other languages
written in Rust such as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gluon-lang&#x2F;gluon&quot;&gt;Gluon&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;More information on the Arsenal development direction can be found in the latest
Arsenal development &lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&#x2F;post&#x2F;arsenal-development-now-on-github-sponsors&quot;&gt;blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;katharostech.com&quot;&gt;Katharos Technology&lt;&#x2F;a&gt; has gone live on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;katharostech&#x2F;&quot;&gt;GitHub Sponsors&lt;&#x2F;a&gt; as a
means to fund development of the development of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;arsenal&quot;&gt;Arsenal&lt;&#x2F;a&gt; game engine and
supporting Rust gamedev libraries and tools such as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;GFX&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;WGPU&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vimnail-a-mouseless-image-editor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;vimnail&quot;&gt;Vimnail&lt;&#x2F;a&gt; - a Mouseless Image Editor&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vimnail-a-mouseless-image-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vimnail.gif&quot; alt=&quot;Demo of transforming Ferris&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;vimnail&quot;&gt;Vimnail&lt;&#x2F;a&gt; is a WIP mode-based image editor inspired by Vim.
The goal of the project is to be able to compose images without using the mouse.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Tantan22430802&quot;&gt;TanTan&lt;&#x2F;a&gt; also released a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;2cSY43OcuZc&quot;&gt;devlog video&lt;&#x2F;a&gt; about the project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gc-nes-emulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;garettcooper.com&#x2F;#&#x2F;nes-emulator&quot;&gt;GC NES Emulator&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gc-nes-emulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;garettcooper.com&#x2F;#&#x2F;nes-emulator&quot;&gt;&lt;img src=&quot;nes-emu.png&quot; alt=&quot;screenshot of the web version: main area, scaling settings and drag-n-drop area&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;garettcooper.com&#x2F;&quot;&gt;Garett Cooper&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;garettcooper.com&#x2F;#&#x2F;nes-emulator&quot;&gt;GC NES Emulator&lt;&#x2F;a&gt;
that allows you to play classic Nintendo Entertainment System games in the browser.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The core of the GC NES Emulator is implemented in the Rust programming language,
which supports Web Assembly as a compilation target.
With a WASM version of the emulator, I&#x27;ve written a javascript wrapper
that takes the frame rendered with the Rust code
and displays it on an HTML 5 canvas.
At present, this is done completely synchronously,
though I would like to move it into a worker at some point in the future&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GarettCooper&#x2F;gc_nes_emulator&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;51&quot;&gt;#51 &amp;quot;Using wasm-bindgen for games&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;75&quot;&gt;#75 &amp;quot;Standardised API for sharing thread pools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;77&quot;&gt;#77 &amp;quot;Can we contribute to OpenXR to get Keyboard&#x2F;Mouse support to be official?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;30&quot;&gt;#30 &amp;quot;CI: Add markdownlint checks&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&quot;&gt;rust-gamedev&#x2F;arewegameyet&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;95&quot;&gt;#95 &amp;quot;How do we remove crates?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;261&quot;&gt;#261 &amp;quot;Make .rs domain primary?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;320&quot;&gt;#320 &amp;quot;A different section for gamejam games?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brendanzab&#x2F;gl-rs&#x2F;issues&#x2F;524&quot;&gt;gl-rs is seeking new maintainers&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=aKLntZcp27M&quot;&gt;&lt;img src=&quot;ecs-talk.png&quot; alt=&quot;a screenshot of the first slide&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;During RustConf 2018, Catherine West gave a keynote talk
&amp;quot;Using Rust For Game Development&amp;quot; that introduced a lot of people
to the concept of ECS and is now considered a classic.
You can &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=aKLntZcp27M&quot;&gt;watch the recording here&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;kyren.github.io&#x2F;rustconf_2018_slides&#x2F;index.html&quot;&gt;slides&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;A few months later &lt;a href=&quot;https:&#x2F;&#x2F;kyren.github.io&#x2F;2018&#x2F;09&#x2F;14&#x2F;rustconf-talk.html&quot;&gt;an extended text version was released&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;9dwqa4&#x2F;rustconf_2018_closing_keynote&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;programming&#x2F;comments&#x2F;9dwq73&#x2F;rustconf_2018_closing_keynote&quot;&gt;&#x2F;r&#x2F;programming&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;hn0qso&#x2F;this_month_in_rust_gamedev_11_june_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1280577098369949696&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #10 - May 2020</title>
            <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/010/</link>
            <guid>https://gamedev.rs/news/010/</guid>
            <description>&lt;p&gt;Welcome to the tenth issue of the Rust GameDev Workgroup’s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#game-updates&quot;&gt;Game Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#learning-material-updates&quot;&gt;Learning Material Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#meeting-minutes&quot;&gt;Meeting Minutes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#requests-for-contribution&quot;&gt;Requests for Contribution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#jobs&quot;&gt;Jobs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;010&#x2F;#bonus&quot;&gt;Bonus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren1.png&quot; alt=&quot;Buildings&quot; &#x2F;&gt;
&lt;em&gt;The new repo banner&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf
Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;In May, Veloren 0.6 was launched! Check out the launch trailer below for an
overview of the changes. The launch party was a massive success with nearly 50
people online at the peak. In May, character persistence was added. This allows
players to save their level after leaving the server. Dungeons were merged right
before the release, and include bosses. Many small bugs were fixed for the
release as well. Veloren also now has an &lt;a href=&quot;https:&#x2F;&#x2F;opencollective.com&#x2F;veloren&quot;&gt;Open Collective
account&lt;&#x2F;a&gt;, and you can donate towards our infrastructure
costs. GamingOnLinux &lt;a href=&quot;https:&#x2F;&#x2F;www.gamingonlinux.com&#x2F;2020&#x2F;05&#x2F;veloren-an-open-source-rpg-inspired-by-cube-world-has-a-new-release&quot;&gt;wrote an article&lt;&#x2F;a&gt; on Veloren&#x27;s development.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=kjDFVgWYMd4&quot;&gt;&lt;img src=&quot;veloren_trailer.gif&quot; alt=&quot;0.6 release trailer&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;0.6 release trailer. Click for the full video!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here is the May changelog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added server-side character saving&lt;&#x2F;li&gt;
&lt;li&gt;Player now starts with a lantern.&lt;&#x2F;li&gt;
&lt;li&gt;Added tab completion in chat for player names and chat commands&lt;&#x2F;li&gt;
&lt;li&gt;Added server persistence for character stats&lt;&#x2F;li&gt;
&lt;li&gt;Added a popup when setting your character&#x27;s waypoint&lt;&#x2F;li&gt;
&lt;li&gt;Added dungeon arenas&lt;&#x2F;li&gt;
&lt;li&gt;Added dungeon bosses and rare boss loot&lt;&#x2F;li&gt;
&lt;li&gt;Added 2 sets of armour. One Steel and one Leather.&lt;&#x2F;li&gt;
&lt;li&gt;Added context-sensitive crosshair&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A 0.7 intro meeting was held, in which the devs looked at what they wanted to achieve
with this version. 0.7 will be released August 1st. They came up with a definition
of 0.7, and what they wanted to achieve:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a player, I want to get quests from NPCs in settlements. I want to be sent
to kill enemies, collect objects, or complete dungeons. I want to be sent from
village to village and become familiar with the region.&lt;&#x2F;p&gt;
&lt;p&gt;I want to be able to open the map and get information where I need to go for a
quest. I want to be able to easily find where dungeons, villages, and other
points of interest are. I want to be able to open a trade window with NPCs in
villages, and buy and sell items. I want to be able to craft items with
ingredients that I have.&lt;&#x2F;p&gt;
&lt;p&gt;I want to be able to see and hear more while in combat. I want to feel good
while doing combat. I want to see particle effects from magic, and hear swords
clashing together. I want to be able to add people to my combat party and
interact with the game UI to do this.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;veloren2.png&quot; alt=&quot;Welcome to Veloren&quot; &#x2F;&gt;
&lt;em&gt;Welcome to Veloren! From the 0.6 release party&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics from May:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-67#move-to-wgpu-by-sharp&quot;&gt;Move to WGPU&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-68#0-6-release&quot;&gt;0.6 Release&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-68#network-analysis-by-angelonfira&quot;&gt;Network Analysis&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-69#0-7-intro-meeting&quot;&gt;0.7 Intro Meeting&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-69#work-on-iced-with-imbris&quot;&gt;Work on iced&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-69#chunk-generation-by-zesterer&quot;&gt;Chunk Generation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;May&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-66&quot;&gt;#66&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-67&quot;&gt;#67&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-68&quot;&gt;#68&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-69&quot;&gt;#69&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;paddlers&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;paddlers.ch&quot;&gt;Paddlers&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#paddlers&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;paddlers.jpg&quot; alt=&quot;Paddlers v0.1.3 screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Paddlers is a multiplayer strategy game with a &lt;a href=&quot;https:&#x2F;&#x2F;demo.paddlers.ch&#x2F;&quot;&gt;live prototype&lt;&#x2F;a&gt;
available online to demonstrate its current status.
It is a learning-by-doing hobby project to explore the possibilities with
Rust on the web, developed by a single person so far but open to contributors.&lt;&#x2F;p&gt;
&lt;p&gt;May was a busy month for Paddlers and brought many fundamental changes and new
features, including the ability to observe other player&#x27;s villages.
A summary of changes is available on the &lt;a href=&quot;https:&#x2F;&#x2F;paddlers.ch&#x2F;news.html&quot;&gt;Paddlers news page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Besides programming, the developer of Paddlers also wrote a blog post called
&lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_4.html&quot;&gt;Benefits of full-stack Rust&lt;&#x2F;a&gt; where the details some of his
experiences when implementing a server-client model using Rust on both ends.
Furthermore, he published a first &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=3Syw7hxQ-z0&quot;&gt;video teaser&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gjilkn&#x2F;benefits_of_fullstack_rust_my_experience_from&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sailing-simulator-prototype&quot;&gt;Sailing Simulator Prototype&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sailing-simulator-prototype&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sailing-sim.jpg&quot; alt=&quot;screenhot: an island, sea, and a few boats&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This unnamed game is still in the prototype stage and
it&#x27;s the new project of Kunos Simulazioni
(creators of the &lt;a href=&quot;https:&#x2F;&#x2F;www.assettocorsa.net&quot;&gt;Assetto Corsa&lt;&#x2F;a&gt; racing simulation franchise)
co-founder and former Lead Programmer &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;KunosStefano&quot;&gt;Stefano Casillo&lt;&#x2F;a&gt; who started
a new studio (Jaxx Vane Studio) in April 2020 in the search of new challenges.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s going to be a modern Foiling&#x2F;Sailing Simulator aiming to bring the depth,
rigor and attention to detail found in racing simulations to the sailing genre
on PC&#x2F;Windows.
The game features a fully custom scratch made 3D engine written in Rust
with minimal dependencies using DirectX 11 via winapi-rs, ODE
and OpenAL with custom bindings.&lt;&#x2F;p&gt;
&lt;p&gt;The project should leave the prototype stage later next month.
The development is streamed live 3 times a week on &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;kunosstefano&quot;&gt;Twitch&lt;&#x2F;a&gt;
with highlights also published on &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC7n_g2xDySrmKRaf41rSwlg&quot;&gt;YouTube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-may-devlog&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;: May Devlog&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-may-devlog&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden.jpg&quot; alt=&quot;screenshot: buildings &amp;amp; trees&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;may&quot;&gt;May&lt;&#x2F;a&gt; devlog was posted.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The core logic of the plant simulation was rewritten,
allowing for a broader variety of (more adaptable) plants,
with a broader difference in tree growth behavior across different species.&lt;&#x2F;li&gt;
&lt;li&gt;A WIP &lt;a href=&quot;%5Bgarden-kaleidoscope%5D&quot;&gt;point-cloud drawing tool&lt;&#x2F;a&gt; (currently named Kaleidoscope)
for creating some parts of the game world.&lt;&#x2F;li&gt;
&lt;li&gt;Optimizations: such as reducing the number of objects to be drawn by 90%
(mostly via frustum culling).&lt;&#x2F;li&gt;
&lt;li&gt;Anti-aliasing, new leaves, and textures.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;sandbox&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;sandbox&quot;&gt;Sandbox&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sandbox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;streamable.com&#x2F;0bhbol#&quot;&gt;&lt;img src=&quot;sandbox.jpeg&quot; alt=&quot;Sandbox gameplay demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;click to see a gameplay demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;sandbox&quot;&gt;Sandbox&lt;&#x2F;a&gt; is a falling sand game by JMS55 that provides a variety of fun
particle types to place, and then you get to watch the resulting interactions!&lt;&#x2F;p&gt;
&lt;p&gt;The main focus so far has been experimenting with different particle types, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Sand&lt;&#x2F;li&gt;
&lt;li&gt;Acid - Dissolves material.&lt;&#x2F;li&gt;
&lt;li&gt;Water&lt;&#x2F;li&gt;
&lt;li&gt;Replicator - Creates infinite copies of other particles.&lt;&#x2F;li&gt;
&lt;li&gt;Plant - Grows over time once placed on wet Sand, or on top of an existing
plant.&lt;&#x2F;li&gt;
&lt;li&gt;Cyrotheum - A cold particle that melts over time, and releases a wave of
cold to its surroundings.&lt;&#x2F;li&gt;
&lt;li&gt;Unstable - Heats up over time, vaporizing a large radius at too high
of a temperature, and releases Smoke.&lt;&#x2F;li&gt;
&lt;li&gt;Electricity - Can only exist when falling, or in Water.
Flows through Water. Very hot.&lt;&#x2F;li&gt;
&lt;li&gt;Glass - Created by heating up Sand. Acts like a liquid at
high enough temperatures, and a solid otherwise. Immune to Acid.&lt;&#x2F;li&gt;
&lt;li&gt;Life - A semi-intelligent particle that stacks itself up, and moves
as a group. Likes to breed upon eating Plants. Will jump down short drops.
Dies if too hot or cold, or upon falling a large distance.&lt;&#x2F;li&gt;
&lt;li&gt;Blood - Created by pressurizing dead Life particles, by stacking
enough of other particles on top.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Got any ideas? Leave an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JMS55&#x2F;sandbox&quot;&gt;issue on github&lt;&#x2F;a&gt;, or add it yourself!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;orb-farm&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;orb.farm&quot;&gt;orb.farm&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#orb-farm&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;orb_farm.jpeg&quot; alt=&quot;an example of a living ecosystem&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;orb.farm&quot;&gt;orb.farm&lt;&#x2F;a&gt; is a virtual ecosystem where different species of creature can live,
grow and die as part of a self-contained food chain.
Made by &lt;a href=&quot;https:&#x2F;&#x2F;maxbittker.com&quot;&gt;Max Bittker&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;maxbittker.com&#x2F;making-sandspiel&quot;&gt;sandspiel&#x27;s author&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Element types:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Inert: Clear, Water, Glass, Sand, Stone, Wood&lt;&#x2F;li&gt;
&lt;li&gt;Autotrophs
&lt;ul&gt;
&lt;li&gt;Algae: Photosynthesizes sunlight &amp;amp; carbon dioxide to produce nutrients and oxygen.
Life of the party!&lt;&#x2F;li&gt;
&lt;li&gt;Grass: Grows into eel grass, which is a source of food and oxygen.
Needs to pull nitrogen from sand in order to grow.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Daphnia (herbivore): Also know as water fleas, these freshwater zooplankton
are a key species in the ecosystem.
They feed on algae, and lay eggs which can lay dormant for a long time!
More active at night.&lt;&#x2F;li&gt;
&lt;li&gt;Carnivores
&lt;ul&gt;
&lt;li&gt;Fish: They feed mostly on daphnia but will also eat on the biofilm
that grows on plants. I can&#x27;t tell what they&#x27;re thinking.
&lt;ul&gt;
&lt;li&gt;Goldfish: Loyal but simple minded. Breathes oxygen&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Decomposers
&lt;ul&gt;
&lt;li&gt;Bacteria: Aerobically breaks down waste into nitrogen.
Decomposers are very important parts to a functioning ecosystem.
Blows bubbles when happy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaxBittker&#x2F;orb.farm&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gm4whz&#x2F;orbfarm_a_virtual_aquatic_ecosystem_implemented&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;for-the-quest&quot;&gt;For The Quest&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#for-the-quest&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;forthequest.jpg&quot; alt=&quot;For The Quest screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For The Quest is the working title for a game in early development by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt;. Written entirely in Rust and compiled to WebAssembly,
For The Quest is destined to become a MMORPG set in a post-apocalyptic
Earth where your goal is to band together into like-minded factions to
not only survive in this new world, but to unearth the cause of humanity&#x27;s
downfall.&lt;&#x2F;p&gt;
&lt;p&gt;For The Quest is currently undergoing engine development with a focus on
running smoothly in modern browsers using WebGL 2.0 before moving onto
native desktop ports.&lt;&#x2F;p&gt;
&lt;p&gt;New developments in May:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;All game assets are now defined server-side in a database and are streamed
to the client on demand as areas are requested&lt;&#x2F;li&gt;
&lt;li&gt;New desert &#x2F; sand assets added to test the new asset loading system&lt;&#x2F;li&gt;
&lt;li&gt;Translucent water surfaces with primitive refraction effect added&lt;&#x2F;li&gt;
&lt;li&gt;New &amp;quot;picking&amp;quot; system implemented that is aware of the 3D coordinates at
location of selection in addition to being aware of which object selected&lt;&#x2F;li&gt;
&lt;li&gt;A basic world editing UI has been built in React &#x2F; Javascript and interfaced
to the game engine via WASM bindings, features include: displaying info about
currently selected object, deleting objects, adding any object type, creating
new maps and teleporting to any existing map&lt;&#x2F;li&gt;
&lt;li&gt;Map changes are persisted on the server and location of player is now
restored when closing the client and coming back later&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt; on Twitter for updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crate-before-attack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crate-before-attack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;&lt;img src=&quot;crate_before_attack.png&quot; alt=&quot;screenshot: decision tree and goal distance map in the background&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Decision tree and goal distance map in the background&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CrateAttack&quot;&gt;koalefant (@CrateAttack)&lt;&#x2F;a&gt;
is a realtime&#x2F;turn-based multiplayer game where frogs combat their friends
while navigating the landscape with their sticky tongues.&lt;&#x2F;p&gt;
&lt;p&gt;May development was focused on implementing AI of opponents and adding race mode:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=PcJOayy5gP4&quot;&gt;Video of AI racing against itself with visualized decision tree&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;play&quot;&gt;Playable build&lt;&#x2F;a&gt; (works in the browser on PC or Mac).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More details in the &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&quot;&gt;DevLog&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC_xMilPTLuuE5iLs1Ml9zow&quot;&gt;YouTube channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out a fun &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koalefant&#x2F;circle2d&quot;&gt;physics demo&lt;&#x2F;a&gt;
of the game&#x27;s physics engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stellary&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;stellary&quot;&gt;Stellary&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#stellary&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;stellary.jpeg&quot; alt=&quot;Game&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;stellary&quot;&gt;Stellary&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;Coffé Junk Studio&lt;&#x2F;a&gt; is a fast-paced multiplayer
artillery game that promises exciting battles and real-time gravity physics.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your goal is to &amp;quot;defend&amp;quot; your planet by destroying the enemy’s planet.
Be careful, though, your missiles don&#x27;t always fly straight.
Be sure to take into account the gravity of planets, the sun,
and other celestial bodies!
Try out different tactics, e.g. sling shooting missiles around the sun,
spamming them, or lining up sniper shots!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The game is made using the studio&#x27;s &amp;quot;Sphere Engine&amp;quot;
that is being implemented using Rust and Vulkan.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dig-escape&quot;&gt;Dig Escape&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dig-escape&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;digescape.png&quot; alt=&quot;Dig Escape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Dig Escape is a simple puzzle game written in Rust. You can play it in the
browser &lt;a href=&quot;https:&#x2F;&#x2F;tantandev.itch.io&#x2F;digescape&quot;&gt;here&lt;&#x2F;a&gt;. The developer has released &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=q6-f63vZW8Y&quot;&gt;some
videos&lt;&#x2F;a&gt; about the development of the game. They also
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=6fKt6bmnAKo&quot;&gt;did a review&lt;&#x2F;a&gt; on what it was like working with Rust for
the first time. Be sure to check out the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TanTanDev&#x2F;DigEscape&quot;&gt;Github repo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;akigi1.png&quot; alt=&quot;cat model&quot; &#x2F;&gt;
&lt;em&gt;Completed cat model with rigging&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a magical multiplayer online world where humans aren&#x27;t the
only intelligent animals. Akigi is a solo project, and the developer hopes to
share their excitement and challenges through their dev blogs.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;In May, progress was made on the game models. Test have been created in order
to formalize what a testing suite should look like in Akigi. The interactive
sequences system was restructured to allow for a node system that could guide the
player better. A data extraction system was put in place to view metrics from
the game server.&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;065-2020-05-03.html#learning-to-think&quot;&gt;Learning to Think&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;066-2020-05-10.html#integration-testing&quot;&gt;Integration Testing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;066-2020-05-10.html#testing-quests&quot;&gt;Testing Quests&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;067-2020-05-17.html#interactive-sequences&quot;&gt;Interactive Sequences&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;068-2020-05-24.html#logging&quot;&gt;Logging&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;069-2020-05-31.html#user-interface-iteration&quot;&gt;User Interface Iteration&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;069-2020-05-31.html#inventory&quot;&gt;Inventory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;065-2020-05-03.html&quot;&gt;#065&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;066-2020-05-10.html&quot;&gt;#066&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;067-2020-05-17.html&quot;&gt;#067&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;069-2020-05-31.html&quot;&gt;#068&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;may-2020&#x2F;069-2020-05-31.html&quot;&gt;#069&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nox-futura-rust-edition&quot;&gt;Nox Futura: Rust Edition&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nox-futura-rust-edition&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nox-f.png&quot; alt=&quot;worldgen menu&quot; &#x2F;&gt;
&lt;em&gt;Worldgen menu&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bracketproductions.com&quot;&gt;Herbert Wolverson&lt;&#x2F;a&gt;
(the author of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;&quot;&gt;the Rust Roguelike Tutorial&lt;&#x2F;a&gt;)
started experimenting with porting &lt;a href=&quot;https:&#x2F;&#x2F;thebracket.itch.io&#x2F;nox-futura&quot;&gt;Nox Futura&lt;&#x2F;a&gt; to Rust.&lt;&#x2F;p&gt;
&lt;p&gt;At the moment, a wgpu-rs backend, basic planet and region generation are ready.
Check out Sharing Saturday devlogs for more detailed reports:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;gg4qx4&#x2F;sharing_saturday_310&#x2F;fq0cvrm&quot;&gt;#1&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;gout79&#x2F;sharing_saturday_312&#x2F;frjozbb&quot;&gt;#2&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;gxg69q&#x2F;sharing_saturday_314&#x2F;ft4akml&quot;&gt;#3&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;on-fps-game-progress-1&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;atilkockar.com&#x2F;on-fps-game-progress-1&quot;&gt;On FPS Game Progress #1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#on-fps-game-progress-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=TvgWOEnlXw4&quot;&gt;&lt;img src=&quot;on-fps.jpeg&quot; alt=&quot;Video demo of the current progress&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;atilkockar.com&#x2F;on-fps-game-progress-1&quot;&gt;Atil Kockar posted the first devlog about their experience&lt;&#x2F;a&gt;
of writing an FPS game using Rust, SDL, and OpenGL.
At the moment, the game features loading .obj files, drawing simple UI,
and Q3-style character controller logic.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;life&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;datoh.itch.io&#x2F;life&quot;&gt;Life&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#life&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;life.png&quot; alt=&quot;screenshot with a simple level&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;datoh.itch.io&#x2F;life&quot;&gt;&amp;quot;Life&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;datoh&quot;&gt;@datoh&lt;&#x2F;a&gt;
is a WIP puzzle game written using Tetra.
Though still a prototype, the game has a bunch of playable levels
and a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;datoh&#x2F;status&#x2F;1264574784769318915&quot;&gt;level editor&lt;&#x2F;a&gt;.
The development process is streamed at &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;datoh&quot;&gt;twitch.tv&#x2F;datoh&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mind-s-eye&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MichaelStott&#x2F;Minds-Eye&quot;&gt;Mind&#x27;s Eye&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mind-s-eye&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;minds_eye.gif&quot; alt=&quot;Level 2: Triangle Tango&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MichaelStott&#x2F;Minds-Eye&quot;&gt;Mind&#x27;s Eye&lt;&#x2F;a&gt; by Michael Stott is a WIP experimental
Sokoban-esque puzzle game developed using Rust and SDL2.
The objective is to move the colored blocks into the line of sight
of a matching eye.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vkeyes-demo-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;funmaker&#x2F;vkeyes-demo-rs&quot;&gt;vkeyes-demo-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vkeyes-demo-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vkeyes.gif&quot; alt=&quot;Video demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;funmaker&#x2F;vkeyes-demo-rs&quot;&gt;vkeyes-demo-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;FunMaker39&quot;&gt;Fun Maker&lt;&#x2F;a&gt; is a simple OpenVR+Vulkano demo with a twist:
you can rotate your eyes separately with analog sticks.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the demo features asynchronous model&#x2F;texture loading from .obj,
.png, and OpenVR and uses a dedicated queue for data transfer if available.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-material-updates&quot;&gt;Learning Material Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#learning-material-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-sokoban-tutorial&quot;&gt;Rust Sokoban Tutorial&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-sokoban-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sokoban_2.jpeg&quot; alt=&quot;sokoban update&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The Rust Sokoban tutorial is an online book aimed at Rust gamedev beginners
which walks through making a simple Sokoban game using ECS, ggez and specs.
It tries to teach the basics of architecting in ECS and basic Rust concepts
through a hands-on approach.&lt;&#x2F;p&gt;
&lt;p&gt;This month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the project received 10+ contributions from beta testers&lt;&#x2F;li&gt;
&lt;li&gt;work was started on chapter 3 which features advanced gameplay&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can follow along for updates and release progress &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1264301381042782209&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;adding-wasm-support-to-a-native-app&quot;&gt;Adding WASM Support to a Native App&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#adding-wasm-support-to-a-native-app&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;networking_wasm_recv.png&quot; alt=&quot;WASM Networking&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Porting an existing native application to run in the browser as a &lt;a href=&quot;https:&#x2F;&#x2F;webassembly.org&#x2F;&quot;&gt;WASM&lt;&#x2F;a&gt;
application comes with many challenges, including adapting to the browser&#x27;s
control flow, threading model, and security restrictions.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azriel91&#x2F;&quot;&gt;Azriel&lt;&#x2F;a&gt; presented the challenges of adding WASM support to the
Amethyst game engine. The recording is on &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=7YQGwb4_AvA&quot;&gt;youtube&lt;&#x2F;a&gt; and the
presentation material is available &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;wasm_it&#x2F;&quot;&gt;online&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;disassembling-rust-part-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;giordi91.github.io&#x2F;post&#x2F;disassemlbyrust1&quot;&gt;Disassembling Rust: Part 1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#disassembling-rust-part-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust_asm.png&quot; alt=&quot;Rust Disassembly: Part 1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rust comes with many new constructs and features not commonly found in other
languages. Programmers coming from different backgrounds, notably C++ and
game-dev might wonder how such a construct translate to machine code.&lt;&#x2F;p&gt;
&lt;p&gt;In the first &lt;a href=&quot;https:&#x2F;&#x2F;giordi91.github.io&#x2F;post&#x2F;disassemlbyrust1&quot;&gt;part&lt;&#x2F;a&gt; in a series, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MGDev91&quot;&gt;Marco Giordano (@MGDev91)&lt;&#x2F;a&gt;
investigates some common Rust construct to see what instructions they translate to,
highlighting a few interesting findings in how Rust guarantees safety
and ensures speed.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pong-tutorial-with-ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&#x2F;2020&#x2F;05&#x2F;19&#x2F;Pong-tutorial-with-ggez.html&quot;&gt;Pong tutorial with GGEZ&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pong-tutorial-with-ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mkhan45.github.io&quot;&gt;Mikail Khan&lt;&#x2F;a&gt; shared a three-part tutorial
about building a simple version of Pong using GGEZ:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I saw a post on reddit asking for a simple game dev tutorial with Rust.
Generally people encourage using ECS with any Rust game,
so I guess there’s no tutorials for anything without it.
However, for simple games like Pong or Flappy Bird,
it really is easier to forgo the ECS.&lt;&#x2F;p&gt;
&lt;p&gt;While Amethyst, the biggest Rust game engine,
is completely built on ECS and you can’t make a game without it,
there’s still plenty of small game engines that don’t make any assumptions.
My favorite of these is ggez.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;ggez-pong-tutorial&quot;&gt;The source code for all stages could be found here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-hal-vulkan-basics&quot;&gt;gfx-hal &amp;amp; vulkan basics&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-hal-vulkan-basics&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gfx-hal-tutorial.jpeg&quot; alt=&quot;A diagram from the posts about backends&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;willofindie.com&quot;&gt;Subroto Biswas&lt;&#x2F;a&gt; started
a &lt;a href=&quot;https:&#x2F;&#x2F;willofindie.com&#x2F;gfx-hal-initials&quot;&gt;&amp;quot;&lt;code&gt;gfx-hal&lt;&#x2F;code&gt; &amp;amp; &lt;code&gt;vulkan&lt;&#x2F;code&gt; basics&amp;quot; tutorial series&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have found that learning new things every often, leads to chaos,
and people (specifically ME) tend to forget many things
they have already learnt before.
These notes will help me to keep reference notes for myself,
as well as for anybody who is willing to learn Vulkan API using gfx-hal.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;For now it includes two posts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;willofindie.com&#x2F;gfx-hal-initials&#x2F;physical-logical-devices&quot;&gt;&amp;quot;Adapters &amp;amp; Physical&#x2F;Logical Devices &amp;amp; Device Queues&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;willofindie.com&#x2F;gfx-hal-initials&#x2F;display-window&quot;&gt;&amp;quot;Setup &amp;amp; Display Blank Window&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;safe-arch&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lokathor&#x2F;safe_arch&quot;&gt;safe_arch&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#safe-arch&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lokathor&#x2F;safe_arch&quot;&gt;safe_arch&lt;&#x2F;a&gt; is a crate by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;lokathor&quot;&gt;@lokathor&lt;&#x2F;a&gt; that safely exposes arch intrinsics via &lt;code&gt;#[cfg()]&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;safe_arch lets you safely use CPU intrinsics - those things in the
&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;core&#x2F;core_arch&#x2F;arch&#x2F;index.html&quot;&gt;core::arch&lt;&#x2F;a&gt; modules.
It works purely via &lt;code&gt;#[cfg()]&lt;&#x2F;code&gt; and compile time CPU feature declaration.
If you want to check for a feature at runtime and then call an intrinsic
or use a fallback path based on that then this crate is sadly not for you.&lt;&#x2F;p&gt;
&lt;p&gt;SIMD register types are &amp;quot;newtype&#x27;d&amp;quot; so that better trait impls
can be given to them, but the inner value is a pub field so feel
to just grab it out if you need to.
Trait impls of the newtypes include: Default (zeroed), From&#x2F;Into of appropriate
data types, and appropriate operator overloading.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;See &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;safe_arch&quot;&gt;the docs&lt;&#x2F;a&gt; for more details.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lokathor&#x2F;safe_arch&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+First+Issue%22&quot;&gt;Feedback and contributions are welcome&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gjvyz8&#x2F;safe_arch03&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;point-of-webgpu-on-native&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;web&#x2F;gpu&#x2F;native&#x2F;2020&#x2F;05&#x2F;03&#x2F;point-of-webgpu-native.html&quot;&gt;Point of WebGPU on Native&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#point-of-webgpu-on-native&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-logo.png&quot; alt=&quot;wgpu-rs logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&quot;&gt;@kvark&lt;&#x2F;a&gt; shared their vision of
&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;web&#x2F;gpu&#x2F;native&#x2F;2020&#x2F;05&#x2F;03&#x2F;point-of-webgpu-native.html&quot;&gt;why WebGPU on native platforms is important&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I can see WebGPU on native being a go-to choice for amateur developers,
students, indie professionals, mobile game studios, and many other groups.
It could be the default GPU API, if it can deliver on its promises of safety,
performance, and portability. We have a lot of interest and early adopters,
as well as big forces in motion to make this real.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gdbgoc&#x2F;point_of_webgpu_on_native&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23079200&quot;&gt;hackernews&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nodefx&quot;&gt;NodeFX&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nodefx&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1256805858022998016&quot;&gt;&lt;img src=&quot;nodefx.png&quot; alt=&quot;NodeFX&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Click the image to see the animated version&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project &amp;quot;NodeFX&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&quot;&gt;Christian Vallentin (@MrVallentin)&lt;&#x2F;a&gt;
is an unnamed node-based tool for creating GLSL shaders in real-time,
entirely written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Some highlighted features and plans are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The majority of nodes have real-time previews&lt;&#x2F;li&gt;
&lt;li&gt;Extensive library of nodes, from math and logic to gradients, transitions,
and animations&lt;&#x2F;li&gt;
&lt;li&gt;Support is currently limited to exporting GLSL shaders, but more languages
and formats are planned&lt;&#x2F;li&gt;
&lt;li&gt;The tool will be released for free, as soon as it&#x27;s ready&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The project is currently closed source and early in development.
More information can be found on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;goods&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;goods&quot;&gt;Goods&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#goods&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Asset management library that aims to be easy to use, flexible, extensible
and support virtually any use-case:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Need to load compund asset that pulls subassets without boilerplate on
call-site? All heavy-lifting for loading subassets can be done in &lt;code&gt;Format&lt;&#x2F;code&gt;
implementation for the asset type.&lt;&#x2F;li&gt;
&lt;li&gt;Asset is made of GPU resources and access to graphics device is required to
create asset instance? &lt;code&gt;Asset::build&lt;&#x2F;code&gt; receives reference to &lt;code&gt;Asset::Context&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Targeting browser? &lt;code&gt;goods&lt;&#x2F;code&gt; support building for wasm
and even bundle Fetch API based asset data source.&lt;&#x2F;li&gt;
&lt;li&gt;Target doesn&#x27;t have &lt;code&gt;std&lt;&#x2F;code&gt;? Core types and traits are &lt;code&gt;no_std&lt;&#x2F;code&gt; compatible.
But &lt;code&gt;alloc&lt;&#x2F;code&gt; is required.&lt;&#x2F;li&gt;
&lt;li&gt;Looking to keep things tidy and fast to build? Clean build of the crate
with no features takes about ~3s on modern CPU.&lt;&#x2F;li&gt;
&lt;li&gt;Integration with &lt;code&gt;serde&lt;&#x2F;code&gt; ecosystem? Special &lt;code&gt;Format&lt;&#x2F;code&gt; implementations can load
assets whose representation implement &lt;code&gt;serde::de::DeserializeOwned&lt;&#x2F;code&gt;.
Crate includes &lt;code&gt;Format&lt;&#x2F;code&gt;s for loading assets from JSON, YAML and RON documents.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Crate&#x27;s repo has few examples with nearly each line of the code explained.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cute-c2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yeahross0&#x2F;cute-c2&quot;&gt;cute-c2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cute-c2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yeahross0&#x2F;cute-c2&quot;&gt;cute-c2&lt;&#x2F;a&gt; is a Rust wrapper, created by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yeahross0&quot;&gt;yeahross0&lt;&#x2F;a&gt;, for Randy Gaul&#x27;s
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RandyGaul&#x2F;cute_headers&#x2F;blob&#x2F;master&#x2F;cute_c2.h&quot;&gt;single-header C library of the same name&lt;&#x2F;a&gt;. It implements 2D
collision detection between circles, AABBs, capsules and up to eight-sided
convex polygons.&lt;&#x2F;p&gt;
&lt;p&gt;The API exposed is safe and Rust-y, and various examples are provided in the
repository. The library is not yet published to Crates.io, but looks promising!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kas-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;KAS v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kas-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kas.png&quot; alt=&quot;KAS calculator example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; (toolKit Abstraction System) is a general purpose GUI toolkit, developed
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhardy&quot;&gt;dhardy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;version 0.4&lt;&#x2F;a&gt; was released - some highlights from the
changelog are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;An overhaul of the &lt;code&gt;Widget&lt;&#x2F;code&gt; API&lt;&#x2F;li&gt;
&lt;li&gt;Support for pop-up widgets&lt;&#x2F;li&gt;
&lt;li&gt;More robust input handling&lt;&#x2F;li&gt;
&lt;li&gt;Limited support for stable versions of the Rust compiler&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gf42ip&#x2F;kas_gui_04_release&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;iced&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;&quot;&gt;Iced&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iced&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;iced-life.gif&quot; alt=&quot;&amp;quot;Life&amp;quot; demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;&quot;&gt;Iced&lt;&#x2F;a&gt; is experimental, cross-platform GUI crate
focused on simplicity and type safety.
Iced can be used natively, in a web browser, or can use wgpu,&lt;&#x2F;p&gt;
&lt;p&gt;This month, Iced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;325&quot;&gt;got interactivity support for the Canvas widget&lt;&#x2F;a&gt;.
Also, check out a new &amp;quot;Game of Life&amp;quot; demo &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;tree&#x2F;e7e8e76c2&#x2F;examples&#x2F;game_of_life&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;beehive&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toasteater&#x2F;beehive&quot;&gt;beehive&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#beehive&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;       yz +Y
&lt;&#x2F;span&gt;&lt;span&gt;       __
&lt;&#x2F;span&gt;&lt;span&gt;   yx &#x2F;  \ xz +X
&lt;&#x2F;span&gt;&lt;span&gt;-X zx \__&#x2F; xy
&lt;&#x2F;span&gt;&lt;span&gt;    -Y zy
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toasteater&#x2F;beehive&quot;&gt;beehive&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;toast_dev&quot;&gt;@toast_dev&lt;&#x2F;a&gt; is a library that provides utilities and collections
for working with 3D hexagonal maps.
It&#x27;s based on &lt;a href=&quot;https:&#x2F;&#x2F;redblobgames.com&#x2F;grids&#x2F;hexagons&quot;&gt;Red Blob Games&#x27;s guide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rustsim-survey&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;forms&#x2F;d&#x2F;e&#x2F;1FAIpQLSes3qjVxpksw6ntendfadQW7x4MCSw6Vd2Kdg4sDFj46zs5ew&#x2F;viewform&quot;&gt;RustSim Survey&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustsim-survey&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustsim.png&quot; alt=&quot;rustim logo: lab flask in a gear&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi! This survey has been created by sebcrozet from &lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&quot;&gt;rustsim.org&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&quot;&gt;nphysics.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;With this survey, I would like to understand better
what the community needs from a physics engine.
This will help prioritize future developments in Rust.
Most questions of this first part of the survey are mandatory
and allow multiple answers which you can complete with custom answers.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gpwsk1&#x2F;survey_what_do_you_need_from_a_physics_engine&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;svg-face&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;svg_face&quot;&gt;svg_face&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#svg-face&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;svg_face.jpeg&quot; alt=&quot;output example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;svg_face&quot;&gt;svg_face&lt;&#x2F;a&gt; is a crate for generating random SVG faces.
It&#x27;s a port of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;anokhee&#x2F;visual-synthesizer&quot;&gt;anokhee&#x2F;visual-synthesizer&lt;&#x2F;a&gt; to Rust.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;31&#x2F;this-month-may&quot;&gt;This Month in Mun&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;After half a year of hard work by the Mun Community and Core Team,
&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;16&#x2F;release-mun-v0-2-0&quot;&gt;Mun v0.2.0 was released&lt;&#x2F;a&gt;.
With the addition of hot reloadable structs, this
forms a big step forward in terms of hot reloadability for the language.&lt;&#x2F;p&gt;
&lt;p&gt;Their additional &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;31&#x2F;this-month-may&quot;&gt;May updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;number type inferencing;&lt;&#x2F;li&gt;
&lt;li&gt;removing generic &lt;code&gt;float&lt;&#x2F;code&gt;, &lt;code&gt;int&lt;&#x2F;code&gt;, and &lt;code&gt;uint&lt;&#x2F;code&gt; types;&lt;&#x2F;li&gt;
&lt;li&gt;updating the Mun book;&lt;&#x2F;li&gt;
&lt;li&gt;an official VSCode plugin for Mun syntax highlighting;&lt;&#x2F;li&gt;
&lt;li&gt;documentation fixes and improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tetra-0-3-6&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1261381601524621312&quot;&gt;Tetra 0.3.6&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra-0-3-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and Raylib. This month,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1261381601524621312&quot;&gt;version 0.3.6 was released&lt;&#x2F;a&gt;, featuring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new suite of functions for querying information
about the player&#x27;s connected monitors&lt;&#x2F;li&gt;
&lt;li&gt;Tweaks to the startup code, to ensure slow asset loading
doesn&#x27;t cause the window to hang&lt;&#x2F;li&gt;
&lt;li&gt;Several under the hood bug fixes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Additionally, planning for 0.4 has begun, which will
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1256599606697308164&quot;&gt;bring some changes to the &lt;code&gt;Font&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;Text&lt;&#x2F;code&gt; API&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rg3d_3rd_person_example.jpg&quot; alt=&quot;3rd person walking simulator&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; is a 3d game engine. It has gained a lot of new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Volumetric lights - lights now have configurable amount of light scattering
in volume which significantly improves light quality.&lt;&#x2F;li&gt;
&lt;li&gt;Multi-camera rendering - can be used to make split-screen games, add
picture-in-picture features and so on.&lt;&#x2F;li&gt;
&lt;li&gt;Asynchronous resource loading&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;Four new examples&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Screen-space ambient occlusion (SSAO)&lt;&#x2F;li&gt;
&lt;li&gt;Directional lights for outdoor scenes, it still has no shadows yet.&lt;&#x2F;li&gt;
&lt;li&gt;Documentation improvements - still far from completion, but covers some basic
use cases.&lt;&#x2F;li&gt;
&lt;li&gt;Serialization improvements.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-ui&quot;&gt;rg3d-ui crate&lt;&#x2F;a&gt; improvements: added
docking manager, menu, file browser, tree view.&lt;&#x2F;li&gt;
&lt;li&gt;Editor - more about that below.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;rusty-editor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;rusty editor&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;img src=&quot;rusty_editor.jpg&quot; alt=&quot;rusty editor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-editor&quot;&gt;rusty editor&lt;&#x2F;a&gt; is a scene editor for rg3d engine, the goal is to make robust
and easy-to-use editor which is able to load, modify, and save scenes in
native engine format. The editor is based on rg3d engine, user interface
is based on rg3d-ui crate which developing in parallel with editor. It is
still in very early development phase, but it already has some basic
features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Undo&#x2F;redo&lt;&#x2F;li&gt;
&lt;li&gt;Saving and loading of scenes.&lt;&#x2F;li&gt;
&lt;li&gt;Interaction modes (move, scale, rotate).&lt;&#x2F;li&gt;
&lt;li&gt;Node properties editor&lt;&#x2F;li&gt;
&lt;li&gt;World outliner (scene hierarchy editor).&lt;&#x2F;li&gt;
&lt;li&gt;And many other small stuff.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;oxygengine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The main goal of this month changes was to fix most problematic bugs and finally
add a feature to support custom fonts assets. While not all bugs could be fixed
on time, here are two interesting things that shows at least the small amount of
progress that was made:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added support for loading and using custom TFF fonts assets:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-custom-fonts.png&quot; alt=&quot;Oxygengine custom fonts&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Additionally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; has created a small example of a project that shows
how to make a pokemon-like game basis - it covers topics such as: using Tiled
Editor maps to render the world and applying player movement in it, as well as
using spritesheet-based frame animations. Example sources can be found here:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;pokemon&quot;&gt;Oxygengine pokemon-like basic mechanics&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-pokemon-gold.gif&quot; alt=&quot;Oxygengine pokemon gold&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you want to be up to date with Oxygengine ecosystem progress, make sure to
follow project on GitHub and see &lt;a href=&quot;oxygengine-project&quot;&gt;Oxygengine Project board&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;&lt;img src=&quot;amethyst-logo.png&quot; alt=&quot;Amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rlua&quot;&gt;&lt;code&gt;rlua&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; is now part of the Amethyst organization.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;rlua&lt;&#x2F;code&gt; is a library that provides high level bindings between Rust and
&lt;a href=&quot;https:&#x2F;&#x2F;www.lua.org&#x2F;&quot;&gt;Lua&lt;&#x2F;a&gt;. Through &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rlua&#x2F;issues&#x2F;174&quot;&gt;discussion&lt;&#x2F;a&gt;, a number of people will be
sharing maintenance of the library.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;legion-task&quot;&gt;&lt;code&gt;legion-task&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;: A multi-tasking library for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TomGillen&#x2F;legion&quot;&gt;Legion&lt;&#x2F;a&gt; ECS.&lt;&#x2F;p&gt;
&lt;p&gt;This library by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&quot;&gt;bonsairobo&lt;&#x2F;a&gt; provides multi-tasking support on the Legion
ECS, allowing tasks to be executed in dependency graph order.
Check out the announcement post in the &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;announcing-a-new-multi-tasking-library-for-legion-ecs&#x2F;1495&quot;&gt;forum&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This is a port of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bonsairobo&#x2F;specs-task&quot;&gt;&lt;code&gt;specs-task&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; library, which provides the same
functionality for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;SPECS&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;robo-instructus-font-rendering-saga&quot;&gt;Robo Instructus: &lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2020&#x2F;05&#x2F;24&#x2F;the-otf-journey.html&quot;&gt;Font Rendering Saga&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus-font-rendering-saga&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ttf.gif&quot; alt=&quot;ttf example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, the developer behind Robo Instructus spent lots of time working on
font rendering. They were looking to expand translations to languages that had
different characters, such as Cyrillic or Chinese. This would require support
for cubic bezier curves, not just quadratic curves. You can &lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2020&#x2F;05&#x2F;24&#x2F;the-otf-journey.html&quot;&gt;read their
blog&lt;&#x2F;a&gt; for an in-depth explanation. This lead to the release
of &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&#x2F;status&#x2F;1258866371024293890&quot;&gt;ab_glyph 0.1&lt;&#x2F;a&gt; that supports otf fonts, which then lead to
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&#x2F;status&#x2F;1264235900462075906&quot;&gt;glyph_brush 0.7&lt;&#x2F;a&gt; based on this, and finally &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&#x2F;status&#x2F;1264557215693918209&quot;&gt;otf fonts in
Robo Instructus&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-ecosystem&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; Ecosystem&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-ecosystem&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Paytonrules has started a multi-part guide on &lt;a href=&quot;https:&#x2F;&#x2F;paytonrules.com&#x2F;post&#x2F;games-in-rust-with-godot-part-one&#x2F;&quot;&gt;porting Godot games to
Rust&lt;&#x2F;a&gt;. This first part covers what you&#x27;ll need to
get started, and some workflow behind linking Rust code.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UC4jYW3lJKrEvOqCQ2ElryGw&quot;&gt;@schr3da&lt;&#x2F;a&gt; has continued their video series about using Rust in Godot.
&lt;ul&gt;
&lt;li&gt;Creating a Simple Platformer -
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=0CUu111YJIk&quot;&gt;Part 3&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;toast_dev&quot;&gt;@toast_dev&lt;&#x2F;a&gt; has &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;toast_dev&#x2F;status&#x2F;1267071886040555520&quot;&gt;just released&lt;&#x2F;a&gt; the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;gdnative&quot;&gt;gdnative crate&lt;&#x2F;a&gt;
0.8.1. This crate gives you Rust bindings to GDNative.
This version contains a few important bugfixes. The developers have also
rounded a few rough edges overall.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;77&quot;&gt;#77 &amp;quot;Can we contribute to OpenXR to get Keyboard&#x2F;Mouse support to be official?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;150&quot;&gt;#150 &amp;quot;Jobs Section&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&quot;&gt;rust-gamedev&#x2F;arewegameyet&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;320&quot;&gt;#320 &amp;quot;A different section for gamejam games?&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lokathor&#x2F;safe_arch&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+First+Issue%22&quot;&gt;safe_arch&#x27;s &amp;quot;Good First Issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jobs&quot;&gt;Jobs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#jobs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- An optinal section for new jobs related to Rust gamedev --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elektron.se&quot;&gt;Elektron&lt;&#x2F;a&gt; (synth manufacturer) looking to hire Rust Graphics Engineer
(Gothenburg, Sweden):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Elektron is looking for a highly skilled graphics engineer to join our team
working on a cutting-edge software platform which will drive
the next generation of our instruments.
In this role, you will carefully assess, build and take ownership
of the graphics stack.
The task reaches from low-level aspects concerning performance
up to forming APIs used for high-level UI design.
As part of this, you will work closely with the design team
in order to realize solutions with superb aesthetics.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can find all of the details on their &lt;a href=&quot;https:&#x2F;&#x2F;elektron.se&#x2F;rust-graphics-engineer&quot;&gt;job offer page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;elektron.png&quot; alt=&quot;Elektron&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aeplay.org&#x2F;citybound&quot;&gt;Citybound&lt;&#x2F;a&gt; is a WIP city building game that uses microscopic models
to vividly simulate the organism of a city arising
from the interactions of millions of individuals.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=qr9GTTST_Dk&quot;&gt;&lt;img src=&quot;cb-talk-video.jpeg&quot; alt=&quot;A screenshot from the recording&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;During RustFest Zurich 2017, &lt;a href=&quot;https:&#x2F;&#x2F;aeplay.org&quot;&gt;Anselm Eickhoff&lt;&#x2F;a&gt; gave an interesting talk
&amp;quot;Type-safe &amp;amp; high-perf distributed actor systems with Rust&amp;quot;:
brief history of Citybound, why Rust was chosen, actors in a networked setting,
a few live demos, and lessons learned.&lt;&#x2F;p&gt;
&lt;p&gt;You can &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=qr9GTTST_Dk&quot;&gt;watch the recording here&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;www.dropbox.com&#x2F;s&#x2F;z9ddkhz2pbidt8c&#x2F;rustfest.pdf?dl=0&quot;&gt;slides&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;Citybound&#x2F;comments&#x2F;77dc7m&#x2F;my_full_rustfest_talk&quot;&gt;&#x2F;r&#x2F;Citybound&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;77ddu6&#x2F;typesafe_highperf_distributed_actor_systems&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;gz59mk&#x2F;this_month_in_rust_gamedev_10_may_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1270064889432866818&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #9 - April 2020</title>
            <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/009/</link>
            <guid>https://gamedev.rs/news/009/</guid>
            <description>&lt;p&gt;Welcome to the ninth issue of the Rust GameDev Workgroup’s
monthly newsletter.
&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.
We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can follow the newsletter creation process
by watching &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues?q=label%3Acoordination&quot;&gt;the coordination issues&lt;&#x2F;a&gt;.
Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;london-virtual-talks-gamedev-special&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=o9QeKfKLXXM&quot;&gt;London Virtual Talks (GameDev Special)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#london-virtual-talks-gamedev-special&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=o9QeKfKLXXM&quot;&gt;&lt;img src=&quot;ldn-video.jpeg&quot; alt=&quot;Recorded stream screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;meetup.com&#x2F;Rust-London-User-Group&#x2F;events&#x2F;269357779&quot;&gt;This month&#x27;s London Rust meetup&lt;&#x2F;a&gt; features three gamedev talks:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;Rust GameDev WG&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AlexEne_&quot;&gt;@_AlexEne_&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;presentation&#x2F;d&#x2F;1-uPn_a03oePVxJrw6l0u-DYlbJC_1i8i4DMs5J2grGw&quot;&gt;slides&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Levelling up in Rust&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;presentation&#x2F;d&#x2F;1R49kKosTRoQU6UPk9xAc8fXd3_GEnzzrrEfKwS97XHM&quot;&gt;slides&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Scala to Rust: one game at a time&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;plippe&quot;&gt;@plippe&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;presentation&#x2F;d&#x2F;1YP9ksYnk0Mzycywd0w_4X4QWAPQEqZtm8zTTvVEtedM&quot;&gt;slides&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Here&#x27;s a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=o9QeKfKLXXM&quot;&gt;direct link to the recorded stream&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dungeonfog-is-hiring&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dungeonfog.com&#x2F;&quot;&gt;DUNGEONFOG&lt;&#x2F;a&gt; is Hiring&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dungeonfog-is-hiring&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;dgnfog.jpeg&quot; alt=&quot;DUNGEONFOG editor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dungeonfog.com&#x2F;&quot;&gt;DUNGEONFOG&lt;&#x2F;a&gt; are developing editor tools for drawing and visualizing
RPG tabletop maps.
They&#x27;re looking for a wgpu-rs developer for 2D graphics drawing.&lt;&#x2F;p&gt;
&lt;p&gt;You can find all of the details on their &lt;a href=&quot;https:&#x2F;&#x2F;dungeonfog.com&#x2F;about&#x2F;job-offers&#x2F;&quot;&gt;job offer page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;crate-before-attack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;Crate Before Attack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crate-before-attack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;&lt;img src=&quot;cratebeforeattack.png&quot; alt=&quot;screenshot: a frog swinging on their tongue&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&quot;&gt;&amp;quot;Crate Before Attack&amp;quot;&lt;&#x2F;a&gt; by @koalefant
is a multiplayer game where frogs combat their friends
while navigating a landscape with their sticky tongue.
It is a hybrid of a realtime and turn-based game.&lt;&#x2F;p&gt;
&lt;p&gt;The game &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;play&quot;&gt;can be played right in the browser (PC-only)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It is built for Web using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&quot;&gt;tokio&lt;&#x2F;a&gt; crates and features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Swift roping (aka grappling hook);&lt;&#x2F;li&gt;
&lt;li&gt;Diverse weapons;&lt;&#x2F;li&gt;
&lt;li&gt;Local and online multiplayer;&lt;&#x2F;li&gt;
&lt;li&gt;Procedural animation;&lt;&#x2F;li&gt;
&lt;li&gt;Fun physics.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check the &lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&quot;&gt;devlog&lt;&#x2F;a&gt;. It has three posts atm:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20200420-inflation&quot;&gt;&amp;quot;Inflation&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20200428-hare-animation&quot;&gt;&amp;quot;Hare Animation&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cratebeforeattack.com&#x2F;posts&#x2F;20200502-rust&quot;&gt;&amp;quot;Rust Experiment&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, there&#x27;re a lot of dev videos on the game&#x27;s
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UC_xMilPTLuuE5iLs1Ml9zow&quot;&gt;YouTube channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-b-street&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet#ab-street&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet#ab-street&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a game by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;&quot;&gt;dabreegster&lt;&#x2F;a&gt; exploring how small changes to
road space and traffic signals affect the movement of drivers, cyclists,
transit users, and pedestrians. The game models Seattle as accurately as
possible using &lt;a href=&quot;https:&#x2F;&#x2F;openstreetmap.org&quot;&gt;OpenStreetMap&lt;&#x2F;a&gt; and other public datasets, lets the player adjust
existing infrastructure, and then does a detailed comparison to see who the
changes help and hurt.&lt;&#x2F;p&gt;
&lt;p&gt;First of all, &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fejx5a&#x2F;demo_of_a_new_gui_2d_drawing_crate&#x2F;&quot;&gt;a standalone 2D GUI crate&lt;&#x2F;a&gt; was published
extracted from A&#x2F;BStreet&#x27;s GUI code.
It features fully vectorized text using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;lyon&lt;&#x2F;a&gt; and supports lots of
widgets such as &amp;quot;buttons (with keybindings), checkboxes, sliders, pop-up menus,
text entry, and some data viz things&amp;quot;.
Thanks to its simplicity (everything is a colored polygon), this crate runs on
many different architectures and even on the web via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&#x2F;glow&quot;&gt;glow&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s an example of what it can do:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;abstreetgui.png&quot; alt=&quot;abstreet gui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Dabreegster also uploaded a recorded version of their
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;Citybound&#x2F;comments&#x2F;g1k6du&#x2F;rust_meetup_talk_on_ab_street&#x2F;&quot;&gt;rust meetup talk&lt;&#x2F;a&gt; about the inner working of abstreet.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In case anybody here is interested in more city simulation in Rust,
the talk is about half project overview and half deep dive into code.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;ABstreet had some great contributor work coming in, notably from omalaspinas who
implemented an optional SEIR pandemic model into the game.&lt;&#x2F;p&gt;
&lt;p&gt;And for anyone interested in more frequent updates, the
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;abstreet&quot;&gt;abstreet subreddit&lt;&#x2F;a&gt; has had weekly update posts since
September 2019.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fejx5a&#x2F;demo_of_a_new_gui_2d_drawing_crate&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;citybound&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aeplay.org&#x2F;citybound&quot;&gt;Citybound&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#citybound&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;citybound.jpeg&quot; alt=&quot;citybound web ui screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Citybound is a city building game that uses microscopic models to vividly
simulate the organism of a city arising from the interactions of millions
of individuals.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;It is developed by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aeplay&quot;&gt;aeplay&lt;&#x2F;a&gt; and uses a homemade actor system for
everything called &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;kay&quot;&gt;kay&lt;&#x2F;a&gt;, you can see its power on
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;qr9GTTST_Dk&quot;&gt;this impressive tech demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In April, aeplay made two livestreams about conceptualizing pedestrians and
pandemic models using feedback from the chat.
You can watch the replay for the two livestreams on youtube: &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;fQMxVV57wzg&quot;&gt;here&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;8DevxAYw47A&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;scale.png&quot; alt=&quot;Pedestrians&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt; is a granular society simulation by &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;aboutme.html&quot;&gt;Uriopass&lt;&#x2F;a&gt;, with the objective
of having fully autonomous agents interacting with their world in real time.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;scale_3.html&quot;&gt;devlog&lt;&#x2F;a&gt; was published, explaining how pedestrians were added
to the simulation, and that a new renderer based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt; is in
development.
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;QXF1-1BNddM&quot;&gt;A short video&lt;&#x2F;a&gt; was also posted together with the post
for a more concise update.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;g7s9bk&#x2F;scale_devblog_3&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;for-the-quest&quot;&gt;For The Quest&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#for-the-quest&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;forthequest.jpg&quot; alt=&quot;For The Quest screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For The Quest is the working title for a game in early development by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt;. Written entirely in Rust and compiled to WebAssembly,
For The Quest is destined to become a MMORPG set in a post-apocalyptic
Earth where your goal is to band together into like-minded factions to
not only survive in this new world, but to unearth the cause of humanity&#x27;s
downfall.&lt;&#x2F;p&gt;
&lt;p&gt;For The Quest is currently undergoing engine development with a focus on
running smoothly in modern browsers using WebGL 2.0 before moving onto
native desktop ports.&lt;&#x2F;p&gt;
&lt;p&gt;New developments in April:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Finished re-working and optimizing the rendering pipeline to allow for
post-processing and other screen-space effects&lt;&#x2F;li&gt;
&lt;li&gt;Planar reflections implemented, and work with an upgraded form of the
specular maps to determine how reflective a surface is&lt;&#x2F;li&gt;
&lt;li&gt;Add a flagging system so surfaces can identify their type to the
shading system so effects can be selectively applied per pixel&lt;&#x2F;li&gt;
&lt;li&gt;Used the new flagging system to identify water surfaces and make them
&amp;quot;ripple&amp;quot; their reflections&lt;&#x2F;li&gt;
&lt;li&gt;Updated the mapping&#x2F;tile system to support &amp;quot;sunken&amp;quot; floor tiles, which
allows for ponds, lakes, cliff edges, etc.&lt;&#x2F;li&gt;
&lt;li&gt;Started work on plans for a streaming asset manager&lt;&#x2F;li&gt;
&lt;li&gt;New desert&#x2F;sand tileset models &amp;amp; textures (Thanks &lt;a href=&quot;https:&#x2F;&#x2F;www.artstation.com&#x2F;mpaulson&quot;&gt;Mishayla&lt;&#x2F;a&gt;!)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt; on Twitter for updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;akigi-shadows.jpeg&quot; alt=&quot;shadows demo&quot; &#x2F;&gt;
&lt;em&gt;new shadows&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world where humans
aren&#x27;t the only intelligent animals.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of this months&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;061-2020-04-05.html#npc-decision-making&quot;&gt;Better NPC decision making&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;062-2020-04-12.html&quot;&gt;Health bars, water&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;063-2020-04-19.html&quot;&gt;shadows&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;064-2020-04-26.html#displaying-damage-received&quot;&gt;Displaying damage received&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;061-2020-04-05.html&quot;&gt;#061&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;062-2020-04-12.html&quot;&gt;#062&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;063-2020-04-19.html&quot;&gt;#063&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;april-2020&#x2F;064-2020-04-26.html&quot;&gt;#064&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blobs-n-bullets&quot;&gt;Blobs&#x27;n&#x27;Bullets&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#blobs-n-bullets&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;blobs-n-bullets.gif&quot; alt=&quot;shmup&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rhmoller&#x2F;status&#x2F;1254179448586481669&quot;&gt;@rhmoller started working&lt;&#x2F;a&gt; on
a retro twin-stick shooter &amp;quot;Blobs&#x27;n&#x27;Bullets&amp;quot;.
It uses WASM, web-sys, canvas and the gamepad-api
and features a local 2-player coop.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;colony-genesis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.itch.io&#x2F;colony&quot;&gt;Colony Genesis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#colony-genesis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;colony.png&quot; alt=&quot;gameplay screenshot with ASCII art graphics&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.rs&quot;&gt;Native Systems&lt;&#x2F;a&gt; is working on &amp;quot;Colony Genesis&amp;quot; - an ant colony sandbox game
with ASCII graphics.
This month v0.1.3 and v0.1.4 versions were released. Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Add controls to highlight all ants by behavior (SHIFT+select)&lt;&#x2F;li&gt;
&lt;li&gt;Fix frame loop timer to prevent fast forwards&lt;&#x2F;li&gt;
&lt;li&gt;Adds temperature diffusion and adjusts rates
It should now be easier to maintain high enough temperatures over night
and in lower soil layers for eggs to develop normally.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ssshmup&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;ssshmup&quot;&gt;ssshmup&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ssshmup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ssshmup.gif&quot; alt=&quot;shmup gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&#x2F;ssshmup&quot;&gt;ssshmup&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mkhan45&quot;&gt;@mkhan45&lt;&#x2F;a&gt;
is a small small shoot &#x27;em up made with &lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&quot;&gt;ggez&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;g6uwah&#x2F;super_small_shootem_up&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;&lt;img src=&quot;robo.gif&quot; alt=&quot;stepping through the code&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; puzzle game -
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.25, 1.26, and 1.27 versions were released&lt;&#x2F;a&gt;:
automatically follow execution when paused,
bugfixes, dependency updates, and performance optimizations.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, Alex published a new crate supporting the rasterization
of .otf lines and quad&#x2F;cubic Bézier curves: &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ab_glyph_rasterizer&quot;&gt;ab_glyph_rasterizer&lt;&#x2F;a&gt;.
It&#x27;s around 2-5x faster than the current rusttype .ttf rasterizer.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;Amethyst Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;Conquest&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&quot;&gt;@takeryo_eeic&lt;&#x2F;a&gt; is a hexagonal tactic game.
This month &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1246189179467214850&quot;&gt;its model were updated&lt;&#x2F;a&gt;
and the UX was reworked to feel like moving chess pieces.
Check out a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1249850460678193152&quot;&gt;new gameplay video&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1249850460678193152&quot;&gt;&lt;img src=&quot;conquest.gif&quot; alt=&quot;new models&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;grumpy_visitors&quot;&gt;Grumpy Visitors&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&quot;&gt;@mvlabat&lt;&#x2F;a&gt; is a top-down
2D co-op action&#x2F;arcade game highly inspired by Evil Invasion.
Two weeks ago the game received a few updates of UI and multiplayer.&lt;&#x2F;p&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&#x2F;status&#x2F;1257362218078867460&quot;&gt;a short video&lt;&#x2F;a&gt; was posted to twitter,
showing the latest state of Grumpy Visitors:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&#x2F;status&#x2F;1257362218078867460&quot;&gt;&lt;img src=&quot;grumpy_visitors-video.gif&quot; alt=&quot;grumpy_visitors-video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dpc&#x2F;boulder-dash.rs&quot;&gt;Boulder Dash&lt;&#x2F;a&gt; remake by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dpc&quot;&gt;dpc&lt;&#x2F;a&gt; - a new remake of an old classic.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;boulder_dash.png&quot; alt=&quot;pixelart boulders&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyThulliez&quot;&gt;Jérémy Thulliez&lt;&#x2F;a&gt; shared their experience making 3 little games:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyThulliez&#x2F;status&#x2F;1255042737579134977&quot;&gt;gameboy proof-of-concept&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grzi&#x2F;rust-gameboy-game-poc&quot;&gt;repository&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JeremyThulliez&#x2F;status&#x2F;1251903725276454913&quot;&gt;Tetris&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grzi&#x2F;rust-tetris&quot;&gt;repository&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Pong (&lt;a href=&quot;https:&#x2F;&#x2F;www.wootlab.io&#x2F;blog&#x2F;pong-in-rust-with-amethyst&quot;&gt;blog post&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grzi&#x2F;rust-pong&quot;&gt;repository&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azriel91&#x2F;autexousious&quot;&gt;Will&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_azriel&quot;&gt;Azriel&lt;&#x2F;a&gt; is a moddable 2.5D action &#x2F; adventure game.
&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2020&#x2F;04&#x2F;24&#x2F;browsers-assemble&#x2F;&quot;&gt;This month&#x27;s update&lt;&#x2F;a&gt; includes preliminary support for WASM,
with most effort directed in the underlying Amethyst library.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Hc8EtqrlJsE&quot;&gt;video&lt;&#x2F;a&gt; to see online play between native and web clients.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Hc8EtqrlJsE&quot;&gt;&lt;img src=&quot;will_wasm_network.png&quot; alt=&quot;Networking demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&#x2F;realm.one&quot;&gt;Realm.One&lt;&#x2F;a&gt; is an open-source MMO game
written using the Amethyst game engine.
Recently there has been some simple AI
integrated into the game. This will cause
monsters to chase and attack you!&lt;&#x2F;p&gt;
&lt;p&gt;Next up will be items and experience!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;8hvnjKf4M5M&quot;&gt;&amp;quot;GameDev in Rust (Ep.2): Monsters and AI! (Part B)&amp;quot;&lt;&#x2F;a&gt; -
ECS-based design with Amethyst, networking and tiled 2d based design.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;8hvnjKf4M5M&quot;&gt;&lt;img src=&quot;realm-one.jpeg&quot; alt=&quot;screenshot from the video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ludum-dare-46-games&quot;&gt;Ludum Dare 46 Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ludum-dare-46-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;&quot;&gt;Ludum Dare 46&lt;&#x2F;a&gt; was this month!
The theme was &amp;quot;Keep it alive&amp;quot;, and there was a bunch of cool games made in Rust!
Here&#x27;s a roundup of some of them:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;46&#x2F;the-hum&quot;&gt;&amp;quot;The Hum&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;hoichael&quot;&gt;Hoichael&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;williwiderstand&quot;&gt;williwiderstand&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;noahro&quot;&gt;NoahRo&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Noah2610&#x2F;LD46-TheHum&quot;&gt;source code&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;noahro.itch.io&#x2F;the-hum&quot;&gt;itch.io&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Feed the bonfire. Keep it alive.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;the-hum.jpg&quot; alt=&quot;the hum screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;46&#x2F;the-last-ship&quot;&gt;&amp;quot;The Last Ship&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;fedorl&quot;&gt;FedorL&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;ld46&quot;&gt;source code&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;ld46&quot;&gt;itch.io&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&#x2F;status&#x2F;1251900504369778690&quot;&gt;Twitter thread&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Carry humanity from dying planet into the bright future!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;the-last-ship.jpg&quot; alt=&quot;the last ship screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;46&#x2F;frog-rations&quot;&gt;&amp;quot;Frog Rations&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;healthire&quot;&gt;healthire&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Healthire&#x2F;ld46&quot;&gt;source code&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;healthire_&#x2F;status&#x2F;1251412661016895488&quot;&gt;Twitter thread&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Keep the frog alive by eating flies, but beware of the snake!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;frog-rations.jpg&quot; alt=&quot;frog rations screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;46&#x2F;woods&quot;&gt;&amp;quot;WOODS&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;feilkin&quot;&gt;Feilkin&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Feilkin&#x2F;mela&#x2F;tree&#x2F;master&#x2F;examples&#x2F;ld46&quot;&gt;source code&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;feilkin.itch.io&#x2F;woods&quot;&gt;itch.io&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Keep the flame alive in the darkness!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;woods.jpg&quot; alt=&quot;woods screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;46&#x2F;wonder&quot;&gt;&amp;quot;Wonder&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;ian-kettlewell&quot;&gt;Ian Kettlewell&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kettle11&#x2F;LD46&quot;&gt;source code&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;kettlecorn.itch.io&#x2F;wonder&quot;&gt;itch.io&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Keep alive a sense of wonder.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;wonder.jpg&quot; alt=&quot;wonder screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;46&#x2F;lighthouse-keeper&quot;&gt;&amp;quot;Lighthouse Keeper&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;dooskington&quot;&gt;dooskington&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dooskington&#x2F;ld46&quot;&gt;source code&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.itch.io&#x2F;ld46-lighthouse-keeper&quot;&gt;itch.io&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alone on a rock in the sea, your job is an important one. Keep the lighthouse
safe and operational, and don’t lose your mind. The goal is to survive for 30
days. Unfinished.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;lighthouse-keeper.jpg&quot; alt=&quot;lighthouse keeper screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;46&#x2F;fermi-paradox&quot;&gt;&amp;quot;Fermi Paradox&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;users&#x2F;tversteeg&quot;&gt;tversteeg&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tversteeg&#x2F;ld46&quot;&gt;source code&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;How come we don’t see any life from other planets? What does an intergalactic
society need to do to survive? Fermi Paradox is a combination of the arcade
games of yesteryear with some modern twists.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;fermi-paradox.jpg&quot; alt=&quot;fermi paradox screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren1.png&quot; alt=&quot;Buildings&quot; &#x2F;&gt;
&lt;em&gt;Early procedural building generation&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG
inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;Lots of systems have been finished up in April to prepare for the launch of 0.6.
Many improvements have been made to the combat systems. Basic world and
civilization simulations have been implemented. Lots of new soundtracks have
been added. The UI is being reworked. Experimental work is being done with
migrating to wgpu, and the level of detail system is a lot closer to being
merged. Villagers have been getting a lot of love as well, making the world feel
more alive.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the April changelog:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;- Complete rewrite of the combat system into a state machine
&lt;&#x2F;span&gt;&lt;span&gt;- Abilities like Dash and Triplestrike
&lt;&#x2F;span&gt;&lt;span&gt;- Fireball explosions
&lt;&#x2F;span&gt;&lt;span&gt;- Many new armors and weapons to find in chests
&lt;&#x2F;span&gt;&lt;span&gt;- Fleshed out &amp;quot;attack&amp;quot; animation into alpha, beta and spin type attacks
&lt;&#x2F;span&gt;&lt;span&gt;- Fleshed out range attack into charging and shooting anims for staff&#x2F;bow
&lt;&#x2F;span&gt;&lt;span&gt;- Added a silhouette for players when they are occluded
&lt;&#x2F;span&gt;&lt;span&gt;- Added transparency to the player when zooming in
&lt;&#x2F;span&gt;&lt;span&gt;- Added dragging and right-click to use functionality to inventory,
&lt;&#x2F;span&gt;&lt;span&gt;  armor &amp;amp; hotbar slots
&lt;&#x2F;span&gt;&lt;span&gt;- Added basic world and civilisation simulation
&lt;&#x2F;span&gt;&lt;span&gt;- Added fields, crops and scarecrows, paths, bridges, procedural house generation
&lt;&#x2F;span&gt;&lt;span&gt;- Added lampposts, NPCs that spawn in towns, and simple dungeons
&lt;&#x2F;span&gt;&lt;span&gt;- Added sub-voxel noise effect
&lt;&#x2F;span&gt;&lt;span&gt;- Added waypoints next to dungeons
&lt;&#x2F;span&gt;&lt;span&gt;- Added non-uniform block heights
&lt;&#x2F;span&gt;&lt;span&gt;- Added a Level of Detail (LoD) system for terrain sprites and entities
&lt;&#x2F;span&gt;&lt;span&gt;- Villagers tools and clothing, cultists clothing
&lt;&#x2F;span&gt;&lt;span&gt;- You can start the game by pressing &amp;quot;enter&amp;quot; from the character selection menu
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;veloren2.png&quot; alt=&quot;Hanging out&quot; &#x2F;&gt;
&lt;em&gt;Early procedural building generation&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics from April:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-62#capucho&quot;&gt;Player Transparency&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-64#towns-and-dungeons&quot;&gt;Towns and Dungeons&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-64#wgpu-with-capucho&quot;&gt;wgpu&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-65#tarpaulin-and-toolchains-by-angelonfira&quot;&gt;Tarpaulin and Toolchains&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-65#lod-and-lighting-progress-from-sharp&quot;&gt;LoD Progress&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-65#sprite-lod-from-zesterer&quot;&gt;Sprite LoD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The final touches of 0.6 are wrapping up. The team will meet once 0.6 is
released to disucss what 0.7 will look like. See you next month!&lt;&#x2F;p&gt;
&lt;p&gt;April&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-62&quot;&gt;#62&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-63&quot;&gt;#63&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-64&quot;&gt;#64&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-65&quot;&gt;#65&lt;&#x2F;a&gt;,&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-sokoban-tutorial&quot;&gt;Rust Sokoban Tutorial&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-sokoban-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sokoban_level.gif&quot; alt=&quot;sokoban level&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rust Sokoban tutorial is an online book aimed at Rust gamedev beginners
which walks through making a simple Sokoban game using ECS, ggez and specs.
It tries to teach the basics of architecting in ECS and basic Rust concepts
through a hands-on approach.
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; is currently looking for a few people
to beta test the tutorial before it goes live,
if you&#x27;ve got a spare couple of hours and you&#x27;d like to contribute,
send her a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;messages&#x2F;compose?recipient_id=118804845&quot;&gt;DM&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;multiple-ecs-in-my-personal-game-project&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dasifefe.com&#x2F;post-2020-04-05-01.html&quot;&gt;Multiple ECS in My Personal Game Project&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#multiple-ecs-in-my-personal-game-project&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dasifefe.com&#x2F;post-2020-04-05-01.html&quot;&gt;@dasifefe shared their thoughs&lt;&#x2F;a&gt;
about using multiple ECSes in a project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;measuring-build-timings-with-mathbench&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bitshifter.github.io&#x2F;2020&#x2F;04&#x2F;12&#x2F;mathbench-build-timings&quot;&gt;Measuring Build Timings with mathbench&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#measuring-build-timings-with-mathbench&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bitshifternz&quot;&gt;@bitshifternz&lt;&#x2F;a&gt; (author of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;glam-rs&quot;&gt;glam&lt;&#x2F;a&gt;) has written &lt;a href=&quot;https:&#x2F;&#x2F;bitshifter.github.io&#x2F;2020&#x2F;04&#x2F;12&#x2F;mathbench-build-timings&quot;&gt;a blog post&lt;&#x2F;a&gt;
about comparing build times of some popular Rust gamedev math crates
(including glam, cgmath, nalgebra, euclid, vek, pathfinder_geometry)
using a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bitshifter&#x2F;mathbench-rs&quot;&gt;mathbench-rs&lt;&#x2F;a&gt; unit tests suit.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tutorial-on-3d-graphics-rust-vulkan-and-ash&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hoj-senna.github.io&#x2F;ashen-aetna&quot;&gt;Tutorial on 3D Graphics, Rust, Vulkan, and ash&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tutorial-on-3d-graphics-rust-vulkan-and-ash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;@hoj-senna started writing a new tutorial about &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;ash&quot;&gt;ash&lt;&#x2F;a&gt; and Vulkan in general:
&lt;a href=&quot;https:&#x2F;&#x2F;hoj-senna.github.io&#x2F;ashen-aetna&quot;&gt;&amp;quot;Ashen Aetna&amp;quot;&lt;&#x2F;a&gt;.
The current version has 20 chapters and covers basics of general 3d graphics
and setting all the stuff you need to draw your first triangle with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;ash&quot;&gt;ash&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;g7pypb&#x2F;3d_graphics_rust_vulkan_ash&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;implementing-a-linear-quadtree-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;snorrwe.onrender.com&#x2F;posts&#x2F;morton-table&quot;&gt;Implementing a Linear Quadtree in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#implementing-a-linear-quadtree-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;quadtree.jpeg&quot; alt=&quot;demo of how the Z-order curve fills the space&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;snorrwe.onrender.com&#x2F;&quot;&gt;@snorrwe&lt;&#x2F;a&gt; has written &lt;a href=&quot;https:&#x2F;&#x2F;snorrwe.onrender.com&#x2F;posts&#x2F;morton-table&quot;&gt;a blog post&lt;&#x2F;a&gt;
about exploring an implementation of a linear quadtree
and comparing it with a naive implementation of spacial data querying.
All code mentioned in the post &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;snorrwe&#x2F;morton-table&quot;&gt;is available on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;g69hgg&#x2F;ive_published_my_first_blog_post_implementing&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;simple-2d-camera-system-for-rust-with-ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;sobertkaos&#x2F;simple-2dcamera-system-for-rust-with-ggez-2o2h&quot;&gt;Simple 2D Camera System for Rust with GGEZ&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#simple-2d-camera-system-for-rust-with-ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;sobertkaos&#x2F;simple-2dcamera-system-for-rust-with-ggez-2o2h&quot;&gt;@sylvain has written a tutorial&lt;&#x2F;a&gt; about implementing
a simple 2D camera on top of &lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&quot;&gt;GGEZ&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vis-arcana-our-backend-technology&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;visarcana.com&#x2F;2020&#x2F;04&#x2F;24&#x2F;our-backend-technology&quot;&gt;Vis Arcana: Our Backend – Technology&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vis-arcana-our-backend-technology&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;visarcana.jpeg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Authors of &lt;a href=&quot;https:&#x2F;&#x2F;visarcana.com&#x2F;2020&#x2F;05&#x2F;04&#x2F;what-is-vis-arcana&#x2F;&quot;&gt;Vis Arcana&lt;&#x2F;a&gt; shared a &lt;a href=&quot;https:&#x2F;&#x2F;visarcana.com&#x2F;2020&#x2F;04&#x2F;24&#x2F;our-backend-technology&quot;&gt;blog post&lt;&#x2F;a&gt;
explaining why they&#x27;ve chosen Rust for their project&#x27;s backend.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;... Rust advertises as a very productive language in which most errors
(apart from logical ones) are caught at the compilation stage.
After more than a year of working with it, I must admit that
it’s absolutely correct – new game modules are added extremely quickly,
and the number of errors has dropped to practically zero. ...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;symmetric-matrices-triangle-numbers&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&#x2F;2020&#x2F;03&#x2F;30&#x2F;symmetric-matrices&quot;&gt;Symmetric Matrices &amp;amp; Triangle Numbers&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#symmetric-matrices-triangle-numbers&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rhea-player-orb.jpeg&quot; alt=&quot;an example of a multi-layered game level&quot; &#x2F;&gt;
&lt;em&gt;The pink orb should not collide with the player,
but it should collide with the ground.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&quot;&gt;Anthropic Studios&lt;&#x2F;a&gt; has &lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&#x2F;2020&#x2F;03&#x2F;30&#x2F;symmetric-matrices&quot;&gt;shared a post&lt;&#x2F;a&gt;
about implementing a layer system to &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;&amp;quot;Way of Rhea&amp;quot;&#x27;s&lt;&#x2F;a&gt; physics engine
using &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Symmetric_matrix&quot;&gt;symmetric matrices&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Triangular_number&quot;&gt;triangle numbers&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;turbulence-and-goggles&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyren&#x2F;turbulence&quot;&gt;turbulence&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyren&#x2F;goggles&quot;&gt;goggles&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#turbulence-and-goggles&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;This month @kyren released two libraries: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyren&#x2F;turbulence&quot;&gt;turbulence&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyren&#x2F;goggles&quot;&gt;goggles&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyren&#x2F;turbulence&quot;&gt;turbulence&lt;&#x2F;a&gt; is the more interesting of the two, it is another attempt
at a rust-based networking library for games.
The main thing I think that sets it apart is that it is async
while being totally reactor, executor, and platform agnostic.
It is a library that just allows you to take a stream of unreliable,
unordered packets and turn them into N independent unreliable,
unordered or reliable, ordered streams of messages.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyren&#x2F;goggles&quot;&gt;goggles&lt;&#x2F;a&gt; is probably not as interesting, but it is an aggressively
stripped down fork of specs &#x2F; shred with more of the insides exposed.
My favorite part about specs is how easy it is to use just the parts of it
that you actually need, but I wanted to go further.
For me, the functionality of specs that I needed was really just
the entity allocator, a few storage types, MaskedStorage,
and the Join system.
goggles is just that: the bare minimum pieces that you need
to assemble your own ECS system, as independent as I could make them.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fzuv71&#x2F;two_new_gamedev_libraries_turbulence_and_goggles&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;msfx-0-1-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;usfx&quot;&gt;μsfx - 0.1.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#msfx-0-1-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;μsfx is a small library built for generating sound effects in code during
runtime. μsfx can be integrated with the &lt;code&gt;cpal&lt;&#x2F;code&gt; and &lt;code&gt;music&lt;&#x2F;code&gt; crates as well as
&lt;code&gt;SDL2&lt;&#x2F;code&gt; crate bindings.&lt;&#x2F;p&gt;
&lt;p&gt;Samples are available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tversteeg&#x2F;usfx&quot;&gt;μsfx&#x27;s github readme&lt;&#x2F;a&gt; and further
documentation is avialable on the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;usfx&#x2F;0.1.3&#x2F;usfx&#x2F;&quot;&gt;docs.rs page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This latest version (0.1.3) provides fixes for saw, triangle,
and square waves.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;iced-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;253&quot;&gt;iced - v0.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iced-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt; is experimental, cross-platform GUI crate focused
on simplicity and type safety.
Iced can be used natively, in a web browser, or can use wgpu,&lt;&#x2F;p&gt;
&lt;p&gt;The new release includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Styling based on trait implementations.&lt;&#x2F;li&gt;
&lt;li&gt;Event subscriptions that take place asynchronously by using streams.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Canvas&lt;&#x2F;code&gt; widgets, for drawing 2D graphics&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;PaneGrid&lt;&#x2F;code&gt; widgets, which can dynamically organize layout by splitting
panes that can be resized.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Svg&lt;&#x2F;code&gt; widgets, which can render vector graphics.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;ProgressBar&lt;&#x2F;code&gt; widgets&lt;&#x2F;li&gt;
&lt;li&gt;Integration into exisiting &lt;code&gt;wgpu&lt;&#x2F;code&gt; projects.&lt;&#x2F;li&gt;
&lt;li&gt;Options for integrating futures executors into a project.&lt;&#x2F;li&gt;
&lt;li&gt;TextInput selection&lt;&#x2F;li&gt;
&lt;li&gt;Texture Atlas support for &lt;code&gt;iced-wgpu&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full docuementation for Iced is available on the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;iced&#x2F;0.1.1&#x2F;iced&#x2F;&quot;&gt;docs.rs page&lt;&#x2F;a&gt;
as well as examples and how to contribute are available on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;iced github repo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;assets-manager-v0-2-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;gadq3i&#x2F;asset_manager_022_hotreloading_and_directory&#x2F;&quot;&gt;assets_manager - v0.2.2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#assets-manager-v0-2-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;assets_manager&quot;&gt;assets_manager&lt;&#x2F;a&gt; is a crate that provides convenient loading,
caching, and reloading of external resources. The crate is pay-for-what-you-take,
provides a high level API, and is concurrent.&lt;&#x2F;p&gt;
&lt;p&gt;This newest version provides for hot-reloading, directory-loading (being able
to load from a single directory all at once, for extensible games), meta
loaders, and various other improvements.&lt;&#x2F;p&gt;
&lt;p&gt;Examples and documentation are available on &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;assets_manager&#x2F;0.2.2&#x2F;assets_manager&#x2F;&quot;&gt;assets_manager&#x27;s docs.rs&lt;&#x2F;a&gt;
and additional information about contributing are available on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&quot;&gt;github repository&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs-and-wgpu-news&quot;&gt;&lt;code&gt;gfx-rs&lt;&#x2F;code&gt; and &lt;code&gt;wgpu&lt;&#x2F;code&gt; News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-and-wgpu-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;hectic.png&quot; alt=&quot;hectic screenshot: graveyard and vampires&quot; &#x2F;&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;expenses&#x2F;hectic-rs&quot;&gt;hectic-rs&lt;&#x2F;a&gt; - Rust&#x2F;wgpu&#x2F;specs re-write of hectic by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;expenses&quot;&gt;@expenses&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;wgpu-0.5 release happened! See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#v05-06-04-2020&quot;&gt;changelog&lt;&#x2F;a&gt;.
It&#x27;s based on &lt;code&gt;gfx-hal-0.5&lt;&#x2F;code&gt; (which was covered in the &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-008&#x2F;#gfx-rs-and-wgpu-news&quot;&gt;March newsletter&lt;&#x2F;a&gt;),
uses in-house gfx-extras crates adopted from Rendy,
has many fixes and improvements, and totally changes the way passes are recorded.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;wgpu&lt;&#x2F;code&gt; project got restructured by only leaving &lt;code&gt;wgpu-core&lt;&#x2F;code&gt; and &lt;code&gt;wgpu-types&lt;&#x2F;code&gt;
in the main (&amp;quot;core logic&amp;quot;) repository.
&lt;code&gt;wgpu-native&lt;&#x2F;code&gt; is moved out into a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-native&quot;&gt;separate one&lt;&#x2F;a&gt;.
&lt;code&gt;wgpu-remote&lt;&#x2F;code&gt; got fully moved into mozilla-central as &amp;quot;gfx&#x2F;wgpu_bindings&amp;quot;
(this is &amp;quot;gfx&amp;quot; in a general sense, not gfx-rs in particular).&lt;&#x2F;p&gt;
&lt;p&gt;The Web target  (aka &amp;quot;wasm32-unknown-unknown&amp;quot;) is now officially supported
by &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt;! 🎉
@grovesNL wrote the announcement to &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2020&#x2F;04&#x2F;21&#x2F;wgpu-web.html&quot;&gt;gfx-rs blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;At the same time, @kvark was implementing support for WebGPU in Firefox
(Nightly only) with help of &lt;code&gt;wgpu&lt;&#x2F;code&gt;.
They published results of this milestone on &lt;a href=&quot;https:&#x2F;&#x2F;hacks.mozilla.org&#x2F;2020&#x2F;04&#x2F;experimental-webgpu-in-firefox&quot;&gt;Mozilla Hacks&lt;&#x2F;a&gt;.
The combined efforts allowed all the &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt; examples to be run
in Firefox Nightly on all platforms
(yes, even on Android, terms and conditions apply...).&lt;&#x2F;p&gt;
&lt;p&gt;Given the wide spectrum of uses for &lt;code&gt;wgpu&lt;&#x2F;code&gt; (&amp;quot;core&amp;quot;), it became most important
to be able to debug and reproduce visual issues, be it either the user&#x27;s fault,
or wgpu implementations&#x27;.
To aid these scenarios, a new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;pull&#x2F;619&quot;&gt;API tracing infrastructure&lt;&#x2F;a&gt;
was built into the core.
It&#x27;s now possible to replay user&#x27;s &lt;code&gt;wgpu&lt;&#x2F;code&gt; workloads in a separate player
on an entirely different platform.&lt;&#x2F;p&gt;
&lt;p&gt;In gfx-rs land, @mistodon created a nice &lt;a href=&quot;https:&#x2F;&#x2F;www.falseidolfactory.com&#x2F;projects&#x2F;learning-gfx-hal&quot;&gt;series of tutorials&lt;&#x2F;a&gt;
for the gfx-hal API.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; - creator of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; game engine - made
further progress with the Ignite game editor, a hub application for game making
tools for Indie game developers.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Code editor and Media player:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;ignite-code-media.gif&quot; alt=&quot;Ignite Code editor and Media player&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Play Mode window to play and test your game directly in the editor:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;ignite-play-mode.jpeg&quot; alt=&quot;Ignite Play Mode window&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Additionaly new procedural macro was introduced into Oxygengine, this macro
allows to bake information about types that will tell Ignite how to edit data of
this types:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;ignite-proc-macro.png&quot; alt=&quot;Oxygengine Proc macro&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There was an additional work done within Oxygengine ecosystem, which is
&lt;a href=&quot;chrobry&quot;&gt;Chrobry&lt;&#x2F;a&gt; crate - data driven template engine which is used in Ignite
as part of tool that allows to create new projects from templates provided by
plugins imported into Ignite editor.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to be up to date with Oxygengine ecosystem progress, make sure to
follow project on GitHub and see &lt;a href=&quot;oxygengine-project&quot;&gt;Oxygengine Project board&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erupt&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;erupt&quot;&gt;erupt&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#erupt&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;erupt.png&quot; alt=&quot;erupt logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;erupt&quot;&gt;erupt&lt;&#x2F;a&gt; provides bindings to the Vulkan API.&lt;&#x2F;p&gt;
&lt;p&gt;Features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Full Vulkan API coverage&lt;&#x2F;li&gt;
&lt;li&gt;First-class support for all extensions&lt;&#x2F;li&gt;
&lt;li&gt;High quality auto-generated function wrappers&lt;&#x2F;li&gt;
&lt;li&gt;A diverse &lt;code&gt;utils&lt;&#x2F;code&gt; module&lt;&#x2F;li&gt;
&lt;li&gt;Complete auto-generation of everything except &lt;code&gt;utils&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Function loading&lt;&#x2F;li&gt;
&lt;li&gt;A high level &lt;code&gt;Builder&lt;&#x2F;code&gt; for every struct&lt;&#x2F;li&gt;
&lt;li&gt;Type-safe pointer chain support&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Just like ash, erupt focuses on exposing good bindings to the &lt;em&gt;raw&lt;&#x2F;em&gt; Vulkan API
instead of providing manually written wrappers around it like Vulkano. On top
of this it tries to improve on some features where ash lacks, e.g.
auto-generation, extensions, documentation and utils.&lt;&#x2F;p&gt;
&lt;p&gt;For more information visit &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;erupt&quot;&gt;docs.rs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Friz64&#x2F;erupt&quot;&gt;GitLab&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bracket-lib&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bracket-lib&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;officerl.png&quot; alt=&quot;OfficeRL screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; is a toolkit for creating roguelikes in Rust.
Version 0.8.0 of the library was released this month,
adding many new features and fixes, such as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A new input system&lt;&#x2F;li&gt;
&lt;li&gt;RGBA support, with conversions to RGB and HSV&lt;&#x2F;li&gt;
&lt;li&gt;Support for bigger Unicode font maps&lt;&#x2F;li&gt;
&lt;li&gt;A &#x27;flexible&#x27; terminal with support for floating point positions&lt;&#x2F;li&gt;
&lt;li&gt;A &#x27;sprite&#x27; terminal that lets you render sprites wherever you want&lt;&#x2F;li&gt;
&lt;li&gt;A &#x27;virtual&#x27; terminal, sections of which can be rendered to other terminals&lt;&#x2F;li&gt;
&lt;li&gt;Runtime font switching&lt;&#x2F;li&gt;
&lt;li&gt;OpenGL hooks&lt;&#x2F;li&gt;
&lt;li&gt;Framerate limiting&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full release notes are available on &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fz5rb7&#x2F;bracketlib_work_week_of_4112020_080_has_shipped&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The author of the library has also published a &lt;a href=&quot;https:&#x2F;&#x2F;bracketproductions.com&#x2F;posts&#x2F;minituts&#x2F;spherical_noise&#x2F;&quot;&gt;new tutorial&lt;&#x2F;a&gt;,
showing how you can use simplex noise to generate worlds
[&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;herberticus&#x2F;status&#x2F;1252335121258237953&quot;&gt;twitter thread&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;In the wider community, DrMelon has published a alpha version of &lt;a href=&quot;https:&#x2F;&#x2F;drmelon.itch.io&#x2F;officerl&quot;&gt;OfficeRL&lt;&#x2F;a&gt;,
a roguelike built with bracket-lib that&#x27;s set
in an eternally sprawling office complex.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;miniquad_logo.png&quot; alt=&quot;miniquad logo&quot; &#x2F;&gt;
&lt;em&gt;&lt;code&gt;miniquad&lt;&#x2F;code&gt; project got a logo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; is a safe and cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;code&gt;miniquad&lt;&#x2F;code&gt;-based games got a recommended way to make sounds:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;quad-snd&quot;&gt;quad-snd&lt;&#x2F;a&gt;.
Here&#x27;s a &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;mixer.html&quot;&gt;WASM demo&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;quad-snd&#x2F;blob&#x2F;master&#x2F;examples&#x2F;mixer.rs&quot;&gt;source&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&quot;&gt;good-web-game&lt;&#x2F;a&gt; now uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;quad-snd&quot;&gt;quad-snd&lt;&#x2F;a&gt; and can run ggez&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&#x2F;blob&#x2F;audio&#x2F;examples&#x2F;sounds.rs&quot;&gt;&amp;quot;sounds&amp;quot;&lt;&#x2F;a&gt;
example: &lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;sounds.html&quot;&gt;WASM demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;macroquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&quot;&gt;macroquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#macroquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;macroquad&lt;&#x2F;code&gt; is minimalistic game framework on top of miniquad,
strongly inspired by &lt;a href=&quot;https:&#x2F;&#x2F;www.raylib.com&quot;&gt;raylib&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;code&gt;macroquad&lt;&#x2F;code&gt;&#x27;s rendering system got 2D custom cameras support:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;camera.rs&quot;&gt;example source&lt;&#x2F;a&gt;.
Also, &lt;code&gt;macroquad&lt;&#x2F;code&gt;&#x27;s UI system now support TTF fonts:
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;ui.html&quot;&gt;online demo&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;master&#x2F;examples&#x2F;ui.rs&quot;&gt;source&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework, inspired by XNA and &lt;a href=&quot;https:&#x2F;&#x2F;www.raylib.com&quot;&gt;Raylib&lt;&#x2F;a&gt;.
After a quiet few months, versions &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1246407935980339200&quot;&gt;0.3.3&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1249410227935510536&quot;&gt;0.3.4&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1254076418365030400&quot;&gt;0.3.5&lt;&#x2F;a&gt; were all released over the course of April.&lt;&#x2F;p&gt;
&lt;p&gt;Highlights of this month&#x27;s updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New integrations with the OS, such as file dropping and clipboard manipulation&lt;&#x2F;li&gt;
&lt;li&gt;More utilities for working with mouse and keyboard input&lt;&#x2F;li&gt;
&lt;li&gt;Enhancements to the animation API&lt;&#x2F;li&gt;
&lt;li&gt;Various under-the-hood improvements and optimizations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tetra.seventeencups.net&#x2F;&quot;&gt;Tetra&#x27;s website&lt;&#x2F;a&gt; has also had an overhaul,
and is &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1255901557322928128&quot;&gt;looking for contributions to the showcase section&lt;&#x2F;a&gt;.
If you&#x27;re working on a project with Tetra, submit an issue or a PR
to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra-www&quot;&gt;website repo&lt;&#x2F;a&gt; to get it added!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dathos&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BrianMWest&#x2F;dathos-game-engine&quot;&gt;Dathos&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dathos&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;melody-madness.png&quot; alt=&quot;Melody Madness screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BrianMWest&#x2F;dathos-game-engine&quot;&gt;Dathos&lt;&#x2F;a&gt; is a simple, extendable 2D game engine built in Rust.
It exposes a Ruby API for writing game&#x2F;rendering logic,
and a Rust API that allows you to build native extensions for those scripts.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1255697868104531968&quot;&gt;@resinten&lt;&#x2F;a&gt;, the author of the engine, has also published
an example game called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BrianMWest&#x2F;melody-madness&quot;&gt;Melody Madness&lt;&#x2F;a&gt;.
Players submit commands via a Slack channel,
trying to write a melody one note at a time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shipyard-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; v0.4&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shipyard-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; is an ECS library built on top of sparse sets.&lt;&#x2F;p&gt;
&lt;p&gt;Main changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Systems are now functions&lt;&#x2F;li&gt;
&lt;li&gt;Workloads can return errors&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Iterator&lt;&#x2F;code&gt; and &lt;code&gt;IntoIterator&lt;&#x2F;code&gt; are supported&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;&lt;img src=&quot;amethyst-logo.png&quot; alt=&quot;Amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Early &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;wasm-effort&#x2F;1336&quot;&gt;WASM support&lt;&#x2F;a&gt; exists on the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;tree&#x2F;wasm&quot;&gt;&lt;code&gt;wasm&lt;&#x2F;code&gt; branch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic input, audio, and rendering support.&lt;&#x2F;li&gt;
&lt;li&gt;Online play support through &lt;code&gt;WebSocket&lt;&#x2F;code&gt;s.&lt;&#x2F;li&gt;
&lt;li&gt;Includes OpenGL support for native applications.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;amethyst_lyon&quot;&gt;&lt;code&gt;amethyst_lyon&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cuberoo_&quot;&gt;@cuberoo_&lt;&#x2F;a&gt; provides integration with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;&lt;code&gt;lyon&lt;&#x2F;code&gt; tessellation library&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This is used as a renderer plugin.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&quot;&gt;MachineHum&lt;&#x2F;a&gt; shared two videos on his game development ventures:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;YVmk82nxahM&quot;&gt;Compiling Amethyst&lt;&#x2F;a&gt; for the &lt;a href=&quot;https:&#x2F;&#x2F;www.clockworkpi.com&#x2F;&quot;&gt;GameShell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;oQZnF5dmIjY&quot;&gt;Making Pokemon Gold&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;This Month in Mun&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The Mun Team posted a &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;01&#x2F;memory-mapping&quot;&gt;technical blog&lt;&#x2F;a&gt; about how they
implemented hot reloading of structs.&lt;&#x2F;p&gt;
&lt;p&gt;Their &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;02&#x2F;this-month-april&quot;&gt;April updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;hot reloading of structs;&lt;&#x2F;li&gt;
&lt;li&gt;128-bit integer support;&lt;&#x2F;li&gt;
&lt;li&gt;improved literal support;&lt;&#x2F;li&gt;
&lt;li&gt;complete operator support for fundamental types;&lt;&#x2F;li&gt;
&lt;li&gt;improved documentation;&lt;&#x2F;li&gt;
&lt;li&gt;bugfixes and improved test coverage.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;sarekt&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brandonpollack23&#x2F;sarekt&quot;&gt;Sarekt&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sarekt&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sarekt.png&quot; alt=&quot;A scene rendered with Sarekt&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brandonpollack23&#x2F;sarekt&quot;&gt;Sarekt&lt;&#x2F;a&gt; is a Vulkan-based renderer by Brandon Pollack.&lt;&#x2F;p&gt;
&lt;p&gt;The library has &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brandonpollack23&#x2F;sarekt&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; corresponding
to the steps of vulkan-tutorial.com,
which may be helpful if you want to compare its API with raw Vulkan code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fxyjmi&#x2F;have_a_look_at_this_renderer_im_working_on&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-ecosystem&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; Ecosystem&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-ecosystem&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hagsteel.com&quot;&gt;@hagsteel&lt;&#x2F;a&gt; has written a &lt;a href=&quot;https:&#x2F;&#x2F;hagsteel.com&#x2F;posts&#x2F;godot-rust&#x2F;&quot;&gt;beginner-friendly tutorial&lt;&#x2F;a&gt;
on how to get up and running with Godot and Rust.
It&#x27;s written with Linux in mind, but should be transferrible
to other operating systems
[&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;g126es&#x2F;godot_rust_hagsteel_a_tutorial&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hagsteel.com&quot;&gt;@hagsteel&lt;&#x2F;a&gt; has also written a &lt;a href=&quot;https:&#x2F;&#x2F;hagsteel.com&#x2F;posts&#x2F;godot-rust-legion&#x2F;&quot;&gt;blog post&lt;&#x2F;a&gt; with their take
on how to use the Legion ECS library with Rust and Godot
[&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;g2avzc&#x2F;using_rust_godot_legion&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UC4jYW3lJKrEvOqCQ2ElryGw&quot;&gt;@schr3da&lt;&#x2F;a&gt; has published a series of video tutorials on how Rust can be used
effectively with Godot:
&lt;ul&gt;
&lt;li&gt;Basic Keyboard Controls -
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=qEHrRLLYc3Q&quot;&gt;Part 1&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=_Lxr6pAXBsQ&quot;&gt;Part 2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=aMaT6pyDocg&quot;&gt;Debugging GDNative Scripts with LLDB&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=McNgUqzmQkk&quot;&gt;File Watching with cargo-watch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Creating a Simple Platformer -
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=SIesTvp_ZD8&quot;&gt;Part 1&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=GKIUWbW4G9o&quot;&gt;Part 2&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=_n_5MDEquk4&quot;&gt;Part 3&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
## Popular Workgroup Issues in Github

skiping this section this time
--&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;Beta-test the &lt;a href=&quot;https:&#x2F;&#x2F;gamedev.rs&#x2F;news&#x2F;009&#x2F;#rust-sokoban-tutorial&quot;&gt;Rust Sokoban Tutorial&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;valora-example.jpeg&quot; alt=&quot;example&quot; &#x2F;&gt;
&lt;em&gt;&amp;quot;dead end&amp;quot; by turnage, 2019&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A few months ago a  generative art library &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turnage&#x2F;valora&quot;&gt;&amp;quot;valora&amp;quot;&lt;&#x2F;a&gt;
was released by &lt;a href=&quot;https:&#x2F;&#x2F;paytonturnage.com&quot;&gt;@turnage&lt;&#x2F;a&gt;.
Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Repeatable works at arbitrary resolutions without changing the work&lt;&#x2F;li&gt;
&lt;li&gt;Managed rngs for repeatable works and controlled rng trees&lt;&#x2F;li&gt;
&lt;li&gt;Support for using a different, custom GLSL shader for each vector path&lt;&#x2F;li&gt;
&lt;li&gt;GLSL live coding with &amp;quot;#include&amp;quot; support&lt;&#x2F;li&gt;
&lt;li&gt;An ergonomic derive-based GLSL uniforms interface&lt;&#x2F;li&gt;
&lt;li&gt;Animation support for brainstorming and cumulative pieces&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;paytonturnage.gitbook.io&#x2F;valora&quot;&gt;guide&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;paytonturnage.gitbook.io&#x2F;valora&#x2F;gallery&quot;&gt;gallery&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;echrqd&#x2F;valora&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;genyuf&#x2F;this_month_in_rust_gamedev_9_april_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1258080214070018048&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #8 - March 2020</title>
            <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/008/</link>
            <guid>https://gamedev.rs/news/008/</guid>
            <description>&lt;p&gt;Welcome to the eighth issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;spreading-the-word&quot;&gt;Spreading the Word&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spreading-the-word&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;If you&#x27;re working on a project that heavily relies on some engine&#x2F;framework,
consider informing its authors about your work:
as the community is growing it happens more and more that
frameworks&#x2F;engines authors just don&#x27;t know about users of their libs
(this note was requested by Icefox in relation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;blob&#x2F;master&#x2F;docs&#x2F;Projects.md&quot;&gt;GGEZ projects&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;dynamaze&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;boringcactus.itch.io&#x2F;dynamaze&quot;&gt;DynaMaze&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dynamaze&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dynamaze.png&quot; alt=&quot;DynaMaze promotional image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;boringcactus.itch.io&#x2F;dynamaze&quot;&gt;DynaMaze&lt;&#x2F;a&gt; is an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;boringcactus&#x2F;dynamaze&quot;&gt;open-source&lt;&#x2F;a&gt; multiplayer
puzzle&#x2F;strategy game written in Rust and compiled to WebAssembly, made by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;boringcactus&quot;&gt;@boringcactus&lt;&#x2F;a&gt;. Adjust the maze to build a path to your target and
keep the other players from getting to theirs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;slime99&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.itch.io&#x2F;slime99&quot;&gt;Slime99&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#slime99&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;slime99.png&quot; alt=&quot;Slime99&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.itch.io&#x2F;slime99&quot;&gt;Slime99&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&quot;&gt;@stevebob&lt;&#x2F;a&gt; is an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevebob&#x2F;slime99&quot;&gt;open-source&lt;&#x2F;a&gt;
roguelike made for the &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;7drl-challenge-2020&quot;&gt;7 Day Roguelike 2020&lt;&#x2F;a&gt; game jam.&lt;&#x2F;p&gt;
&lt;p&gt;A traditional roguelike where the outcomes of attacking and defending are
pre-determined and visible. Gameplay revolves around fighting slimes, adding to
your sequence of combat outcomes, and using abilities to modify the order in
which combat outcomes occur. It’s set in a neon sewer!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;will&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&quot;&gt;Will&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#will&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;will_main.png&quot; alt=&quot;Will main menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&quot;&gt;Will&lt;&#x2F;a&gt; is a 2.5D moddable action&#x2F;adventure game.&lt;&#x2F;p&gt;
&lt;p&gt;Highlights of &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2020&#x2F;03&#x2F;13&#x2F;join-me&#x2F;&quot;&gt;this month&#x27;s update&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Going &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;azriel91&#x2F;autexousious&quot;&gt;open-source&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Network play (early version)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;Tennis Academy: Dash&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tennis.gif&quot; alt=&quot;gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;Tennis Academy: Dash&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1243972292750819329&quot;&gt;v0.1.7&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;👟 blue players are back&lt;&#x2F;li&gt;
&lt;li&gt;🎆 improved particle effects&lt;&#x2F;li&gt;
&lt;li&gt;🖼️ a few art fixes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1238978081429299201&quot;&gt;@oliviff continues to work on their Rust gamedev tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;for-the-quest&quot;&gt;For The Quest&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#for-the-quest&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;forthequest.jpg&quot; alt=&quot;For The Quest screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For The Quest is the working title for a game in early development by
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt;. Written entirely in Rust and compiled to WebAssembly,
For The Quest is destined to become a MMORPG set in a post-apocalyptic
Earth where your goal is to band together into like-minded factions to
not only survive in this new world, but to unearth the cause of humanity&#x27;s
downfall.&lt;&#x2F;p&gt;
&lt;p&gt;For The Quest is currently undergoing engine development with a focus on
running smoothly in modern browsers using WebGL 2.0 before moving onto
native desktop ports.&lt;&#x2F;p&gt;
&lt;p&gt;New developments in March:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Collision and Activation-Based Triggerable Entities (Able to load new areas)&lt;&#x2F;li&gt;
&lt;li&gt;New overworld &amp;quot;sky light&amp;quot; directional lighting shaders in addition to
omni-directional point lighting for underground areas&lt;&#x2F;li&gt;
&lt;li&gt;New Ice Cavern models and textures, establishing a hybrid pixel-art in 3D
style - mapping tool has been expanded to allow for rotating &amp;quot;tiles&amp;quot; to
build extensive environments in a simple text format for rapid prototyping&lt;&#x2F;li&gt;
&lt;li&gt;Specular maps added to the engine and world for that extra shine&lt;&#x2F;li&gt;
&lt;li&gt;Started refactoring the rendering pipeline to allow for screen-space effects
such as reflections and ambient occlusion&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt; on Twitter for updates.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;urban-gift-teaser-video&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;UrbanGiftGame&quot;&gt;Urban Gift&lt;&#x2F;a&gt;: Teaser Video&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#urban-gift-teaser-video&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;UrbanGiftGame&quot;&gt;Urban Gift&lt;&#x2F;a&gt; is part detective game and part superhero simulator.
This month a teaser video was released:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;1dMt8e9Dx3A&quot;&gt;&lt;img src=&quot;urban-gift-video.png&quot; alt=&quot;youtube preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Follow development updates on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;UrbanGiftGame&quot;&gt;Twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;realm-one&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&#x2F;realm.one&quot;&gt;Realm.One&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#realm-one&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;S5SCBe_CzjQ&quot;&gt;&lt;img src=&quot;realm-one-video.png&quot; alt=&quot;screenshot from the video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&#x2F;realm.one&quot;&gt;Realm.One&lt;&#x2F;a&gt; is an open-source MMO game
written using the Amethyst game engine.
This month two videos were posted:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;S5SCBe_CzjQ&quot;&gt;&amp;quot;GameDev in Rust (Episode 0)&amp;quot;&lt;&#x2F;a&gt; -
ECS-based design with Amethyst, networking and tiled 2d based design.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=JxT3r56aqcA&quot;&gt;&amp;quot;GameDev in Rust (Episode 1): Monsters and AI!&amp;quot;&lt;&#x2F;a&gt; -
how the monsters are managed on server-side
and integration with Tiled map editor.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;colony-genesis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.itch.io&#x2F;colony&quot;&gt;Colony Genesis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#colony-genesis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;colony.png&quot; alt=&quot;ASCII art logo with an ant&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.rs&quot;&gt;Native Systems&lt;&#x2F;a&gt; is working on &amp;quot;Colony Genesis&amp;quot; -
an ant colony sandbox game with ASCII graphics.&lt;&#x2F;p&gt;
&lt;p&gt;This month v0.1.1 and v0.1.2 versions were released. Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Add color palette options to Settings including a modified palette
for red-green color blindness&lt;&#x2F;li&gt;
&lt;li&gt;Add lifecycles to more ant castes&lt;&#x2F;li&gt;
&lt;li&gt;Nurse ants give food to larvae&lt;&#x2F;li&gt;
&lt;li&gt;Nurse ants on the surface will return to the colony&lt;&#x2F;li&gt;
&lt;li&gt;Fix for foragers getting stuck in dig state at colony entrance&lt;&#x2F;li&gt;
&lt;li&gt;Updated pathfinding&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ascension-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;outkine.itch.io&#x2F;ascension-2&quot;&gt;Ascension 2&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ascension-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ascension.gif&quot; alt=&quot;gameplay samble: moving platforms, projectiles, and changing gravity&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;outkine.itch.io&#x2F;ascension-2&quot;&gt;Ascension 2&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;outkine&quot;&gt;@outkine&lt;&#x2F;a&gt; is a simple gravity-based platformer.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hop your way through bite-sized levels while dodging spikes and turrets.
Then, change the direction of gravity, and do it all again!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;outkine&#x2F;ascension-rust&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;pGLOWrpg&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg.png&quot; alt=&quot;Improved temperature map generation&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt; tweeted a bunch of updates about their &amp;quot;pGLOWrpg&amp;quot; project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1236003795265519616&quot;&gt;Rivers erosion&lt;&#x2F;a&gt;:
this will ensure no rivers flow upwards and the canyons
through the landmass are more smooth.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1242824451449856004&quot;&gt;River segmentation and width increment&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1236268367968964610&quot;&gt;Improved the temperature map generation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1236366942094622721&quot;&gt;Improved topography map rendering&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;akigi.png&quot; alt=&quot;game screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world
where most believe that humans are inferior.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of March&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;058-2020-03-15.html&quot;&gt;Migration to specs is finished&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;058-2020-03-15.html#asset-compilation-rewrite&quot;&gt;Asset compilation rewrite&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;059-2020-03-22.html&quot;&gt;Deploying process update&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;060-2020-03-29.html&quot;&gt;Preparations for the initial alpha release is being done&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;056-2020-03-01.html&quot;&gt;#056&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;057-2020-03-08.html&quot;&gt;#057&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;058-2020-03-15.html&quot;&gt;#058&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;059-2020-03-22.html&quot;&gt;#059&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;march-2020&#x2F;060-2020-03-29.html&quot;&gt;#060&lt;&#x2F;a&gt;,&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sphere-game&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;spheregame&quot;&gt;Sphere Game&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sphere-game&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sphere.png&quot; alt=&quot;game screenshot: spheres!&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;spheregame&quot;&gt;Sphere Game&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;Coffé Junk Studio&lt;&#x2F;a&gt;
you control a sphere in a bowl-shaped 2D space:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your goal is to hit the other spheres as hard as possible
to shatter them into pieces!
But take care; if you get hit too hard too often by other spheres,
you will be smashed yourself!
Avoiding them is challenging as the bent space keeps dragging you to the center.
Can you destroy everything around you until you are the only one left?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The game is a test for the studio&#x27;s &amp;quot;Sphere Engine&amp;quot; engine
that is being implemented using Rust and Vulkan.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;helix-repair&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;helix-repair&quot;&gt;Helix Repair&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#helix-repair&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;helix-repair.png&quot; alt=&quot;game screenshot: DNA&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;helix-repair&quot;&gt;Helix Repair&lt;&#x2F;a&gt; is another game by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;CoffeJunkStudio&quot;&gt;Coffé Junk Studio&lt;&#x2F;a&gt;
written using the same engine.
Your task is to repair a broken DNA sequence
by replacing wrong nucleobases with the right ones.
You have 20 seconds: how many nucleobases can you repair within that time?&lt;&#x2F;p&gt;
&lt;p&gt;The game was developed within one weekend during
the Global Game Jam 2020, whose theme was &amp;quot;repair&amp;quot;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-march-devlog&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;: March Devlog&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-march-devlog&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1246774418233348096&quot;&gt;&lt;img src=&quot;garden.gif&quot; alt=&quot;demo preview&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;march&quot;&gt;March&lt;&#x2F;a&gt; devlogs were posted.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Splashing sweat symbol water diffusion in the new soil;&lt;&#x2F;li&gt;
&lt;li&gt;Herb improved leaf translucency;&lt;&#x2F;li&gt;
&lt;li&gt;Joystickcollision detection, player movement;&lt;&#x2F;li&gt;
&lt;li&gt;Artist palette debug tool for visualizing the forces
acting upon a game object and its other vectors.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;zemeroth&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zemeroth&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;zemeroth.jpeg&quot; alt=&quot;new icons and ability descriptions&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff&lt;&#x2F;a&gt; is a minimalistic 2D turn-based tactical game.
Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1241718003470917635&quot;&gt;Some of the text buttons were replaced by icons&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Ability descriptions.&lt;&#x2F;li&gt;
&lt;li&gt;Popup screens and exit confirmation dialogs.&lt;&#x2F;li&gt;
&lt;li&gt;New &lt;code&gt;zgui&lt;&#x2F;code&gt; widgets: ColoredRect, LayersLayout.&lt;&#x2F;li&gt;
&lt;li&gt;Inactive buttons are either hidden or grayed-out now.&lt;&#x2F;li&gt;
&lt;li&gt;The project &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1244960610296696834&quot;&gt;fully switched to &lt;code&gt;good-web-game&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
as the first step of the migration to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren1.png&quot; alt=&quot;LoD&quot; &#x2F;&gt;
&lt;em&gt;Work on Level of Detail&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG
inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;Many systems have been worked on in March. Worldsim is making progress through
simulation of civilization over time. The map has seen improvements for
lighting. Certain parts of the UI have been going through big changes. Many
small outstanding issues have been worked on by a few diligent contributors.
Networking is also being reworked from the ground up.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the March changelog:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;- Added sfx for wielding&#x2F;unwielding weapons
&lt;&#x2F;span&gt;&lt;span&gt;- Fixed NPCs attacking the player forever after killing them
&lt;&#x2F;span&gt;&lt;span&gt;- Added sfx for collecting, dropping and using inventory items
&lt;&#x2F;span&gt;&lt;span&gt;- New attack animation
&lt;&#x2F;span&gt;&lt;span&gt;- weapon control system
&lt;&#x2F;span&gt;&lt;span&gt;- Game pauses when in singleplayer and pause menu
&lt;&#x2F;span&gt;&lt;span&gt;- Added authentication system (to play on the official server register on https:&#x2F;&#x2F;account.veloren.net)
&lt;&#x2F;span&gt;&lt;span&gt;- Added gamepad&#x2F;controller support
&lt;&#x2F;span&gt;&lt;span&gt;- Added player feedback when attempting to pickup an item with a full inventory
&lt;&#x2F;span&gt;&lt;span&gt;- Added free look
&lt;&#x2F;span&gt;&lt;span&gt;- Added Italian, Portuguese, and Turkish translations
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;veloren2.png&quot; alt=&quot;Hanging out&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-57#new-networking-protocol-by-xmac94x&quot;&gt;New Networking Protocol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-58#the-external-work-of-imbris&quot;&gt;External Work&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-59#status-of-the-winit-update-branch&quot;&gt;Winit Issues&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-59#ui-improvements-by-pfau-and-co&quot;&gt;UI Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-60#map-improvements-by-sharp&quot;&gt;Map Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-61#world-simulation-process-by-zesterer&quot;&gt;World Simulation Process&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;With the Content Update scheduled to come out at the end of April, many systems
will be finishing up development. Keep a lookout for the launch party!&lt;&#x2F;p&gt;
&lt;p&gt;March&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-57&quot;&gt;#57&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-58&quot;&gt;#58&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-59&quot;&gt;#59&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-60&quot;&gt;#60&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-61&quot;&gt;#61&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bracket-lib&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bracket-lib&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cp437-demo.gif&quot; alt=&quot;lighing demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;bracket-lib&quot;&gt;bracket-lib&lt;&#x2F;a&gt; (previously &lt;code&gt;rltk_rs&lt;&#x2F;code&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
is a Rust implementation of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Input API.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-color&lt;&#x2F;code&gt; now supports pallets and RGBA.&lt;&#x2F;li&gt;
&lt;li&gt;The graphical (OpenGL, WASM, Amethyst) render targets now support alpha channel.&lt;&#x2F;li&gt;
&lt;li&gt;Arbitrary clipping window on any layer.&lt;&#x2F;li&gt;
&lt;li&gt;New &lt;code&gt;VirtualConsole&lt;&#x2F;code&gt; system.&lt;&#x2F;li&gt;
&lt;li&gt;New functions for right-justifying printed text.&lt;&#x2F;li&gt;
&lt;li&gt;Fonts and dimensions in terminal layers can now be switched at run-time.&lt;&#x2F;li&gt;
&lt;li&gt;New layer type that lets you specify glyph position as a float.&lt;&#x2F;li&gt;
&lt;li&gt;New sprite layer.&lt;&#x2F;li&gt;
&lt;li&gt;Updated examples.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;this-month-in-rustsim-10-march-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2020&#x2F;04&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;This month in rustsim #10 (March 2020)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-rustsim-10-march-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rustsim-simba.svg&quot; alt=&quot;Simba logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Main updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;simba&quot;&gt;simba&lt;&#x2F;a&gt; - a crate that defines a set of traits for writing code
that can be generic with regard to the number
of lanes of the input numeric value.
Those traits are implemented by f32, u32, i16, bool
as well as SIMD types like f32x4, u32x8, i16x2, etc.&lt;&#x2F;li&gt;
&lt;li&gt;benchmarks:
&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2020&#x2F;03&#x2F;23&#x2F;simd-aosoa-in-nalgebra&quot;&gt;&amp;quot;SIMD Array-of-Structures-of-Arrays in nalgebra and comparison with ultraviolet&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustsim&#x2F;alga&quot;&gt;alga&lt;&#x2F;a&gt; abstract algebra crate is switched to passive maintenance mode.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gfx-rs-and-wgpu-news&quot;&gt;gfx-rs and wgpu news&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-and-wgpu-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;deeper.png&quot; alt=&quot;Deeper game&quot; &#x2F;&gt;
&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;arnfaldur&#x2F;deeper&quot;&gt;deeper&lt;&#x2F;a&gt; uses wgpu for rendering&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;&quot;&gt;gfx-hal-0.5&lt;&#x2F;a&gt; was released!
Improvements done in March:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Debug markers.
Users are now able to debug-annotate parts of the rendered frame,
so that inspecting it in a GPU debugger is more enjoyable.&lt;&#x2F;li&gt;
&lt;li&gt;The generic range parameters are removed in favor of simple structs.
This is a move towards simpler low-level API.&lt;&#x2F;li&gt;
&lt;li&gt;Physical device features for NDC Y-flip and sampler mirror clamp are added.&lt;&#x2F;li&gt;
&lt;li&gt;Physical device performance hints are introduced.
The first hint is for &amp;quot;base vertex&#x2F;instance&amp;quot; support.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;SmallVec&lt;&#x2F;code&gt; is removed from the API, it&#x27;s reshaped
to avoid any heap allocations.
Previously, it had to touch the heap on multiple descriptor sets
or command buffers.&lt;&#x2F;li&gt;
&lt;li&gt;DX12 got true support for read-only storage bindings.
This is one of the opt-in derivations from Vulkan that allow to better map
users logic to non-Vulkan backends, also used by WebGPU.&lt;&#x2F;li&gt;
&lt;li&gt;Last but not the least, @zicklag
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;pull&#x2F;3151&quot;&gt;has been fighting&lt;&#x2F;a&gt;
with the OpenGL backend to align its API with the rest of the crowd,
armed with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pcwalton&#x2F;surfman&quot;&gt;surfman&lt;&#x2F;a&gt;.
The fight is reading conclusion, and we are crossing fingers
to add OpenGL support to &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt; as it lands.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt; changes in March:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;@grovesNL reached an epic milestone in the Web target
by showing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;pull&#x2F;193#issuecomment-599156540&quot;&gt;first triangle&lt;&#x2F;a&gt;.
Users will soon be able to seamlessly target the web
with their existing &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt; applications. 🚀&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;wgpu-types&lt;&#x2F;code&gt; crate is created to share types between the Web target
and the native one.&lt;&#x2F;li&gt;
&lt;li&gt;@lachlansneff improved the &lt;em&gt;async&lt;&#x2F;em&gt; story quite a bit,
we also converted more methods to be asynchronous.&lt;&#x2F;li&gt;
&lt;li&gt;Debug labels support.&lt;&#x2F;li&gt;
&lt;li&gt;Id management story for browsers with a GPU process
has been completely redesigned and now working well.&lt;&#x2F;li&gt;
&lt;li&gt;All the objects are properly destroyed and GPU tracked if needed.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to provide a &lt;code&gt;Surface&lt;&#x2F;code&gt; so that the selected adapter can present to it.&lt;&#x2F;li&gt;
&lt;li&gt;New &amp;quot;mailbox&amp;quot; present mode.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Satellite projects:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; - the new in-house shader translator has reached the milestone
of successfully loading a WGSL &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&#x2F;blob&#x2F;thda1f6a4&#x2F;test-data&#x2F;boids.wgsl&quot;&gt;boids example&lt;&#x2F;a&gt;
and generating a valid Metal source for it. 🎉&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;metal-rs&quot;&gt;metal-rs&lt;&#x2F;a&gt;
has got a lot of contribution by @adamnemecek.
Indirect command encoding is particularly exciting!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx-extras&quot;&gt;gfx-extras&lt;&#x2F;a&gt; is
a new library that is forked from rendy-memory&#x2F;descriptor.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx-ocean&quot;&gt;gfx-ocean&lt;&#x2F;a&gt; was moved
to gfx-rs organization and updated to gfx-hal-0.5.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;portability&quot;&gt;gfx-portability&lt;&#x2F;a&gt; was also updated.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;miniquad.gif&quot; alt=&quot;miniquad android&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a safe cross-platform rendering library
focused on portability and low-end platforms support.
Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;example project by @PonasKovas,
illustrating android and web platform-dependent configuration: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PonasKovas&#x2F;miniquad-mandelbrot&quot;&gt;mandelbrot&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;first prototype for embedded debug frame introspection: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&#x2F;status&#x2F;1241616794114232321&quot;&gt;introspection&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nannou-v0-13&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;nannou_v0.13&quot;&gt;Nannou v0.13&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nannou-v0-13&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nannou.png&quot; alt=&quot;Daily Sketch 0114 by Mactuitui&quot; &#x2F;&gt;
&lt;em&gt;Daily Sketch 0114 by Mactuitui&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;Nannou&lt;&#x2F;a&gt; is a creative coding framework that aims to make it easy
for artists to express themselves with simple, fast, reliable code.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;nannou_v0.13&quot;&gt;Nannou v0.13 was released&lt;&#x2F;a&gt;.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Migration to wgpu-rs.&lt;&#x2F;li&gt;
&lt;li&gt;Nicer native macOS experience.&lt;&#x2F;li&gt;
&lt;li&gt;Capturing Frames &amp;amp; Textures.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also check out lots of cool sketches from the community:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;search?q=%23nannou&amp;amp;src=typed_query&quot;&gt;#nannou&lt;&#x2F;a&gt; tag on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;quest-engine-part-2-deploying-a-rust-app-on-android&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;krupitskas.github.io&#x2F;posts&#x2F;quest-dev-part-2&#x2F;&quot;&gt;Quest Engine Part 2: Deploying a Rust App On Android&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#quest-engine-part-2-deploying-a-rust-app-on-android&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;quest.jpg&quot; alt=&quot;Oculus Quest&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;krupitskas.github.io&#x2F;posts&#x2F;quest-dev-part-2&#x2F;&quot;&gt;second part&lt;&#x2F;a&gt; of Nikita Krupitskas&#x27;
&lt;a href=&quot;https:&#x2F;&#x2F;krupitskas.github.io&#x2F;posts&#x2F;quest-dev-part-1&#x2F;&quot;&gt;blog series&lt;&#x2F;a&gt; on developing a game engine for the Oculus Quest
has been posted.&lt;&#x2F;p&gt;
&lt;p&gt;This part of the series describes how a simple Rust project can be built
for Android - useful even if you&#x27;re not targeting the Oculus hardware!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;const-tweaker&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tversteeg&#x2F;const-tweaker&quot;&gt;const-tweaker&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#const-tweaker&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;const-tweaker.gif&quot; alt=&quot;const-tweaker UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Thomas Versteeg has released a new crate called &lt;code&gt;const-tweaker&lt;&#x2F;code&gt;, which provides
a web UI that can be used to tweak &lt;code&gt;const&lt;&#x2F;code&gt; variables in a running application.
This can be used as a simpler alternative to embedded scripting languages or
hot-reloading in your games.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fl7593&#x2F;announcing_consttweaker_change_your_constants&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;assets-manager&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a1phyr&#x2F;assets_manager&quot;&gt;assets_manager&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#assets-manager&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;a1phyr has created a crate called &lt;code&gt;assets_manager&lt;&#x2F;code&gt;, which provides a convenient way
to load and cache external resources. It abstracts over the filesystem logic, and
provides a variety of built-in loaders for common Serde formats (e.g. TOML, JSON).
Hot-reloading support is also planned in the future.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions: &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;foywc6&#x2F;announcing_assets_manager_conveniently_load_store&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;netstack-v0-3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;netstack&#x2F;0.3.0&quot;&gt;netstack&lt;&#x2F;a&gt; v0.3.0&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#netstack-v0-3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;netstack&#x2F;0.3.0&quot;&gt;netstack&lt;&#x2F;a&gt; is a batteries included networking crate for games. Requiring an
exchange of a secret and connection tokens. At the moment, UDP transport,
connection management, packet signaling, and packet acknowledgement are
features already implemented. Examples for getting started are provided
on the &lt;a href=&quot;netstack&quot;&gt;crates.io page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.3.0 adds basic monitoring functionality
along with traits &lt;code&gt;ClientMonitor&lt;&#x2F;code&gt; and &lt;code&gt;ServerMonitor&lt;&#x2F;code&gt;.
A work-in-progress prometheus exporter has also been added in this version.&lt;&#x2F;p&gt;
&lt;p&gt;Issues and contributions can be made to &lt;a href=&quot;netstack-github&quot;&gt;Netstack&#x27;s github repository&lt;&#x2F;a&gt;.
Work in progress documentation is available on &lt;a href=&quot;netstack-docs&quot;&gt;Netstack&#x27;s docs.rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;three-d-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&#x2F;three-d&quot;&gt;three-d&lt;&#x2F;a&gt; v0.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#three-d-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;three-d-lighting.png&quot; alt=&quot;Lighting example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asny&#x2F;three-d&quot;&gt;three-d&lt;&#x2F;a&gt; is a renderer which targets both desktop (OpenGL) and web
(WebAssembly + WebGL2) which makes it possible to develop a 3D application on
desktop and easily deploy it on web.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;three-d&quot;&gt;three-d v0.1&lt;&#x2F;a&gt; was released.
Main features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Thin and low-level graphics abstraction layer which maps one-to-one with the
OpenGL&#x2F;WebGL2 graphics APIs.&lt;&#x2F;li&gt;
&lt;li&gt;Medium-level modular abstractions of common graphics concepts.&lt;&#x2F;li&gt;
&lt;li&gt;Deferred renderer with high-level components.&lt;&#x2F;li&gt;
&lt;li&gt;Default windows for easy setup.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;three-d-spider.jpeg&quot; alt=&quot;Spider example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is possible to build your own rendering features from low- or medium-level
components and combine with other high-level features, so you can already now
make some cool stuff. See for example these &lt;a href=&quot;https:&#x2F;&#x2F;asny.github.io&#x2F;three-d&#x2F;&quot;&gt;examples&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun&quot;&gt;This Month in Mun&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The Mun Team &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;03&#x2F;10&#x2F;this-month-february&quot;&gt;announced&lt;&#x2F;a&gt; that they have obtained a $15k grant
as part of the &lt;a href=&quot;https:&#x2F;&#x2F;www.mozilla.org&#x2F;en-US&#x2F;moss&#x2F;mission-partners&quot;&gt;MOSS Mission Partners&lt;&#x2F;a&gt; track, to further develop hot
reloadable data structures.&lt;&#x2F;p&gt;
&lt;p&gt;Their &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;04&#x2F;02&#x2F;this-month-march&quot;&gt;March updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;marshalling of value structs;&lt;&#x2F;li&gt;
&lt;li&gt;extern functions;&lt;&#x2F;li&gt;
&lt;li&gt;garbage collector (defaults to mark&amp;amp;sweep);&lt;&#x2F;li&gt;
&lt;li&gt;performance benchmarks;&lt;&#x2F;li&gt;
&lt;li&gt;bugfixes and improved test coverage.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;oxygengine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month Oxygengine creator &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fe57s0&#x2F;oxygengine_development_progress_tracker&#x2F;&quot;&gt;published plans&lt;&#x2F;a&gt; for the future
of the engine, where he explains the long term goal of the project that explains
why Oxygen is definitely not a toy or a hobby project and how that will shape
its feature towards being a toolset for the professionals. Project progress
tracker &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;projects&#x2F;1&quot;&gt;can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; has started to work on the modular game editor
(extendable with user-made plugins) called &lt;strong&gt;Ignite&lt;&#x2F;strong&gt;, that will ease creating
games with the engine.&lt;&#x2F;p&gt;
&lt;p&gt;You can look at &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PsichiX&#x2F;status&#x2F;1243380190752813064&quot;&gt;the first editor module&lt;&#x2F;a&gt; - Asset
Browser:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-asset-browser.gif&quot; alt=&quot;Oxygengine Asset Browser&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;&lt;img src=&quot;amethyst-logo.png&quot; alt=&quot;Amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;release-0-15-0&quot;&gt;Ametyst 0.15.0 was released&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Better panic messages on &lt;code&gt;stable&lt;&#x2F;code&gt; Rust.&lt;&#x2F;li&gt;
&lt;li&gt;Support for setting log levels from configuration.&lt;&#x2F;li&gt;
&lt;li&gt;Text field rendering corrections.&lt;&#x2F;li&gt;
&lt;li&gt;Target multiple overlapping UI entities with events.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;&lt;code&gt;specs&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; is the underlying ECS that powers Amethyst but there&#x27;s an
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rfcs&#x2F;issues&#x2F;22&quot;&gt;ongoing prospect&lt;&#x2F;a&gt; of moving to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TomGillen&#x2F;legion&quot;&gt;&lt;code&gt;legion&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;csherratt&quot;&gt;@csherratt&lt;&#x2F;a&gt; wrote an &lt;a href=&quot;https:&#x2F;&#x2F;csherratt.github.io&#x2F;blog&#x2F;posts&#x2F;specs-and-legion&#x2F;&quot;&gt;excellent post&lt;&#x2F;a&gt; comparing both
libraries. Also an &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;archetypal-vs-grouped-ecs-architectures-my-take&#x2F;1344&quot;&gt;in-depth discussion&lt;&#x2F;a&gt; about
archetypal and grouped ECS design took place on the forum.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;specs-vs-legion.png&quot; alt=&quot;specs vs amethyst layout&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;atelier-assets&quot;&gt;Atelier&lt;&#x2F;a&gt; is an asset management and processing
framework for games.
Coupled with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TomGillen&#x2F;legion&quot;&gt;&lt;code&gt;legion&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kabergstrom&quot;&gt;@kabergstrom&lt;&#x2F;a&gt; built an
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;atelier-legion-demo&quot;&gt;editor prototype&lt;&#x2F;a&gt; demonstrating the following
capabilities:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Prefab loading, saving, and hot-reloading&lt;&#x2F;li&gt;
&lt;li&gt;Entity creation &#x2F; deletion&lt;&#x2F;li&gt;
&lt;li&gt;Component addition &#x2F; removal&lt;&#x2F;li&gt;
&lt;li&gt;Undo and Redo&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=9Vwi29RuQBE&quot;&gt;demo video&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;atelier-legion-integration-demo&#x2F;1352&quot;&gt;forum discussion&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;There is an &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;wasm-effort&#x2F;1336&quot;&gt;ongoing effort to bring WASM support to Amethyst&lt;&#x2F;a&gt;.
Check out the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;tree&#x2F;wasm&#x2F;docs&#x2F;CONTRIBUTING_WASM.md&quot;&gt;contribution guide&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;projects&#x2F;20&quot;&gt;project board&lt;&#x2F;a&gt; for current status.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ToferC&quot;&gt;@ToferC&lt;&#x2F;a&gt; reviewed their experience using Amethyst to build a space combat game,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ToferC&#x2F;paladin&quot;&gt;Paladin&lt;&#x2F;a&gt;. Check out the
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=avW2Nr6ak-o&quot;&gt;review on youtube&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ash-v0-30&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;ash&quot;&gt;ash&lt;&#x2F;a&gt; v0.30&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ash-v0-30&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;ash&lt;&#x2F;code&gt; is lightweight wrapper around Vulkan.&lt;&#x2F;p&gt;
&lt;p&gt;The latest version comes with support for Vulkan 1.2 and following extensions:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;VK_KHR_timeline_semaphore&lt;&#x2F;li&gt;
&lt;li&gt;VK_KHR_ray_tracing&lt;&#x2F;li&gt;
&lt;li&gt;VK_KHR_external_memory_fd&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rectangle-pack-v0-1-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chinedufn&#x2F;rectangle-pack&quot;&gt;Rectangle Pack&lt;&#x2F;a&gt; v0.1.5&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rectangle-pack-v0-1-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;Rectangle Pack&lt;&#x2F;code&gt; is a Rust crate focused on rectangle packing: Laying out any smaller
number of rectangles inside any number of larger rectangles. The developer&#x27;s use
for the library is in packing textures from texture atlases on the GPU, although
the library does not have any concept of texture, and can be used in any
context where rectangle packing may be needed.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.1.5 adds implementation for error handling for RectanglePackError.&lt;&#x2F;p&gt;
&lt;p&gt;A getting started guide is available on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chinedufn&#x2F;rectangle-pack&quot;&gt;project&#x27;s homepage&lt;&#x2F;a&gt;.
Full documentation is available at the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;rectangle-pack&#x2F;0.1.5&quot;&gt;rectangle-pack docs.rs section&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;50&quot;&gt;#50 &amp;quot;Linking Time&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;75&quot;&gt;#75 &amp;quot;Standardised API for sharing thread pools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;91&quot;&gt;#91 &amp;quot;Should the wg volunteer to maintain winapi?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&quot;&gt;rust-gamedev&#x2F;arewegameyet&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;289&quot;&gt;#289 &amp;quot;Netlify previews for PRs?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;@kvark: Anybody wants to work on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&#x2F;issues&#x2F;23&quot;&gt;GLSL front-end&lt;&#x2F;a&gt; in Naga?
One day, we&#x27;ll be able to finally replace glsl-to-spirv,
which is used by a lot of graphics applications and is prone to issues.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;robo-logo.jpeg&quot; alt=&quot;Robo Instructus logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On 2019.07.16 a puzzle game &lt;a href=&quot;https:&#x2F;&#x2F;www.roboinstruct.us&quot;&gt;&amp;quot;Robo Instructus&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt;
was released after two years of development:
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Steam&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;bigabgames.itch.io&#x2F;robo-instructus&quot;&gt;itch.io&lt;&#x2F;a&gt; (demo is available).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Salvage Engineer, you have a new assignment on a distant world...&lt;&#x2F;p&gt;
&lt;p&gt;Robo Instructus is a puzzle game in which players manoeuvre a robot
by issuing instructions via a simple programming language.
As players progress through the game they unlock new functions
to overcome new puzzles, each of which can be solved in multiple ways.
The more you master the robot, the more elegant and powerful
your solutions will be.&lt;&#x2F;p&gt;
&lt;p&gt;Take the role of a Salvage Engineer sent across space.
Use wits and tenacity to uncover the secrets of this isolated, frozen world.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=sIjaIxPp2_w&quot;&gt;&lt;img src=&quot;robo-screenshot.jpg&quot; alt=&quot;gameplay screenshot with jumping robot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=sIjaIxPp2_w&quot;&gt;release trailer&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The game is written using gfx-rs (pre-ll), winit, and opengl.
You can read more about its development in the &lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&quot;&gt;&lt;strong&gt;awesome devlog&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;
that has lots of cool posts like
&lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2019&#x2F;06&#x2F;26&#x2F;behind-the-scenes.html&quot;&gt;&amp;quot;Robo Instructus: Behind The Scenes&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cdw1ct&#x2F;robo_instructus_is_out_now_programming_puzzle&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fx83ki&#x2F;this_month_in_rust_gamedev_8_march_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1247906830212366336&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #7 - February 2020</title>
            <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/007/</link>
            <guid>https://gamedev.rs/news/007/</guid>
            <description>&lt;p&gt;Welcome to the seventh issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;ecosystem-survey-results&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;#survey-from-the-rust-gamedev-working-group-clipboard&quot;&gt;Ecosystem Survey Results&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-survey-results&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;survey-thanks.png&quot; alt=&quot;Thanks cloud: Amethyst, ggez, gfx-rs, specs, serde and many other projects&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;survey-01&quot;&gt;results&lt;&#x2F;a&gt; of the Rust GameDev &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;#survey-from-the-rust-gamedev-working-group-clipboard&quot;&gt;ecosystem survey&lt;&#x2F;a&gt;
were published.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;After an unfortunate delay, we can finally present the results.
We received a whopping 403 responses!
This trove of valuable feedback will inform the WG&#x27;s roadmap for 2020.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ezrk0y&#x2F;rust_game_development_ecosystem_survey&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ezrk5o&#x2F;rust_game_development_ecosystem_survey&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;are-we-game-yet-updates&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arewegameyet.com&#x2F;&quot;&gt;Are We Game Yet?&lt;&#x2F;a&gt; Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#are-we-game-yet-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arewegameyet.com&#x2F;&quot;&gt;Are We Game Yet?&lt;&#x2F;a&gt; is a website cataloguing the Rust gamedev ecosystem,
with hundreds of links to crates, games and helpful resources.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arewegameyet.com&#x2F;&quot;&gt;&lt;img src=&quot;awgy.png&quot; alt=&quot;Are We Game Yet? homepage&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, it received some major updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;All of the site&#x27;s data files have been unified into a consistent TOML schema,
making it easier to add new links.&lt;&#x2F;li&gt;
&lt;li&gt;Categories have been added for games and resources, and you can now
add an item to multiple categories without duplicating the data.&lt;&#x2F;li&gt;
&lt;li&gt;Page load times have been reduced (especially on the homepage).&lt;&#x2F;li&gt;
&lt;li&gt;The styling has been improved to make the site look better on mobile,
and to resolve some accessibility issues.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;210&quot;&gt;Ownership was also recently transferred across to the gamedev working group&lt;&#x2F;a&gt;,
to allow for more people to help with maintainance.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s never been a better time to add your projects to the site,
so &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet#contribute&quot;&gt;please come and contribute&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;new-rust-gamedev-discord-server&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;New Rust GameDev Discord Server&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#new-rust-gamedev-discord-server&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;&lt;img src=&quot;discord-invite.png&quot; alt=&quot;Invitation widget: 243 members total, 98 online&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A new Discord server dedicated to Rust GameDev was started
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dasifefe&quot;&gt;@dasifefe&lt;&#x2F;a&gt; this month:
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;&lt;strong&gt;invitation link&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Besides talking about Rust, it&#x27;s a place that could be used to show your
work-in-progress, art (visual or audio), discuss game design, etc.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, in case you didn&#x27;t know, there is a quite active &amp;quot;games-and-graphics&amp;quot;
channel on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;6Zvghp&quot;&gt;community-run Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rusttallinn&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RustTallinn&quot;&gt;RustTallinn&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusttallinn&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;tallinn.jpeg&quot; alt=&quot;Tallin&#x27;s old town&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; - one of the developers behind &lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1224404367723454478&quot;&gt;is planning to organize&lt;&#x2F;a&gt; the first (and hopefully one of many)
Rust Hack&#x27;n&#x27;Learn meetup in Tallinn on March 13.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Hack&#x27;N&#x27;Learn is an event where we get together and work on personal
(or open-source) projects on our own computers.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;If you&#x27;re interested, visit &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tallinn.rs&#x2F;events&#x2F;2020-03-hacknlearn&#x2F;&quot;&gt;tallinn.rs&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; and follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RustTallinn&quot;&gt;@RustTallinn&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rusty-shooter&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-shooter&quot;&gt;Rusty Shooter&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-shooter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rusty-shooter-in-game.jpg&quot; alt=&quot;Rusty Shooter in-game screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-shooter&quot;&gt;Rusty Shooter&lt;&#x2F;a&gt; is a Quake3-like first-person shooter
written in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Common FPS elements: bots, items, weapons;&lt;&#x2F;li&gt;
&lt;li&gt;Single game mode - deathmatch;&lt;&#x2F;li&gt;
&lt;li&gt;More or less modern graphics (shadows, deferred shading, particle systems etc.);&lt;&#x2F;li&gt;
&lt;li&gt;Fully animated bots using animation blending state machines;&lt;&#x2F;li&gt;
&lt;li&gt;Single map - something like legendary Q3DM6;&lt;&#x2F;li&gt;
&lt;li&gt;Path finding using navmesh;&lt;&#x2F;li&gt;
&lt;li&gt;Save&#x2F;load functionality;&lt;&#x2F;li&gt;
&lt;li&gt;GUI: main menu, options, HUD, leader board (using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-ui&quot;&gt;rg3d-ui library&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;Binaural sound (using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound library&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Small gameplay video (work-in-progress):
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=UDn8ymyXPcI&quot;&gt;&lt;img src=&quot;rusty-shooter-youtube.PNG&quot; alt=&quot;Rusty Shooter game&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;colony-genesis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.itch.io&#x2F;colony&quot;&gt;Colony Genesis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#colony-genesis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;colony-genesis.png&quot; alt=&quot;itch.io page: ASCII art logo with an ant, game features, video and screenshots&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.rs&quot;&gt;Native Systems&lt;&#x2F;a&gt; is working on &amp;quot;Colony Genesis&amp;quot; -
an ant colony sandbox game with ASCII graphics.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Establish a new colony and help it grow or let it develop on its own.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This month an alpha version was published on itch: &lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.itch.io&#x2F;colony&quot;&gt;check it out here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren1.png&quot; alt=&quot;Rolling mountain landscape&quot; &#x2F;&gt;
&lt;em&gt;Rolling mountain landscape&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG
inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;At the beginning of the month, the team met for a 0.6 intro meeting.
It was decided that 0.6 would focus on things for the player to do,
and hence will be called &amp;quot;The Content Update&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Research has been done on multiple areas this month.
One domain is level of detail, which is allowing mountains off in the distance
to be rendered much faster.
Another domain is server persistence.
Finding a way for the server to efficiently persist player information
is a large part of what is needed for The Content Update.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the February changelog:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;- Fixed NPCs attacking the player forever after killing them
&lt;&#x2F;span&gt;&lt;span&gt;- Extend run sfx to small animals to prevent sneak attacks by geese
&lt;&#x2F;span&gt;&lt;span&gt;- Added sfx for wielding&#x2F;unwielding weapons
&lt;&#x2F;span&gt;&lt;span&gt;- Added new orc hairstyles
&lt;&#x2F;span&gt;&lt;span&gt;- Added gamma setting
&lt;&#x2F;span&gt;&lt;span&gt;- Configurable fonts
&lt;&#x2F;span&gt;&lt;span&gt;- Translation status tracking
&lt;&#x2F;span&gt;&lt;span&gt;- Fixed &#x2F;give_exp ignoring player argument
&lt;&#x2F;span&gt;&lt;span&gt;- Allow spawning individual pet species, not just generic body kinds
&lt;&#x2F;span&gt;&lt;span&gt;- Added daily Mac builds
&lt;&#x2F;span&gt;&lt;span&gt;- Removed highlighting of non-collectible sprites
&lt;&#x2F;span&gt;&lt;span&gt;- Added zoomable and rotatable minimap
&lt;&#x2F;span&gt;&lt;span&gt;- Added rotating orientation marker to main-map
&lt;&#x2F;span&gt;&lt;span&gt;- Brighter &#x2F; higher contrast main-map
&lt;&#x2F;span&gt;&lt;span&gt;- Added music system
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=1ldHQfxCT24&quot;&gt;&lt;img src=&quot;veloren3.gif&quot; alt=&quot;veloren development&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;1 year of Veloren development. Click for the full video!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-53#0-5-release&quot;&gt;0.5 Release&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-54#0-6-intro-meeting&quot;&gt;0.6 Intro Meeting&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-54#settlements&quot;&gt;Settlements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-55#the-mac-build-situation-by-angelonfira&quot;&gt;Mac Builds&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-55#achievement-implementation-by-thedip&quot;&gt;Achievements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-56#persistence-by-angelonfira&quot;&gt;Persistence&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;veloren2.png&quot; alt=&quot;Hanging out&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In March, there will be a heavy focus on completing level of detail work
as well as persistence. Modding support will be explored further.
Player achievements will be merged into the game,
and we will start looking at where more content can be added.&lt;&#x2F;p&gt;
&lt;p&gt;February&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-53&quot;&gt;#53&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-54&quot;&gt;#54&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-55&quot;&gt;#55&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-56&quot;&gt;#56&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxidator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&quot;&gt;Oxidator&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxidator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;streamable.com&#x2F;499j0&quot;&gt;&lt;img src=&quot;oxidator-play.gif&quot; alt=&quot;Gameplay demo: two giant tank armies clashing&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;gameplay demo (35000 units)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&quot;&gt;Oxidator&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&quot;&gt;@Ruddle&lt;&#x2F;a&gt; is a real-time strategy game&#x2F;engine
written with Rust and WebGPU.
It&#x27;s inspired by Total Annihilation, Supreme Commander, Spring Engine,
and Zero-k.&lt;&#x2F;p&gt;
&lt;p&gt;The project&#x27;s goal is to provide a modern, carefully crafted,
minimal and highly constrained set of tools for players&#x2F;designers
to create mods without programming knowledge.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simulation:
working draft of flock behavior and collision detection,
basic health and damage computation,
construction and repair;&lt;&#x2F;li&gt;
&lt;li&gt;Rendering: basic display of a heightmap &amp;amp; 3D models (with instancing),
fxaa, screen-space reflections;&lt;&#x2F;li&gt;
&lt;li&gt;UI: select units (picking and rectangle selection),
move &amp;amp; build orders;&lt;&#x2F;li&gt;
&lt;li&gt;Multiplayer: working PoC localhost tcp client&#x2F;server;&lt;&#x2F;li&gt;
&lt;li&gt;Map editor: raise, lower, flatten, blur, noise pencil;&lt;&#x2F;li&gt;
&lt;li&gt;Unit editor: basic editor with joint &amp;amp; mesh selection and parameter editing
(speed, turn rate, health, etc);&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;streamable.com&#x2F;ywr44&quot;&gt;&lt;img src=&quot;oxidator-unit-editor.gif&quot; alt=&quot;Unit editor demo: move agent&#x27;s parts&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Demo of the unit editor&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&#x2F;blob&#x2F;be4863e74&#x2F;etc&#x2F;map_editor.gif&quot;&gt;&lt;img src=&quot;oxidator-map-editor.gif&quot; alt=&quot;Map editor demo: use pencil tool to instantly create a lake and mountains&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Demo of the map editor&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;univer-city-v1-0-and-open-source-release&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;gid&#x2F;103582791461907043&#x2F;announcements&#x2F;detail&#x2F;1694978169192631655&quot;&gt;Univer City v1.0 and Open Source Release&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#univer-city-v1-0-and-open-source-release&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;808160&#x2F;UniverCity&quot;&gt;&lt;img src=&quot;univer-logo.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;808160&#x2F;UniverCity&quot;&gt;UniverCity&lt;&#x2F;a&gt; is an isometric university management game:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Manage your staff, professors and students and try
and build the best UniverCity around!
Build up your UniverCity solo or against friends and build many different
types of classes whilst trying to ensure students get good grades,
or maybe just try and build the best looking UniverCity.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;gid&#x2F;103582791461907043&#x2F;announcements&#x2F;detail&#x2F;1694978169192631655&quot;&gt;v1.0 was released on Steam&lt;&#x2F;a&gt;
along with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Thinkofname&#x2F;UniverCity&quot;&gt;releasing the game&#x27;s sources under GPL-3&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This update &lt;em&gt;marks the end of development for now&lt;&#x2F;em&gt;
and adds in some basic workshop support.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;univer-city-demo.gif&quot; alt=&quot;Demo: builing a classroom&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The license is GPL-3 and the code is the same
as the version released on Steam
(the Steam version is built with the &#x27;steam&#x27; feature enabled).
Due to the GPL licensing the steamworks support is disabled
by default which breaks things like the &#x27;modding&#x27; menu and multiplayer.&lt;&#x2F;p&gt;
&lt;p&gt;The assets &lt;em&gt;are not included&lt;&#x2F;em&gt; with the release
and will have to be copied from the game on Steam.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f5fiii&#x2F;univercity_open_source_release_university&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;everpuzzle&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&quot;&gt;Everpuzzle&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#everpuzzle&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;everpuzzle-020-preview.gif&quot; alt=&quot;Everpuzzle preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&quot;&gt;Everpuzzle&lt;&#x2F;a&gt; is a Tetris Attack like action-puzzle game written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Everpuzzle aims to become a similar game like Tetris Attack and expand on its concepts.
The project was recently rewritten with minimal dependencies to achieve small
compile times and gain more control over the underlying engine architecture.
In the past Everpuzzle was using Amethyst with ECS,
however there were some issues that made development difficult.
Everpuzzle&#x27;s big goals are AI, Multiplayer and different Game modes.&lt;&#x2F;p&gt;
&lt;p&gt;Big changes coming in version 0.2, full list &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;here&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Gamepad support (singleplayer)&lt;&#x2F;li&gt;
&lt;li&gt;Multiple grids&lt;&#x2F;li&gt;
&lt;li&gt;AI Bot&lt;&#x2F;li&gt;
&lt;li&gt;Better Randomization of blocks&lt;&#x2F;li&gt;
&lt;li&gt;Combos &#x2F; Chains - with Highlighting&lt;&#x2F;li&gt;
&lt;li&gt;Better animations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&#x2F;releases&quot;&gt;Latest releases&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Video: &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=qA2zcaUVRKY&quot;&gt;Everpuzzle rewrite - Code Walkthrough (code outdated)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum.jpg&quot; alt=&quot;Spider NPCs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters
and fight against the growing threats on the isle.
The game server is authoritative and written in Rust,
while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the focus was on cooking skill. This includes recipes and cookware.
Players will need a cooking appliance, such as a stove or campfire
to cook some Chonkrat Stew inside a pot.
A heavy refactor to the interaction system had to be made,
as well as changes to networking.&lt;&#x2F;p&gt;
&lt;p&gt;Check out te full devlog: &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;18&quot;&gt;#18 &amp;quot;Cooking&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;scale.png&quot; alt=&quot;Traffic lights&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt; is a recent project about modern day society simulation from the
bottom-up by &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;aboutme.html&quot;&gt;Uriopass&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In February, the Inspector for specs entities was mostly finished and the
traffic simulation made great progress.
A second &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;scale_2.html&quot;&gt;blog post&lt;&#x2F;a&gt; was released about it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;nk6F42BQllU&quot;&gt;A recent video&lt;&#x2F;a&gt; also shows different traffic features such
as traffic lights, stop signs and car AI working together.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;f1egnd&#x2F;scale_devblog_2&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ultimate-scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;ultimate-scale&quot;&gt;Ultimate Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultimate-scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ultimate_scale.png&quot; alt=&quot;Ultimate scale screenshot showing winds and blips&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;ultimate-scale&quot;&gt;Ultimate Scale&lt;&#x2F;a&gt; is a puzzle game in which you build
increasingly large machines to solve increasingly difficult problems.
The game consists of wind and blips.
Wind propagates along pipes and causes blips to move.
Blips, in turn, activate blocks.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;&quot;&gt;Leod&lt;&#x2F;a&gt; is currently working on the core design: How to make the game fun and
what blocks to add. He posted about their thoughts and progress on a
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;f3cll6&#x2F;ultimate_scale_counting_modulo_three&#x2F;fhhu5ol&quot;&gt;Reddit comment&lt;&#x2F;a&gt;.
Regularly, videos are posted on their
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UChSw7WP2i0GIw61FIeTeGsA&quot;&gt;youtube channel&lt;&#x2F;a&gt; showing different machines
made in game such as an &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;zmKRJAF4xcI&quot;&gt;extensible counter modulo 10&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;IM3BRM_MZrE&quot;&gt;buffer&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A custom 3D rendering pipeline based on glium called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;rendology&quot;&gt;Rendology&lt;&#x2F;a&gt; was developed
for this project. A &lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;rust&#x2F;gamedev&#x2F;rendology&#x2F;2019&#x2F;12&#x2F;13&#x2F;introduction-to-rendology.html&quot;&gt;blog post&lt;&#x2F;a&gt; talks about its design and
relation to Ultimate Scale.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;f3cll6&#x2F;ultimate_scale_counting_modulo_three&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;Tennis Academy Dash&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dash.gif&quot; alt=&quot;release&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tennis academy dash is a time management game where you are the manager
of a tennis academy and you need to coordinate various players
to play on your courts.&lt;&#x2F;p&gt;
&lt;p&gt;The game is still a work in progress, but the demo version
has been uploaded to itch.io this month, so you can go ahead and check it out!
Give it a go
(the build is only for mac at the moment but other platforms coming soon)
and drop a comment with any feedback on &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;tennis-academy-dash&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dwarf-world&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;Dwarf World&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dwarf-world&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;&lt;img src=&quot;dwarf-world.png&quot; alt=&quot;New site with links to Twitter, Discord, and Twich&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&quot;&gt;Alexandru Ene&lt;&#x2F;a&gt; is working on a dwarf colony management game &amp;quot;Dwarf World&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the project got an official site: &lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;dwarf.world&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out development streams:
every Sunday at 19:30 PM GMT &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;nomad_pixel&quot;&gt;on Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lonely-star&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;Lonely Star&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lonely-star&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;&lt;img src=&quot;lonely-star.png&quot; alt=&quot;Lonely Star screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Space is a lonely place, but at least you&#x27;ve got the music to keep you company.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;Lonely Star&lt;&#x2F;a&gt; is a side-scrolling infinite runner,
with simple generative music.
You collect orbs and fly through rings in order to play notes and stay alive.&lt;&#x2F;p&gt;
&lt;p&gt;It was developed by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&quot;&gt;17cupsofcoffee&lt;&#x2F;a&gt;,
using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; 2D game framework,
for &lt;a href=&quot;weekly-game-jam-135&quot;&gt;Weekly Game Jam #135&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Tetra itself also received two small updates recently:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1217524602513055749&quot;&gt;Version 0.3.2 was released&lt;&#x2F;a&gt;,
with bugfixes and some tools for simple AABB collision detection.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1219758851416895489&quot;&gt;The Pong tutorial was updated with a new chapter&lt;&#x2F;a&gt;,
showing how to use Tetra&#x27;s graphics and input APIs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;akigi.png&quot; alt=&quot;High detail terrain chunk with PRR&quot; &#x2F;&gt;
&lt;em&gt;Sampling a heightmap in the vertex shader and also computing the normal,
tangent and bitangent vectors in the vertex shader.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world where most believe that humans are inferior.&lt;&#x2F;p&gt;
&lt;p&gt;This month saw a heavy focus on the web client.
An alpha release is slated for April 9th, 2020.
Lots of client refactoring was done, and experiments were run in the browser.&lt;&#x2F;p&gt;
&lt;p&gt;Some of February&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-09.html#input-event-processor-system&quot;&gt;Input Event Processor System&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html#terrain-loading-and-rendering&quot;&gt;Terrain Loading and Rendering&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html#user-interface-elements&quot;&gt;User Interface Elements&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html#the-webgl-renderer&quot;&gt;The WebGL Renderer&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;055-2020-02-23.html#rendering-meshes&quot;&gt;Rendering Meshes&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;055-2020-02-23.html#rendering-terrain&quot;&gt;Rendering Terrain&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;February&#x27;s full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-09.html&quot;&gt;#053&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html&quot;&gt;#054&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;055-2020-02-23.html&quot;&gt;#055&lt;&#x2F;a&gt;,&lt;&#x2F;p&gt;
&lt;h3 id=&quot;will&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;&quot;&gt;Will&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#will&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;will_network_play.png&quot; alt=&quot;Will Network Play Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;&quot;&gt;Will&lt;&#x2F;a&gt; is a 2.5D moddable action &#x2F; adventure game.&lt;&#x2F;p&gt;
&lt;p&gt;This month Azriel wrote a post about how decisions were made when &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2020&#x2F;02&#x2F;29&#x2F;designing-network-play&#x2F;&quot;&gt;designing
network play&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea-s-new-trailer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Way of Rhea&#x27;s New Trailer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea-s-new-trailer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;&lt;img src=&quot;way-of-rhea.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is an upcoming puzzle platformer that takes place
in a world where you can only interact with objects that match your current color.&lt;&#x2F;p&gt;
&lt;p&gt;This month, an updated trailer with new character art was released.
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Check it out on the game&#x27;s Steam page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;noodle-cat&quot;&gt;Noodle Cat&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#noodle-cat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;noodle-cat.gif&quot; alt=&quot;Noodle game physics demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&quot;&gt;@Fryer00&lt;&#x2F;a&gt; tweeted a bunch of updates about their
WIP Box2D physics game prototype:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Day 45: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1225829271597395971&quot;&gt;contraction mechanic&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Day 46: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1227327016380305415&quot;&gt;turn&#x2F;flip&#x2F;swap-front-and-back movement mechanics&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Day 48: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1232181181690654720&quot;&gt;food&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;garden-january-and-february-devlogs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;: January and February Devlogs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-january-and-february-devlogs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden-pyramids.jpg&quot; alt=&quot;pyramid generation demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;january&quot;&gt;January&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;february&quot;&gt;February&lt;&#x2F;a&gt; devlogs
were posted by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt;.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🌘 Physically-based shading&lt;&#x2F;li&gt;
&lt;li&gt;🕹 3D model loading and texturing for richer environments&lt;&#x2F;li&gt;
&lt;li&gt;💦 Soil moisture content&lt;&#x2F;li&gt;
&lt;li&gt;🌠 Alpha mipmapping&lt;&#x2F;li&gt;
&lt;li&gt;and more info regarding some game mechanics as well&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;grumpy-visitors-first-update-winter-progress&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mvlabat.github.io&#x2F;2020-03-02-winter-update&#x2F;&quot;&gt;Grumpy Visitors First Update. Winter Progress&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#grumpy-visitors-first-update-winter-progress&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;grumpy_missiles.jpg&quot; alt=&quot;Magic missiles in Grumpy Visitors&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Grumpy Visitors is a top-down 2D co-op action&#x2F;arcade game
highly inspired by Evil Invasion. It runs on Amethyst game engine.&lt;&#x2F;p&gt;
&lt;p&gt;This winter Grumpy Visitors received some updates
with the focus on graphics and UI:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Repainting mage sprites with shaders&lt;&#x2F;li&gt;
&lt;li&gt;New missiles graphics&lt;&#x2F;li&gt;
&lt;li&gt;Monsters death animations&lt;&#x2F;li&gt;
&lt;li&gt;Modal windows for menu UI&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check them out in the &lt;a href=&quot;https:&#x2F;&#x2F;mvlabat.github.io&#x2F;2020-03-02-winter-update&#x2F;&quot;&gt;latest winter devlog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;make-china-great-again&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;globalgamejam.org&#x2F;2020&#x2F;games&#x2F;make-china-great-again-5&quot;&gt;Make China Great Again&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#make-china-great-again&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;china.png&quot; alt=&quot;cities, planes and keys&quot; &#x2F;&gt;
&lt;em&gt;Turn back planes to the port, by clicking right keys to the virus beat.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;globalgamejam.org&#x2F;2020&#x2F;games&#x2F;make-china-great-again-5&quot;&gt;Make China Great Again&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;global-game-jam-2020&quot;&gt;source&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is a GlobalGameJam game written using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;mcga.psichix.io&quot;&gt;Try it online&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;pGLOWrpg&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pglowrpg.gif&quot; alt=&quot;37 possible unique biomes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt; tweeted a bunch of updates about their &amp;quot;pGLOWrpg&amp;quot; project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1218940947070885888&quot;&gt;proper river attractors&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1218634118516396033&quot;&gt;floodfill and distinguished regions&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1229785132455878656&quot;&gt;extravagant dev environment&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1228659336349655042&quot;&gt;optimized pathfinding, unique regions&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1231139098288697345&quot;&gt;Reworked noise and erosion&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1231640620072128512&quot;&gt;37 possible unique biomes&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;&lt;img src=&quot;roboinstructus.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; puzzle game -
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.23 and 1.24 versions were released&lt;&#x2F;a&gt;:
dependency updates, bugfixes and performance optimizations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recall-singularity-february-progress&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;Recall Singularity: February Progress&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#recall-singularity-february-progress&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;recall-singularity.png&quot; alt=&quot;Harvesting and refining some Gold&quot; &#x2F;&gt;
&lt;em&gt;Harvesting and refining some Gold.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a &amp;quot;The Recall Singularity&amp;quot; game
about designing autonomous factory ships and stations.
This month, they published a devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;&amp;quot;Space Factory Building in Feb 2020&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Networking improvements;&lt;&#x2F;li&gt;
&lt;li&gt;Godot-Rust interaction improvements;&lt;&#x2F;li&gt;
&lt;li&gt;Players can now control their ships and create new ones;&lt;&#x2F;li&gt;
&lt;li&gt;Top-down view and flying HUD;&lt;&#x2F;li&gt;
&lt;li&gt;Asteroids procgen.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, the post gives an overview of the project&#x27;s history,
talks about community building, and overcoming personal challenges.&lt;&#x2F;p&gt;
&lt;p&gt;Check out stream highlights on &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCzgUlowiaKXJiNIAi0c9Qsg&#x2F;videos&quot;&gt;Tom&#x27;s YouTube channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f9m00v&#x2F;space_factory_game_in_rust_godot_the_recall&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;for-the-quest&quot;&gt;For the Quest&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#for-the-quest&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;for-quest.gif&quot; alt=&quot;walking demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt; tweeted a bunch of updates
about their &amp;quot;For the Quest&amp;quot; (working title) game project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Switched to the &lt;code&gt;specs&lt;&#x2F;code&gt; ECS;&lt;&#x2F;li&gt;
&lt;li&gt;Added a few new object models and
an 8-direction animated sprite with idle animations;&lt;&#x2F;li&gt;
&lt;li&gt;The map renderer is now powered by a chunking system to fix clipping issues;&lt;&#x2F;li&gt;
&lt;li&gt;Added basic collision detection.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;fix-your-time-step-in-rust-and-ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&#x2F;fix-your-timestep-rust-ggez&#x2F;&quot;&gt;Fix Your Time Step in Rust and GGEZ&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fix-your-time-step-in-rust-and-ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&#x2F;fix-your-timestep-rust-ggez&#x2F;&quot;&gt;&lt;img src=&quot;fyt-ggez.gif&quot; alt=&quot;Demonstration of interpolation&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&quot;&gt;joetsoi&lt;&#x2F;a&gt; has written &lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&#x2F;fix-your-timestep-rust-ggez&#x2F;&quot;&gt;a blog post&lt;&#x2F;a&gt;, demonstrating how the concepts
from the well-known &#x27;&lt;a href=&quot;https:&#x2F;&#x2F;gafferongames.com&#x2F;post&#x2F;fix_your_timestep&#x2F;&quot;&gt;Fix Your Timestep&lt;&#x2F;a&gt;&#x27; article can be applied
when making games with Rust and GGEZ.&lt;&#x2F;p&gt;
&lt;p&gt;The examples are very well explained, and can easily be translated
to other engines, so it&#x27;s worth checking out even if you&#x27;re not a GGEZ user!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-rustsim-9-nov-2019-to-feb-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2020&#x2F;03&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;This Month in RustSim #9 (Nov 2019 to Feb 2020)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-rustsim-9-nov-2019-to-feb-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;logo_salva_full.svg&quot; alt=&quot;Salva logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Main updates:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;New pressure resolution methods.&lt;&#x2F;li&gt;
&lt;li&gt;Viscosity, surface tension, and elasticity can now be simulated.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to remove fluids&#x2F;boundaries&#x2F;collider couplings after their addition.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to add particles to a fluid that has already been created.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Watch a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=NBoSEanWHE4&quot;&gt;&amp;quot;Salva 0.2: DFSPH, viscosity, surface tension, and elasticity&amp;quot;&lt;&#x2F;a&gt;
demo video.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2020&#x2F;03&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;Read the full devlog here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fcyp7c&#x2F;this_month_in_rustsim_9_november_february_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;savefile-0-6-1&quot;&gt;savefile 0.6.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#savefile-0-6-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;savefile&quot;&gt;savefile&lt;&#x2F;a&gt; is a serialization crate used to effortlessly serialize rust crates
and enums into a binary format. Anything implementing the &lt;code&gt;Write&lt;&#x2F;code&gt; trait can
be serialized and deserialized. First-class versioning support and introspection
are some other features available.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.6.1 includes a fix and should be updated to if compilation using
the savefile-derive crate produces a &amp;quot;&lt;code&gt;SaveFileError&lt;&#x2F;code&gt; not found&amp;quot; compiler error.&lt;&#x2F;p&gt;
&lt;p&gt;For details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;avl&#x2F;savefile&quot;&gt;github page&lt;&#x2F;a&gt; or the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;savefile&#x2F;0.6.1&#x2F;savefile&quot;&gt;savefile documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;specs-0-16&quot;&gt;specs 0.16&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#specs-0-16&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt; is an entity-component system (ECS) library, designed for high
performance. This update increases the MSRV to 1.38 and removes the &lt;code&gt;&amp;quot;nightly&amp;quot;&lt;&#x2F;code&gt;
feature.&lt;&#x2F;p&gt;
&lt;p&gt;In this version, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shred&#x2F;issues&#x2F;182&quot;&gt;panic message has been improved&lt;&#x2F;a&gt; to include
the name of the type that is accessed on stable Rust, as well as suggestions for
how to fix the issue. Prior to &lt;code&gt;specs 0.16&lt;&#x2F;code&gt;, retrieving a resource that had not
been added to the &lt;code&gt;World&lt;&#x2F;code&gt; panics with an obscure &lt;em&gt;&amp;quot;resource not found&amp;quot;&lt;&#x2F;em&gt; message,
and the &lt;code&gt;&amp;quot;nightly&amp;quot;&lt;&#x2F;code&gt; feature was necessary to discover what resource that is.&lt;&#x2F;p&gt;
&lt;p&gt;In addition, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&#x2F;issues&#x2F;673&quot;&gt;&lt;code&gt;Send&lt;&#x2F;code&gt; and &lt;code&gt;Sync&lt;&#x2F;code&gt; trait constraints are
removed&lt;&#x2F;a&gt; from resources and &lt;code&gt;Component&lt;&#x2F;code&gt;s when the
&lt;code&gt;&amp;quot;parallel&amp;quot;&lt;&#x2F;code&gt; feature is disabled -- enabling types such as
&lt;code&gt;wasm_bindgen::JsValue&lt;&#x2F;code&gt; to be used with non-parallel &lt;code&gt;specs&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For more details, please see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&#x2F;blob&#x2F;0.16.1&#x2F;CHANGELOG.md#0161-2020-02-18&quot;&gt;&lt;code&gt;specs&lt;&#x2F;code&gt; changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;riven&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MingweiSamuel&#x2F;Riven&quot;&gt;Riven&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#riven&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;riot-api.jpg&quot; alt=&quot;Riot Games API logo: steampunk&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MingweiSamuel&#x2F;Riven&quot;&gt;riven&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;developer.riotgames.com&#x2F;&quot;&gt;Riot API&lt;&#x2F;a&gt; library for Rust.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Riven handles rate limits and large requests with ease.
Data structs and endpoints are automatically generated from the
&lt;a href=&quot;https:&#x2F;&#x2F;developer.riotgames.com&#x2F;api-methods&quot;&gt;Riot API Reference&lt;&#x2F;a&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;www.mingweisamuel.com&#x2F;riotapi-schema&#x2F;tool&quot;&gt;Swagger&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;exj48k&#x2F;riven_100_my_rust_lib_for_the_riot_games_league&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;weasel&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&quot;&gt;weasel&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weasel&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&quot;&gt;weasel&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&quot;&gt;@Trisfald&lt;&#x2F;a&gt; is a customizable battle system for turn-based games.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simple way to define the combat&#x27;s rules,
taking advantage of Rust&#x27;s strong type system.&lt;&#x2F;li&gt;
&lt;li&gt;Battle events are collected into a timeline to support save and restore,
replays, and more.&lt;&#x2F;li&gt;
&lt;li&gt;Client&#x2F;server architecture; all battle events are verified by the server.&lt;&#x2F;li&gt;
&lt;li&gt;Minimal performance overhead.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea behind this crate is to provide a structured
and safe framework to manage the game state.
Users can create a battle and evolve it by applying events.
Then, weasel takes care of keeping a historical timeline.
It also help with serializing&#x2F;deserializing save files
or sharing and verifying events between clients and server.
The game logic is defined through traits, which is nice because
it can benefit from Rust&#x27;s type system and compile time checks.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; to see how it works in practice.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shipyard-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shipyard-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; is an ECS library built on top of sparse sets.&lt;&#x2F;p&gt;
&lt;p&gt;Some of &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fbo8wf&#x2F;shipyard_03_release&quot;&gt;the v0.3 updates&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;There&#x27;s now a &lt;a href=&quot;https:&#x2F;&#x2F;leudz.github.io&#x2F;shipyard&#x2F;book&quot;&gt;User guide&lt;&#x2F;a&gt; to explain what can be done
and how;&lt;&#x2F;li&gt;
&lt;li&gt;No need to register components anymore,
storages are now automatically created when they are first accessed;&lt;&#x2F;li&gt;
&lt;li&gt;!Send and !Sync components;&lt;&#x2F;li&gt;
&lt;li&gt;Unique components;&lt;&#x2F;li&gt;
&lt;li&gt;Components sorting;&lt;&#x2F;li&gt;
&lt;li&gt;no_std support.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;image-v0-23&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;image-rs&#x2F;image&quot;&gt;image&lt;&#x2F;a&gt; v0.23&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#image-v0-23&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;image-rs&#x2F;image&quot;&gt;image&lt;&#x2F;a&gt; crate provides basic imaging processing functions and methods
for converting to and from image formats.&lt;&#x2F;p&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;blog.image-rs.org&#x2F;2020&#x2F;02&#x2F;07&#x2F;release-0.23.0.html&quot;&gt;the release blog for 0.23&lt;&#x2F;a&gt;!
It comes with improvements to error handling,
and the buffer and loading interfaces.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;superluminal-perf-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;embarkStudios&#x2F;superluminal-perf-rs&quot;&gt;superluminal-perf-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#superluminal-perf-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;superlumunal.png&quot; alt=&quot;Logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;superluminal.eu&#x2F;&quot;&gt;Superluminal&lt;&#x2F;a&gt; is a next-generation CPU sampling profiler
for C&#x2F;C++ on Windows
that has &lt;a href=&quot;https:&#x2F;&#x2F;superluminal.eu&#x2F;rust&quot;&gt;recently got an official Rust support&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;superluminal-app.png&quot;&gt;&lt;img src=&quot;superluminal-app.png&quot; alt=&quot;UI example&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Embark have recently open-sourced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;embarkStudios&#x2F;superluminal-perf-rs&quot;&gt;superluminal-perf-rs&lt;&#x2F;a&gt; -
a small crate that integrates with Superluminal profiler on Windows.&lt;&#x2F;p&gt;
&lt;p&gt;Example usage:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;superluminal_perf::begin_event(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;my-event&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;superluminal_perf::end_event();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;superluminal_perf::begin_event(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;my-event2&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc2&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;superluminal_perf::end_event();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;rust-on-rg-300-consoles&quot;&gt;Rust on &lt;a href=&quot;https:&#x2F;&#x2F;retrogame300.com&#x2F;products&#x2F;retro-game-300&quot;&gt;RG-300 Consoles&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-on-rg-300-consoles&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Rtf8ZEVALjQ&quot;&gt;&lt;img src=&quot;rg-300.jpeg&quot; alt=&quot;Real-world demo of using Rust on RG-300&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fabgof&#x2F;wrote_a_rust_program_that_demonstrates_graphics&quot;&gt;@alexpdp7 shared their experience&lt;&#x2F;a&gt;
of writing an interactive application in Rust
for the retro &lt;a href=&quot;https:&#x2F;&#x2F;retrogame300.com&#x2F;products&#x2F;retro-game-300&quot;&gt;RG-300&lt;&#x2F;a&gt; console.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The process is complex for a lot of reasons:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cross-compiling for MIPS is tough &amp;lt;...&amp;gt;&lt;&#x2F;li&gt;
&lt;li&gt;Graphics is done through the Linux framebuffer &amp;lt;...&amp;gt;&lt;&#x2F;li&gt;
&lt;li&gt;Sound uses old-style Linux OSS &amp;lt;...&amp;gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It&#x27;s a bit clunky, but it works!
There are quite a few devices with very similar hardware
this should work with.
It should be possible to make simple games for such devices,
which I find particularly motivating :)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can find a working example that does graphics, sound and controls
with some explanations at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexpdp7&#x2F;retrofw2-rust&quot;&gt;alexpdp7&#x2F;retrofw2-rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Rtf8ZEVALjQ&quot;&gt;See it in action here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crow-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crow-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; is a pixel perfect 2D rendering engine based on OpenGL.
It is designed to be easy to use while still allowing
for nearly everything one might want while using pixel art.&lt;&#x2F;p&gt;
&lt;p&gt;A showcase game is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lcnr&#x2F;akari&quot;&gt;being developed&lt;&#x2F;a&gt; with crow.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;crow-akari.png&quot; alt=&quot;Akari WIP screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad-rust-2d-engine-2020-roadmap&quot;&gt;miniquad: &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;34230612&quot;&gt;&amp;quot;Rust 2D Engine 2020 Roadmap&amp;quot;&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad-rust-2d-engine-2020-roadmap&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;miniquad-sample.png&quot; alt=&quot;mainloop async&#x2F;await experiment in macroquad&quot; &#x2F;&gt;
&lt;em&gt;mainloop async&#x2F;await experiment in macroquad&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a safe cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;This month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;miniquad and related crates set up yearly goals:
&lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;34230612&quot;&gt;&amp;quot;Rust 2D Engine 2020 Roadmap&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A first try on the higher-level engine design: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;126773535&#x2F;examples&#x2F;flappy_bird.rs&quot;&gt;flappy bird.rs&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&#x2F;status&#x2F;1223602773532520448&quot;&gt;miniquad was successfully built for Android&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;luminance-v0-39&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fbe3l0&#x2F;luminance039&quot;&gt;luminance v0.39&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#luminance-v0-39&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&quot;&gt;@phaazon&lt;&#x2F;a&gt; is a type-safe, type-level and stateless
graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fbe3l0&#x2F;luminance039&quot;&gt;luminance v0.39 got released&lt;&#x2F;a&gt;.
Updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the concept of layering in textures.
Textures’ layerings (i.e. either flat or arrayed) is now encoded directly
in the dimension of the texture.&lt;&#x2F;li&gt;
&lt;li&gt;Add support for texture arrays. They can now be passed constructed
and passed as uniforms to shader programs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;glium-v0-26&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&quot;&gt;glium&lt;&#x2F;a&gt; v0.26&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glium-v0-26&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&quot;&gt;glium&lt;&#x2F;a&gt; is an elegant and safe OpenGL wrapper.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s no longer actively developed by its original author,
but maintenance is continued by the surrounding community.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#version-0260-2020-02-09&quot;&gt;glium v0.26 was released&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Updated glutin to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#version-0230-2020-02-06&quot;&gt;version 0.23.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Removal of some unsound code that rustc warns about.&lt;&#x2F;li&gt;
&lt;li&gt;Report the precise shader stage in which a shader failed compilation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gfx-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;wgpu-logo.png&quot; alt=&quot;wgpu-rs logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;re some of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt; ecosystem February updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Check out a new &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&quot;&gt;&amp;quot;Lear WGPU&amp;quot; tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;@kvark&lt;&#x2F;a&gt; gave a &amp;quot;Building WebGPU with Rust&amp;quot; talk at FOSDEM.
&lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;rust_webgpu&quot;&gt;You can watch the recorded video here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;rust_webgpu&quot;&gt;&lt;img src=&quot;wgpu-talk.png&quot; alt=&quot;A slide from the talk: &amp;quot;wgpu-rs project structure&amp;quot;&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; is a new experimental shader translation library
for the needs of gfx-rs project and WebGPU.
It&#x27;s meant to provide a safe and performant way
of converting to and from &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Standard_Portable_Intermediate_Representation&quot;&gt;SPIR-V&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The abovementioned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&quot;&gt;Oxidator&lt;&#x2F;a&gt; RTS game is based on wgpu.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.koesters.xyz&#x2F;timo&#x2F;nbodysim&quot;&gt;nbodysim&lt;&#x2F;a&gt; is a realtime 3D N-Body-Simulation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;n-body-sim.gif&quot; alt=&quot;Simple demo with two bodies&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nannou-org&#x2F;nannou&quot;&gt;nannou&lt;&#x2F;a&gt; in an open-source creative-coding toolkit for Rust.
This month its graphics backend &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nannou-org&#x2F;nannou&#x2F;pull&#x2F;452&quot;&gt;was transitioned to wgpu&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nannou-org&#x2F;nannou&#x2F;blob&#x2F;9596fd31b&#x2F;examples&#x2F;simple_draw.rs&quot;&gt;&lt;img src=&quot;nannou.gif&quot; alt=&quot;nannou demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;pull&#x2F;179&quot;&gt;An extremely helpful &lt;code&gt;vertex_attr_array&lt;&#x2F;code&gt; macro was added to wgpu&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;After &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&#x2F;pull&#x2F;1997&quot;&gt;the support for unstable WebIDL was added to wasm-bindgen&lt;&#x2F;a&gt;
the work on integrating web-sys into wgpu-rs has begun.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tikan&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;tendsinmende&#x2F;tikan&quot;&gt;tikan&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tikan&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;tendsinmende&#x2F;tikan&quot;&gt;tikan&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&quot;&gt;@siebencorgie&lt;&#x2F;a&gt; is a Rust&#x2F;Vulkan based 3d engine that tries
to use high-resolution voxels to real-time ray-trace the final picture.&lt;&#x2F;p&gt;
&lt;p&gt;This month a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;98XdA3BpWZU&quot;&gt;new video was released&lt;&#x2F;a&gt;
to showcase new voxel renderer:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;98XdA3BpWZU&quot;&gt;&lt;img src=&quot;tikan-youtube.png&quot; alt=&quot;youtube screenshot: glowing spheres&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;patchwork&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RedSquirrelsNut&#x2F;patchwork&quot;&gt;Patchwork&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#patchwork&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RedSquirrelsNut&#x2F;patchwork&quot;&gt;Patchwork&lt;&#x2F;a&gt; is a convenient crate for drawing tiles from a tilesheet
using a &#x27;SpriteBatch&#x27; with &lt;code&gt;ggez&lt;&#x2F;code&gt;.
It is an update to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;repnop&#x2F;mosaic&quot;&gt;the &lt;code&gt;Mosaic&lt;&#x2F;code&gt; crate by @Repnop&lt;&#x2F;a&gt;,
which is no longer maintained.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kas-gui-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; GUI v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kas-gui-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;kas.png&quot; alt=&quot;KAS widgets example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt;, the tool&lt;strong&gt;K&lt;&#x2F;strong&gt;it &lt;strong&gt;A&lt;&#x2F;strong&gt;bstraction &lt;strong&gt;S&lt;&#x2F;strong&gt;ystem, is a general-purpose GUI toolkit.&lt;&#x2F;p&gt;
&lt;p&gt;0.3 is a decent sized release, focussing primarily on drawing, themes and layouts.
Highlights include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a new FlatTheme,&lt;&#x2F;li&gt;
&lt;li&gt;many small visual improvements,&lt;&#x2F;li&gt;
&lt;li&gt;access to medium-level and low-level drawing APIs for custom widgets,&lt;&#x2F;li&gt;
&lt;li&gt;window size limits,&lt;&#x2F;li&gt;
&lt;li&gt;and switchable themes and colour schemes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;pushrod-v0-2-27-sdl2-based-gui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KenSuenobu&#x2F;rust-pushrod&quot;&gt;Pushrod&lt;&#x2F;a&gt; v0.2.27: SDL2-based GUI&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pushrod-v0-2-27-sdl2-based-gui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pushrod-layout.png&quot; alt=&quot;Layout example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KenSuenobu&#x2F;rust-pushrod&quot;&gt;Pushrod&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KenSuenobu&quot;&gt;@KenSuenobu&lt;&#x2F;a&gt;
is a Cross Platform UI Widget Library for Rust that uses SDL2
and leans heavily towards the KISS principle.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f1fcya&#x2F;pushrod_0227_sdl2based_gui&quot;&gt;0.2.27 was released&lt;&#x2F;a&gt;.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved documentation &amp;amp; examples;&lt;&#x2F;li&gt;
&lt;li&gt;Tile Widget;&lt;&#x2F;li&gt;
&lt;li&gt;Tab Bar Widget.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;oxygengine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; got new version 0.7.0 with
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fd7kza&#x2F;oxygengine_visual_novel_and_animation_modules_are&quot;&gt;Visual Novel and Animation&lt;&#x2F;a&gt;
modules that allows users to focus on making VN games easily,
with virtually no code needed to be written -
it is a groundbreaking start in developing a set of tools
for the professional game developers.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;As few might notice, Oxygengine is starting to get more complex modules,
there is a reason for that - this engine is made with one big goal in mind,
which is: to became a tool used by professionals,
giving easy way to make complex games easily,
therefore the current milestone is about bringing a basic game editor
with first game maker module along with blueprints-like visual scripting
and animation tool - the most important tools for visual novel game designers!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-visual-novel-teaser.gif&quot; alt=&quot;Oxygengine Visual Novel Teaser&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can find sources of the project that shows how to use these modules
in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;visual-novel-testbed&quot;&gt;engine demo projects&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Another thing that was shipped in last milestone was a module that allows
to make and run your game logic designed in Blueprint-like visual scripting.
Next milestone is focused on delivering a base for professional modular
game editor that will allow users to easily create a complex and animated
Visual Novel games using Visual Scripting -
game makers for another genres are currently in planning stage.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bracket-lib-rltk-roguelike-tutorial&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;bracket-lib (RLTK)&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bracket-lib-rltk-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;roguelike-tutorial.jpg&quot; alt=&quot;Different font makes the log easier to read&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes more than 70 chapters now and continues to grow!&lt;&#x2F;p&gt;
&lt;p&gt;Some of February&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;C71: adds easy to use, colored, logging and an achievement counter system
to track your progress through the dungeon.&lt;&#x2F;li&gt;
&lt;li&gt;C72: 2nd layer (VGA) for the log, refactors for batched draw calls.&lt;&#x2F;li&gt;
&lt;li&gt;C73: Systems use Specs dispatch on native, and single-thread on WASM.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;bracket-lib&lt;&#x2F;a&gt; (previously &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk_rs&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
is a Rust implementation of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month the project was renamed and split into many crates:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is RLTK, renamed because it is increasingly finding
usage outside of just Roguelikes.
It&#x27;s also been divided into a number of crates,
to make it easy to pick-and-choose the features you need.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rltk&lt;&#x2F;code&gt; crate wraps bracket-lib and re-exports
in the &lt;code&gt;rltk::&lt;&#x2F;code&gt; and &lt;code&gt;rltk::prelude&lt;&#x2F;code&gt; namespace.
This preserves compatibility with all existing RLTK projects.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-algorithm&lt;&#x2F;code&gt;-traits exposes the traits required
for the various algorithm systems in other crates.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-color&lt;&#x2F;code&gt; is my RGB&#x2F;HSV color management system.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-geometry&lt;&#x2F;code&gt; exposes various geometric primitives and helpers.
Supports other crates.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-noise&lt;&#x2F;code&gt; is a port of Auburn&#x27;s FastNoise to Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-pathfinding&lt;&#x2F;code&gt; provides a high-performance
A* (A-Star) pathing system, as well as Dijkstra maps.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-random&lt;&#x2F;code&gt; is a dice-oriented random number generator,
including parsing of RPG-style dice strings such as 3d6+12.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fbdg7d&#x2F;rltk_is_now_bracketlib&quot;&gt;Read the full announcement post here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;neovide&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kethku&#x2F;neovide&quot;&gt;Neovide&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#neovide&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;neovide-cursor.gif&quot; alt=&quot;Neovide Animated Cursor Example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kethku&#x2F;neovide&quot;&gt;Neovide&lt;&#x2F;a&gt; is a frontend for neovim that brings a lot of visual niceties.
It uses vulkan and skia for rendering.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;75&quot;&gt;#75 &amp;quot;Standardised API for sharing thread pools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;89&quot;&gt;#89 &amp;quot;Moving ecs_bench to GDWG&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;90&quot;&gt;#90 &amp;quot;Rust on Consoles&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;91&quot;&gt;#91 &amp;quot;Should the wg volunteer to maintain winapi?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&quot;&gt;rust-gamedev&#x2F;arewegameyet&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;100&quot;&gt;#100 &amp;quot;Categorise games&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;252&quot;&gt;#252 &amp;quot;Split games and resources into categories&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;261&quot;&gt;#261 &amp;quot;Make .rs domain primary?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;not-cool.png&quot; alt=&quot;A screenshot of the beginning of the game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratys.itch.io&#x2F;its-not-cool&quot;&gt;&amp;quot;It&#x27;s Not Cool&amp;quot;&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ludum_Dare&quot;&gt;LD42&lt;&#x2F;a&gt; turn-based strategy game
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ratysz&quot;&gt;@Ratysz&lt;&#x2F;a&gt;.
It&#x27;s based on the GGEZ game engine.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Assume role of the mayor of a small coastal city, caught
in the middle of hilariously rapid global warming spurt.&lt;&#x2F;p&gt;
&lt;p&gt;Build a freezer for the polar bears!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ratysz&#x2F;ludumdare42&quot;&gt;The source code can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;977dpc&#x2F;my_ludum_dare_42_jam_entry_is_pure_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;977g2t&#x2F;my_ludum_dare_42_jam_entry_is_pure_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fe03sb&#x2F;this_month_in_rust_gamedev_7_february_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1235645370350227456&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #6 - January 2020</title>
            <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/006/</link>
            <guid>https://gamedev.rs/news/006/</guid>
            <description>&lt;p&gt;Welcome to the sixth issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;ready-at-dawn-studios-is-hiring&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;Ready at Dawn Studios&lt;&#x2F;a&gt; is Hiring&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ready-at-dawn-studios-is-hiring&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;&lt;img src=&quot;rad.png&quot; alt=&quot;Ready at Dawn logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&quot;&gt;@AndreaPessino&lt;&#x2F;a&gt; have announced that &lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;Ready At Dawn Studios&lt;&#x2F;a&gt; is hiring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&#x2F;status&#x2F;1219341435238895616&quot;&gt;contractors with preferred experience in Rust (remote)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&#x2F;status&#x2F;1223023108929409024&quot;&gt;and simulation&#x2F;physics coder (on-site)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;See the linked Twitter threads for details.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rustacean-station-rust-for-aaa-game-dev&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;011-jake-yoshua-stjepan&quot;&gt;Rustacean Station: Rust for AAA Game Dev&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustacean-station-rust-for-aaa-game-dev&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;rustacean-station.jpg&quot; alt=&quot;Rustacean Station logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ca1ne&quot;&gt;Jake Shadle&lt;&#x2F;a&gt;, a veteran of DICE&#x2F;Frostbite,
was interviewed at &lt;a href=&quot;https:&#x2F;&#x2F;barcelona.rustfest.eu&quot;&gt;RustFest 2019&lt;&#x2F;a&gt; by the &lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;011-jake-yoshua-stjepan&quot;&gt;Rustacean Station&lt;&#x2F;a&gt; podcast
on using Rust for game development at Embark Studios.
Topics&#x2F;timestamps:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;[01:25] What is yours (and Embark’s) background in game development?&lt;&#x2F;li&gt;
&lt;li&gt;[02:14] What is the relevance of the Frostbite engine
and what is your experience with it?&lt;&#x2F;li&gt;
&lt;li&gt;[04:15] What makes you think that Rust as a language is suitable
for game development?&lt;&#x2F;li&gt;
&lt;li&gt;[06:13] How is parallelism employed in a game engine
on the scale of Frostbite?&lt;&#x2F;li&gt;
&lt;li&gt;[07:07] Where is the Rust library ecosystem lacking for your use case,
and what crates are you making use of?&lt;&#x2F;li&gt;
&lt;li&gt;[11:13] Why is Embark interested in WebAssembly?&lt;&#x2F;li&gt;
&lt;li&gt;[14:20] How can someone get in touch or learn more about Embark?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;011-jake-yoshua-stjepan&quot;&gt;Listen the eposide here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren1.png&quot; alt=&quot;Morning landscape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;^ Morning landscape&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG
inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;At the end of January, Veloren 0.5 was released!
Most of January was spent on preparing for this.
It was also the first anniversary of This Week in Veloren!
There has been a devblog each week since the end of January last year.
Here are some of the big changes in this release:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;- Added initial region system implementation
&lt;&#x2F;span&gt;&lt;span&gt;- Added moon and clouds
&lt;&#x2F;span&gt;&lt;span&gt;- Added proper SFX system
&lt;&#x2F;span&gt;&lt;span&gt;- Added changelog
&lt;&#x2F;span&gt;&lt;span&gt;- Added Scrolling Combat Text (SCT) &amp;amp; Settings for it
&lt;&#x2F;span&gt;&lt;span&gt;- Added options to disable clouds and to use cheaper water rendering
&lt;&#x2F;span&gt;&lt;span&gt;- Added client-side character saving
&lt;&#x2F;span&gt;&lt;span&gt;- Added a localization system to provide multi-language support to voxygen
&lt;&#x2F;span&gt;&lt;span&gt;- Added fullscreen and window size to settings so that they can be persisted
&lt;&#x2F;span&gt;&lt;span&gt;- Added coverage based scaling for pixel art 28 new mobs
&lt;&#x2F;span&gt;&lt;span&gt;- Added waypoints
&lt;&#x2F;span&gt;&lt;span&gt;- Added pathfinding to NPCs
&lt;&#x2F;span&gt;&lt;span&gt;- Overhauled NPC AI
&lt;&#x2F;span&gt;&lt;span&gt;- Pets now attack enemies and defend their owners
&lt;&#x2F;span&gt;&lt;span&gt;- Added collars to tame wild animals
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can read more about some specific topics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-49#how-to-effectively-write-a-proposal-for-the-game-design-team-by-silentium&quot;&gt;How to Effectively Write a Proposal for the Game Design Team&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-50#iterator-problems-with-angelonfira-and-sharp&quot;&gt;Iterator Problems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-50#erosion-worldgen-updates-by-sharp&quot;&gt;Erosion Worldgen Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52#airshipper-progress-by-songtronix&quot;&gt;Airshipper Progress&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52#veloren-for-all-of-us-localization-system-by-ender&quot;&gt;Veloren For All Of Us: Localization System&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52#1-year-of-this-week-in-veloren-by-angelonfira&quot;&gt;1 Year of This Week in Veloren&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;veloren2.png&quot; alt=&quot;Sitting on the edge&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In February, the developers hope to push forward to 0.6
with a strong intro meeting.
Authentication is slated to be released, as well as the Airshipper GUI beta.
Hopefully, we also see controller support and improvements
to the sound system as well.&lt;&#x2F;p&gt;
&lt;p&gt;January&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-49&quot;&gt;#49&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-50&quot;&gt;#50&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-51&quot;&gt;#51&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52&quot;&gt;#52&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;physically-based-temperature-simulation-for-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2020&#x2F;01&#x2F;10&#x2F;Physically-based-temperature-simulation-for-games.html&quot;&gt;Physically Based Temperature Simulation For Games&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#physically-based-temperature-simulation-for-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dwarfs.gif&quot; alt=&quot;Dwarfs, cow and campfire demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&quot;&gt;Alexandru Ene&lt;&#x2F;a&gt; is working on a dwarf colony management game.
This month, a
&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2020&#x2F;01&#x2F;10&#x2F;Physically-based-temperature-simulation-for-games.html&quot;&gt;&amp;quot;Physically Based Temperature Simulation For Games&amp;quot;&lt;&#x2F;a&gt;
devlog was released:
how to adapt real-world thermodynamics formulas to a game
and why you may want to do it?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;micro-entertainment-pack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;c&#x2F;707330&#x2F;micro-entertainment-pack&quot;&gt;Micro Entertainment Pack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#micro-entertainment-pack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;micro-entertainment-pack.png&quot; alt=&quot;itch collection of 12 games&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;c&#x2F;707330&#x2F;micro-entertainment-pack&quot;&gt;Micro Entertainment Pack&lt;&#x2F;a&gt; is a collection of 12 tiny desktop games
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kamatsu8&quot;&gt;Liam O&#x27;Connor&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I like to watch terrible TV shows on my computer,
but often they tend to drag so I like to have something else to do
at the same time.
Thus, I developed the Micro Entertainment Pack --- fun casual games
that fit in a fraction of your screen real estate.
These games are inspired mostly by the Microsoft Plus! Entertainment packs
for Windows, but I am also throwing in some other
enjoyable titles from my days as a classic mac user.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;All games in the pack are made using Liam&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;tesserae&quot;&gt;tesserae&lt;&#x2F;a&gt; library for graphics composed
out of 8x8 2 colour tiles.
All graphics were drawn using the tesseraed editor that comes with the library.
All games use a common tileset to do all of their graphical drawing.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liamoc&#x2F;desktop_games&quot;&gt;The source code for all games is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;scales.png&quot; alt=&quot;Society scales&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt; is a new open-source project about modern day society simulation
from the bottom-up.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Each individual has its own thought model, meaning every action
has its importance and influences the environment.
Scale is not a video game, but rather a live artwork.
The world itself won&#x27;t be generated or created by the user
but is part of the project.
That way, the focus is on the world itself and not on the tools to build it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Also, check out
&lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;scale_1.html&quot;&gt;the first devlog about the author&#x27;s motivation and vision&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;em8zon&#x2F;introducing_scale&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;colony-genesis-ascii-ant-colony-sandbox&quot;&gt;Colony Genesis - ASCII Ant Colony Sandbox&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#colony-genesis-ascii-ant-colony-sandbox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;colony-genesis.png&quot; alt=&quot;New colony screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.rs&quot;&gt;Native Systems&lt;&#x2F;a&gt; is working on a &amp;quot;Colony Genesis&amp;quot; ant colony sandbox game.&lt;&#x2F;p&gt;
&lt;p&gt;Current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Procedurally generated world&lt;&#x2F;li&gt;
&lt;li&gt;Day&#x2F;night cycle and weather&lt;&#x2F;li&gt;
&lt;li&gt;Temperature, humidity, and fluid simulation&lt;&#x2F;li&gt;
&lt;li&gt;Food sources including aphid and fungus harvesting&lt;&#x2F;li&gt;
&lt;li&gt;6 castes governing ant behavior and attributes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;streamable.com&#x2F;wv5ee&quot;&gt;Watch 5 minutes of initial gameplay here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eow23i&#x2F;ascii_ant_colony_sandbox&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;snake-game-with-rust-javascript-and-webassembly&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-5e22b357ec7b&quot;&gt;Snake Game With Rust, JavaScript, and WebAssembly&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#snake-game-with-rust-javascript-and-webassembly&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;snake-course.gif&quot; alt=&quot;Final game demo: snake eats red dots&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jeremylikness&quot;&gt;@jeremylikness&lt;&#x2F;a&gt; started publishing a course
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-5e22b357ec7b&quot;&gt;&amp;quot;Snake Game With Rust, JavaScript, and WebAssembly&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We will learn how to export API implemented with Rust to JavaScript app.
We will get to know canvas rendering, applications of vectors,
and basics of game development.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;At the moment, the series consists of six articles (of eight planned):&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-929f79efc78f&quot;&gt;Game Architecture&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-2-9d729b87c186&quot;&gt;Creating Game Instance&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-3-94b618db74a3&quot;&gt;Rendering the Game&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-4-1f20ab2638c4&quot;&gt;Placing the Food&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-5-7c114ce4583a&quot;&gt;Game Loop&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-6-274a0f9bbbfe&quot;&gt;Moving the Snake&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The source code can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RodionChachura&#x2F;rust-js-snake-game&quot;&gt;in this repo&lt;&#x2F;a&gt;
and you can &lt;a href=&quot;https:&#x2F;&#x2F;rodionchachura.github.io&#x2F;rust-js-snake-game&#x2F;&quot;&gt;check out the game itself here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;12-seconds-awake&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;12-seconds-awake.psichix.io&quot;&gt;12 Seconds Awake&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#12-seconds-awake&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;12-seconds-awake.psichix.io&quot;&gt;&lt;img src=&quot;12seconds.jpeg&quot; alt=&quot;Title screen: click to play&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;12-seconds-awake.psichix.io&quot;&gt;&amp;quot;12 Seconds Awake&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is a small 2D top-down
physics-based tank war game with worms-like turn mechanics
written using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; (see &amp;quot;Oxygengine&amp;quot; section below).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;demo-web-game&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eljrq2&#x2F;12_seconds_awake_web_game_made_in_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;Tennis Academy: Dash&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dash.gif&quot; alt=&quot;menu, levels, and customers&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1218632638136754182&quot;&gt;v0.1.5 version&lt;&#x2F;a&gt;
of &amp;quot;Tennis Academy: Dash&amp;quot;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🍜 the puppy has a bowl&lt;&#x2F;li&gt;
&lt;li&gt;🛁 code refactoring and using clippy&lt;&#x2F;li&gt;
&lt;li&gt;💯 UI displaying score and other info&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cows&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pilotinpyjamas.itch.io&#x2F;cows&quot;&gt;COWs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cows&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cows.png&quot; alt=&quot;COWs screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Another Game Off submission: &lt;a href=&quot;https:&#x2F;&#x2F;pilotinpyjamas.itch.io&#x2F;cows&quot;&gt;COWs&lt;&#x2F;a&gt; is a WIP puzzle game
about turning complete cows.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome to the Logically Executed Automatic Paddock, or LEAP for short,
where we keep our cows. Whoops, did I say cow? I meant to say COW.
That stands for &amp;quot;Carry On Walking&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;I suppose all of our COWs happen to be cows too. What a coincidence!&lt;&#x2F;p&gt;
&lt;p&gt;Our COWs are bound together to solve puzzles. Some of our COWs
are advanced enough that we call them COmputational Workers (COW for short).
It&#x27;s a logical LEAP, but you&#x27;re BOUND to get it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andymac-2&#x2F;leaps-bounds&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;noodle-cat&quot;&gt;Noodle Cat&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#noodle-cat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;noodle-cat.png&quot; alt=&quot;Debug rendering of Cat&#x27;s physics parts&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&quot;&gt;@Fryer00&lt;&#x2F;a&gt; tweeted a bunch of updates about their WIP Box2D physics game prototype:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1212597726606692353&quot;&gt;snake kinematics&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1217924172346728449&quot;&gt;&amp;quot;air swimming&amp;quot; force&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;🐾 &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1216229512238829568&quot;&gt;paws grabbing&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1218167388165885952&quot;&gt;animation&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1219320622544838659&quot;&gt;Harfbuzz-based text renderer&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1213770289999437825&quot;&gt;debug rendering&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1220850604647555078&quot;&gt;interactive debugging settings&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1222794916646006784&quot;&gt;extending&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;urban-myth&quot;&gt;Urban Myth&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#urban-myth&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;cmd-tea-game.jpeg&quot; alt=&quot;relationships view mode&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cmd_tea&quot;&gt;@cmd_tea&lt;&#x2F;a&gt; tweeted about the progress
of their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SiegeLord&#x2F;RustAllegro&quot;&gt;Allegro&lt;&#x2F;a&gt;-based superhero-themed game
&amp;quot;Urban Myth&amp;quot; (working title):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cmd_tea&#x2F;status&#x2F;1218584171863519234&quot;&gt;Different viewing modes: normal, dna, knowledge, relationships&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cmd_tea&#x2F;status&#x2F;1216809496066121740&quot;&gt;Updated UI&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;akigi.png&quot; alt=&quot;Sticks that surround Pookie&#x27;s house&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world where most believe that
humans are inferior.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of January&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Autonomous NPC architecture &amp;amp; movement;&lt;&#x2F;li&gt;
&lt;li&gt;New capuchin rigged mesh and animation;&lt;&#x2F;li&gt;
&lt;li&gt;Chasing and basic combat system;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full January&#x27;s devlogs:
&lt;a href=&quot;http:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-05.html&quot;&gt;#049&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-12.html&quot;&gt;#050&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-19.html&quot;&gt;#051&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-26.html&quot;&gt;#052&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;split&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mistodon.itch.io&#x2F;split&quot;&gt;Split&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#split&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;split.png&quot; alt=&quot;gameplay screenshot: ships and asteroids&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&#x2F;status&#x2F;1216525697398853632&quot;&gt;Another entry for the Games Made Quick jam from @Mistodon&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mistodon.itch.io&#x2F;split&quot;&gt;Split&lt;&#x2F;a&gt; is a game about outrunning a supernova
and using time travel to improve your chances.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the middle of using time travel to research a dying star,
you find yourself fleeing from a supernova.
I know, who would have guessed.&lt;&#x2F;p&gt;
&lt;p&gt;On the route to safety are three When Points - time traveling stations.
This means you can retry your journey between them as many times as you like.
The faster you move between them, the further from danger you are.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;3 extremely high speed stages&lt;&#x2F;li&gt;
&lt;li&gt;Multiple variants of stages, depending on how quickly you reach them&lt;&#x2F;li&gt;
&lt;li&gt;5 different ending epilogues, based on your completion time&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=8E0PKetLEdo&quot;&gt;Check out a gameplay video here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum.jpg&quot; alt=&quot;Spider NPCs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters
and fight against the growing threats on the isle.
The game server is authoritative and written in Rust,
while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt; published a bunch of devlogs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;14&quot;&gt;#14 &amp;quot;Equipment&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;15&quot;&gt;#15 &amp;quot;Trees&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;16&quot;&gt;#16 &amp;quot;Terrain + Minimap Update&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;17&quot;&gt;#17 &amp;quot;Data Driven Entity Updates&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;&lt;img src=&quot;amethyst-logo.png&quot; alt=&quot;Amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&#x2F;realm.one&quot;&gt;Realm.One&lt;&#x2F;a&gt; is a new open-source tile-based game
written using the Amethyst game engine.
It is the first game that will be integrated
into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&#x2F;Worlds&quot;&gt;the distributed MMO platform Worlds&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Meet the first devlog:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@ryan.cjw&#x2F;adventures-with-rust-game-development-1d998c45381c&quot;&gt;&amp;quot;Adventures with Rust - Game Development&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eljx1s&#x2F;adventures_with_rust_game_development&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;realm-one.png&quot; alt=&quot;Realm.One screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published an &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2020&#x2F;01&#x2F;31&#x2F;i-choose-ui&quot;&gt;&amp;quot;I Choose UI&amp;quot;&lt;&#x2F;a&gt; devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Character selection UI lists all available characters,
with player selections highlighted.&lt;&#x2F;li&gt;
&lt;li&gt;Map selection UI lists all available maps, with a selection highlight.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=z2KG_prMJ1c&quot;&gt;Demo video&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;will-character-selection.png&quot; alt=&quot;Updated character selection UI that shows all chars&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&#x2F;status&#x2F;1219341273573863425&quot;&gt;@mvlabat shared a video&lt;&#x2F;a&gt; about the evolution
of a fragment shader for a magic missile in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;grumpy_visitors&quot;&gt;Grumpy Visitors&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&#x2F;status&#x2F;1219341273573863425&quot;&gt;&lt;img src=&quot;grumpy-visitors.png&quot; alt=&quot;Final shader&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;legendiguess.itch.io&#x2F;wall-jump&quot;&gt;&amp;quot;Wall Jump&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;legendiguess&quot;&gt;@legendiguess&lt;&#x2F;a&gt; is a simple game for WeeklyGameJam.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nothing special, just a two minutes adventure of a Wall.
Collect wall putty and return back to the house.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;wall-jump.gif&quot; alt=&quot;Wall Jump gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-1-41-profile-overrides-are-stable-now&quot;&gt;Rust 1.41: &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;cargo&#x2F;reference&#x2F;profiles.html#overrides&quot;&gt;Profile Overrides&lt;&#x2F;a&gt; are Stable Now!&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-1-41-profile-overrides-are-stable-now&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust-1-41.png&quot; alt=&quot;Rust 1.41&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Though it wasn&#x27;t mentioned in &lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2020&#x2F;01&#x2F;30&#x2F;Rust-1.41.0.html&quot;&gt;the official announcement post&lt;&#x2F;a&gt;,
Rust 1.41 brings a cargo feature
that many gamedevs have been waiting a long time for:
&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;cargo&#x2F;reference&#x2F;profiles.html#overrides&quot;&gt;profile overrides&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This feature allows you to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use optimized deps in debug build to reduce incremental build time
and get a sane FPS.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;To override the settings for all dependencies
(but not any workspace member), use the &amp;quot;*&amp;quot; package name:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span&gt;[profile.dev.package.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;opt-level &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;blockquote&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Do not optimize build-dependencies (like &lt;code&gt;syn&lt;&#x2F;code&gt;) to increase
full release build time:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span&gt;[profile.release.build-override]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;opt-level &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ew9pis&#x2F;profile_overrides_are_stable_now&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ew8htz&#x2F;announcing_rust_1410_rust_blog&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;adventuring-into-the-world-of-games-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phoward.me&#x2F;introduction&#x2F;rust&#x2F;game-development&#x2F;2020&#x2F;01&#x2F;27&#x2F;gamedev-rust.html&quot;&gt;Adventuring into the World of Games in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#adventuring-into-the-world-of-games-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MontyPatrick&quot;&gt;@MontyPatrick&lt;&#x2F;a&gt; shared their initial experience of diving into Rust GameDev
in the &lt;a href=&quot;https:&#x2F;&#x2F;phoward.me&#x2F;introduction&#x2F;rust&#x2F;game-development&#x2F;2020&#x2F;01&#x2F;27&#x2F;gamedev-rust.html&quot;&gt;&amp;quot;Adventuring into the World of Games in Rust&amp;quot;&lt;&#x2F;a&gt; blog post.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Overall, while things are still relatively new in developing games in Rust
I believe that Rust can serve as a great alternative
to languages such as C++ in the field of game development.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;translating-quake-3-into-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&#x2F;blog&#x2F;2020&#x2F;01&#x2F;quake3&quot;&gt;Translating Quake 3 into Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#translating-quake-3-into-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;q3.jpeg&quot; alt=&quot;Rusty Q3 main menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&quot;&gt;Immunant&lt;&#x2F;a&gt; published an article &lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&#x2F;blog&#x2F;2020&#x2F;01&#x2F;quake3&quot;&gt;&amp;quot;Translating Quake 3 into Rust&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Rust-loving team at &lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&quot;&gt;Immunant&lt;&#x2F;a&gt; has been hard at work on &lt;a href=&quot;https:&#x2F;&#x2F;c2rust.com&quot;&gt;C2Rust&lt;&#x2F;a&gt;,
a migration framework that takes the drudgery out of migrating to Rust.
Our goal is to make safety improvements to the translated Rust automatically
where we can, and help the programmer do the same where we cannot.
First, however, we have to build a rock-solid translator that gets
people up and running in Rust.
Testing on small CLI programs gets old eventually, so we decided
to try translating Quake 3 into Rust.
After a couple of days, we were likely the first people to ever play
Quake3 in Rust!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Check out a
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=lQjvSJLDXW4&quot;&gt;video of transpiling Q3, loading the game and playing it&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;el2z0k&#x2F;translating_quake_3_into_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;programming&#x2F;comments&#x2F;elc0f9&#x2F;translating_quake_3_into_rust&quot;&gt;&#x2F;r&#x2F;programming&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21979555&quot;&gt;Hacker News&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-code-in-unreal-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ejmahler.github.io&#x2F;rust_in_unreal&quot;&gt;Rust Code in Unreal Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-code-in-unreal-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ejmahler.github.io&#x2F;rust_in_unreal&quot;&gt;A short blog post&lt;&#x2F;a&gt; by @ejmahler about getting Rust code
integrated into Unreal Engine.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve written a full writeup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ejmahler&#x2F;UnrealEngine&#x2F;blob&#x2F;rust-modules&#x2F;RustPost&#x2F;RustInUnreal.md&quot;&gt;here&lt;&#x2F;a&gt;, which includes
a full demo project and all the necessary engine changes.
You’ll need to be logged into GitHub with an account that has access
to the Unreal Engine source code.
If not, the link will look like a 404 – but it’s easy
to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EpicGames&#x2F;Signup&quot;&gt;request access&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As a quick summary of features I’ve found to work:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Compiling a Rust crate as an Unreal Engine Module&lt;&#x2F;li&gt;
&lt;li&gt;C++ Unreal modules linking to our Rust crate&lt;&#x2F;li&gt;
&lt;li&gt;Automatic rebuilding C++ and binaries that depend on Rust code
when that Rust code changes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;emp0su&#x2F;proof_of_concept_rust_code_in_unreal_engine&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;writing-a-4k-intro-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codeslow.com&#x2F;2020&#x2F;01&#x2F;writing-4k-intro-in-rust.html&quot;&gt;Writing a 4K Intro in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#writing-a-4k-intro-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;4k-mini-gl.png&quot; alt=&quot;Rust OpenGL in 2 Kbytes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Jani Peltonen has published an article &lt;a href=&quot;https:&#x2F;&#x2F;codeslow.com&#x2F;2020&#x2F;01&#x2F;writing-4k-intro-in-rust.html&quot;&gt;&amp;quot;Writing a 4K intro in Rust&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;For now I have a simple intro that initializes a modern OpenGL context
in Win32 and puts up a relatively simple shader.
The compressed size is &amp;lt;2Kbytes which, I think,
validates Rust as viable language for writing 4K intros.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;janiorca&#x2F;tinywin&#x2F;tree&#x2F;master&#x2F;miniwinGL&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;enbbxu&#x2F;writing_a_4k_intro_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3d-graphics-in-your-browser-with-rust-and-wasm&quot;&gt;3D Graphics in Your Browser with Rust and WASM&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#3d-graphics-in-your-browser-with-rust-and-wasm&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rust-3d-wasm.png&quot; alt=&quot;Slide with table of content&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Doug Milford released three tutorial videos:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=p7DtoeuDT5Y&quot;&gt;&amp;quot;Boilerplate Setup and WASM Introduction&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=kjYCSySObDo&quot;&gt;&amp;quot;2D Graphics&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=K63uBfs1K7Y&quot;&gt;&amp;quot;3D Graphics&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dmilford&#x2F;rust-3d-demo&quot;&gt;The source code can be found here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;discord-game-sdk&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ldesgoui&#x2F;discord_game_sdk&quot;&gt;discord_game_sdk&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discord-game-sdk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ldesgoui&#x2F;discord_game_sdk&quot;&gt;discord_game_sdk&lt;&#x2F;a&gt; in an &lt;em&gt;unofficial&lt;&#x2F;em&gt; safe interface to the &lt;a href=&quot;https:&#x2F;&#x2F;discordapp.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;sdk-starter-guide&quot;&gt;Discord Game SDK&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;discordapp.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;sdk-starter-guide&quot;&gt;Discord Game SDK&lt;&#x2F;a&gt; provides features such as, but not limited to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Activities (Rich Presence)&lt;&#x2F;li&gt;
&lt;li&gt;Users, Avatars and Relationships&lt;&#x2F;li&gt;
&lt;li&gt;Lobbies, Matchmaking and Voice communication&lt;&#x2F;li&gt;
&lt;li&gt;Faux-P2P Networking on Discord&#x27;s Infrastructure&lt;&#x2F;li&gt;
&lt;li&gt;Cloud Synchronized Storage&lt;&#x2F;li&gt;
&lt;li&gt;Store Transactions&lt;&#x2F;li&gt;
&lt;li&gt;Achievements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;optimath&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djugei&#x2F;optimath&quot;&gt;Optimath&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#optimath&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djugei&#x2F;optimath&quot;&gt;Optimath&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;djugei.github.io&quot;&gt;@djugei&lt;&#x2F;a&gt;
is an experimental const generics based linear algebra library
that works without any allocations in no_std and utilizes SIMD.
&lt;em&gt;Requires nightly toolchain.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project goals:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Besides being hopefully useful as a library it is also
an exploration of rusts newer advanced type system features.
It is therefore an explicit goal to provide feedback
to the developers of those features.
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;optimath&#x2F;0.3.0&#x2F;optimath&#x2F;insights&#x2F;index.html&quot;&gt;The &lt;code&gt;insights&lt;&#x2F;code&gt; module&lt;&#x2F;a&gt; contains some of that.&lt;&#x2F;p&gt;
&lt;p&gt;It is also meant to explore the design space
of Linear Algebra libraries that utilize those features.
As such it may serve as inspiration for how bigger linalg libraries
might adopt them.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;djugei.github.io&#x2F;optimath-0-3-0&quot;&gt;Check out a detailed v0.3 announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eo4ury&#x2F;show_rrust_optimath_linear_algebra_with_const&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;keyframe-animation-library-for-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HannesMann&#x2F;keyframe&quot;&gt;keyframe&lt;&#x2F;a&gt; - Animation Library for Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#keyframe-animation-library-for-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HannesMann&#x2F;keyframe&quot;&gt;keyframe&lt;&#x2F;a&gt; is a simple library for animation.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Several &lt;a href=&quot;https:&#x2F;&#x2F;easings.net&#x2F;en&quot;&gt;easing functions&lt;&#x2F;a&gt;, including user-defined Bézier curves
and keyframable curves;&lt;&#x2F;li&gt;
&lt;li&gt;Animation sequences;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;mint&quot;&gt;mint&lt;&#x2F;a&gt; integration for 2D&#x2F;3D&#x2F;4D support (points, rectangles, colors, etc)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Animation sequences example:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span&gt;keyframe::{keyframes, Keyframe, AnimationSequence};
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;example&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; (value, time) or (value, time, function)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span&gt; sequence = keyframes![
&lt;&#x2F;span&gt;&lt;span&gt;         (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.0&lt;&#x2F;span&gt;&lt;span&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; &amp;lt;-- EaseInOut used from 0.0 to 0.3
&lt;&#x2F;span&gt;&lt;span&gt;         (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.5&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.3&lt;&#x2F;span&gt;&lt;span&gt;, Linear), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; &amp;lt;-- Linear used from 0.3 to 1.0
&lt;&#x2F;span&gt;&lt;span&gt;         (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.5&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; &amp;lt;-- Easing function here is never used, since we&amp;#39;re at the end
&lt;&#x2F;span&gt;&lt;span&gt;    ];
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    sequence.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;advance_by&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.65&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    assert_eq!(sequence.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;now&lt;&#x2F;span&gt;&lt;span&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    assert_eq!(sequence.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;duration&lt;&#x2F;span&gt;&lt;span&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;rltk-rs-v0-6-roguelike-tutorial&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;etiywv&#x2F;sharing_saturday_295&#x2F;ffi13dw&#x2F;&quot;&gt;rltk_rs v0.6&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rltk-rs-v0-6-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rl-c70-pewpew.gif&quot; alt=&quot;Ranged attack demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; continues to grow:
chapter &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;chapter_70.html&quot;&gt;#70 &amp;quot;Missiles and Ranged Attacks&amp;quot;&lt;&#x2F;a&gt; was added to the book.
It adds targeting, ranged weaponry, AI that shoots back,
and projectile particles to the mix.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;wasm&#x2F;chapter-70-missiles&quot;&gt;Check out an online demo here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk_rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt; is a Rust implementation of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;etiywv&#x2F;sharing_saturday_295&#x2F;ffi13dw&#x2F;&quot;&gt;rltk_rs v0.6&lt;&#x2F;a&gt; was released. Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Breaking changes: usize for indexing, cargo features rename,
TryInto in generic functions, and a few more;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;sticky&amp;quot; ctrl&#x2F;alt&#x2F;shift modifiers;&lt;&#x2F;li&gt;
&lt;li&gt;more auto-derived traits;&lt;&#x2F;li&gt;
&lt;li&gt;performance optimizations &amp;amp; bugfixes;&lt;&#x2F;li&gt;
&lt;li&gt;updated examples.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;implementing-a-turn-based-game-in-an-ecs-with-specs-task&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&#x2F;implementing-a-turn-based-game-in-an-entity-component-system-with-specs-task-d7f3358198b4&quot;&gt;Implementing a Turn-Based Game in an ECS with SPECS-Task&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#implementing-a-turn-based-game-in-an-ecs-with-specs-task&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&quot;&gt;@bonsairobo&lt;&#x2F;a&gt; published an article
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&#x2F;implementing-a-turn-based-game-in-an-entity-component-system-with-specs-task-d7f3358198b4&quot;&gt;&amp;quot;Implementing a Turn-Based Game in an ECS with SPECS-Task&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve heard from a few people who are just getting started with
entity component systems (ECS) that implementing logic for a turn-based game
seems more complicated than it should be.
I thought that seemed odd, but I just recently ran into this problem myself.
While certainly not insurmountable, implementing turn-based logic
in an ECS just doesn’t feel great.
I think the reason is that no one likes to implement a loop
via distributed state machines.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;flukejones-ecs-bench&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flukejones&#x2F;ecs_bench&quot;&gt;flukejones&#x2F;ecs_bench&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flukejones-ecs-bench&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;flukejones&quot;&gt;@flukejones&lt;&#x2F;a&gt; forked an old Rust ECS benchmark set
and updated it to show some of the more recent ECS around:
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;flukejones&#x2F;tiny_ecs&quot;&gt;tiny_ecs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaynus&#x2F;legion&quot;&gt;legion&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flukejones&#x2F;ecs_bench&quot;&gt;flukejones&#x2F;ecs_bench&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;awesome-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rofrol&#x2F;awesome-wgpu&quot;&gt;awesome-wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#awesome-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rofrol&#x2F;awesome-wgpu&quot;&gt;awesome-wgpu&lt;&#x2F;a&gt; is a new curated list of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt;-related links:
learning resources, games, app, articles, etc.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out a new &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt;-based ios app:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;mao-brush.png&quot; alt=&quot;Mao Brush logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;id1492608770&quot;&gt;Mao Brush&lt;&#x2F;a&gt; realistically simulated the writing effect of
Chinese brush + rice paper, the focus is on bringing
the traditional Chinese calligraphy art to the digital age.&lt;&#x2F;p&gt;
&lt;p&gt;The WebGPU-based (wgpu-rs) brush engine uses the LBM fluid simulation
to achieve the unique expression of the brush.
You can use it to experience the splash of Chinese calligraphy anytime,
anywhere, and create brush calligraphy works.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;crow-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; v0.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crow-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; is a simple and efficient pixel based 2D graphics library.
It&#x27;s designed to be easy to use and should allow users
to do nearly everything they want
without requiring custom renderers or unsafe code.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;luminance-v0-38&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance v0.38&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#luminance-v0-38&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&quot;&gt;@phaazon&lt;&#x2F;a&gt; is a type-safe, type-level and stateless
graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance v0.38&lt;&#x2F;a&gt; got released.
Among the changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Mode::Patch&lt;&#x2F;code&gt; tessellation primitive.&lt;&#x2F;li&gt;
&lt;li&gt;The pipelines can now be customized in deeper ways
(besides clear color, one can enable or disable clearing color buffer,
depth buffer, sRGB framebuffers, dynamic viewport, etc.).&lt;&#x2F;li&gt;
&lt;li&gt;sRGB textures.&lt;&#x2F;li&gt;
&lt;li&gt;Framebuffers now accept a Sampler to control how their associated textures
will be sampled.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;docs&#x2F;imgs&#x2F;displacement_map.gif&quot;&gt;A cool displacement mapping example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A complete changes list can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;luminance&#x2F;CHANGELOG.md#038&quot;&gt;in the CHANGELOG&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the luminance book got updated: &lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;learn-luminance&quot;&gt;check it out here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ejys2l&#x2F;official_announcement_release_of_luminance038&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1213569285496410116&quot;&gt;&lt;img src=&quot;space-game.png&quot; alt=&quot;gameplay screenshot: block, space ship, dialog box&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Btw, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&quot;&gt;@resinten&lt;&#x2F;a&gt; continues working on a luminance-based game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;extra parallax layers,&lt;&#x2F;li&gt;
&lt;li&gt;a basic UI with placeholder art,&lt;&#x2F;li&gt;
&lt;li&gt;dialog system,&lt;&#x2F;li&gt;
&lt;li&gt;updated player movement,&lt;&#x2F;li&gt;
&lt;li&gt;music.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1213569285496410116&quot;&gt;Check out a WIP gameplay video here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;spir-q-v0-4-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; v0.4.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spir-q-v0-4-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;spir-q.png&quot; alt=&quot;Example walking an entry point of a SPIR-V file&quot; &#x2F;&gt;
&lt;em&gt;Example walking an entry point of a SPIR-V file&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; is a lightweight &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Standard_Portable_Intermediate_Representation&quot;&gt;SPIR-V&lt;&#x2F;a&gt; query library.
This month v0.2..v0.4.1 versions were released:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;SPIR-Q is now more handy with better and easier reflection information accessors;&lt;&#x2F;li&gt;
&lt;li&gt;component number for shared-location interface variables;&lt;&#x2F;li&gt;
&lt;li&gt;separable sampler types;&lt;&#x2F;li&gt;
&lt;li&gt;descriptor access type query &amp;amp; multibinding for all descriptors;&lt;&#x2F;li&gt;
&lt;li&gt;new examples, bugfixes, and significant performance improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;glsl-v4-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eklo6l&#x2F;official_announcement_glsl40&quot;&gt;glsl v4.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glsl-v4-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;glsl&quot;&gt;glsl&lt;&#x2F;a&gt; is a crate to parse GLSL formatted sources into a typed AST.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eklo6l&#x2F;official_announcement_glsl40&quot;&gt;glsl-4.0 and glsl-quasiquote got released this month&lt;&#x2F;a&gt;.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;support for two backward-compatible keywords: attribute and varying
(allows parsing GLSL450);&lt;&#x2F;li&gt;
&lt;li&gt;binary operands are now parsed as left-associative.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eklo6l&#x2F;official_announcement_glsl40&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; got
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;epupkb&#x2F;oxygengine_pure_js_scripting_backend_for_quick&quot;&gt;JavaScript scripting interface&lt;&#x2F;a&gt;
to allow faster prototyping of games.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This prebuilt WASM version would let game devs with JS background
to quickly prototype game ideas and then slowly move their logic
into Rust implementation, while learning Rust meantime.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Example source code: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;blob&#x2F;master&#x2F;oxygengine-js&#x2F;js&#x2F;index.js&quot;&gt;oxygengine-js&#x2F;js&#x2F;index.js&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, you can now &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eunppk&#x2F;oxygengine_instantiate_entities_from_prefab_assets&quot;&gt;instantiate entities from prefab assets&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a safe cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;miniquad&quot;&gt;first crates.io version&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;native macOS support;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;muoxi-modern-mud-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;duysqubix&#x2F;MuOxi&quot;&gt;MuOxi&lt;&#x2F;a&gt; - Modern &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;MUD&quot;&gt;MUD&lt;&#x2F;a&gt; Engine&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#muoxi-modern-mud-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;muoxi-cog.png&quot; alt=&quot;MuOxi cog logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;duysqubix&#x2F;MuOxi&quot;&gt;MuOxi&lt;&#x2F;a&gt; is a modern library for creating &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;MUD&quot;&gt;online multiplayer text games&lt;&#x2F;a&gt;
(MU* family) using the powerful features offered by Rust;
backed by Tokio and Diesel.&lt;&#x2F;p&gt;
&lt;p&gt;Current Status:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a working TCP server that allows for multiple connections
and handles them accordingly.
Effort is focused at the moment in designing the database architecture
utilizing Diesel with PostgreSQL backend.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ekwvay&#x2F;muoxi_a_modern_mud_engine_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun-january-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;01&#x2F;31&#x2F;this-month-january&quot;&gt;This Month in Mun - January 2020&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun-january-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused
on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;01&#x2F;31&#x2F;this-month-january&quot;&gt;January updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=0x9ef.vscode-mun&quot;&gt;vscode plugin&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;use extern functions in dispatch table;&lt;&#x2F;li&gt;
&lt;li&gt;add marshalling of structs;&lt;&#x2F;li&gt;
&lt;li&gt;add struct as marshallable field type;&lt;&#x2F;li&gt;
&lt;li&gt;bugfixes and improved test coverage.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nestur-nes-emulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spieglt&#x2F;nestur&quot;&gt;nestur&lt;&#x2F;a&gt; NES Emulator&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nestur-nes-emulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nestur.png&quot; alt=&quot;NES games&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spieglt&#x2F;nestur&quot;&gt;nestur&lt;&#x2F;a&gt; is yet another NES emulator.
It&#x27;s mostly an educational project but it&#x27;s usable.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;SDL2 is the only dependency&lt;&#x2F;li&gt;
&lt;li&gt;no use of unsafe&lt;&#x2F;li&gt;
&lt;li&gt;NTSC timing&lt;&#x2F;li&gt;
&lt;li&gt;supports mappers 0-4 which cover ~85% of games&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ewqiuh&#x2F;nestur_nes_emulator_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;71&quot;&gt;#71 &amp;quot;Proof Of Concept Crate: Simplistic Bump Allocator&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;81&quot;&gt;#81 &amp;quot;Meetings On Discord?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;82&quot;&gt;#82 &amp;quot;Tracking: Rust All-Hands 2020&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;84&quot;&gt;#84 &amp;quot;New Charter Proposal Discussion&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&quot;&gt;rust-gamedev&#x2F;arewegameyet&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;210&quot;&gt;#210 &amp;quot;Transfer ownership to Rust Gamedev Working Group&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;252&quot;&gt;#252 &amp;quot;Split games and resources into categories&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;habr.com&#x2F;post&#x2F;436254&quot;&gt;&lt;img src=&quot;bonus-bw.png&quot; alt=&quot;Module debug output&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;habr.com&#x2F;post&#x2F;436254&quot;&gt;&amp;quot;A bot for Starcraft in Rust, C or any other language&amp;quot;&lt;&#x2F;a&gt;
is an article by Roman @humbug Proskuryakov
about writing a dynamic library for Windows that could be loaded
into &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;StarCraft:_Brood_War&quot;&gt;StarCraft&lt;&#x2F;a&gt;&#x27;s address space to manage units.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;agvho5&#x2F;a_bot_for_starcraft_in_rust_c_or_any_other&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18931961&quot;&gt;Hacker News&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f4r368&#x2F;this_month_in_rust_gamedev_6_january_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1229047231916969987&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Rust Game Development - Ecosystem Survey</title>
            <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/blog/survey-01/</link>
            <guid>https://gamedev.rs/blog/survey-01/</guid>
            <description>&lt;!-- markdownlint-disable single-title heading-increment no-blanks-blockquote --&gt;
&lt;!-- markdownlint-configure-file {&quot;line-length&quot;: {&quot;heading_line_length&quot;: 120}} --&gt;
&lt;p&gt;In August last year, we conducted a survey for the Rust gamedev ecosystem.
After an unfortunate delay, we can finally present the results.
We received a whopping 403 responses!
This trove of valuable feedback will inform the WG&#x27;s roadmap for 2020.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;hobbyist-or-developer&quot;&gt;Hobbyist or developer?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hobbyist-or-developer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;hobbyist-or-professional.png&quot; alt=&quot;Respondents identifying as professional or hobbyist&quot; &#x2F;&gt;
Out of the 400 respondents, 3&#x2F;4 identified as a &lt;em&gt;Hobbyist&lt;&#x2F;em&gt;.
It should also be noted that a significant portion
of the self-identified &lt;em&gt;Professionals&lt;&#x2F;em&gt; are more accurately described
as &amp;quot;aspiring professional&amp;quot; undertaking their first game development venture.
That still amounts to a large amount of commercial interest
in Rust game development all the same!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;are-you-using-rust-for-gamedev&quot;&gt;Are you using Rust for gamedev?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#are-you-using-rust-for-gamedev&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;using-rust.png&quot; alt=&quot;Respondents using Rust in game development&quot; &#x2F;&gt;
Among the Professionals only 1&#x2F;4 said they are currently using Rust in games.
That means the 200 respondents currently using Rust for gamedev are mostly hobbyists.
No surprise there, as most professionals can&#x27;t bear the risk of being an early adopter.
Big shoutout to all the hobbyists who are pushing the status quo, and kudos
to the handful of studios that are using Rust in production
long before most of their industry peers have even caught the scent.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;em&gt;For the free-form answers that follow, a basic eyeballs&amp;amp;hands sentiment analysis
was used to distill 400 replies into digestible form.
The (#) number next to a heading roughly indicates the number of times
that topic came up. Think of it as the &lt;strong&gt;signal strength&lt;&#x2F;strong&gt; of a given topic.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-negatives-for-you-as-a-game-developer-right-now&quot;&gt;What about Rust as a language and ecosystem presents the biggest NEGATIVES for you as a game developer right now?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-negatives-for-you-as-a-game-developer-right-now&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Priorities for professionals and hobbyists are largely the same.
The biggest differences were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hobbyists call for ecosystem maturity 2x more than anything else.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Hobbyists care much more about mobile&#x2F;web support&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Professionals care much more about console support&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Professionals care much more about C++ interop&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ecosystem-maturity-114&quot;&gt;Ecosystem maturity (114)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-maturity-114&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;From playing in the space I know it&#x27;s possible to make games using Rust.
However in the ecosystem my biggest negatives is the [lack of] case studies
and demonstrations of it working.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is still a risky choice, compared to C++.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Still feels like a new community.
There is always risk associated with that - does the language
take a big swing in direction - does support drop off.
I&#x27;m encouraged by the support for low level (embedded &#x2F; OS ) development,
which hopefully means the core feature set remains robust.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Many unfinished, unmaintained crates. Lots of churn.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A lot of common needs are not yet available &#x27;out of the box&#x27;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;iteration-times-68&quot;&gt;Iteration times (68)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iteration-times-68&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Compile time, no runtime reflection, updating deep dependency in the tree is hard.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Iteration time is I think too big, due to compilation time,
[lack of] hot-reloading tooling, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Iteration time (especially while prototyping).
This includes both compile time but also sorting out lifetimes when I know
I&#x27;ll be rewriting something very soon anyway,
this &amp;quot;frontloading&amp;quot; the effort of having the borrow checker run at compile time
is useful for most tasks but when I want to try something quickly
it can be a draining experience,
in this regard GC&#x27;d languages have an advantage imo.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Prototyping seems not as easy in Rust due to &amp;quot;fighting the compiler&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;documentation-43&quot;&gt;Documentation (43)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-43&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Not enough documentation to get past beginner stage&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Lacking examples for gamedev libs.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Documentation is usually either high level or examples but rarely both.
Very few real world examples to draw from.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;lack-of-full-featured-engines-35&quot;&gt;Lack of full-featured engines (35)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lack-of-full-featured-engines-35&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Lack of a data-and-script based engine like Unreal Engine or Unity
means even small projects end up feeling very bring-your-own-engine.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Missing graphical editors, frictionless prototyping of games&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;rust-learning-curve-onboarding-to-a-niche-language-29&quot;&gt;Rust learning curve &#x2F; onboarding to a niche language (29)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-learning-curve-onboarding-to-a-niche-language-29&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The language has a higher upfront cognitive load than any other
mainstream language I know of, mostly due to the borrow checker.
It&#x27;s very hard to hack through stuff and get away with it,
which makes it a particularly hard sell for game prototypes.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I know that it is a less common language to use so as a company
I will have to have my staff learn Rust before they can start.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust could be tricky to hire for, and hiring someone
who doesn&#x27;t know Rust to work in Rust will come with a ramp-up period.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;ide-rls-story-28&quot;&gt;IDE&#x2F;RLS story (28)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ide-rls-story-28&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Tooling around IDE is limited compared to Visual Studio with C++ or C#.´&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Definitely lack of proper IDE
(like out of the box Cargo integration and working debugger - yeah,
I tested Visual Studio Code and it&#x27;s very slow, suggestions are not great,
fastest way to run, check and build is to use terminal - not IDE)
- I would say that something like QT Creator or Visual Studio would be great&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Regarding debugging, the industry standard is (or that I&#x27;m aware of) Visual Studio,
for its very good IDE and tools, also, a lot of users are very used
to that kind of tools and looks like Rust is missing some of them.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;rust-analyzer is still very incomplete,
but it&#x27;s the only thing that works for me&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Poor IDE and debugging support in IDE. Mainly visual studio.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Can&#x27;t debug it properly, hashmap (for example) is absolutely not debuggable.
Not sure how it works inside (instead of C++).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;debug mode way too slow, often need to set opt-level=1 or 2 for dev profile&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;gui-tooling-23&quot;&gt;GUI tooling (23)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gui-tooling-23&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;As a tools developer, a major negative point is the current absence
of a reliable GUI framework (we use WPF + C# with Visual Studio).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;game-consoles-13&quot;&gt;Game consoles (13)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-consoles-13&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;No first party support for console development makes Rust a tough sell
for a lot of professional work.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is not officially supported on console by Sony or Microsoft.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust can&#x27;t be seriously considered yet, because it does not have support
from the PS4 SDK.
Although there are other considerations
(studio culture, integration with existing systems, etc.),
official support from Sony is a requirement before Rust could be used
in a PS4 game.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;web-mobile-support-14&quot;&gt;Web&#x2F;mobile support (14)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#web-mobile-support-14&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;allocators-10&quot;&gt;Allocators (10)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#allocators-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;c-interop-7&quot;&gt;C++ interop (7)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#c-interop-7&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Our code, and any middleware&#x2F;engine that we might license, is in C++.
Using Rust and C++ together is painful, and rewriting the existing tech
to be purely Rust would be very expensive.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Testing and too much things linked to C.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also, no professional game engine (UE4, Unity) integrates with Rust yet.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Unknown compatibility&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Lack of a straightforward path to make rust work easily
with C++ in both directions.
The only trustable way I see now is through manual C wrappers,
which is error-prone and time consuming.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-positives-for-you-as-a-game-developer-right-now&quot;&gt;What about Rust as a language and ecosystem presents the biggest POSITIVES for you as a game developer right now?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-positives-for-you-as-a-game-developer-right-now&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;h3 id=&quot;safety-100&quot;&gt;Safety (100)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#safety-100&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Strong type system allows for easily enforcing
some performance and safety best practices&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Multithreading safety&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Elimination of data races greatly improves reliability for multithreaded code.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Safe concurrency&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;performance-89&quot;&gt;Performance (89)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#performance-89&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Great performance and compile time verifications&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Performance and reliability&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Parallelism&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;community-69&quot;&gt;Community (69)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#community-69&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;the ecosystem is full of passionate and smart people
who take quality software very seriously&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;a really welcoming community with great goals and courage to pursue them&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Collective community effort to &amp;quot;build the right thing&amp;quot; and &amp;quot;build the thing right&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;cargo-57&quot;&gt;Cargo (57)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cargo-57&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;being able to pull down libraries piecemeal and have them build
with your stuff immediately is great&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;ecosystem-50&quot;&gt;Ecosystem (50)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-50&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A mature Rust ecosystem will (hopefully!) have a lower bar for entry
than a mature C++ ecosystem, without giving up performance.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;wasm-web-support-20&quot;&gt;WASM (web)  support (20)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wasm-web-support-20&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;no-garbage-collection-8&quot;&gt;No garbage collection (8)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#no-garbage-collection-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;ecs-data-driven-data-oriented-8&quot;&gt;ECS; data-driven; data-oriented (8)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecs-data-driven-data-oriented-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;cross-platform-5&quot;&gt;Cross platform (5)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cross-platform-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;c-interop-3&quot;&gt;C interop (3)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#c-interop-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h2 id=&quot;selected-quotes&quot;&gt;Selected quotes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#selected-quotes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The language has a higher upfront cognitive load than any other mainstream language.
Which means that on an established, bigger project (maybe with a team behind)
the productivity is amazing compared to C++!
It&#x27;s much easier to express strong &amp;amp; safe interfaces
that make bugs just harder to introduce.
It really shines in network code that needs to be 100% safe and resist bad actors!
My current game server code has 0 unwraps&#x2F;panics&#x2F;expects
and so I just &lt;em&gt;know&lt;&#x2F;em&gt; it can&#x27;t crash...
I wish I could have that feeling in C++.
C++ on the contrary makes it easy to whip up something which then has
a 20% crash rate and tanks perf and takes 2 weeks to hammer into shape,
and after those 2 weeks it looks like Rust code anyway.
Unfortunately, knowing the management culture in the gamedev industry,
Rust has an extremely hard road in front of it due to this.
In my experience gamedev is plagued by extreme short term (like, 1 month)
reasoning resulting in crunches and awful technical tradeoffs.
Rust made many choices that delay that fateful &amp;quot;demo day with the execs&amp;quot;
because it forces you to do things right.
But very few can express why this is valuable up the chain and be listened to.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I love Rust!
• it&#x27;s perfect for &amp;quot;API-minded&amp;quot; systems programmers
• as more production users come, things will get very good very quickly
• being cross-platform is easier than ever
• refactoring is very fun
• proc macros are cool as heck
• serde is insanely useful
• seriously there&#x27;s a ton of awesome crates
• I know we&#x27;ll get there together!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;We are especially interested in data-driven games
for procedural generation and AI.
Rust seems a great fit for this computationally intensive work.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Since most game developers are tinkerers more than engineers or scientists,
the whole industry is plagued with bad code quality,
lack of architecture and bad code design.
Undefined behavior, nullptr exceptions, use after freed,
multithreading issues and so on are recurrent problems.
Rust biggest positive is really the fact that it addresses
all that without needing to change the people behind the games.
That&#x27;s why I believe in it so much :).
Also worth noting that the module system and crates are really important
nowadays because monolithic codebases of millions of lines of code
is really a hell to work into.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;what-do-you-think-should-be-the-game-dev-working-group-s-priorities-for-the-next-3-6-months&quot;&gt;What do you think should be the game-dev working group&#x27;s priorities for the next 3-6 months?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-do-you-think-should-be-the-game-dev-working-group-s-priorities-for-the-next-3-6-months&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;documentation-107&quot;&gt;Documentation (107)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-107&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;better onboarding to rust gamedev&lt;&#x2F;li&gt;
&lt;li&gt;Better explanation of best practices&lt;&#x2F;li&gt;
&lt;li&gt;How to get started&lt;&#x2F;li&gt;
&lt;li&gt;Rust for seasoned gamedevs&lt;&#x2F;li&gt;
&lt;li&gt;What works &lt;em&gt;right now&lt;&#x2F;em&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;Example games&lt;&#x2F;li&gt;
&lt;li&gt;Standard practices for common gamedev problems&lt;&#x2F;li&gt;
&lt;li&gt;How to do windowing&lt;&#x2F;li&gt;
&lt;li&gt;How to do graphics&lt;&#x2F;li&gt;
&lt;li&gt;How to do ECS&lt;&#x2F;li&gt;
&lt;li&gt;More documentation for foundational libraries&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cross-platform-support-59&quot;&gt;Cross-platform support (59)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cross-platform-support-59&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Lobby for Rust adoption on next-gen consoles.&lt;&#x2F;li&gt;
&lt;li&gt;Clearer information about console support.&lt;&#x2F;li&gt;
&lt;li&gt;Start an entity capable of getting and maintain console NDAs
to keep official rust builds made for console support.
It’s a huge pain, but other open source projects do it,
and it would be awesome for the community.&lt;&#x2F;li&gt;
&lt;li&gt;Wasm&#x2F;web support (heavier from hobbyists)&lt;&#x2F;li&gt;
&lt;li&gt;Paint a clearer picture of what the path to gaming consoles looks like,
within the confines of what those proprietary SDKs and APIs allow.&lt;&#x2F;li&gt;
&lt;li&gt;Mobile support&lt;&#x2F;li&gt;
&lt;li&gt;Easier packaging&lt;&#x2F;li&gt;
&lt;li&gt;Cross-compiling&lt;&#x2F;li&gt;
&lt;li&gt;XR (AR&#x2F;VR)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ecosystem-promotion-coordination-51&quot;&gt;Ecosystem promotion &amp;amp; coordination (51)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-promotion-coordination-51&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Develop contacts within the industry so that the WG can be a liaison between
industry and OSS developers.
By inviting and involving industry, the ecosystem can grow and potentially
receive support (in the form of PRs, open sourcing existing tools,
or financial support for OSS developers.)&lt;&#x2F;li&gt;
&lt;li&gt;Encourage &amp;amp; facilitate collaboration on existing tools.&lt;&#x2F;li&gt;
&lt;li&gt;Library “blessings”&lt;&#x2F;li&gt;
&lt;li&gt;more things like this survey&lt;&#x2F;li&gt;
&lt;li&gt;Ecosystem mapping&lt;&#x2F;li&gt;
&lt;li&gt;Outreach &#x2F; evangelising&lt;&#x2F;li&gt;
&lt;li&gt;Game jams&lt;&#x2F;li&gt;
&lt;li&gt;Better insight into WG’s current agenda&lt;&#x2F;li&gt;
&lt;li&gt;Come up with ways to unblock foundational projects if they get stuck&lt;&#x2F;li&gt;
&lt;li&gt;Identify in-progress issues, and propose new issues, for the Rust language,
that are relevant to game development.
(For example, debug Rust is very slow, so we need good ways to control what
is and isn&#x27;t optimized.)&lt;&#x2F;li&gt;
&lt;li&gt;Seek opportunities to address cross-cutting concerns where possible.
The recent investigation into raw-window-handle and evaluation of
if we can&#x2F;should converge on a math library are both good examples.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;first-grade-game-engine-framework-46&quot;&gt;First-grade game engine&#x2F;framework (46)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#first-grade-game-engine-framework-46&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Simple 2D game engine&lt;&#x2F;li&gt;
&lt;li&gt;Basic editor workflow&lt;&#x2F;li&gt;
&lt;li&gt;An SDL-like&lt;&#x2F;li&gt;
&lt;li&gt;A Unity&#x2F;Unreal competitor&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;graphics-libraries-33&quot;&gt;Graphics libraries (33)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphics-libraries-33&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Improve accessibility of graphics programming&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;foundational-libraries-27&quot;&gt;Foundational libraries (27)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#foundational-libraries-27&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;UI libraries&lt;&#x2F;li&gt;
&lt;li&gt;Windowing&lt;&#x2F;li&gt;
&lt;li&gt;Audio&lt;&#x2F;li&gt;
&lt;li&gt;Graphics&lt;&#x2F;li&gt;
&lt;li&gt;Collection of “Standard crates” with some form of WG support&lt;&#x2F;li&gt;
&lt;li&gt;Push for stabilisation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;faster-iteration-times-17&quot;&gt;Faster iteration times (17)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#faster-iteration-times-17&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Hot code reloading&lt;&#x2F;li&gt;
&lt;li&gt;Scripting&lt;&#x2F;li&gt;
&lt;li&gt;Faster compile times&lt;&#x2F;li&gt;
&lt;li&gt;More libraries like Processing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;integration-with-existing-toolchains-14&quot;&gt;Integration with existing toolchains (14)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#integration-with-existing-toolchains-14&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;C&#x2F;C++&lt;&#x2F;li&gt;
&lt;li&gt;Xcode, Android studio, Visual studio, Blender&lt;&#x2F;li&gt;
&lt;li&gt;Unity&#x2F;Unreal&#x2F;Godot&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;custom-allocation-story-10&quot;&gt;Custom allocation story (10)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#custom-allocation-story-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;debugging-support-and-ide-integration-5&quot;&gt;Debugging support and IDE integration (5)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#debugging-support-and-ide-integration-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;interoperability-between-libraries-5&quot;&gt;Interoperability between libraries (5)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#interoperability-between-libraries-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h2 id=&quot;can-you-name-some-libraries-you-are-thankful-for-or-take-special-interest-in&quot;&gt;Can you name some libraries you are thankful for or take special interest in?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#can-you-name-some-libraries-you-are-thankful-for-or-take-special-interest-in&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Just for fun, we asked respondents to name libraries or projects
they were thankful for.
In the 6 months that have passed since this survey went out
there&#x27;s been quite a few newcomers on the rise that would probably show
more prominently here if we asked again today.
Rest assured there will be more surveys.
&lt;img src=&quot;survey-thanks.png&quot; alt=&quot;Shoutouts to ecosystem projects&quot; &#x2F;&gt;
&lt;em&gt;Thanks so much to the survey respondents and all the people out there
working tirelessly make Rust a first-tier language and ecosystem for game development.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #5 - December 2019</title>
            <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/005/</link>
            <guid>https://gamedev.rs/news/005/</guid>
            <description>&lt;p&gt;Welcome to the fifth issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;call-for-speakers-rust-london-gamedev-meetup&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ecfb3x&#x2F;a_call_for_speakers_rust_london_meetup_gamedev&quot;&gt;Call for Speakers: Rust London GameDev Meetup&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#call-for-speakers-rust-london-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;I&#x27;m the community lead for &lt;a href=&quot;https:&#x2F;&#x2F;meetup.com&#x2F;Rust-London-User-Group&quot;&gt;Rust London&lt;&#x2F;a&gt; and I just wanted
to put out the feelers for anybody who is London based and would like
to give a talk at our Rust London Meetup.
We want to hold a special LDN Talks event solely focused on GameDev.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ecfb3x&#x2F;a_call_for_speakers_rust_london_meetup_gamedev&quot;&gt;See the details here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;a-b-street-adjust-traffic-patterns-in-real-cities&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet#ab-street&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; - Adjust Traffic Patterns in Real Cities&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street-adjust-traffic-patterns-in-real-cities&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Ever been on a bus stuck in traffic, wondering why there are cars parked on the
road instead of a bus lane?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet#ab-street&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a game exploring how small changes to
road space and traffic signals affect the movement of drivers, cyclists,
transit users, and pedestrians. The game models Seattle as accurately as
possible using &lt;a href=&quot;https:&#x2F;&#x2F;openstreetmap.org&quot;&gt;OpenStreetMap&lt;&#x2F;a&gt; and other public datasets, lets the player adjust
existing infrastructure, and then does a detailed comparison to see who the
changes help and hurt.&lt;&#x2F;p&gt;
&lt;p&gt;A&#x2F;B Street is written in Rust, using a custom GUI library on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&quot;&gt;glium&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;blob&#x2F;master&#x2F;docs&#x2F;INSTRUCTIONS.md&quot;&gt;Play it now&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues&quot;&gt;start contributing&lt;&#x2F;a&gt; to
expand the game to more cities, model light rail and shared foot&#x2F;bike paths,
and work on gameplay modes (like &amp;quot;make everything as slow as possible&amp;quot; and
&amp;quot;what if nobody owned and parked personal vehicles?&amp;quot;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;abstreet.gif&quot; alt=&quot;Demo of some UI work in A&#x2F;B Street&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;December highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Preview traffic signal changes &amp;quot;live&amp;quot; without resetting the simulation&lt;&#x2F;li&gt;
&lt;li&gt;UI: new minimap, popup info panels with graphs, better shapes,
and colors for cars&lt;&#x2F;li&gt;
&lt;li&gt;Data viz: histogram showing count of faster&#x2F;slower trips, visualizing which
road has the longest backup at a traffic signal, breaking down the timeline
of a trip (walk to a car, drive somewhere, look for parking, walk to
destination...)&lt;&#x2F;li&gt;
&lt;li&gt;Improved pedestrian pathfinding and decisions to use a bus or not&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e9h7d4&#x2F;want_to_work_on_a_traffic_simulation_game&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vange-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vange-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vangers.png&quot; alt=&quot;Vehicle&#x27;s collision shape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt; is the project of re-implementing the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Vangers&quot;&gt;Vangers&lt;&#x2F;a&gt; game (from 1998)
in Rust using modern development practices, parallel computations, and GPU.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the project has gained a few major features.
The biggest one is an implementation of the physics engine
completely on GPU in a closed loop.
At the same time, the CPU code path was fixed to allow
for a smooth ride (&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e8r695&#x2F;vangers_gpu_physics_engine&quot;&gt;video&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Another pack of changes has landed to allow many NPC cars to be riding
the world alongside the user.
The renderer has shifted towards being completely instanced,
and CPU physics computations were parallelized.
The game can now host up to 50000 total cars on the level,
all simulated at once, with up to 5000 on screen at a time
(&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eg3k6x&#x2F;spawning_4k_of_cars_in_vangers&quot;&gt;video&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;In minor features, it became possible to jump in the game
as well as change the car color.&lt;&#x2F;p&gt;
&lt;p&gt;The project has also started the &lt;a href=&quot;http:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&quot;&gt;development blog&lt;&#x2F;a&gt;,
describing both new and old technology, such as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2019&#x2F;12&#x2F;12&#x2F;data-formats.html&quot;&gt;Data formats&lt;&#x2F;a&gt; used in the original game.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2019&#x2F;12&#x2F;17&#x2F;collision-model.html&quot;&gt;Collision model&lt;&#x2F;a&gt; of the original game.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2019&#x2F;12&#x2F;19&#x2F;gpu-collisions.html&quot;&gt;Pure-GPU implementation&lt;&#x2F;a&gt; of the collision model.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren1.png&quot; alt=&quot;Morning landscape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG
inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;Some of December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A formal changelog&lt;&#x2F;li&gt;
&lt;li&gt;Pathfinding&lt;&#x2F;li&gt;
&lt;li&gt;Airshipper launcher progress&lt;&#x2F;li&gt;
&lt;li&gt;Erosion system improvements&lt;&#x2F;li&gt;
&lt;li&gt;First animated UI elements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can read more about some specific topics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-48#character-states-overhaul-by-adam&quot;&gt;Character States Overhaul&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46#airshipper-updates-with-songtronix&quot;&gt;Airshipper Update&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46#sfx-with-shandley&quot;&gt;SFX&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46&#x2F;#contributor-spotlight-angelonfira&quot;&gt;Contributor Spotlight: @AngelOnFira&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-45&#x2F;#pathfinding-by-chrischrischris&quot;&gt;Pathfinding&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-44&#x2F;#lantern-slides-mac-build-predicament&quot;&gt;Mac Build Predicament&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-44&#x2F;#lantern-slides-unfinished-rust-ci-blog&quot;&gt;Unfinished Rust CI Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;veloren2.png&quot; alt=&quot;Sitting on the edge&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the works for January include player account authentication,
preliminary modding work, and character state systems.
There are ongoing talks that are also looking
into the networking system and optimizations.&lt;&#x2F;p&gt;
&lt;p&gt;December&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-44&quot;&gt;#44&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-45&quot;&gt;#45&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46&quot;&gt;#46&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-47&quot;&gt;#47&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-48&quot;&gt;#48&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;voxel-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technici4n&#x2F;voxel-rs&quot;&gt;voxel-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#voxel-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;voxel-rs.png&quot; alt=&quot;Some lake, hills, blue sunny sky and debug output&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technici4n&#x2F;voxel-rs&quot;&gt;voxel-rs&lt;&#x2F;a&gt; is a new multiplayer Minecraft-like sandbox game engine
written in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The game is currently under heavy development and it&#x27;s not yet playable.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The project&#x27;s roadmap is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technici4n&#x2F;voxel-rs#roadmap&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e9qqnv&#x2F;in_the_works_minecraftlike_game_written_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy: Dash&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tennis-academy.gif&quot; alt=&quot;menu, levels, and customers&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1205891407606636544&quot;&gt;v0.1.2&lt;&#x2F;a&gt;..&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1207671483981537280&quot;&gt;v0.1.4&lt;&#x2F;a&gt;
versions of &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy: Dash&lt;&#x2F;a&gt;&amp;quot;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🖼️ art redesign, &amp;amp; new colour palette;&lt;&#x2F;li&gt;
&lt;li&gt;✂️ spritesheet and assets packing;&lt;&#x2F;li&gt;
&lt;li&gt;🧮 the game finally has a name: &amp;quot;Tennis Academy: Dash&amp;quot;;&lt;&#x2F;li&gt;
&lt;li&gt;⛱️ logo, splash screen, and UI polish.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dank-defense&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elijahlucian.itch.io&#x2F;dank-defense-theyre-coming&quot;&gt;Dank Defense&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dank-defense&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dank-defense.gif&quot; alt=&quot;Trying to shoot down the missles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elijahlucian.itch.io&#x2F;dank-defense-theyre-coming&quot;&gt;Dank Defense&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ELI7VHBO7&quot;&gt;Elijah Lucian&lt;&#x2F;a&gt;
is a fun little missle defense game made in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;&lt;img src=&quot;akigi.png&quot; alt=&quot;Akigi screenshot: map, character model, chat and panel&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world where most believe that
humans are inferior.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The game server was ported to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;The spawning system was rewritten and simplified;&lt;&#x2F;li&gt;
&lt;li&gt;Initial scenery setup using YAML config files;&lt;&#x2F;li&gt;
&lt;li&gt;Pathfinding now works between arbitrarily sized sets of tiles;&lt;&#x2F;li&gt;
&lt;li&gt;Better test coverage;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full December&#x27;s devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2019&#x2F;2019-12-15.html&quot;&gt;#046&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2019&#x2F;2019-12-22.html&quot;&gt;#047&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2019&#x2F;2019-12-29.html&quot;&gt;#048&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eejnyl&#x2F;akigi_rust_wasm_webgl_game_dev_journal_047&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-devlog-december&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;december&quot;&gt;Garden Devlog: December&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-devlog-december&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=xU93FGrk1d8&quot;&gt;&lt;img src=&quot;garden.gif&quot; alt=&quot;Playing with dirt&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;new smooth soil editing demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;Some of December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a new terrain system that doesn&#x27;t use voxels with surface nets anymore,
but regular cubic voxels with heightmaps (&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=xU93FGrk1d8&quot;&gt;video&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;new building materials;&lt;&#x2F;li&gt;
&lt;li&gt;improved rendering performance and compilation time;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;slavic-castles&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#slavic-castles&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;slavic-castles.jpg&quot; alt=&quot;Updated cards &amp;amp; battle UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt; is a card game inspired by &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Arcomage&quot;&gt;Arcomage&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The following changes were made since the last devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;real cards that are loaded from JSON file;&lt;&#x2F;li&gt;
&lt;li&gt;the project migrated to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ryanisaacg&#x2F;quicksilver&quot;&gt;quicksilver&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;menu, simple animations and visual &amp;amp; audio feedback;&lt;&#x2F;li&gt;
&lt;li&gt;ability to save the game state.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e4isx9&#x2F;card_game_progress&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;&lt;img src=&quot;roboinstructus.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; puzzle game -
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.18, 1.19, and 1.20 versions were released&lt;&#x2F;a&gt;:
UI tweaks, better translations (including full Russian translation!),
bugfixes, and performance optimizations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published an &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;12&#x2F;20&#x2F;i-see-the-character-in-ui&quot;&gt;&amp;quot;I See The Character In UI&amp;quot;&lt;&#x2F;a&gt; devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Character selection UI displays the character that the player will use.&lt;&#x2F;li&gt;
&lt;li&gt;Control settings UI allows players to view the configured control keys.&lt;&#x2F;li&gt;
&lt;li&gt;User interfaces (UIs) are largely defined through configuration,
making development and customization easier.&lt;&#x2F;li&gt;
&lt;li&gt;Events to control application behaviour can be defined in configuration.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=aQiK5rOylCY&quot;&gt;&lt;img src=&quot;will.png&quot; alt=&quot;Controls menu&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dave_tucker&quot;&gt;@dave_tucker&lt;&#x2F;a&gt; is reimplementing some classics.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dave_tucker&#x2F;status&#x2F;1208103971044438017&quot;&gt;&lt;img src=&quot;mines.gif&quot; alt=&quot;minesweeper&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt; has been adding animations and boss enemies to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1208128889891033095&quot;&gt;&lt;img src=&quot;space-shooter.gif&quot; alt=&quot;boss enemy&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;a5huynh&quot;&gt;@a5huynh&lt;&#x2F;a&gt; got the rotating map working;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;amethyst-rotating-map.gif&quot; alt=&quot;Rotating map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ultraviolet-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;grayolson.me&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.4&quot;&gt;ultraviolet v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultraviolet-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rayn.png&quot; alt=&quot;Rayn output example - this renderer uses ultraviolet for its math&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; is a crate for computer-graphics and games-related linear algebra,
but &lt;em&gt;fast&lt;&#x2F;em&gt;, both in terms of productivity and in terms of runtime performance.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;grayolson.me&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.4&quot;&gt;ultraviolet v0.4&lt;&#x2F;a&gt; was released by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fu5ha&quot;&gt;@fu5ha&lt;&#x2F;a&gt;.
It brings
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ultraviolet&#x2F;0.4.3&#x2F;ultraviolet&#x2F;transform&#x2F;index.html&quot;&gt;transform&lt;&#x2F;a&gt;
&amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ultraviolet&#x2F;0.4.3&#x2F;ultraviolet&#x2F;projection&#x2F;index.html&quot;&gt;projection&lt;&#x2F;a&gt;
modules and many smaller improvements.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;grayolson.me&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.4&quot;&gt;full release announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;component-group-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunjay&#x2F;component_group&quot;&gt;component_group&lt;&#x2F;a&gt; v0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#component-group-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunjay&#x2F;component_group&quot;&gt;component_group&lt;&#x2F;a&gt; is a crate for working with a group of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt;::Components.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This crate defines the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;component_group&#x2F;2.0.0&#x2F;component_group&#x2F;trait.ComponentGroup.html&quot;&gt;ComponentGroup&lt;&#x2F;a&gt; trait.
This trait is used to make managing a group of &lt;code&gt;specs::Component&lt;&#x2F;code&gt; instances easier.
This is useful when you have several components that are often
created, read, and updated together.
You can use this trait to easily move an entire group of components
between instances of specs::World.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;a-thought-experiment-using-an-ecs-outside-of-game-engines&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;adventures.michaelfbryan.com&#x2F;posts&#x2F;ecs-outside-of-games&quot;&gt;A Thought Experiment: Using an ECS Outside of Game Engines&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-thought-experiment-using-an-ecs-outside-of-game-engines&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;adventures.michaelfbryan.com&#x2F;posts&#x2F;ecs-outside-of-games&quot;&gt;This article&lt;&#x2F;a&gt; by &lt;a href=&quot;http:&#x2F;&#x2F;adventures.michaelfbryan.com&quot;&gt;Michael Bryan&lt;&#x2F;a&gt; discusses
the usage of the ECS pattern in a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Computer-aided_design&quot;&gt;CAD&lt;&#x2F;a&gt; library.
It&#x27;s obviously not about games,
but it still can be interesting for some game developers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;egcvil&#x2F;a_thought_experiment_using_an_ecs_outside_of_game&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lyon-v0-15&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&#x2F;posts&#x2F;new-tessellator.html&quot;&gt;Lyon v0.15&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lyon-v0-15&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;lyon-sweep-v-h.png&quot; alt=&quot;The triangles generated with vertical and horizontal traversals of the same path&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;Lyon&lt;&#x2F;a&gt; a rust crate to tessellate arbitrary 2D shapes into
triangle meshes that can be easily rendered on the GPU.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&quot;&gt;@nical&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&#x2F;posts&#x2F;new-tessellator.html&quot;&gt;Lyon 0.15&lt;&#x2F;a&gt;.
The fill tessellator was rewritten from scratch (it took two years),
it should solve robustness issues the previous implementation had
and also has a bunch of new features.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&#x2F;posts&#x2F;new-tessellator.html&quot;&gt;full release announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;efz5jb&#x2F;lyon_0150_a_new_tessellator&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;winit-v0-20-alpha-and-web-support&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;winit-0-20-and-web-support&#x2F;36155&quot;&gt;winit v0.20-alpha and Web Support&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#winit-v0-20-alpha-and-web-support&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt; is a pure-Rust library for creating and managing windows.&lt;&#x2F;p&gt;
&lt;p&gt;A new alpha release of winit brings the web support.
The web version expectedly has some API limitations
(like window decorations, resizing, fullscreen, etc).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Web support is very much in alpha, and we&#x27;d like to encourage you
to try it out and stress-test it so we can see where
the issues are and improve where necessary.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;winit-0-20-and-web-support&#x2F;36155&quot;&gt;the announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;efz0rm&#x2F;winit_020_and_web_support&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-state-of-ggez-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiki.alopex.li&#x2F;TheStateOfGGEZ2020&quot;&gt;The State Of GGEZ 2020&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-state-of-ggez-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ggez-logo-maroon-full.svg&quot; alt=&quot;GGEZ logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; is a lightweight game framework for making 2D games with minimum friction,
inspired by &lt;a href=&quot;https:&#x2F;&#x2F;love2d.org&quot;&gt;love2D&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;Icefox&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;wiki.alopex.li&#x2F;TheStateOfGGEZ2020&quot;&gt;&amp;quot;The State Of GGEZ 2020&amp;quot;&lt;&#x2F;a&gt; blog post
with an overview of what happened in ggez&#x27;s development this year,
what is the current ggez 0.6 development status,
what&#x27;s in the roadmap, and thoughts about the Rust ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eh7wkx&#x2F;the_state_of_ggez_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;&lt;img src=&quot;miniquad.gif&quot; alt=&quot;miniquad demos&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a safe cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;Web demos:
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;quad.html&quot;&gt;quad&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;offscreen.html&quot;&gt;offscreen&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;astroblasto.html&quot;&gt;astroblasto&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;arkanoid.html&quot;&gt;arkanoid&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;zemeroth.html&quot;&gt;zemeroth&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; also posted a few Patreon updates this month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;32234274&quot;&gt;&amp;quot;Status update&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;rust-2d-engine-32439672&quot;&gt;&amp;quot;Rust 2D Engine, Rendering revisited&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;godot-and-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; and Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-and-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;After a year of work &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GodotNativeTools&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt; 0.7 bindings were released.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Rust 2018;&lt;&#x2F;li&gt;
&lt;li&gt;The API description of Godot classes was updated to the stable Godot version 3.1.1;&lt;&#x2F;li&gt;
&lt;li&gt;More helper traits and  derive&#x2F;procedural macroses to reduce the boilerplate;&lt;&#x2F;li&gt;
&lt;li&gt;Iterators for Godot collection types;&lt;&#x2F;li&gt;
&lt;li&gt;New example projects;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tom-leys&#x2F;godot-rust&#x2F;tree&#x2F;feature_specs_integration_example&#x2F;examples&#x2F;specs_integration&quot;&gt;a Godot-Specs example project&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;@RecallSingularity&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;raylib-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&quot;&gt;raylib-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#raylib-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&quot;&gt;&lt;img src=&quot;raylib-rs.png&quot; alt=&quot;raylib-rs minimalistic logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raylib.com&quot;&gt;raylib&lt;&#x2F;a&gt; is a simple C 2D&#x2F;3D game engine with virtually no dependencies.
This month, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&quot;&gt;raylib-rs&lt;&#x2F;a&gt; 1.0 was released - mostly idiomatic
and thread-safe Rust raylib bindings.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&#x2F;blob&#x2F;7e387774c&#x2F;samples&#x2F;roguelike.rs&quot;&gt;Check out an example of a roguelike game here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ednyyz&#x2F;check_out_raylibrs_rust_bindings_for_the_raylib&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;makepad&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;Makepad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#makepad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;&lt;img src=&quot;makepad.jpg&quot; alt=&quot;Makepad in action&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;Makepad&lt;&#x2F;a&gt; is a creative software development platform for Rust
that compiles to WASM&#x2F;WebGL, macOS&#x2F;Metal, Windows&#x2F;DX11, Linux&#x2F;OpenGL.&lt;&#x2F;p&gt;
&lt;p&gt;An early alpha version of Makepad Basic was launched.
This version shows off the development platform,
but does not include the visual design tools or library ecosystem yet.&lt;&#x2F;p&gt;
&lt;p&gt;Play with Rust+Wasm live at &lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;makepad.nl&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e6zcp3&#x2F;introducing_makepad_live_editing&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tetra.seventeencups.net&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework
that uses SDL2 for event handling and OpenGL 3.2+ for rendering.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&quot;&gt;@17cupsofcoffee&lt;&#x2F;a&gt; has released Tetra v0.3.
Main changes are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nalgebra.org&quot;&gt;nalgebra&lt;&#x2F;a&gt; linalg library was replaced with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yoanlcq&#x2F;vek&quot;&gt;vek&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Improved window&#x2F;input events;&lt;&#x2F;li&gt;
&lt;li&gt;Improved cameras&#x2F;transform matrices;&lt;&#x2F;li&gt;
&lt;li&gt;More flexible screen scaling;&lt;&#x2F;li&gt;
&lt;li&gt;Better error handling;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;Read the full changelog here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&quot;&gt;@17cupsofcoffee&lt;&#x2F;a&gt; also posted &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;17cupsofcoffee&#x2F;f5082a13626ddf0030075d542262c728&quot;&gt;a little example&lt;&#x2F;a&gt;
of how you can implement pooling for sound effects&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is handy for situations where you don&#x27;t want more than X instances
of the same sound playing at once
(e.g. if the player is able to fire a weapon as fast as they can hit a button),
etc...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;compact-space&quot;&gt;&lt;img src=&quot;compact-space.gif&quot; alt=&quot;Compact Space gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fischspiele&#x2F;status&#x2F;1206014736300728322&quot;&gt;@puppetmaster updated their &amp;quot;Compact Space&amp;quot; game&lt;&#x2F;a&gt;
to Tetra 0.3, added some sound effects and a little x-max surprise.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JohanLindfors&quot;&gt;@JohanLindfors&lt;&#x2F;a&gt; updated their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programmeramera&#x2F;snake-in-tetra&quot;&gt;Snake&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programmeramera&#x2F;flappy-in-rust&quot;&gt;Flappy Bird&lt;&#x2F;a&gt; sample games to Tetra 0.3.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the Snake sample now has
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programmeramera&#x2F;snake-in-tetra&#x2F;tree&#x2F;5c7cc79f8&#x2F;tutorial&quot;&gt;a ten step tutorial on how to build it from scratch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d-sound&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d-sound&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound&lt;&#x2F;a&gt; is a new sound library in active development.&lt;&#x2F;p&gt;
&lt;p&gt;This month it has gained three major features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Head-related_transfer_function&quot;&gt;Head-related transfer function&lt;&#x2F;a&gt; support - it provides perfect binaural sound.
Try it: &lt;code&gt;cargo run --example hrtf --release&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Reverberation&quot;&gt;Reverberation&lt;&#x2F;a&gt; support - basic effect that gives your scene &amp;quot;sound volume&amp;quot;.
Try it: &lt;code&gt;cargo run --example reverb --release&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Vorbis&quot;&gt;Vorbis&#x2F;ogg&lt;&#x2F;a&gt; support - a compressed format similar to mp3.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound&lt;&#x2F;a&gt; is a component of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;siebencorgie-s-voxel-engine&quot;&gt;@siebencorgie&#x27;s Voxel Engine&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#siebencorgie-s-voxel-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;siebencorgie-voxels.jpeg&quot; alt=&quot;roughness-based reflections&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&quot;&gt;@siebencorgie&lt;&#x2F;a&gt; got &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&#x2F;status&#x2F;1209086915925991425&quot;&gt;voxel global illumination&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&#x2F;status&#x2F;1201171106641698816&quot;&gt;voxel cone traced reflections&lt;&#x2F;a&gt; working in their voxel engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;introduction-to-rendology&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;rust&#x2F;gamedev&#x2F;rendology&#x2F;2019&#x2F;12&#x2F;13&#x2F;introduction-to-rendology.html&quot;&gt;Introduction to Rendology&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#introduction-to-rendology&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rendology_hdr_0_4.png&quot; alt=&quot;Rendology demo screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;rendology&quot;&gt;Rendology&lt;&#x2F;a&gt; is a 3D rendering pipeline based on Glium and written in Rust.
It features basic implementations of shadow mapping, deferred shading,
a glow effect, FXAA and instanced rendering.&lt;&#x2F;p&gt;
&lt;p&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;rust&#x2F;gamedev&#x2F;rendology&#x2F;2019&#x2F;12&#x2F;13&#x2F;introduction-to-rendology.html&quot;&gt;&amp;quot;Introduction to Rendology&amp;quot;&lt;&#x2F;a&gt; article
outlines some of the concepts of Rendology
and describes how they came to be this way.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eaj6su&#x2F;introduction_to_rendology_a_gliumbased_rendering&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; v0.5&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; is
&amp;quot;the hottest HTML5 + WASM game engine for games written in Rust with web-sys&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Main updates of v0.5 version:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Automated asset packs generation on build phase;&lt;&#x2F;li&gt;
&lt;li&gt;Loading assets from asset packs;&lt;&#x2F;li&gt;
&lt;li&gt;Support for audio: sound effects (buffered) and background music &amp;gt; (streaming);&lt;&#x2F;li&gt;
&lt;li&gt;Support for 2D physics (rigid bodies and colliders) via &lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&#x2F;&quot;&gt;nphysics2d&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A new example: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;basic-web-game&quot;&gt;a basic web game&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ei8754&#x2F;oxygengine_v050_2020_edition_release_of_the&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun-december-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;1&#x2F;1&#x2F;this-month-december&quot;&gt;This Month in Mun - December 2019&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun-december-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mun_logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;1&#x2F;1&#x2F;this-month-december&quot;&gt;December updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Parsing of tuple data structures;&lt;&#x2F;li&gt;
&lt;li&gt;Parsing and type inferencing of data structure literals;&lt;&#x2F;li&gt;
&lt;li&gt;Indexing of data structure fields;&lt;&#x2F;li&gt;
&lt;li&gt;Improved handling of data structure information;&lt;&#x2F;li&gt;
&lt;li&gt;Type checking of binary operations;&lt;&#x2F;li&gt;
&lt;li&gt;A community member made a PoC of Mun-powered hot reloading
in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rust-roguelike-tutorial&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rl-c63-s4.gif&quot; alt=&quot;Roguelike gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes almost 70 chapters now and continues to grow!&lt;&#x2F;p&gt;
&lt;p&gt;Some of the December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;item identification and magical weapons;&lt;&#x2F;li&gt;
&lt;li&gt;a generic &amp;quot;effects&amp;quot; system;&lt;&#x2F;li&gt;
&lt;li&gt;cursed items, scrolls of remove curse, and item identification scrolls;&lt;&#x2F;li&gt;
&lt;li&gt;items that affect your attributes, generic statuses;&lt;&#x2F;li&gt;
&lt;li&gt;spells, spellbooks, weapon proc fx, mob special abilities,
DoT, initiative +&#x2F;- effects;&lt;&#x2F;li&gt;
&lt;li&gt;a dragon lair in a ruined fort;&lt;&#x2F;li&gt;
&lt;li&gt;multi-tile entities including pathfinding;&lt;&#x2F;li&gt;
&lt;li&gt;parameterized procgen of magic weaponry&#x2F;armor;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, check out
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;eij9nl&#x2F;2020_in_roguelikedev_one_knight_in_the_dungeon&quot;&gt;@blackfuture&#x27;s 2019 Roguelike Development Retrospective post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;doryen-rs-v1-2-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;doryen-rs&quot;&gt;doryen-rs&lt;&#x2F;a&gt; v1.2.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#doryen-rs-v1-2-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jice-nospam.github.io&#x2F;doryen-rs&#x2F;docs&#x2F;demo&quot;&gt;&lt;img src=&quot;doryen-small.png&quot; alt=&quot;Visual demo screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;doryen-rs&quot;&gt;doryen-rs&lt;&#x2F;a&gt; is an ASCII roguelike library with native and WASM support.
Uses the uni-gl and uni-app crates from the &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;unrust&#x2F;unrust&quot;&gt;unrust&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;doryen-rs&quot;&gt;doryen-rs&lt;&#x2F;a&gt; v1.2.1 was released this month.
Some of the new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;added InputApi.keys_released() and InputApi.keys_pressed()
that return iterators on key events since last update;&lt;&#x2F;li&gt;
&lt;li&gt;added alpha example showcasing framebuffer overdrawing;&lt;&#x2F;li&gt;
&lt;li&gt;added text input support through InputApi.text();&lt;&#x2F;li&gt;
&lt;li&gt;added a visual demo showcasing subcell resolution + dynamic lighting
in a real time roguelike;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nes-rust-wasm-nes-emulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; - WASM &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt; Emulator&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nes-rust-wasm-nes-emulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nes-multiplay.png&quot; alt=&quot;Multiplayer session&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;superhoge&quot;&gt;@superhoge&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt; (Famicom) emulator in Rust on the Web, compiled to WASM.&lt;&#x2F;p&gt;
&lt;p&gt;This month nes-rust got remote multiplay:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you enter a room, share the URL with someone
and start the game you want to play with them. Enjoy!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raw.githack.com&#x2F;takahirox&#x2F;nes-rust&#x2F;WebRTC&#x2F;multiplay.html&quot;&gt;Try it!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rx-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;rx v0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rx-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&#x2F;gifs&#x2F;demo.gif&quot; alt=&quot;Animation editing sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;rx&lt;&#x2F;a&gt; is an extensible, modern and minimalist pixel editor,
designed with great care and love for artists and hackers.
It was conceived to have as little UI as possible,
and instead focus on the work.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The 0.3 release comes with:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&#x2F;videos&#x2F;manipulating.webm&quot;&gt;vim-like visual mode&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;a &lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;new website&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;and a &lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&#x2F;guide.html&quot;&gt;user guide&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eh6it4&#x2F;rx_v03_released_with_user_guide_a_modern_pixel&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;texel-ascii-art-editor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;almindor&#x2F;texel&quot;&gt;Texel&lt;&#x2F;a&gt; - ASCII Art Editor&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#texel-ascii-art-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;almindor&#x2F;texel&quot;&gt;&lt;img src=&quot;texel.png&quot; alt=&quot;Texel tutorial screen&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;almindor&#x2F;texel&quot;&gt;Texel&lt;&#x2F;a&gt; is an ASCII art and landscape editor with VIM-like controls.
It aims to make editing ASCII art easy especially for use in games.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ebmbt2&#x2F;introducing_texel_ascii_art_editor&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embark-developer-newsletter-002&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;us20.campaign-archive.com&#x2F;?u=4206f0696b8b13a996c701852&amp;amp;id=0339af3ed2&quot;&gt;Embark: Developer Newsletter 002&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embark-developer-newsletter-002&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;embark.png&quot; alt=&quot;Embark&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;Embark&lt;&#x2F;a&gt; posted &lt;a href=&quot;https:&#x2F;&#x2F;us20.campaign-archive.com&#x2F;?u=4206f0696b8b13a996c701852&amp;amp;id=0339af3ed2&quot;&gt;the second issue of their newsletter&lt;&#x2F;a&gt;.
Here&#x27;re some of the Rust news from it:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;embarkstudios&#x2F;inside-rust-at-embark-b82c06d1d9f4&quot;&gt;&amp;quot;Inside Rust at Embark 🦀&amp;quot;&lt;&#x2F;a&gt; - a peek inside Embark&#x27;s
day-to-day work with Rust and open source gamedev
(&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e7120k&#x2F;inside_rust_at_embark&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;embarkstudios&#x2F;cargo-about&quot;&gt;cargo-about&lt;&#x2F;a&gt; - a cargo plugin to generate list of all licenses for a crate
(&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e74uux&#x2F;embarkstudioscargoabout_cargo_plugin_to_generate&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;32&quot;&gt;#32 &amp;quot;Selective Enabling&#x2F;Disabling optimizations at a crate&#x2F;file&#x2F;function level&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;46&quot;&gt;#46 &amp;quot;Make sure key crates have &lt;code&gt;crev&lt;&#x2F;code&gt; code reviews&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;69&quot;&gt;#69 &amp;quot;Input Handling&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;71&quot;&gt;#71&amp;quot; Proof Of Concept Crate: Simplistic Bump Allocator&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;75&quot;&gt;#75 &amp;quot;Standardised API for sharing thread pools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;77&quot;&gt;#77 &amp;quot;Can we contribute to OpenXR to get Keyboard&#x2F;Mouse support to be official?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;79&quot;&gt;#79 &amp;quot;Polymorph project&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=n-txrCMvdms&quot;&gt;&lt;img src=&quot;modulator_youtube.gif&quot; alt=&quot;Modulator video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;click to see &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=n-txrCMvdms&quot;&gt;the tutorial video&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the November of 2018,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&quot;&gt;@AndreaPessino&lt;&#x2F;a&gt; (Founder&#x2F;CTO of &lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;Ready At Dawn&lt;&#x2F;a&gt; Studios)
released a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apessino&#x2F;modulator&quot;&gt;Modulator&lt;&#x2F;a&gt; crate and an awesome
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=n-txrCMvdms&quot;&gt;&amp;quot;Modulator (Rust conding series)&amp;quot;&lt;&#x2F;a&gt; tutorial video about it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apessino&#x2F;modulator&quot;&gt;Modulator&lt;&#x2F;a&gt; is a Rust crate for abstracted, decoupled modulation sources.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Modulators are sources of change over time which exist
independently of the parameters they affect, their destinations.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Modulator comes with playground&#x2F;testbed application &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apessino&#x2F;modulator_play&quot;&gt;Modulator Play&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;An environment to visualize and test the modulator crate and to experiment
with expressive 2d primitive rendering.
Based on Piston Window, this application is meant to be both a test bed
for the Modulator crate and its included source types,
and a minimal friction environment to experiment with Rust coding.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;9zem4v&#x2F;modulator_andrea_pessino_on_twitter&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;en7tki&#x2F;this_month_in_rust_gamedev_5_december_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1215998150118461440&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #4 - November 2019</title>
            <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/004/</link>
            <guid>https://gamedev.rs/news/004/</guid>
            <description>&lt;p&gt;Welcome to the fourth issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;le-train-dispatcher-route-trains-in-simulated-rail-network&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;athorus.itch.io&#x2F;ltd&quot;&gt;Le Train Dispatcher&lt;&#x2F;a&gt; - Route Trains in Simulated Rail Network&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#le-train-dispatcher-route-trains-in-simulated-rail-network&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ltd.gif&quot; alt=&quot;Demo of Le Train Dispatcher&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Le Train Dispatcher (&lt;a href=&quot;http:&#x2F;&#x2F;athorus.itch.io&#x2F;ltd&quot;&gt;itch.io&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;athorus&quot;&gt;Patreon&lt;&#x2F;a&gt;)
allows you to route trains in a fully simulated rail network.
Particular care has been taken on the realistic management of light signals
(block systems, switch protection), train physics and curve tracing.&lt;&#x2F;p&gt;
&lt;p&gt;The game is programmed in Rust and the main crates used are: ggez, imgui and serde.&lt;&#x2F;p&gt;
&lt;p&gt;This first version is fully playable, but if you want to comment,
bring your ideas or contribute to the development of the game,
in any way, do not hesitate to post a &lt;a href=&quot;https:&#x2F;&#x2F;athorus.itch.io&#x2F;ltd&#x2F;community&quot;&gt;message&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Unique characteristics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Realistic light signals simulation:
Huge engineering work has been done to have realistic
management of railway signaling.&lt;&#x2F;li&gt;
&lt;li&gt;No collision:
Yes it&#x27;s fun to watch many trains running automatically without getting in.
All your actions are checked: you cannot put the trains in danger.&lt;&#x2F;li&gt;
&lt;li&gt;True physics
&lt;ul&gt;
&lt;li&gt;Each locomotive or wagon has its own weight,
its driving or braking force, its coefficient of adhesion.&lt;&#x2F;li&gt;
&lt;li&gt;The curves are not simple circles, they are calculated with
the same equations as those used in real road or rail networks.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.png&quot; alt=&quot;Character creation screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;Some of November&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The main repository reached 50,000 lines of code (according to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&#x2F;tokei&quot;&gt;Tokei&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;airshipper&quot;&gt;Airshipper launcher&lt;&#x2F;a&gt; was significantly improved;&lt;&#x2F;li&gt;
&lt;li&gt;game design working group was started;&lt;&#x2F;li&gt;
&lt;li&gt;improved auth, player creation screen, asset compression, lore, and soundtrack;&lt;&#x2F;li&gt;
&lt;li&gt;CI upgrades, lots of bugfixes and content upgrades.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The full weekly devlogs &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-40&quot;&gt;#40&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-41&quot;&gt;#41&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-42&quot;&gt;#42&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-43&quot;&gt;#43&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Check out a new video &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=IIl271iDulY&quot;&gt;&amp;quot;What is Veloren?&amp;quot;&lt;&#x2F;a&gt;
by @DoNeo and @RonVal4 (it&#x27;s in Russian but has English subtitles):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=IIl271iDulY&quot;&gt;&lt;img src=&quot;veloren-video.png&quot; alt=&quot;Youtube preview img&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Also, they&#x27;ve written &lt;a href=&quot;https:&#x2F;&#x2F;dtf.ru&#x2F;indie&#x2F;83725-veloren-igra-mechty&quot;&gt;an article in Russian about Veloren for dtf.ru&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;math-defense&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jackmott.itch.io&#x2F;math-defense&quot;&gt;Math Defense&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#math-defense&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;math-def.png&quot; alt=&quot;Math Defense screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jackmott.itch.io&#x2F;math-defense&quot;&gt;Math Defense&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;512Avx&quot;&gt;@512Avx&lt;&#x2F;a&gt; is a math game for kids.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Progress through addition, subtraction, multiplication, and division
by solving the math problems to shoot down enemy space ships.
Multiple difficulty levels and fully customizable by editing the levels.json file.
Create your own levels, change the difficulty, whatever you like.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jackmott&#x2F;mathblaster&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sulis-basic-resource-management&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;dev-modding&#x2F;9-dev&#x2F;15-managing-resources&quot;&gt;Sulis: Basic Resource Management&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sulis-basic-resource-management&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sulis_logo.png&quot; alt=&quot;Sulis logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;dev-modding&#x2F;9-dev&#x2F;15-managing-resources&quot;&gt;Sulis&lt;&#x2F;a&gt; is a Role-Playing Game (RPG) with turn-based, tactical combat,
deep character customization, and an engaging storyline.&lt;&#x2F;p&gt;
&lt;p&gt;This month, an article &lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;dev-modding&#x2F;9-dev&#x2F;15-managing-resources&quot;&gt;&amp;quot;Basic Resource Management&amp;quot;&lt;&#x2F;a&gt;
was published:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In developing Sulis, one of the primary goals
is easy and powerful modding capabilities.
To that end, virtually all resources are defined via simple YAML files.
The idea is that anyone with a text editor can create new resources
or edit existing ones easily.
However, this immediately brings up the question of how to manage
all these resources within the game&#x27;s state.
In Sulis, this is handled via a central resource manager.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;While Sulis is used as the primary example,
the article should apply to pretty much any game.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the project (the game itself and its source code)
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=gvibvDiVzn8&quot;&gt;was reviewed by gamefromscratch.com&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;du48iw&#x2F;sulis_an_rpg_created_using_rust_gamesfromscratch&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;h3 id=&quot;paddlers-fun-with-rust-and-distributed-systems&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_3.html&quot;&gt;Paddlers: Fun with Rust and distributed systems&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#paddlers-fun-with-rust-and-distributed-systems&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_3.html&quot;&gt;&lt;img src=&quot;paddlers-arch.png&quot; alt=&quot;Paddlers architecture scheme&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&#x2F;paddlers-browser-game&quot;&gt;Paddlers&lt;&#x2F;a&gt; is a multi-player real-time strategy browser game
about making all Paddland&#x27;s ducks happy.&lt;&#x2F;p&gt;
&lt;p&gt;Check out a live demo at &lt;a href=&quot;http:&#x2F;&#x2F;demo.paddlers.ch&quot;&gt;demo.paddlers.ch&lt;&#x2F;a&gt;
(a test user&#x27;s username is &amp;quot;Tester&amp;quot;, password is &amp;quot;1&amp;quot;).&lt;&#x2F;p&gt;
&lt;p&gt;This month the third devlog was published:
&lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_3.html&quot;&gt;&amp;quot;#3: Fun with Rust and distributed systems&amp;quot;&lt;&#x2F;a&gt;.
It overviews the architecture and implementation of the project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum-drop-tables&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;11&quot;&gt;Antorum: Drop Tables&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum-drop-tables&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum.jpeg&quot; alt=&quot;screenshot: battlefield after slaying some chonkrats&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters
and fight against the growing threats on the isle.
The game server is authoritative and written in Rust,
while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, @dooskington published
the &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;11&quot;&gt;11th devlog &amp;quot;Drop Tables&amp;quot;&lt;&#x2F;a&gt;
about the implementation of a drop table system to handle monster loot.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recall-singularity-november-progress&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;Recall Singularity: November Progress&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#recall-singularity-november-progress&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=AoPSAoqmTCk&quot;&gt;&lt;img src=&quot;recall-sing.gif&quot; alt=&quot;Demo of the basic ship collision&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;Demo of the basic ship collision.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a &amp;quot;The Recall Singularity&amp;quot; game
about designing autonomous factory ships and stations
and this month they published a devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;&amp;quot;Recalling Nov 2019&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can also &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=AoPSAoqmTCk&quot;&gt;watch a video version here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Summary:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;basic networked inputs to move ships or players;&lt;&#x2F;li&gt;
&lt;li&gt;physics for ships, including collisions;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;recallsingularity&quot;&gt;Twich streaming the development&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;a more generic approach to syncronising from Rust (Specs) to Godot.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;slavic-castles&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#slavic-castles&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;castles.jpg&quot; alt=&quot;Just a screenshot of some battle&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt; is a card game inspired by &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Arcomage&quot;&gt;Arcomage&lt;&#x2F;a&gt;
written in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&quot;&gt;good-web-game&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can play online &lt;a href=&quot;http:&#x2F;&#x2F;leinnan.ayz.pl&#x2F;ukw&#x2F;slavic_castles&#x2F;index.html&quot;&gt;here&lt;&#x2F;a&gt;
or on &lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Leinnan&#x2F;slavic_castles&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;dsm2dh&#x2F;card_game_inspired_by_arcomage&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tennis-academy.gif&quot; alt=&quot;robots demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1192178573488070659&quot;&gt;v0.0.5&lt;&#x2F;a&gt;..&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1199073510443945985&quot;&gt;v0.1.0&lt;&#x2F;a&gt;
versions of &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;⏰ players have patience levels and leave when they get bored;&lt;&#x2F;li&gt;
&lt;li&gt;✨ score multipliers with text effects;&lt;&#x2F;li&gt;
&lt;li&gt;🥇 winning and losing states;&lt;&#x2F;li&gt;
&lt;li&gt;🤖 no more people, the robots have taken over!&lt;&#x2F;li&gt;
&lt;li&gt;🎨 new colour palette and graphics, new buttons and UI (using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;twenty-asteroids&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.itch.io&#x2F;twenty-asteroids&quot;&gt;Twenty Asteroids&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#twenty-asteroids&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1197855075269521409&quot;&gt;&lt;img src=&quot;asteroids-demo.gif&quot; alt=&quot;space ship destroys enemies and asteroids with plasma beams&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The game is now officially named &amp;quot;Twenty Asteroids&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;@VladZhukov0&lt;&#x2F;a&gt; published
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1197855075269521409&quot;&gt;a short video of the updated&#x2F;tweaked gameplay&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erasterra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;erasterra&quot;&gt;Erasterra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#erasterra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;erasterra.png&quot; alt=&quot;Flying cars&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;erasterra&quot;&gt;Erasterra&lt;&#x2F;a&gt; is a geography racing game.
It uses Rust to implement the matchmaking server.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;It made sense to implement the matchmaker in Rust because
it&#x27;s designed to be a long-running service and as such it may not crash.
Rust simply makes it easier to implement non-crashing software 🙌&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;garden&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden.jpeg&quot; alt=&quot;Garden screenshot: ruins, trees and water in craters&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; tweeted a bunch of updates, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1192825303338536960&quot;&gt;ruin generation through &amp;quot;fake bombing&amp;quot; the buildings&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1196195909119496199&quot;&gt;improved soil physics&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1195461536275415040&quot;&gt;craters&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;robo.jpeg&quot; alt=&quot;A screenshot of a later game level&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; game;
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.15, 1.16, and 1.17 versions were released&lt;&#x2F;a&gt;:
Rust 1.39, bugfixes, and better translations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;big-ab-games&#x2F;robo-instructus-translation#about&quot;&gt;You can contribute to translations here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;github-game-off-2019&quot;&gt;GitHub Game Off 2019&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#github-game-off-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gh-gameoff.gif&quot; alt=&quot;gameoff logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;game-off-2019&quot;&gt;GitHub&#x27;s Game Off&lt;&#x2F;a&gt;
is an annual month-long game jam (hackathon for building games).
This year’s theme is &lt;a href=&quot;https:&#x2F;&#x2F;github.blog&#x2F;2019-11-01-game-off-2019-theme-announcement&quot;&gt;&amp;quot;leaps and bounds&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;ggoff2019&quot;&gt;&amp;quot;TopDown&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; made with
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&#x2F;status&#x2F;1192989017840730112&quot;&gt;their own unannounced game engine&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;gameoff-2019&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;fedor-defense.gif&quot; alt=&quot;TopDown: gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;compact-space&quot;&gt;&amp;quot;Compact Space&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fischspiele&quot;&gt;@fischspiele&lt;&#x2F;a&gt;
made with specs and Tetra (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;puppetmaster-&#x2F;compact-space&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;How long can you stay alive?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;compact-space.png&quot; alt=&quot;Compact-Space screenshot: asteroids, ship, aliens&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;evo&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;&quot;&gt;@ZappedCow&lt;&#x2F;a&gt;  made with Tetra (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jlauener&#x2F;evo&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A life&#x2F;environment simulator with a bit of rogue-like tossed in.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;rogue-sim.gif&quot; alt=&quot;evo: demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;Amethyst Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;11&#x2F;08&#x2F;that-looks-good-on-ui&quot;&gt;&amp;quot;That Looks Good On UI&amp;quot;&lt;&#x2F;a&gt; devlog.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;What’s new:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Animated menus and backgrounds can be defined.&lt;&#x2F;li&gt;
&lt;li&gt;Player names can be specified in controller configuration.&lt;&#x2F;li&gt;
&lt;li&gt;Winner is displayed when a game ends.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Behind the scenes, the following code maintenance has been made:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Moved all tests into a separate crate – 1.9x speedup,
65% less disk usage.&lt;&#x2F;li&gt;
&lt;li&gt;Assets are loaded into separate asset components – easier
to share logic between different types of objects.&lt;&#x2F;li&gt;
&lt;li&gt;Asset loading is done in stages, in preparation
for the ability to disable certain stages.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;will_winner_status.png&quot; alt=&quot;Will: Winner Status Demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&quot;&gt;@takeryo_eeic&lt;&#x2F;a&gt; named their hexagonal game &amp;quot;Conquest&amp;quot;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1195263050896429057&quot;&gt;added a main menu&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1192407134245228546&quot;&gt;showed a video of new map generator and map scrolling&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;conquest.png&quot; alt=&quot;Main menu demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;memory-arena&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kooparse.com&#x2F;blog&#x2F;memory-arena&quot;&gt;Memory Arena&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#memory-arena&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mem-arena.jpg&quot; alt=&quot;how entities&#x2F;handles are related to each others&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kooparse&quot;&gt;@kooparse&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;kooparse.com&#x2F;blog&#x2F;memory-arena&quot;&gt;a post about implementing a quick memory arena&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;For my game, I decided to store almost every entity in a big chunk of memory
allocated only once when the program boot.
I am using this technique for three reasons.
First, I want full and precise control over how memory is managed
in the game,
second I want better data locality in order to increase cache hits
from the cpu,
and finally, at runtime asking the operating system
in order to allocate more memory is slow.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;wgpu-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;drcje5&#x2F;wgpu04_is_out&quot;&gt;wgpu v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;webgpu.png&quot; alt=&quot;some webgpu logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; is a library in Rust that is meant to be the go-to solution
for most graphics and compute needs.&lt;&#x2F;p&gt;
&lt;p&gt;wgpu-rs version 0.4 was released on crates.
wgpu is based on &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dm89t2&#x2F;gfxhal_version_04_release&quot;&gt;gfx-hal-0.4&lt;&#x2F;a&gt; and includes
changes from the &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;previous blog post&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;A few notable additions are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;proper Windows 7 support;&lt;&#x2F;li&gt;
&lt;li&gt;support for multiple clients on the same GPU server;&lt;&#x2F;li&gt;
&lt;li&gt;slimmed-down Rendy dependencies (memory and descriptor);&lt;&#x2F;li&gt;
&lt;li&gt;new skybox example.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Lyon has &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&#x2F;pull&#x2F;496&quot;&gt;updated examples&lt;&#x2F;a&gt;
for this version, showing how to draw vector graphics on &lt;code&gt;wgpu&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, &lt;code&gt;wgpu&lt;&#x2F;code&gt; is now a part of Gecko code base for powering the emerging WebGPU implementation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;book-learn-luminance&quot;&gt;Book: &lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;learn-luminance&quot;&gt;Learn Luminance&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#book-learn-luminance&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; is a type-safe, type-level and stateless Rust graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;learn-luminance&quot;&gt;&amp;quot;Learn Luminance&amp;quot;&lt;&#x2F;a&gt; book.
Luminance&#x27;s wiki was deprecated and the book is now the central reference
to onboard newcomers to use luminance as well as people
who would like to give luminance a try and who knows nothing about rendering.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e3662k&#x2F;learn_luminance_the_book&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Btw, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1194825522418765826&quot;&gt;@resinten is working on a game using luminance&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1194825522418765826&quot;&gt;&lt;img src=&quot;luminance-space-game.gif&quot; alt=&quot;space ship pew pew&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pixels&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pixels&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pixels.png&quot; alt=&quot;Pixels logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kodewerx&quot;&gt;@kodewerx&lt;&#x2F;a&gt; is a tiny hardware-accelerated
pixel frame buffer based on wgpu.
It&#x27;s supposed to be used for emulators, software rendering,
2D animations and games prototyping.&lt;&#x2F;p&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;announcing-pixels-hardware-accelerated-pixel-frame-buffer&#x2F;34326&#x2F;1&quot;&gt;the URLO announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;drunej&#x2F;announcing_pixels_hardwareaccelerated_pixel_frame&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;metropolis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuyL99&#x2F;metropolis&quot;&gt;Metropolis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#metropolis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuyL99&#x2F;metropolis&quot;&gt;metropolis&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuyL99&quot;&gt;@GuyL99&lt;&#x2F;a&gt;
is a high-level graphics renderer, with easy functions to use.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This crate should make graphics programming easy with functions
like rect, ellipse, line, text, and such,
and it&#x27;s fast with 60-120 FPS on a bad computer.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e3lfr7&#x2F;new_graphics_renderer_metropolis&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;skulpin&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;skulpin&quot;&gt;skulpin&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#skulpin&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=El99FgGSzfg&quot;&gt;&lt;img src=&quot;skuplin.jpeg&quot; alt=&quot;physics demo video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ Click to see &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=El99FgGSzfg&quot;&gt;a demo video&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;skulpin&quot;&gt;skulpin&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt; provides an easy option for drawing
hardware-accelerated 2D by combining Vulkan and &lt;a href=&quot;https:&#x2F;&#x2F;skia.org&quot;&gt;Skia&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ultraviolet-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; v0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultraviolet-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; v0.2 were released by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fu5ha&quot;&gt;@fu5ha&lt;&#x2F;a&gt;.
This release introduces &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Bivector&quot;&gt;Bivectors&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Rotor_(mathematics)&quot;&gt;Rotors&lt;&#x2F;a&gt; and improved usability.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dt9zhz&#x2F;ultraviolet_02_released&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;img src=&quot;rayn-render.png&quot; alt=&quot;rayn fractal render example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dxjn64&#x2F;rayn_03_a_major_update_with_deeply_integrated&#x2F;&quot;&gt;Rayn v0.3 was released recently&lt;&#x2F;a&gt; - it&#x27;s a CPU-based
path tracing renderer focused on rendering SDFs (specifically fractals)
that is based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mun-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2019&#x2F;11&#x2F;11&#x2F;release-mun-v0-1-0&quot;&gt;Mun v0.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mun-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mun_logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused
on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a language, Mun is still far from production-ready,
but this release gives you a glimpse of what
natively supported hot reloading will look like in the future.
The purpose of this release is to showcase our progress and gather feedback
from those brave souls willing to try out Mun at this early stage.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;To get started, read &lt;a href=&quot;https:&#x2F;&#x2F;docs.mun-lang.org&quot;&gt;the Mun Book&lt;&#x2F;a&gt;
and have a look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;tree&#x2F;master&#x2F;crates&#x2F;mun_runtime&#x2F;examples&quot;&gt;Rust examples&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For the full roadmap of Mun, have a look at their &lt;a href=&quot;https:&#x2F;&#x2F;trello.com&#x2F;b&#x2F;ZcMiREnC&#x2F;mun-roadmap&quot;&gt;Trello board&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;duw3ls&#x2F;mun_v010_released&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;glsl-v3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dw87um&#x2F;glsl30_official_release_announcement&quot;&gt;glsl v3.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glsl-v3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;glsl&quot;&gt;glsl&lt;&#x2F;a&gt; is a crate to parse GLSL formatted sources into a typed AST.
The crate exposes several methods, types and modules
to perform transformations on that AST, among outputting GLSL,
SPIR-V generation and visiting the AST with possible in-place mutations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dw87um&#x2F;glsl30_official_release_announcement&quot;&gt;glsl v3.0&lt;&#x2F;a&gt; was released by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the CPP directives (e.g. &lt;code&gt;#line&lt;&#x2F;code&gt;, &lt;code&gt;#pragma&lt;&#x2F;code&gt;, &lt;code&gt;#ifdef&lt;&#x2F;code&gt;, etc.) are now all implemented;&lt;&#x2F;li&gt;
&lt;li&gt;improved parsing of deeply nested expressions;&lt;&#x2F;li&gt;
&lt;li&gt;multiline annotations () is now supported as a best-effort;&lt;&#x2F;li&gt;
&lt;li&gt;other bugfixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;spir-q&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spir-q&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;spir-q.png&quot; alt=&quot;example output&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; is a lightweight &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Standard_Portable_Intermediate_Representation&quot;&gt;SPIR-V&lt;&#x2F;a&gt; query library.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;SPIR-Q &amp;lt;...&amp;gt; can be very useful for dynamic graphics&#x2F;compute pipeline construction,
shader debugging and so on.
SPIR-Q is currently compatible with a subset of SPIR-V 1.5,
with most of graphics capabilities but no OpenCL kernel capabilities covered.
Btw, SPIR-Q currently only depends on the Rust standard library.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e1ft1k&#x2F;spirq_spirv_metadata_extraction_library&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;iced-beta-version&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e1jckj&#x2F;iced_a_crossplatform_gui_library_new_release&quot;&gt;Iced: Beta Version&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iced-beta-version&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;iced.gif&quot; alt=&quot;Iced demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt; is a renderer-agnostic GUI library focused on simplicity
and type-safety.&lt;&#x2F;p&gt;
&lt;p&gt;This month, a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e1jckj&#x2F;iced_a_crossplatform_gui_library_new_release&quot;&gt;beta version of Iced was released&lt;&#x2F;a&gt;.
The most important new features are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;22&quot;&gt;basic renderer&lt;&#x2F;a&gt;
built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A windowing shell powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;17&quot;&gt;web runtime&lt;&#x2F;a&gt;
based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;dodrio&quot;&gt;dodrio&lt;&#x2F;a&gt; (try the tour on &lt;a href=&quot;https:&#x2F;&#x2F;iced.rs&quot;&gt;iced.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;First-class &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;62&quot;&gt;async actions&lt;&#x2F;a&gt;,
leveraging futures;&lt;&#x2F;li&gt;
&lt;li&gt;New widgets, like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;37&quot;&gt;text inputs&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;35&quot;&gt;scrollables&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;blog.cryptowat.ch&#x2F;2019&#x2F;11&#x2F;25&#x2F;sponsoring-rust-gui-library-iced&quot;&gt;Cryptowatch is now sponsoring the development of Iced!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embark-s-stockholm-rust-meetup-and-newsletter&quot;&gt;Embark&#x27;s Stockholm Rust Meetup and Newsletter&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embark-s-stockholm-rust-meetup-and-newsletter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;embark.png&quot; alt=&quot;Embark logo white on black&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Videos from &lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;Embark&lt;&#x2F;a&gt;&#x27;s Stockholm Rust Meetup arrived:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=RxtXGeDHu0w&quot;&gt;&amp;quot;An Unholy Fusion of Rust and C++ in physx-rs&amp;quot;&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&quot;&gt;Tomasz Stachowiak&lt;&#x2F;a&gt;, senior software engineer at Embark,
details their experiences combining Rust and C++ code
during the creation of the physx-rs open source project
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;du91t1&#x2F;an_unholy_fusion_of_rust_and_c_in_physxrs&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=lpOg2nl3kr0&quot;&gt;&amp;quot;Rust, Open Source, Game Dev&amp;quot;&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ca1ne&quot;&gt;Jake Shadle&lt;&#x2F;a&gt; explains how Rust, open source,
and game development fit together
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;du9g5d&#x2F;rust_open_source_game_dev_stockholm_rust_meetup&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;embark.dev&#x2F;#newsletter&quot;&gt;Embark started a newsletter&lt;&#x2F;a&gt;.
Check out the first issue
&lt;a href=&quot;http:&#x2F;&#x2F;eepurl.com&#x2F;gI3v89&quot;&gt;&amp;quot;11&#x2F;08&#x2F;2019 - Rust, Blender, Hacktoberfest, and more: Newsletter 001 from Embark&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;creative-coding-in-rust-with-nannou&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;deciduously&#x2F;creative-coding-in-rust-with-nannou-1lbl&quot;&gt;Creative Coding in Rust with Nannou&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#creative-coding-in-rust-with-nannou&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;nannou.png&quot; alt=&quot;Nannou example screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A beginner-level tutorial article teaching how to build a small demo
with the &lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;nannou&lt;&#x2F;a&gt; creative coding framework.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rltk-rust-roguelike-tutorial&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;RLTK&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rltk-rust-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rogulike-demo.gif&quot; alt=&quot;Dungeon generation demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes almost 60 chapters now and continues to grow!&lt;&#x2F;p&gt;
&lt;p&gt;Some of the November&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;backtracking&#x2F;persistent maps,&lt;&#x2F;li&gt;
&lt;li&gt;dynamic colored lighting,&lt;&#x2F;li&gt;
&lt;li&gt;town portals, and teleportation in general (including optionally affecting NPCs),&lt;&#x2F;li&gt;
&lt;li&gt;cheat mode (for testing later maps).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nes-rust-wasm-nes-emulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; - WASM &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt; Emulator&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nes-rust-wasm-nes-emulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raw.githack.com&#x2F;takahirox&#x2F;nes-rust&#x2F;master&#x2F;index.html&quot;&gt;&lt;img src=&quot;nes-wasm.gif&quot; alt=&quot;Screenshot of the NES emulator&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;superhoge&quot;&gt;@superhoge&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt;(Famicom) emulator in Rust on the Web, compiled to WASM.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;raw.githack.com&#x2F;takahirox&#x2F;nes-rust&#x2F;master&#x2F;index.html&quot;&gt;online Demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;Amethyst&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;amethyst-logo.png&quot; alt=&quot;Amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blaineprice.me&quot;&gt;Blaine Price&lt;&#x2F;a&gt; is working on a “The Ten Top” game and shared a
&lt;a href=&quot;https:&#x2F;&#x2F;blaineprice.me&#x2F;posts&#x2F;rustlang-up-some-grub&quot;&gt;&amp;quot;Rustlang Up Some Grub at The Ten Top&amp;quot;&lt;&#x2F;a&gt;
devlog about dependency graphs;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;food_truck_cropped.jpg&quot; alt=&quot;food truck&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rfcs&#x2F;issues&#x2F;22&quot;&gt;&amp;quot;[RFC Discussion] Legion ECS Evolution&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;duki8d&#x2F;amethyst_legion_ecs_rfc&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;legion-ecs-discussion&#x2F;965&quot;&gt;forum&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&quot;&gt;@mvlabat&lt;&#x2F;a&gt; posted
&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;how-can-we-improve-custom-shaders-user-experience&#x2F;1230&quot;&gt;&amp;quot;How can we improve custom shaders user experience?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;future-of-nalgebra-and-math-in-amethyst&#x2F;1228&quot;&gt;&amp;quot;Future of nalgebra and math in Amethyst&amp;quot;&lt;&#x2F;a&gt;
discussion;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;skepticism-about-rendy&#x2F;1221&quot;&gt;&amp;quot;Skepticism about Rendy&amp;quot;&lt;&#x2F;a&gt;
discussion;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;obiwanuss-long-link-time-feedback&#x2F;1207&quot;&gt;A thread by @obiwanus about long link time&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;50&quot;&gt;#50 &amp;quot;Linking Time&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;51&quot;&gt;#51 &amp;quot;Using wasm-bindgen for games&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;68&quot;&gt;#68 &amp;quot;Modding&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;69&quot;&gt;#69 &amp;quot;Input Handling&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;71&quot;&gt;#71 &amp;quot;Proof Of Concept Crate: Simplistic Bump Allocator&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;73&quot;&gt;#73 &amp;quot;Membership Listing&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dyhylu&#x2F;luster_lua_vm_in_rust_this_project_is_currently&quot;&gt;@kyren is looking for a new maintainer for &amp;quot;rlua&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;t&#x2F;616119&#x2F;contributing&quot;&gt;Add assets (graphics, levels, sounds) to Le Train Dispatcher&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;diuqg7&#x2F;need_help_porting_steam_libraries_to_rust&quot;&gt;&#x2F;r&#x2F;rust: &amp;quot;Need help porting steam libraries to rust&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=EgFr73AUwps&quot;&gt;&lt;img src=&quot;penguin.png&quot; alt=&quot;Pascal Penguin logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;click to see the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=EgFr73AUwps&quot;&gt;release trailer&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;luduminis.com&#x2F;pascal&#x2F;about&#x2F;&quot;&gt;&amp;quot;Adventures of Pascal Penguin&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;http:&#x2F;&#x2F;luduminis.com&quot;&gt;Matthew Michelotti&lt;&#x2F;a&gt;
is a 2D grid-based puzzle game with levels designed around slippery ice.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Push blocks and bounce off bumpers as you try
to reach the crystal at the end of each level.
Grab invisibility orbs to walk through solid objects.
Build a safe path over boiling lava and ice-cold water.
There are 40 levels spread out across 5 zones.
Can you complete them all?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Written using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergiusIW&#x2F;gate&quot;&gt;Gate&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e7xdwf&#x2F;this_month_in_rust_gamedev_4_november_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1203745439243223044&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #3 - October 2019</title>
            <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/003/</link>
            <guid>https://gamedev.rs/news/003/</guid>
            <description>&lt;p&gt;Welcome to the third issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;sulis-a-turn-based-rpg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&quot;&gt;Sulis&lt;&#x2F;a&gt; - a Turn-Based RPG&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sulis-a-turn-based-rpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sulis-inventory.png&quot; alt=&quot;chest and inventory with items&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&quot;&gt;Sulis&lt;&#x2F;a&gt; is a Role Playing Game (RPG) with turn based, tactical combat,
deep character customization and an engaging storyline.
The game has been built from the ground up with modding
and custom content in mind.
Currently supported on Windows and Linux platforms.&lt;&#x2F;p&gt;
&lt;p&gt;The game is currently fully playable
and includes the first act of The Twin Expanse,
an old school RPG campaign in the vein of classic games
such as &lt;em&gt;Baldur&#x27;s Gate&lt;&#x2F;em&gt;,
but mixing in modern elements from titles like
&lt;em&gt;Divinity: Original Sin&lt;&#x2F;em&gt; and &lt;em&gt;Pillars of Eternity&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The core game engine as well as the campaign
are still under heavy development.
Users are encouraged to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Grokmoo&#x2F;sulis&#x2F;issues&quot;&gt;file issues with bugs&lt;&#x2F;a&gt;,
feature requests, or any other feedback.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;sulis-battle.png&quot; alt=&quot;flaming fingers spell demonstration&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cross platform native binaries, currently &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Grokmoo&#x2F;sulis&#x2F;releases&quot;&gt;built for Windows and Linux&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Multiple campaigns with over 8 hours of playtime,
featuring both handcrafted and procedural content.&lt;&#x2F;li&gt;
&lt;li&gt;A detailed and fully realized world and story - check out
the &lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;lore&quot;&gt;Lore page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Designed with modding in mind - although more work still needs
to be done in this area.&lt;&#x2F;li&gt;
&lt;li&gt;A powerful 2D graphics engine with zoom, scalable UI, HiDPI support,
and a swappable graphics backend.&lt;&#x2F;li&gt;
&lt;li&gt;Runs on very modest hardware - even software renderers
(although at a reduced frame rate).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;sulis-abilities-tree.png&quot; alt=&quot;ability tree gui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The GPLv3-licensed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Grokmoo&#x2F;sulis&quot;&gt;source code is hosted on GitHub&lt;&#x2F;a&gt;.
Sulis is written in Rust, with scripting in Lua and most data files in the YAML format.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;din01e&#x2F;sulis_a_turnbased_rpg_written_in_rust_by_ugrokmoo&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.png&quot; alt=&quot;Bumpy terrain with a rivers and trees&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-37&quot;&gt;a v0.4 version was released&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-36&#x2F;#player-survey&quot;&gt;player survey results was published&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Some of October&#x27;s improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;lots of bugfixes and optimizations;&lt;&#x2F;li&gt;
&lt;li&gt;improved erosion, rivers and water flow physics;&lt;&#x2F;li&gt;
&lt;li&gt;user interface improvements;&lt;&#x2F;li&gt;
&lt;li&gt;improved game lore;&lt;&#x2F;li&gt;
&lt;li&gt;RFC procedure for 0.5 development.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;New video: &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=iwP7SXdWcTg&quot;&gt;&amp;quot;Cities, dungeons and other structures&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;Veloren&#x2F;comments&#x2F;ddp0n9&#x2F;veloren_cities_dungeons_and_other_structures&quot;&gt;&#x2F;r&#x2F;veloren&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;The full weekly devlogs &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-36&quot;&gt;#36&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-37&quot;&gt;#37&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-38&quot;&gt;#38&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-39&quot;&gt;#39&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;Veloren&quot;&gt;&#x2F;r&#x2F;veloren subreddit&lt;&#x2F;a&gt;,
it&#x27;s pretty active.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;canon-collision&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;canoncollision.com&quot;&gt;Canon Collision&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#canon-collision&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;pf-sandbox.jpg&quot; alt=&quot;Exported models with textureas and skeletal animations&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;canoncollision.com&quot;&gt;Canon Collision&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&quot;&gt;@rukai&lt;&#x2F;a&gt; is an Undertale + Homestuck
fan-made platform fighter with powerful tools for modding.
It was forked from another project of rukai&#x27;s
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rukai&#x2F;PF_Sandbox&quot;&gt;PF Sandbox&lt;&#x2F;a&gt; so he could focus on making
a game rather then an engine.&lt;&#x2F;p&gt;
&lt;p&gt;This month,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1180477120113340417&quot;&gt;exporting and hot-reloading assets from blender&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1182945899485335552&quot;&gt;freelook camera&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1182945899485335552&quot;&gt;textures&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1188261107124727808&quot;&gt;animations&lt;&#x2F;a&gt;
were added to the project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;antorum.jpeg&quot; alt=&quot;Antorum screenshot: a few human characters, a few rats and an inventory UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters
and fight against the growing threats on the isle.
The game server is authoritative and written in Rust,
while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt; published a bunch of devlogs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;6&quot;&gt;#6 &amp;quot;Items And Inventory&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;7&quot;&gt;#7 &amp;quot;Grubbnet&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;8&quot;&gt;#8 &amp;quot;The Editor&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;9&quot;&gt;#9 &amp;quot;The Editor, Pt. 2&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;10&quot;&gt;#10 &amp;quot;Terrain Sync&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;As described in the &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;7&quot;&gt;7th devlog&lt;&#x2F;a&gt;,
an initial version of a &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dooskington&#x2F;grubbnet&quot;&gt;grubbnet&lt;&#x2F;a&gt;&amp;quot; crate was published.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a lightweight TCP client&#x2F;server
for writing networked applications and games.
It abstracts socket code, keeps track of connections,
and delivers everything back to the developer in a nice list of events.
In addition to handling network events
(such as client connects and disconnects),
handling incoming packets is as easy as grabbing an iterator
over the incoming packet queue.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s the same networking crate that the Antorum game server uses
under the hood.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ferris-fencing&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ferrisfencing.org&quot;&gt;Ferris Fencing&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ferris-fencing&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ferris-fencing.png&quot; alt=&quot;Two crabs fencing on a 1D map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ferrisfencing.org&quot;&gt;Ferris Fencing&lt;&#x2F;a&gt; is a live tournament in which
player-programmed bots combat each other on a &lt;a href=&quot;https:&#x2F;&#x2F;riscv.org&quot;&gt;RISC-V&lt;&#x2F;a&gt; virtual machine.
It is a showcase of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nervosnetwork&#x2F;ckb-vm&quot;&gt;CKB-VM&lt;&#x2F;a&gt;, a simple implementation of the RISC-V instruction set,
written in the Rust programming language.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.ferrisfencing.org&#x2F;#rules&quot;&gt;Here&#x27;re the rules&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The Ferris Fencing tournament is not yet live,
but fencers may begin building their bots and testing them locally.
Instructions are in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&#x2F;ferris-fencing&quot;&gt;GitHub repo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-v0-03-v0-0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt; v0.03 &amp;amp; v0.0.4&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-v0-03-v0-0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;tennis-academy.png&quot; alt=&quot;4 courts with players&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1185576890746265600&quot;&gt;v0.0.3&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1185945850771660805&quot;&gt;v0.0.4&lt;&#x2F;a&gt; updates for &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🏘️ improved reception area queueing&lt;&#x2F;li&gt;
&lt;li&gt;🎆 timed effects when players disappear&lt;&#x2F;li&gt;
&lt;li&gt;⛹️ click to collect coins from player&lt;&#x2F;li&gt;
&lt;li&gt;👟 4 courts on screen&lt;&#x2F;li&gt;
&lt;li&gt;⛹️ matching t-shirts for players&lt;&#x2F;li&gt;
&lt;li&gt;💯 money is now score&lt;&#x2F;li&gt;
&lt;li&gt;🚥 court + t-shirt colour matching logic&lt;&#x2F;li&gt;
&lt;li&gt;📊 score multipliers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;piano-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ritiek&#x2F;piano-rs&quot;&gt;piano-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#piano-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;piano.png&quot; alt=&quot;Virtual piano keyboard&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ritiek&#x2F;piano-rs&quot;&gt;piano-rs&lt;&#x2F;a&gt; is a multiplayer piano using UDP sockets
that can be played using computer keyboard, in the terminal.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;de28rz&#x2F;a_multiplayer_piano_game_for_the_terminal&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;will-it-dissolve&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;dissolve&quot;&gt;Will it dissolve?&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#will-it-dissolve&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;dissolve.gif&quot; alt=&quot;Dissolve gameplay demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;dissolve&quot;&gt;&amp;quot;Will it dissolve?&amp;quot;&lt;&#x2F;a&gt; is a small puzzle game
for &lt;a href=&quot;http:&#x2F;&#x2F;openjam.io&quot;&gt;&amp;quot;Open Jam 2019&amp;quot;&lt;&#x2F;a&gt;
where you have to prepare the level so that it will
automatically convert and dissolve in the future.&lt;&#x2F;p&gt;
&lt;p&gt;Programmed with the help of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra engine&lt;&#x2F;a&gt;.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;puppetmaster-&#x2F;will_it_dissolve&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-devlog-october&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;october&quot;&gt;Garden Devlog: October&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-devlog-october&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;garden.jpeg&quot; alt=&quot;Garden screenshot: a tree, leaves, water and ruins&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around
growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;The following changes were made since the last devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved flowers were added.&lt;&#x2F;li&gt;
&lt;li&gt;The plant simulation code is almost finalized,
and developers will be able to start adding new species soon.&lt;&#x2F;li&gt;
&lt;li&gt;The procedural ruin generation was improved:
no more floating concrete chunks.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1190754460575961089&quot;&gt;Watch the video demo here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, a new design plan was created:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The main objective is to restore the luscious ecosystem
in a polluted wasteland.
The player will have to continuously figure out how to handle different
environmental constraints to keep trees growing, collect enough fruit
and figure out what to do with them, and unlock new goals and flora.&lt;&#x2F;li&gt;
&lt;li&gt;But for players who are interested in wild, goalless plant growth,
there’ll also be a sandbox mode.
As one progresses in the main game and “unlocks” more trees,
playing around with creating flourishing jungle troves will be possible.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To stay informed of smaller updates, screenshots, and new devlogs,
follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;eve-aether-wars-backend-optimization&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1165670&#x2F;EVE_Aether_Wars__Tech_Demo&#x2F;&quot;&gt;EVE Aether Wars&lt;&#x2F;a&gt; Backend Optimization&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#eve-aether-wars-backend-optimization&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aidanhs&#x2F;status&#x2F;1181584776584675328&quot;&gt;@aidanhs shared&lt;&#x2F;a&gt;
a small &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1165670&#x2F;EVE_Aether_Wars__Tech_Demo&#x2F;&quot;&gt;EVE Aether Wars&lt;&#x2F;a&gt; backend optimization success story:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;To double the tick rate to 30Hz, our underlying @rustlang layer
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aidanhs&#x2F;status&#x2F;1110607519385350150&quot;&gt;from last time&lt;&#x2F;a&gt;
needed...a two line bugfix and some metrics support.
Nice proof point for reliable software in Rust!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; game;
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.12, 1.13, and 1.14 versions were released&lt;&#x2F;a&gt;:
non-ascii code input, new icons, bugfixes, and better translations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;big-ab-games&#x2F;robo-instructus-translation#about&quot;&gt;You can contribute to translations here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;robo-ru.png&quot; alt=&quot;translated menu items&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-and-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; and Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-and-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;rendering-a-2d-game-in-3d-bd24ddbee6eb&quot;&gt;&amp;quot;Rendering a 2D game in 3D&amp;quot;&lt;&#x2F;a&gt;
- &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a “The Recall Singularity” &lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt;&#x2F;Rust game
about designing autonomous factory ships and stations
and this month they published
a post about evolution of the game&#x27;s rendering.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;recall-singular.png&quot; alt=&quot;Recall Singularity screenshot: map, a few belts and processing nodes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ardawanizadi&quot;&gt;@ardawanizadi&lt;&#x2F;a&gt; shared a
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;godot&#x2F;comments&#x2F;dilbar&#x2F;game_progress_for_almost_a_month_rust_godot&quot;&gt;short text report&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ardawanizadi&#x2F;status&#x2F;1184353596927688704&quot;&gt;video demo&lt;&#x2F;a&gt;
of their progress with a project of an OpenWorld game this month:
character physics, weapon system, cameras, animations system,
dynamic damage system.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;godot&#x2F;comments&#x2F;dfam0p&#x2F;i_made_a_pong_clone_in_godot_using_the_gdnative&quot;&gt;&amp;quot;Pong Clone in Godot Using &#x27;gdnative&#x27; Rust Bindings&amp;quot;&lt;&#x2F;a&gt;
- &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;you-win&quot;&gt;@you-win&lt;&#x2F;a&gt; couldn&#x27;t find any full game examples that used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GodotNativeTools&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt;
so they made their own
[&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;you-win&#x2F;godot-pong-rust&quot;&gt;source code&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ludum-dare-45&quot;&gt;Ludum Dare 45&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ludum-dare-45&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ludum_Dare&quot;&gt;Ludum Dare&lt;&#x2F;a&gt; is a regular game jam event,
during which developers create games from scratch in a weekend
based on a theme suggested by the community.&lt;&#x2F;p&gt;
&lt;p&gt;LD45&#x27;s theme was &amp;quot;Start with nothing&amp;quot;.
Here are some of the games made with Rust:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;working-title&quot;&gt;&amp;quot;Working Title&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;NoahRosenzweig&quot;&gt;@NoahRosenzweig&lt;&#x2F;a&gt; made with Amethyst
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Noah2610&#x2F;LD45-WorkingTitle&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Experience a work in progress.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Play through the development process of a 2D platformer game,
and watch your environment transform as you progress...
The further you get, the more features are added, including
menacing enemies, destructive spikes, and adaptive music.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;working-title.png&quot; alt=&quot;Working Title: an early stage of the game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;mindmaze&quot;&gt;&amp;quot;Mindmaze&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sigodme&quot;&gt;@sigodme&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sigod&#x2F;ludum-dare-45&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A small and unhurried story about devious passages
of the trapped human mind.
Begin in the middle of oblivion as shadow and take a walk through
every chamber of this place to find all shards of lost personality.
Can you find the way out?!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;ld45-mindmaze.png&quot; alt=&quot;Mindmaze: main menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;legally-dead&quot;&gt;&amp;quot;Legally Dead&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;vilcans&quot;&gt;@vilcans&lt;&#x2F;a&gt; made with &lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&quot;&gt;ggez&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vilcans&#x2F;ld45&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;With nothing, not even memories, you find yourself maneuvering
some kind of craft in strange caves.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;legally-dead.png&quot; alt=&quot;ultra-low-poly ship in low-poly caves&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Check out the devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;legally-dead&#x2F;tools-and-tech-for-my-game-written-in-rust&quot;&gt;&amp;quot;Tools and tech for my game written in Rust&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;Amethyst Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;See the &amp;quot;Working Title&amp;quot; LD45 game above.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A top-down 2D shooter &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;grumpy_visitors&quot;&gt;&amp;quot;Grumpy Visitors&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&quot;&gt;@mvlabat&lt;&#x2F;a&gt;
became an official showcase game.&lt;&#x2F;p&gt;
&lt;p&gt;Read the announcement post: &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;showcase-game-4-grumpy-visitors&quot;&gt;&amp;quot;Showcase game #4: Grumpy Visitors&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Current game features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cooperative multiplayer;&lt;&#x2F;li&gt;
&lt;li&gt;Spawning monsters with basic AI;&lt;&#x2F;li&gt;
&lt;li&gt;Sprite animations and custom shaders (health HUD).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;grumpy_visitors&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;grumpy-visitors.png&quot; alt=&quot;A magician shooting missiles at giant bugs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JPMoresmau&#x2F;arrakis&quot;&gt;Arrakis&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JpMoresmau&quot;&gt;@JpMoresmau&lt;&#x2F;a&gt; is a 80s game ported in Rust and Amethyst.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&#x27;s a mini role-playing&#x2F;adventure game. The goal?
Walk through the streets of Arrakis to find the fabled Wizard of Arrakis,
that can teach you arcane powers you&#x27;ve only dreamt of!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;arrakis.png&quot; alt=&quot;Arrakis screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Webshinra&quot;&gt;@webshinra&lt;&#x2F;a&gt; finished porting their hexagonal game to Amethyst
and is now preparing to build gameplay.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;webshinra-hex.jpg&quot; alt=&quot;hexagonal pam with a few mechs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&quot;&gt;@takeryo_eeic&lt;&#x2F;a&gt; is also working on a turn-based hexagonal game.
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1190142474062184448&quot;&gt;Watch the video demo here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1190142474062184448&quot;&gt;&lt;img src=&quot;takeryo-eeic-hex-game.png&quot; alt=&quot;a small hex field with a few fighters&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt; got
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;pull&#x2F;19&quot;&gt;2 new items&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;pull&#x2F;18&quot;&gt;1 new enemy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;dev-time-optimization-part-1-1-9x-speedup-65-less-disk-usage&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;10&#x2F;08&#x2F;dev-time-optimization-part-1-1.9x-speedup-65-less-disk-usage&quot;&gt;Dev Time Optimization -- Part 1 (1.9x speedup, 65% less disk usage)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dev-time-optimization-part-1-1-9x-speedup-65-less-disk-usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Compile times (full and incremental) are one of Rust&#x27;s pain points.
&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published a devlog about optimizing &lt;a href=&quot;https:&#x2F;&#x2F;azriel91.itch.io&#x2F;will&quot;&gt;Will&lt;&#x2F;a&gt;&#x27;s build times.
Summary:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a 45k LOC &#x2F; 102-crate workspace,
moving tests from member crates into a single workspace_tests crate
achieved the following improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Build and test duration in release mode reduced
from 23 minutes to 13 minutes.&lt;&#x2F;li&gt;
&lt;li&gt;Debug artifact disk usage reduced from 20 G to 7 G
(65% reduction, fresh build),
or 230 G to 50 G (78% reduction, ongoing development).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;desc3q&#x2F;dev_time_optimization_part_1_19x_speedup_65_less&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tip-speed-up-iteration-time-by-using-lld-linker&quot;&gt;🛈 Tip: Speed Up Iteration Time By Using &lt;a href=&quot;https:&#x2F;&#x2F;lld.llvm.org&quot;&gt;LLD Linker&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tip-speed-up-iteration-time-by-using-lld-linker&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Takeaways from &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1186412587958845442&quot;&gt;an interesting tweet&lt;&#x2F;a&gt;
from &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;VladZhukov0&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dl4c8o&#x2F;is_the_rust_compiler_really_that_slow&quot;&gt;&#x2F;r&#x2F;rust thread &amp;quot;Is the rust compiler really THAT slow?&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Try switching to &lt;a href=&quot;https:&#x2F;&#x2F;lld.llvm.org&quot;&gt;LLD linker&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RUSTFLAGS&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-C link-arg=-fuse-ld=lld&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cargo&lt;&#x2F;span&gt;&lt;span&gt; run
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Alternatively, you can set `rustflags` in your `.cargo&#x2F;config`
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Depending on your project structure, OS, and toolchain
this can potentially speed up the incremental compilation a few times.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Also, try disabling debug information (if you don&#x27;t need it):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# in your `Cargo.toml`
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[profile.dev]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;debug &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Now the linking only takes around one second,
compared to 10 seconds previously.&lt;&#x2F;p&gt;
&lt;p&gt;Reduced my average compilation time from 10-20s
(which is a bit crazyness for gamedev iteration) to 5-7s.
Wonder why haven&#x27;t I tried this before?🤔&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Also, see this GameDev WG tracker&#x2F;complaint issue:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;50&quot;&gt;#50 &amp;quot;Linking Time&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rlsl-a-rust-to-spir-v-compiler&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;rlsl&quot;&gt;RLSL&lt;&#x2F;a&gt;: a Rust to SPIR-V Compiler&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rlsl-a-rust-to-spir-v-compiler&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rlsl-example.png&quot; alt=&quot;RLSL code sample&quot; &#x2F;&gt;
&lt;em&gt;a simple fragment shader that renders a red circle (temporary syntax)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MaikKlein_DEV&quot;&gt;@MaikKlein_DEV&lt;&#x2F;a&gt; gave a talk at
&lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&quot;&gt;The Khronos Group&lt;&#x2F;a&gt;&#x27;s meetup in Munich
about bringing Rust to the GPU:
&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;presentation&#x2F;d&#x2F;1_cB-sxUusYVoCYdXnqwAg2u3-lrqBfgrUj205ytxYaw&quot;&gt;here&#x27;re the slides&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;rlsl&quot;&gt;RLSL&lt;&#x2F;a&gt; (Rust Like Shading Language) is an &lt;em&gt;experimental&lt;&#x2F;em&gt; project
that allows compiling Rust to &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;registry&#x2F;spir-v&quot;&gt;SPIR-V&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Supports cargo;&lt;&#x2F;li&gt;
&lt;li&gt;Multiple entry points can be defined in the same SPIR-V module;&lt;&#x2F;li&gt;
&lt;li&gt;Currently supports Vertex, Fragment and Compute shaders;&lt;&#x2F;li&gt;
&lt;li&gt;Shader code can run on the CPU because rlsl is a subset of Rust.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, check out older posts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maikklein.github.io&#x2F;rlsl-progress-report&quot;&gt;&amp;quot;RLSL Progress report&amp;quot; (2018.02.09)&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=XhAvIVs7lOA&quot;&gt;&amp;quot;Raycasting a sphere with RLSL&amp;quot; (2018.10.20, video)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dlcjet&#x2F;rlsl_a_rust_to_spirv_compiler&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21314679&quot;&gt;hacker news&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dm89t2&#x2F;gfxhal_version_04_release&quot;&gt;gfx-rs v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;sailor.png&quot; alt=&quot;sailor screenshot: vector terrain map and some basic UI&quot; &#x2F;&gt;
&lt;em&gt;a screenshot from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Yatekii&#x2F;sailor&quot;&gt;Yatekii&#x2F;sailor&lt;&#x2F;a&gt; - a wgpu-based sailing navigation application&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dm89t2&#x2F;gfxhal_version_04_release&quot;&gt;gfx-rs v0.4 was released&lt;&#x2F;a&gt;:
major changes were described in &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;the last blog post&lt;&#x2F;a&gt;,
for the detailed list of changes, see the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#hal-040-23-10-2019&quot;&gt;CHANGELOG&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vulkano-why-command-buffers-are-so-complicated&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tomaka17&#x2F;status&#x2F;1188513260473110528&quot;&gt;Vulkano: Why Command Buffers Are So Complicated?&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vulkano-why-command-buffers-are-so-complicated&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;vulkano-logo.png&quot; alt=&quot;vulkano logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tomaka17&#x2F;status&#x2F;1188513260473110528&quot;&gt;A twitter thread by @Tomaka&lt;&#x2F;a&gt; about why command buffers
in &lt;a href=&quot;http:&#x2F;&#x2F;vulkano.rs&quot;&gt;Vulkano&lt;&#x2F;a&gt; (a Rust library that wraps around &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;vulkan&quot;&gt;Vulkan graphics API&lt;&#x2F;a&gt;)
are so complicated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;splines-v3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;splines&quot;&gt;splines v3.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#splines-v3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;splines.png&quot; alt=&quot;a spline sample with node handles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;splines&quot;&gt;splines&lt;&#x2F;a&gt;, a crate by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&quot;&gt;@phaazon&lt;&#x2F;a&gt; to handle spline interpolation,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dln7yd&#x2F;splines300&quot;&gt;just got released in version 3.0.0&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;That version adds support for stroke Bézier interpolation,
which is a Bézier interpolation but allows you to break the handles
(instead of the regular 180° angle formed
by the handle with the &lt;code&gt;Interpolation::Bezier&lt;&#x2F;code&gt; mode).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;spline-editor&quot;&gt;spline-editor&lt;&#x2F;a&gt; got a patch to allows you to try stroke Bézier.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun-october-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2019&#x2F;10&#x2F;28&#x2F;this-month-october&quot;&gt;This Month in Mun - October 2019&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun-october-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev
focused on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The Mun Team started October with the launch of the &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;mun-lang.org&lt;&#x2F;a&gt; website,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;SfvvcCU&quot;&gt;Discord server&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;opencollective.com&#x2F;mun&quot;&gt;OpenCollective&lt;&#x2F;a&gt;
and processing the feedback from a larger audience.
Now the team is moving towards v0.1 release.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out &#x2F;r&#x2F;rust &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;de51ai&#x2F;the_mun_programming_language_is_going_live&quot;&gt;&amp;quot;The Mun programming language is going live!&amp;quot; post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ultraviolet&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultraviolet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ultraviolet-benches.png&quot; alt=&quot;ultraviolet benchmarks table&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fu5ha&quot;&gt;@fu5ha&lt;&#x2F;a&gt; is a crate to do basic, computer-graphics-related,
linear algebra, but fast, by taking full advantage of &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;SIMD&quot;&gt;SIMD&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;...&amp;gt; To do this, it uses an &amp;quot;SoA&amp;quot; (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;AoS_and_SoA&quot;&gt;Structure of Arrays&lt;&#x2F;a&gt;)
architecture such that each Wec (wide-vec) actually contains the data
for 4 Vecs and will do any operation on all 4 of the vector &#x27;lanes&#x27;
at the same time.
Doing this is potentially much (factor of 10) faster than
an &amp;quot;AoS&amp;quot; (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;AoS_and_SoA&quot;&gt;Array of Structs&lt;&#x2F;a&gt;) layout,
as all current Rust linear algebra libraries do, depending on your work load.
However, algorithms must be carefully architected
to take full advantage of this, and doing so can be easier said than done,
especially if your algorithm involves significant branching.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dpknd1&#x2F;ultraviolet_a_crate_to_do_lots_of_linear_algebra&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-rustsim-8-aug-sep-oct-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2019&#x2F;11&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;This month in rustsim #8 (Aug - Sep - Oct 2019)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-rustsim-8-aug-sep-oct-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;salva.png&quot; alt=&quot;salva&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Main updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;salva.rs&quot;&gt;salva.rs&lt;&#x2F;a&gt; - two new crates for fluid simulation: salva2d and salva3d!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Salva is a new project dedicated to fluid simulation.
The goal of salva is to provide CPU-based, particle-based, 2D and 3D,
fluid simulation libraries that can be used for interactive and offline
application like animation.
It could be used, to some extents, for video games (especially the 2D version),
as long as the number of particles is kept small.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Watch a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=356unTmeVUk&quot;&gt;&amp;quot;Fluid simulation with salva 0.1 and nphysics 0.13&amp;quot;&lt;&#x2F;a&gt;
video or play with the online &lt;a href=&quot;https:&#x2F;&#x2F;www.salva.rs&#x2F;demo_all_examples2&quot;&gt;2D&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;www.salva.rs&#x2F;demo_all_examples3&quot;&gt;3D&lt;&#x2F;a&gt;
WASM demos yourself.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&quot;&gt;nphysics 0.13&lt;&#x2F;a&gt; brings:
some support of breakable joint constraints,
and more improvements on the integration with ECS.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebcrozet&quot;&gt;@sebcrozet&lt;&#x2F;a&gt;
(the main developer of all the current rustsim projects)
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;sebcrozet&quot;&gt;have been added to the GitHub sponsor beta&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;doheby&#x2F;this_month_in_rustsim_8&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cyclone-physics-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heyrutvik&#x2F;cyclone-physics-rs&quot;&gt;cyclone-physics-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cyclone-physics-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;heyrutvik&#x2F;status&#x2F;1180072669250834432&quot;&gt;&lt;img src=&quot;cyclone-physics-demo.gif&quot; alt=&quot;cyclone physics demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;a little demo of &amp;quot;particle&amp;quot; simulation&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heyrutvik&#x2F;cyclone-physics-rs&quot;&gt;cyclone-physics-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;heyrutvik&quot;&gt;@heyrutvik&lt;&#x2F;a&gt; a new WIP game physics engine
based on the &lt;a href=&quot;https:&#x2F;&#x2F;www.crcpress.com&#x2F;Game-Physics-Engine-Development-How-to-Build-a-Robust-Commercial-Grade&#x2F;Millington&#x2F;p&#x2F;book&#x2F;9780123819765&quot;&gt;&amp;quot;Game Physics Engine Development&amp;quot; book&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cynic64-s-wip-rendering-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dpa3ar&#x2F;wip_rendering_engine&quot;&gt;Cynic64&#x27;s WIP Rendering Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cynic64-s-wip-rendering-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&quot;&gt;@cynic64&lt;&#x2F;a&gt; shared a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=UrnSCpf_yw0&quot;&gt;demo video&lt;&#x2F;a&gt; and
a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dpa3ar&#x2F;wip_rendering_engine&quot;&gt;report about their WIP rendering engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s based on Vulkano and consists of three repos:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&#x2F;re-ll&quot;&gt;re-ll&lt;&#x2F;a&gt; - low level abstractions for Vulkano&#x27;s command buffers and windows.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&#x2F;render-engine&quot;&gt;render-engine&lt;&#x2F;a&gt; - Vulkan abstraction.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&#x2F;test-render-engine&quot;&gt;test-render-engine&lt;&#x2F;a&gt; - various little programs created with render-engine.
&amp;quot;pretty&amp;quot; is the one shown in the video, &amp;quot;base&amp;quot; shows the basic functionality.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rust-roguelike-tutorial&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;wasm&#x2F;chapter-40-doors&quot;&gt;&lt;img src=&quot;rogulike-demo.gif&quot; alt=&quot;&amp;quot;Doors&amp;quot; demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes almost 40 chapters now and continues to grow.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the October&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;traps and doors;&lt;&#x2F;li&gt;
&lt;li&gt;mapgen algorithms including Waveform Collapse;&lt;&#x2F;li&gt;
&lt;li&gt;prefab levels and sections;&lt;&#x2F;li&gt;
&lt;li&gt;guided procgen for towns.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All chapters have links to WASM demos.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, 0.5 version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk-rs&lt;&#x2F;a&gt; brings
abstraction between back-ends, better compile time,
web version improvements, and more examples.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nannou-awarded-mozilla-grant-for-foundational-audio-development&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;moss_grant_announce&quot;&gt;Nannou awarded Mozilla grant for foundational audio development&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nannou-awarded-mozilla-grant-for-foundational-audio-development&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;moss_grant_announce&quot;&gt;&lt;img src=&quot;mission_partners_nannou_mozilla.png&quot; alt=&quot;Nannou &amp;amp; mozilla logos&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;Nannou&lt;&#x2F;a&gt; is a creative coding framework that aims to make it easy
for artists to express themselves with simple, fast, reliable code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;moss_grant_announce&quot;&gt;Nannou has been awarded 10K USD in funding&lt;&#x2F;a&gt;
as a part of the &lt;a href=&quot;https:&#x2F;&#x2F;mozilla.org&#x2F;en-US&#x2F;moss&#x2F;mission-partners&quot;&gt;MOSS Mission Partners&lt;&#x2F;a&gt; track.
The proposed work is aimed towards improving the state
of some foundational crates within the Rust audio ecosystem
over the next three to four months.&lt;&#x2F;p&gt;
&lt;p&gt;Key areas of our work will include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Addressing some long-standing issues in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustaudio&#x2F;cpal&quot;&gt;CPAL&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Review and improve CPAL&#x27;s web audio support.&lt;&#x2F;li&gt;
&lt;li&gt;Implement a simple web app and guide demonstrating CPAL&#x27;s web audio support.&lt;&#x2F;li&gt;
&lt;li&gt;Design, develop and document a standard audio graph abstraction and crate,
reflecting on lessons learned and limitations of prior efforts,
and the requirements of the wider rust audio community.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dlz3fb&#x2F;nannou_the_creative_coding_framework_awarded&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;Amethyst&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;amethyst-logo.png&quot; alt=&quot;amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt; and its related repositories &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;awesome-specs&quot;&gt;awesome-specs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;hibitset&quot;&gt;hibitset&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shred&quot;&gt;shred&lt;&#x2F;a&gt;
were moved to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&quot;&gt;Amethyst organization&lt;&#x2F;a&gt; [&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;specs-parallel-ecs-moved-to-amethyst-organization&#x2F;33815&quot;&gt;URLO&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;dm3jsf&#x2F;amethyst_v011_contacts_events&quot;&gt;amethyst_physics v0.1.1 was released&lt;&#x2F;a&gt;:
now it&#x27;s possible to fetch Rigid body contacts events.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AndreaCatania&quot;&gt;@_AndreaCatania&lt;&#x2F;a&gt; published two video tutorials:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=-RTPZPYR5CI&quot;&gt;&amp;quot;Character controller - Amethyst physics tutorial #2&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=7GZc4P_v_DY&quot;&gt;&amp;quot;Physics Batch Dispatcher - Amethyst physics tutorial #3&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;60&quot;&gt;#60 &amp;quot;Ecosystem At Risk: Custom Allocators (and more?) in std&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;61&quot;&gt;#61 &amp;quot;Tracking: Important Issues Filed Elsewhere&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;64&quot;&gt;#64 &amp;quot;Transfer Ownership of AreWeGameYet to Gamedev WG&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;24&quot;&gt;#24 &amp;quot;Email Subscription&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;diuqg7&#x2F;need_help_porting_steam_libraries_to_rust&quot;&gt;&#x2F;r&#x2F;rust: &amp;quot;Need help porting steam libraries to rust&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;atdkeg&#x2F;ive_been_making_a_gravity_simulator_using&#x2F;&quot;&gt;&lt;img src=&quot;gravisim.png&quot; alt=&quot;Gravisim screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcamp1&#x2F;Gravisim&quot;&gt;Gravisim&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcamp1&quot;&gt;@bcamp1&lt;&#x2F;a&gt;
is a simulation of universal gravitation.
It uses &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Newton%27s_law_of_universal_gravitation&quot;&gt;Newton&#x27;s Law for Universal Gravitation&lt;&#x2F;a&gt;
to run an n-body physics simulation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;atdkeg&#x2F;ive_been_making_a_gravity_simulator_using&#x2F;&quot;&gt;Check out a video demo in this &#x2F;r&#x2F;rust announcement.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;!-- TODO: check that the first and the last image&#x2F;gif looks nice:
they may become a preview on different sites --&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dt3uc9&#x2F;this_month_in_rust_gamedev_3_october_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1192539926161702913&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #2 - September 2019</title>
            <pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/002/</link>
            <guid>https://gamedev.rs/news/002/</guid>
            <description>&lt;p&gt;Welcome to the second issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren-town.png&quot; alt=&quot;Town surrounded by a wall&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the September&#x27;s improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved multi-staged towns generation;&lt;&#x2F;li&gt;
&lt;li&gt;Improved inventory system and character creation;&lt;&#x2F;li&gt;
&lt;li&gt;Massive progress on water, water physics, lakes, and rivers!&lt;&#x2F;li&gt;
&lt;li&gt;New chunks data structure;&lt;&#x2F;li&gt;
&lt;li&gt;Three-dimensional map and minimap;&lt;&#x2F;li&gt;
&lt;li&gt;First-person view;&lt;&#x2F;li&gt;
&lt;li&gt;Bows and arrows;&lt;&#x2F;li&gt;
&lt;li&gt;Performance optimization;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;New video: &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=YyvXXCjpbqQ&quot;&gt;&amp;quot;24 Minutes of Alpha Gameplay&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Full weekly devlogs &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-31&quot;&gt;#31&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-32&quot;&gt;#32&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-33&quot;&gt;#33&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-34&quot;&gt;#34&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-35&quot;&gt;#35&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zemeroth-v0-6&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ozkriff.games&#x2F;2019-09-21--devlog-zemeroth-v0-6&quot;&gt;Zemeroth v0.6&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zemeroth-v0-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;zemeroth.png&quot; alt=&quot;fighters smash demons in fire and poison clouds&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; is a minimalistic 2D turn-based tactical game.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;releases&#x2F;tag&#x2F;v0.6.0&quot;&gt;Zemeroth v0.6&lt;&#x2F;a&gt; was released.
Main features of this release are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;renown and fighter upgrades,&lt;&#x2F;li&gt;
&lt;li&gt;possessions,&lt;&#x2F;li&gt;
&lt;li&gt;sprite frames and flips,&lt;&#x2F;li&gt;
&lt;li&gt;status effect icons.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Read the &lt;a href=&quot;http:&#x2F;&#x2F;ozkriff.games&#x2F;2019-09-21--devlog-zemeroth-v0-6&quot;&gt;full devlog post&lt;&#x2F;a&gt; or watch &lt;a href=&quot;http:&#x2F;&#x2F;youtu.be&#x2F;6tZByt4LBlU&quot;&gt;the video version&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;twenty-asteroids&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;queue&#x2F;c&#x2F;449652&#x2F;rustlang-games?game_id=477762&quot;&gt;Twenty Asteroids&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#twenty-asteroids&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;queue&#x2F;c&#x2F;449652&#x2F;rustlang-games?game_id=477762&quot;&gt;&lt;img src=&quot;asteroids-demo.gif&quot; alt=&quot;space ship destroys enemies and asteroids with plasma beams&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;@VladZhukov0&lt;&#x2F;a&gt; published a few devlogs about their
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;queue&#x2F;c&#x2F;449652&#x2F;rustlang-games?game_id=477762&quot;&gt;&amp;quot;Twenty Asteroids&amp;quot;&lt;&#x2F;a&gt; game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Devlog #2: &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;gYevCyU5gxU&quot;&gt;Video&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.itch.io&#x2F;asteroids-like-game&#x2F;devlog&#x2F;98842&#x2F;my-asteroids-like-game-devlog-002&quot;&gt;Text&lt;&#x2F;a&gt; versions;&lt;&#x2F;li&gt;
&lt;li&gt;Devlog #3: &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;YSYRKzogbKg&quot;&gt;Video&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.itch.io&#x2F;asteroids-like-game&#x2F;devlog&#x2F;101357&#x2F;new-menu-performance-and-abilities-devlog-3&quot;&gt;Text&lt;&#x2F;a&gt; versions.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New enemies: a ship with a big pinball-like bullet and a laser-mesh ship;&lt;&#x2F;li&gt;
&lt;li&gt;New upgrades: laser range and bullets reflection;&lt;&#x2F;li&gt;
&lt;li&gt;Explosion size now depends on asteroid&#x27;s size;&lt;&#x2F;li&gt;
&lt;li&gt;Improved main menu, upgrade and death screens;&lt;&#x2F;li&gt;
&lt;li&gt;Better color contrast;&lt;&#x2F;li&gt;
&lt;li&gt;New AI behaviors: follow and circle around;&lt;&#x2F;li&gt;
&lt;li&gt;Debugging performance plots;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst Games&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;releases&#x2F;tag&#x2F;v0.1.3&quot;&gt;Space Shooter v0.1.3&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt; introduced a currency system, shop system,
and sound effects: &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=MmdUrZzuGfw&quot;&gt;watch the devlog video&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=MmdUrZzuGfw&quot;&gt;&lt;img src=&quot;space-shooter.gif&quot; alt=&quot;shmap gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Noah2610&#x2F;LD44&quot;&gt;&amp;quot;Stabman&amp;quot;, by Noah2610&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;stabman-overworld.png&quot; alt=&quot;Stabman in the beginning of the overworld level&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&quot;&gt;@mvlabat&lt;&#x2F;a&gt; is &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;xJm6cI_XmT4&quot;&gt;working on interpolation in his multiplayer prototype (video)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a5huynh&quot;&gt;@a5huynh&lt;&#x2F;a&gt; got &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;STWQRTxnhRo&quot;&gt;3D pathing working (video)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_azriel&quot;&gt;Azriel Hoh&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;09&#x2F;27&#x2F;focus&quot;&gt;a major new devblog update titled &amp;quot;Focus!&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;rox_clone_attack.png&quot; alt=&quot;bots attack&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Webshinra&quot;&gt;@webshinra&lt;&#x2F;a&gt; made progress with raycasted FOV
in their hexagonal game.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;hex-fov.jpeg&quot; alt=&quot;hexagonal map with two mechs, paths and visually blocked tiles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;other-game-news&quot;&gt;Other Game News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-game-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt; published their 5th devlog: &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;5&quot;&gt;&amp;quot;Stats And Skills&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;dooskington-devlog-5-screenshot.jpeg&quot; alt=&quot;Stats and skill demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;games&#x2F;1032170&#x2F;announcements&#x2F;detail&#x2F;1604892840079306082&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; game;
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.8, 1.9, 1.10 and 1.11 versions were released&lt;&#x2F;a&gt;:
official macOS support, bugfixes, and better translations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;robo.jpg&quot; alt=&quot;Robo Instructus gameplay screenshot with full UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Wraithan&#x2F;status&#x2F;1172982932341805056&quot;&gt;@Wraithan got tower placement working&lt;&#x2F;a&gt;
in their &amp;quot;WraithDefense&amp;quot; tower defence game;
the development process &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;wraithan&quot;&gt;is streamed on Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;wraith-def.jpeg&quot; alt=&quot;Towers on the map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1168556346431692800&quot;&gt;v0.0.1&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1172912164488843265&quot;&gt;v0.0.2&lt;&#x2F;a&gt; updates
for &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;:
simplified gameplay flow, areas, cash flow, animations,
players&#x27; state visual cues and more.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;tennis-academy.gif&quot; alt=&quot;Tennis Academy v0.0.2 Demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; game is
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1174259591250661379&quot;&gt;under active development again&lt;&#x2F;a&gt;.
Devlogs &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1166469607412158464&quot;&gt;are coming soon!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;garden.jpeg&quot; alt=&quot;a screenshot from Garden showing a build and some trees&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nuria.itch.io&#x2F;live-rust&quot;&gt;&amp;quot;Live&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pincfloit&quot;&gt;@pincfloit&lt;&#x2F;a&gt; - a small command-line interface survival game
[&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pincfloit&#x2F;status&#x2F;1173965160089837568&quot;&gt;twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codegram&#x2F;live-rust&quot;&gt;github&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nuria.itch.io&#x2F;live-rust&quot;&gt;&lt;img src=&quot;live-cli.png&quot; alt=&quot;Live demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&#x2F;status&#x2F;1169106102710988801&quot;&gt;@seratonik shared a GIF with omni-directional shadows&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&#x2F;status&#x2F;1169106102710988801&quot;&gt;&lt;img src=&quot;shadows.gif&quot; alt=&quot;shadows demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&quot;&gt;@MrVallentin&lt;&#x2F;a&gt; tweeted a bunch of updates about their voxel engine:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1170164060542918656&quot;&gt;falling cubes&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1170515003113451520&quot;&gt;text rendering&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1171773622039515136&quot;&gt;60M cubes generated in the blink of an eye&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1171774889335951361&quot;&gt;remeshing&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1174493952894033920&quot;&gt;retrospective video&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1176996637681623042&quot;&gt;saving and loading&lt;&#x2F;a&gt;,
and some more.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;vallentin-voxel-terrain.jpeg&quot; alt=&quot;screenshot of the WIP terrain generation&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&quot;&gt;@Mistodon&lt;&#x2F;a&gt; got their entire game &lt;a href=&quot;https:&#x2F;&#x2F;mistodon.itch.io&#x2F;disconnect&quot;&gt;&amp;quot;Disconnect&amp;quot;&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&#x2F;status&#x2F;1175361784246603776&quot;&gt;render in the terminal&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&#x2F;status&#x2F;1175361784246603776&quot;&gt;&lt;img src=&quot;disconnect-console.png&quot; alt=&quot;Disconnect in the terminal&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gfx-rs-wgpu-rs-project-update&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;gfx-rs &amp;amp; wgpu-rs: Project Update&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-wgpu-rs-project-update&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;&lt;img src=&quot;gfx-logo.png&quot; alt=&quot;gfx-rs rusty logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt; is a Rust project aiming to make low-level GPU programming
portable with low overhead.
It’s a single Vulkan-like Rust API with multiple backends that implement it:
Direct3D 12&#x2F;11, Metal, Vulkan, and even OpenGL.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt; is a Rust project on top of gfx-rs that provides safety,
accessibility, and even stronger portability.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;gfx-rs was slimmed down: “magical” deps (like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;failure&quot;&gt;failure&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mcarton&#x2F;rust-derivative&quot;&gt;derivative&lt;&#x2F;a&gt;)
were removed and it sped up the fresh gfx-hal build by a factor of 8.5X;
the “typed” layer of gfx-hal got removed.&lt;&#x2F;li&gt;
&lt;li&gt;Backend features were removed from wgpu-rs;&lt;&#x2F;li&gt;
&lt;li&gt;An entirely new &lt;a href=&quot;https:&#x2F;&#x2F;vulkan-tutorial.com&#x2F;Drawing_a_triangle&#x2F;Presentation&#x2F;Swap_chain&quot;&gt;swapchain&lt;&#x2F;a&gt; model was prototyped and implemented.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dbzxw2&#x2F;gfxrs_late_2019_project_update&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mun-and-hot-reloading-experiments&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; and Hot Reloading Experiments&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mun-and-hot-reloading-experiments&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;mun-logo.png&quot; alt=&quot;Mun text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev
focused on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Mun&#x27;s pillars:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Hot Reloading.
Mun natively supports hot reloading - the process of changing
code and resources while an app is running -
on all target platforms and consoles with marginal runtime overhead.
Its runtime has useful error messages,
and can easily be embedded into other languages.&lt;&#x2F;li&gt;
&lt;li&gt;Static Typing.
Mun&#x27;s type system eliminates an entire class of runtime errors
and provides powerful IDE integration with
auto-completion and refactoring tools allowing developers
to focus on writing code.&lt;&#x2F;li&gt;
&lt;li&gt;Performance.
Mun uses LLVM to compile to machine code that can be natively executed
on any target platform, guaranteeing the best possible runtime performance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The driving force behind the development of Mun is natively supported
hot reloading for functions and data.
As such, the language and its syntax will keep growing at the rate
in which hot reloading-supported semantics is added.
Currently, the language looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; sum = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(a, b);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Comments: Mun natively supports bool, float, and int
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; is_true = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; var: float = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The order of function definitions doesn&amp;#39;t matter
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;: int, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span&gt;: int): int {
&lt;&#x2F;span&gt;&lt;span&gt;    a + b
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The source code of the project
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&quot;&gt;is available on GitHub&lt;&#x2F;a&gt;
under the MIT or Apache licenses.&lt;&#x2F;p&gt;
&lt;p&gt;Mun&#x27;s runtime is implemented in Rust.
Check out &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cywwtv&#x2F;progress_on_hot_reloading_experimentation_in_rust&quot;&gt;a GIF demo of the Rust hot reloading functionality&lt;&#x2F;a&gt;
that shows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Catching and logging of errors (e.g. type mismatch),&lt;&#x2F;li&gt;
&lt;li&gt;hot reloading of a shared library&#x27;s symbols (used for reflection) and method logic,&lt;&#x2F;li&gt;
&lt;li&gt;runtime invocable methods and type&#x2F;method reflection.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d4wngp&#x2F;released_source_of_hot_reloading_experimentation&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-roguelike-toolkit-and-roguelike-tutorial&quot;&gt;Rust &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;Roguelike Toolkit&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-roguelike-toolkit-and-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;rltk-rs-example-06.gif&quot; alt=&quot;Minimal pathfinding and FoV example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk_rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@herberticus&lt;&#x2F;a&gt; is a Rust implementation of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Roguelike&quot;&gt;what is a &amp;quot;roguelike?&amp;quot;&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;It provides all the basic functionality one needs to write a roguelike game,
as well as mouse support, an embedded resource system, Web Assembly support,
and more.&lt;&#x2F;p&gt;
&lt;p&gt;All &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs#examples&quot;&gt;examples&lt;&#x2F;a&gt; are linked to browser WASM to try.&lt;&#x2F;p&gt;
&lt;p&gt;The back-end uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&#x2F;glow&quot;&gt;glow&lt;&#x2F;a&gt; to abstract OpenGL between versions.
API for embedding assets directly into your binary.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;d like to see a functional roguelike that uses rltk_rs,
check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rustyroguelike&quot;&gt;Rusty Roguelike&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; includes more than 20 chapters now
and continues to grow.&lt;&#x2F;p&gt;
&lt;p&gt;It covers topics from &amp;quot;hello rust&amp;quot; and &amp;quot;what is an ECS?&amp;quot; to adding monsters,
equipment, nice menus, save&#x2F;load, multiple levels, bloodstains, particle effects,
magic mapping scrolls, and more.&lt;&#x2F;p&gt;
&lt;p&gt;The tutorial has Web Assembly links to all examples
so you can run them in your browser.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embarkstudios-texture-synthesis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;texture-synthesis&quot;&gt;EmbarkStudios&#x2F;texture-synthesis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embarkstudios-texture-synthesis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;texture-synthesis.jpg&quot; alt=&quot;Generated textures samples&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;embark.games&quot;&gt;Embark&lt;&#x2F;a&gt; has open-sourced their texture synthesis crate &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;texture-synthesis&quot;&gt;texture-synthesis&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;.
It&#x27;s an example-based non-parametric image generation algorithm
written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;texture-synthesis&quot;&gt;The repo&lt;&#x2F;a&gt; also includes multiple
code examples along with test images,
and a compiled binary with a command-line interface
can be found under the release tab.&lt;&#x2F;p&gt;
&lt;p&gt;Also, see a great long recorded talk
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;fMbK7PYQux4&quot;&gt;&amp;quot;More Like This, Please! Texture Synthesis and Remixing from a Single Example&amp;quot;&lt;&#x2F;a&gt;
which explains this technique and the background more in-depth.&lt;&#x2F;p&gt;
&lt;p&gt;Full list of stuff that &lt;a href=&quot;https:&#x2F;&#x2F;embark.games&quot;&gt;Embark&lt;&#x2F;a&gt; has released so far:
&lt;a href=&quot;http:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1169594058530066432&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AriVanider&#x2F;status&#x2F;1171359194336903169&quot;&gt;Embark will be sponsoring RustFest in Barcelona this year.&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;embark.games&#x2F;position&#x2F;software-engineer-new-grad&quot;&gt;Embark started hiring new grads&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AriVanider&#x2F;status&#x2F;1173903615498567680&quot;&gt;twitter&lt;&#x2F;a&gt;].&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;iced-a-renderer-agnostic-gui-library&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced - a Renderer-Agnostic GUI Library&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iced-a-renderer-agnostic-gui-library&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;tree&#x2F;e82e96e6&#x2F;examples#tour&quot;&gt;&lt;img src=&quot;iced.gif&quot; alt=&quot;All widgets tour demo: radio buttons, sliders, debugging view, etc&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Iced is a renderer-agnostic GUI library focused on simplicity and type-safety.
It was originally born as an attempt at bringing the simplicity of &lt;a href=&quot;https:&#x2F;&#x2F;elm-lang.org&quot;&gt;Elm&lt;&#x2F;a&gt;
and The Elm Architecture into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;coffee&quot;&gt;Coffee 2D game engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simple, easy-to-use, renderer-agnostic API;&lt;&#x2F;li&gt;
&lt;li&gt;Responsive, flexbox-based layouting;&lt;&#x2F;li&gt;
&lt;li&gt;Type-safe, reactive programming model;&lt;&#x2F;li&gt;
&lt;li&gt;Lots of built-in widgets and custom widget support.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced#overview&quot;&gt;the design overview in the repo&#x27;s README&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;czzjnv&#x2F;iced_a_rendereragnostic_gui_library&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;amethyst-logo.png&quot; alt=&quot;amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; is a game engine and tool-set
for ambitious game developers.
It enables game developers to make complex games without getting
into too much trouble, by means of data-driven design
and the ECS architecture.&lt;&#x2F;p&gt;
&lt;p&gt;Tooling:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;releases&#x2F;tag&#x2F;v0.13.0&quot;&gt;Amethyst Engine v0.13 was released&lt;&#x2F;a&gt;.
A new &lt;code&gt;amethyst_tiles&lt;&#x2F;code&gt; crate was added and
&lt;a href=&quot;https:&#x2F;&#x2F;book.amethyst.rs&#x2F;stable&#x2F;pong-tutorial&#x2F;pong-tutorial-06.html&quot;&gt;the Pong tutorial&lt;&#x2F;a&gt;
is now complete with the addition of an audio section.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;laminar&#x2F;releases&#x2F;tag&#x2F;0.3.1&quot;&gt;Laminar v0.3.1 was released&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AndreaCatania&quot;&gt;@_AndreaCatania&lt;&#x2F;a&gt; published
an &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=XzSKuY9nv7A&quot;&gt;&amp;quot;Initialize physics world - Amethyst physics tutorial #1&amp;quot;&lt;&#x2F;a&gt;
video.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1177720011013709824&quot;&gt;amethyst-imgui v0.5 is out&lt;&#x2F;a&gt;,
supporting a beta-version of the new imgui docking feature.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;amethyst-imgui.gif&quot; alt=&quot;docking widgets demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;classic-turn-based-workflow-how-to&#x2F;1082&#x2F;20&quot;&gt;&amp;quot;How to do a turn-based game with the ECS pattern&amp;quot;&lt;&#x2F;a&gt;
post, by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;webshinra&quot;&gt;@webshinra&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;valkum&quot;&gt;@valkum&lt;&#x2F;a&gt; is
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=KVpLPInWRWg&quot;&gt;implementing area lights using linearly transformed cosines&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;godot-and-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; and Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-and-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;recall-singularity.jpeg&quot; alt=&quot;Recall Singularity&#x27;s ship base&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a &amp;quot;The Recall Singularity&amp;quot; game
about designing autonomous factory ships and stations
and this month they published a few posts
about using &lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;the Godot engine&lt;&#x2F;a&gt; with Rust:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.usejournal.com&#x2F;how-i-use-rust-and-godot-to-explore-space-806bb810e950&quot;&gt;&amp;quot;How I use Rust and Godot to Explore Space&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;godot&#x2F;comments&#x2F;d5qdoy&#x2F;inspiration_how_i_use_rust_and_godot_to_explore&quot;&gt;&#x2F;r&#x2F;godot&lt;&#x2F;a&gt;];&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;gorgeous-godot-games-in-rust-1867c56045e6&quot;&gt;&amp;quot;Gorgeous Godot games in Rust&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;d75qfz&#x2F;gorgeous_godot_games_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;];&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;a-basic-godot-rust-structure-eb855ba07223&quot;&gt;&amp;quot;A Basic Godot-Rust Structure&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;use-prebuilt-rooms-with-rust-macros-for-more-interesting-procedural-dungeons&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jamesbaum.co.uk&#x2F;blether&#x2F;procedural-generation-prebuilt-rooms-rust-macros&quot;&gt;Use Prebuilt Rooms with Rust Macros for More Interesting Procedural Dungeons&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#use-prebuilt-rooms-with-rust-macros-for-more-interesting-procedural-dungeons&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;proc-dungeons.png&quot; alt=&quot;Top-down view on a generated dungeon&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;whostolemyhat&quot;&gt;@whostolemyhat&lt;&#x2F;a&gt; published the fourth part
of their tutorial series on procedural generation with Rust.
In this tutorial, the room generation is updated so it can pick from a selection
of pre-built room patterns as well as create the standard empty room.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d85i8x&#x2F;make_more_interesting_procedural_dungeons_using&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;other-library-tooling-news&quot;&gt;Other Library &amp;amp; Tooling News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-library-tooling-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;uset&quot;&gt;&lt;strong&gt;uset&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; - an implementation of sets and maps
designed for small and medium number of stored elements
which change quickly - i.e. in a dynamically evolving scene in a video game.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukebitts&#x2F;blend&quot;&gt;blend&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; - a parser and runtime for &lt;a href=&quot;https:&#x2F;&#x2F;blender.org&quot;&gt;Blender&lt;&#x2F;a&gt;&#x27;s .blend files
that can be used to read (almost) everything inside the file:
from mesh data, materials, cameras and animations to user preferences,
window locations and render settings
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d70lu6&#x2F;blend_a_parser_and_runtime_for_blenders_blend&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Veykril&#x2F;cubism-rs&quot;&gt;cubism-rs&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; (Rust bindings for &lt;a href=&quot;https:&#x2F;&#x2F;www.live2d.com&#x2F;en&#x2F;download&#x2F;cubism-sdk&quot;&gt;Live2D Cubism&lt;&#x2F;a&gt;) got renderer support for &lt;a href=&quot;https:&#x2F;&#x2F;www.piston.rs&quot;&gt;Piston2D&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;live2d-cubism.png&quot; alt=&quot;Live2D Piston demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2019&#x2F;09&#x2F;04&#x2F;Github-actions-CI-rust-SDL2.html&quot;&gt;&amp;quot;Github Actions CI with Rust and SDL2&amp;quot;&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AlexEne_&quot;&gt;Alexandru Ene&lt;&#x2F;a&gt; wrote a post about CI with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;features&#x2F;actions&quot;&gt;github actions&lt;&#x2F;a&gt;
for &lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2019&#x2F;01&#x2F;15&#x2F;After-hours-game-development.html&quot;&gt;their hobby game project&lt;&#x2F;a&gt; that uses Rust and SDL2.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;github_actions_ci.gif&quot; alt=&quot;Github Actions with SDL2 screencast demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance&quot;&gt;luminance&lt;&#x2F;a&gt; 0.33 that
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d0us73&#x2F;announcement_luminance033&quot;&gt;brings geometry instancing support&lt;&#x2F;a&gt;;
also, the third wiki chapter &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;wiki&#x2F;Wavefront-.obj-loader&quot;&gt;&amp;quot;Wavefront .obj loader&amp;quot;&lt;&#x2F;a&gt;
was released.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;suzanne_lit.png&quot; alt=&quot;loaded and lighted Suzanne model&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;spline-editor&quot;&gt;phaazon&#x2F;spline-editor&lt;&#x2F;a&gt; - a simple spline editor
for the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;splines&quot;&gt;splines crate&lt;&#x2F;a&gt; written using &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance&quot;&gt;luminance&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;splines.png&quot; alt=&quot;complex spline in the editor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;magistratic&quot;&gt;@magistratic&lt;&#x2F;a&gt; gave a talk on the Doom&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Binary_space_partitioning&quot;&gt;BSP&lt;&#x2F;a&gt; rendering engine using their
Rust implementation as a demonstration at RevolverConf:
recording (in Norwegian) and a WASM demo available
&lt;a href=&quot;https:&#x2F;&#x2F;magnushoff.com&#x2F;blog&#x2F;doom-revolverconf&quot;&gt;here&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maghoff&#x2F;wad-render&#x2F;tree&#x2F;revolverconf-2019.2&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;doom-bsp-wasm.png&quot; alt=&quot;WASM demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&#x2F;rx&quot;&gt;&lt;strong&gt;rx&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&quot;&gt;@cloudhead&lt;&#x2F;a&gt; is a modern pixel editor and animator;
this month, v0.2.0 was released, with new brush modes -
pixel perfect drawing, symmetry and multi-frame drawing -
a new GLFW backend and &lt;code&gt;.gif&lt;&#x2F;code&gt; output.
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dauizc&#x2F;rx_v020_released_a_modern_pixel_editor&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cloudhead&#x2F;rx&quot;&gt;github&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&#x2F;rx&quot;&gt;&lt;img src=&quot;rx.gif&quot; alt=&quot;rx demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Pixel art editor &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pickitup247.com&#x2F;xprite.html&quot;&gt;Xprite&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; is now &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rickyhan&#x2F;xprite-editor&quot;&gt;open source under GNU GPL&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d4r0o3&#x2F;pixel_art_editor_xprite_is_now_open_source&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;d3vl65&#x2F;xprite_is_now_open_source&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;xprite-demo.gif&quot; alt=&quot;XPrite drawing demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;minimum&quot;&gt;minimum&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; by (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt;) is a game development framework that provides
basic tooling and a content authoring workflow;
this month, rendering of draggable shapes in the editor
and rotation&#x2F;scaling were added
[&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=BON_RvVFiWY&quot;&gt;YouTube demo&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;minimum.png&quot; alt=&quot;editor with a bunch of shapes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;imgui-inspect&quot;&gt;imgui-inspect&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; macro-based property editor by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt;
is a by-product of the above-mentioned &amp;quot;minimum&amp;quot; project.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;imgui-inspect.png&quot; alt=&quot;inspector widget with position, debug draw rect, and physics body sub-widgets&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kickstarter.com&#x2F;projects&#x2F;dungeonfog&#x2F;project-deios-dungeonfog-mapmaker-suite-for-worldbuilders&quot;&gt;Project Deios&lt;&#x2F;a&gt; decided to implement their core in Rust
and has been looking for a Rust graphics programmer:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d487dr&#x2F;were_looking_for_a_rust_graphics_programmer&quot;&gt;&#x2F;r&#x2F;rust announcement&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;deios.jpg&quot; alt=&quot;Deios logo ant promo pic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
The following links block should be split into games and tools blocks,
but I&#x27;m too tired to this atm and it will be rendered correctly anyway.
--&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;36&quot;&gt;#36 &amp;quot;Adoption of Rust over time in existing game codebases&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;48&quot;&gt;#48 &amp;quot;Placement New&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;49&quot;&gt;#49 &amp;quot;Branch prediction hints (i.e. Likely&#x2F;Unlikely)&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;51&quot;&gt;#51 &amp;quot;Using wasm-bindgen for games&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;Issues tagged as &amp;quot;Good first issue&amp;quot; and “help wanted”&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22Blocking+a+release%22&quot;&gt;Issues tagged as &amp;quot;Blocking a release&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Request from Amethyst:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1169922826033336320&quot;&gt;&amp;quot;The renderer-agnostic GUI library “Iced” by @hecrj looks &lt;em&gt;so&lt;&#x2F;em&gt; good.
If someone wants to make this work with Amethyst please get in touch with us!
(or just do it...)&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sandspiel.club&quot;&gt;&lt;img src=&quot;sandspiel.png&quot; alt=&quot;a scene with sand, water, a tree, flowers, and fire&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sandspiel.club&quot;&gt;Sandspiel&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; is a falling sand game by &lt;a href=&quot;https:&#x2F;&#x2F;maxbittker.com&quot;&gt;@MaxBittker&lt;&#x2F;a&gt;
built in late 2018 using Rust (via WASM), WebGL,
and some JS glueing things together.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sandspiel is a pixel physics simulation sandbox where
you can paint with elements, conduct experiments and build your own world!&lt;&#x2F;p&gt;
&lt;p&gt;Elements include Ice, Water, Sand, Lava, Fire, Oil, Plant, Fungus,
and many more!&lt;&#x2F;p&gt;
&lt;p&gt;The goal was to produce an cellular automata environment that&#x27;s
interesting to play with and supports the sharing and forking
of fun creations with other players.
Ultimately, I want the platform to support editing and uploading
of your own elements via a programmable cellular automata API.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The history of the game and the development process are documented in a great
&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maxbittker.com&#x2F;making-sandspiel&quot;&gt;&amp;quot;Making Sandspiel&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; blog post.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaxBittker&#x2F;sandspiel&quot;&gt;The source code is available on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The game&#x27;s community is still active: check
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sandspiel_feed&quot;&gt;@sandspiel_feed feed of uploads&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;a6v0p1&#x2F;sandspiel_a_falling_sand_game_built_in_rustwebgl&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;programming&#x2F;comments&#x2F;a6zxou&#x2F;sandspiel_a_falling_sand_game_built_in_rust&quot;&gt;&#x2F;r&#x2F;programming&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18696291&quot;&gt;hacker news&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ddtbpm&#x2F;this_month_in_rust_gamedev_2_september_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1180590459913035776&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>This Month in Rust GameDev #1 - August 2019</title>
            <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/news/001/</link>
            <guid>https://gamedev.rs/news/001/</guid>
            <description>&lt;p&gt;Welcome to the inaugural issue of the Rust Game Development Workgroup’s
monthly (hopefully!) newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;news-and-blog-posts&quot;&gt;News and Blog Posts&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#news-and-blog-posts&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!--
8-12 important news with their own sections.

Ideal section structure is:
- image&#x2F;GIF,
- a paragraph or two with a summary and useful links,
- and discussion links.

If needed, section can be split into subsections with &quot;------&quot; delimiter.
--&gt;
&lt;h3 id=&quot;survey-from-the-rust-gamedev-working-group-clipboard&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;survey-from-the-rust-game-development-working-group&#x2F;31270&quot;&gt;Survey from the Rust GameDev Working Group&lt;&#x2F;a&gt; 📋&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#survey-from-the-rust-gamedev-working-group-clipboard&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Interested (maybe already invested?) in using Rust for game development?
Please set aside a brief moment to answer this short survey about
the current state of our GD ecosystem and what the GD working group
can do to nurture it. 🌱&lt;&#x2F;p&gt;
&lt;p&gt;While we&#x27;d greatly appreciate a modicum of identifying information
so we can easily connect with you for further discussions,
sharing that information is optional.
Only 3 questions in this survey are mandatory and we&#x27;ve saved
the most important one for last.&lt;&#x2F;p&gt;
&lt;p&gt;The survey is now being processed for publishing.
We’re still accepting responses until the survey has been published
and subsequently closed for good.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cp2ib7&#x2F;survey_from_the_rust_game_development_working&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1160659441550864384&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out our previous post
&lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;2019&#x2F;08&#x2F;18&#x2F;introducing-the-rust-game-development-working-group.html&quot;&gt;&amp;quot;Introducing the Rust Game Development Working Group&amp;quot;&lt;&#x2F;a&gt;
if you haven&#x27;t seen it yet
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cs44vx&#x2F;introducing_the_rust_game_development_working&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1163137574812209152&quot;&gt;twitter&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-rustsim-7-june-july-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.rustsim.org&#x2F;blog&#x2F;2019&#x2F;08&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;This Month in Rustsim #7 (June − July 2019)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-rustsim-7-june-july-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ccd_substeps.svg&quot; alt=&quot;CCD sub-steps&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&quot;&gt;nphysics&lt;&#x2F;a&gt; 0.12 release contains several long awaited features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The support for linear and non-linear &lt;em&gt;continuous-collision detection (CCD)&lt;&#x2F;em&gt;
with colliders on rigid bodies and sensors.
There&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;www.nphysics.org&#x2F;continuous_collision_detection&quot;&gt;a brand new page of the user guide&lt;&#x2F;a&gt; about it.&lt;&#x2F;li&gt;
&lt;li&gt;Rigid body &lt;em&gt;velocity damping&lt;&#x2F;em&gt;: this allows to artificially
slow down some bodies. This is essential for, e.g.,
top-down 2D games where traditional coulomb friction cannot be used.&lt;&#x2F;li&gt;
&lt;li&gt;Rigid body &lt;em&gt;maximum velocity&lt;&#x2F;em&gt; limit: it is possible to force a rigid body
to never get a velocity higher than a threshold.&lt;&#x2F;li&gt;
&lt;li&gt;The possibility to use &lt;em&gt;custom containers&lt;&#x2F;em&gt; for bodies,
colliders, joints, and force generators.
This helps overcoming some difficulties related to borrowing,
and also help for the integration of nphysics with other solutions.
The physics world structures will no longer own those containers.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;With &lt;a href=&quot;https:&#x2F;&#x2F;ncollide.org&quot;&gt;ncollide&lt;&#x2F;a&gt; 0.20, it is now possible to compute the time of impact
between two shapes undergoing an arbitrary rigid motion.
This is known as non-linear time-of-impact computation.
This is used by the new CCD integration on nphysics 0.12.&lt;&#x2F;p&gt;
&lt;p&gt;Watch &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=EnjgJp9mKz0&quot;&gt;a &amp;quot;CCD support on nphysics 0.12&amp;quot; video&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&#x2F;demo_all_examples3&quot;&gt;play with the online demo yourself&lt;&#x2F;a&gt;
(choose &amp;quot;CCD&amp;quot; in the &amp;quot;Select example&amp;quot; menu).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cmxdyk&#x2F;this_month_in_rustsim_7_june_july_2019_nphysics&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1160659441550864384&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out
&lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;posts&#x2F;about-future-of-28917514&quot;&gt;&amp;quot;About the future of nphysics: a pure rust 2D and 3D real-time physics engine&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cm2858&#x2F;about_the_future_of_nphysics_a_pure_rust_2d_and&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea-trailer-and-steam-wishlist-announced&quot;&gt;Way of Rhea &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;Trailer&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Steam Wishlist&lt;&#x2F;a&gt; Announced&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea-trailer-and-steam-wishlist-announced&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;&lt;img src=&quot;way-of-rhea.gif&quot; alt=&quot;Part of the trailer&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;click on the GIF to see &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;the full trailer&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;A new trailer&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Steam wishlist&lt;&#x2F;a&gt;
were published for &amp;quot;Way of Rhea&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&quot;&gt;Anthropic Studios&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea is an upcoming puzzle platformer that takes place in a world
where you can only interact with objects that match your current color.&lt;&#x2F;p&gt;
&lt;p&gt;Take a look at &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;co8kqd&#x2F;way_of_rhea_trailer_steam_wishlist_announced&#x2F;ewryjet&quot;&gt;this Reddit comment&lt;&#x2F;a&gt; with a quick summary
about implementation and tooling.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;co8kqd&#x2F;way_of_rhea_trailer_steam_wishlist_announced&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1159867047821611010&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren-0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-27&quot;&gt;Veloren 0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren-0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;veloren.png&quot; alt=&quot;Veloren screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Veloren is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;The 0.3 version was a long time coming, and there has been a ton added to Veloren.
Here is a small list of the major changes in this version:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;XP and leveling&lt;&#x2F;li&gt;
&lt;li&gt;Better combat, movement, and animations&lt;&#x2F;li&gt;
&lt;li&gt;Enemies, bosses&lt;&#x2F;li&gt;
&lt;li&gt;Better world generation, more biomes&lt;&#x2F;li&gt;
&lt;li&gt;Build mode&lt;&#x2F;li&gt;
&lt;li&gt;Caves, lanterns, lights, dungeons&lt;&#x2F;li&gt;
&lt;li&gt;Character customization, multiple races&lt;&#x2F;li&gt;
&lt;li&gt;Inventories (WIP)&lt;&#x2F;li&gt;
&lt;li&gt;Day&#x2F;night, better shaders, voxel shadows&lt;&#x2F;li&gt;
&lt;li&gt;Many performance optimizations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;clziyh&#x2F;veloren_03_the_multiplayer_voxel_rpg_written_in&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, if you want to see how the work on 0.4 is going,
check out other August&#x27;s weekly devlog posts:
&amp;quot;This Week in Veloren...&amp;quot;
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-28&quot;&gt;#28&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-29&quot;&gt;#29&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-30&quot;&gt;#30&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ruzzt&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yokljo&#x2F;ruzzt&quot;&gt;RUZZT&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ruzzt&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;ruzzt.png&quot; alt=&quot;RUZZT screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yokljo&quot;&gt;@yokljo&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yokljo&#x2F;ruzzt&quot;&gt;RUZZT&lt;&#x2F;a&gt; - a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ZZT&quot;&gt;ZZT&lt;&#x2F;a&gt; game engine clone written in Rust.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;My wife and I wrote this as a fun exercise, and went a lot further with it
than originally anticipated. We wanted to try to replicate the original
game&#x27;s behaviour by simply looking at it running in Dosbox and seeing
if we could make RUZZT do the same thing.
This means the code architecture is likely very different
from the original game.&lt;&#x2F;p&gt;
&lt;p&gt;Eventually we did get far enough that it seemed like a waste of time
to try to guess how some specific things were implemented,
so we used a disassembler to make sure various behaviours worked correctly.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cl9qhk&#x2F;ruzzt_a_zzt_game_engine_clone_written_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine-navigation-navmesh-pathfinding-system-for-ecs-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;oxygengine-navigation&quot;&gt;oxygengine-navigation&lt;&#x2F;a&gt; - Navmesh Pathfinding System for ECS Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine-navigation-navmesh-pathfinding-system-for-ecs-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;oxygengine-navigation-demo.gif&quot; alt=&quot;oxygengine-navigation interactive demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;oxygengine-navigation&quot;&gt;oxygengine-navigation&lt;&#x2F;a&gt; is a crate to perform pathfinding
on &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Navigation_mesh&quot;&gt;navmeshes&lt;&#x2F;a&gt;.
It&#x27;s an ECS module (compatible with any SPECS engine)
and is a part of a bigger &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;oxygengine&quot;&gt;Oxygen game engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;amethyst-integration&quot;&gt;demo&#x2F;example of the integration with Amethyst&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;co62an&#x2F;navmesh_based_navigation_system_for_ecs_games&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PsichiX&#x2F;status&#x2F;1159895167392002048&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst-s-activity-report&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;activity-report-july-2019&quot;&gt;Amethyst&#x27;s Activity Report&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-s-activity-report&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;amethyst-logo.png&quot; alt=&quot;amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;releases&#x2F;tag&#x2F;v0.12.0&quot;&gt;Amethyst v0.12 quietly released&lt;&#x2F;a&gt;
and now the project moves to two-week release cycle.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;2D action platformer &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space-menace&quot;&gt;Space Menace&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;krankur&quot;&gt;@krankur&lt;&#x2F;a&gt; partnered with Amethyst
to become an official showcase project
(&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;space-menace-showcase&quot;&gt;announcement&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;space-menace.png&quot; alt=&quot;Space Menace screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;evoli&quot;&gt;Evoli&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;evoli&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;v0.2&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;evoli-v0-2-video-log-retrospective&#x2F;1007&quot;&gt;moved into 3D&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;evoli-shot.png&quot; alt=&quot;Evlovi screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;New tools for 2D game development:
&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;tools-for-2d-games&quot;&gt;the Sheep spritesheet packer and Amethyst 2D Starter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Scripting support &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;scripting-what-do-we-need-to-get-there&#x2F;958&quot;&gt;edges closer&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Learning from Legion: &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;legion-ecs-discussion&#x2F;965&quot;&gt;an ECS design discussion&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;arsenal&quot;&gt;Arsenal&lt;&#x2F;a&gt; - a Blender game engine
built on Amethyst and Rust (&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;arsenal-the-vision-for-a-full-amethyst-blender-integration&#x2F;911&quot;&gt;announcement&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst-imgui&quot;&gt;amethyst-imgui&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;laminar&quot;&gt;Laminar&lt;&#x2F;a&gt;
(a semi-reliable UDP-based protocol for multiplayer games) steadily mature.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rendy&quot;&gt;Rendy&lt;&#x2F;a&gt; (rendering engine) is well
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1159765804205957120&quot;&gt;on its way towards web and OpenGL support&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Atelier Editor underwent some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;atelier-editor&#x2F;issues&#x2F;21&quot;&gt;visual planning&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;coh2hy&#x2F;amethyst_activity_report_july_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1160992752341016576&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;A few days ago a third showcase project
&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;third-showcase-game-space-shooter&quot;&gt;was announced&lt;&#x2F;a&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;&amp;quot;Space Shooter&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo Supina&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cwy4qq&#x2F;amethyst_showcase_space_shooter_shootem_up&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1167094848907808768&quot;&gt;twitter&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;amethyst-space-shooter.gif&quot; alt=&quot;&amp;quot;Space Shooter&amp;quot; gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embark-s-rust-open-source-crates-and-ecosystem-tracking&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;embark.rs&quot;&gt;Embark&#x27;s Rust Open-Source Crates and Ecosystem Tracking&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embark-s-rust-open-source-crates-and-ecosystem-tracking&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;embark-logo-bg.jpg&quot; alt=&quot;Embark logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A quote from the announcement:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&#x27;ve put together a tracking page for our Rust open source work,
future ideas&#x2F;plans, and issues that we&#x27;ve run into and want to improve on.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is still pretty early, but hope it can be useful or of interest
to see what we, a commercial games company,
is planning and thinking about Rust.&lt;&#x2F;p&gt;
&lt;p&gt;We are also open to collaborate with other companies or individuals,
as well as sponsoring more open source work to improve and support the ecosystem.
Feel free to reach out to us here or on
&lt;a href=&quot;mailto:opensource@embark-studios.com&quot;&gt;opensource@embark-studios.com&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cr73zz&#x2F;embarks_rust_open_source_crates_and_ecosystem&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;repi&#x2F;status&#x2F;1162361431355994112&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, Embark has recently open-sourced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;physx-rs&quot;&gt;physx-rs&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NVIDIAGameWorks&#x2F;PhysX&quot;&gt;PhysX&lt;&#x2F;a&gt; bindings to Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;physx-example.png&quot; alt=&quot;&amp;quot;ball&amp;quot; example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Quite complex big C++ project to build &amp;amp; bind to (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;h3r2tic&quot;&gt;@h3r2tic&lt;&#x2F;a&gt; did some magic).
Eventually want full native Rust lib but PhysX is
feature rich &amp;amp; performant today so nice to be able to use it!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cqbhif&#x2F;embarkstudiosphysxrs_rust_binding_and_wrapper_for&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;repi&#x2F;status&#x2F;1161645313532280835&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-months-of-game-development-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;6 Months of Game Development in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#6-months-of-game-development-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;iolivia-screenshot.png&quot; alt=&quot;screenshot from Olivia&#x27;s game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; tells about theirs experience of developing a hobby game
&amp;quot;Tennis Academy&amp;quot; in Rust for six months.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=96qPwvDEAuI&quot;&gt;a YouTube video&lt;&#x2F;a&gt;
with the current state of the game.&lt;&#x2F;p&gt;
&lt;p&gt;Features of the game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;💵money: every item costs money and the money is substracted
when buying an item&lt;&#x2F;li&gt;
&lt;li&gt;👟tennis courts of all types: hard, clay, concrete and grass&lt;&#x2F;li&gt;
&lt;li&gt;🎁more object types: benches, balls, roof tiles&lt;&#x2F;li&gt;
&lt;li&gt;⏱️time: the game keeps track of how many days&#x2F;months&#x2F;years it&#x27;s been&lt;&#x2F;li&gt;
&lt;li&gt;🌶️main menu&lt;&#x2F;li&gt;
&lt;li&gt;🏠build menu&lt;&#x2F;li&gt;
&lt;li&gt;⛹️player selection menu&lt;&#x2F;li&gt;
&lt;li&gt;↩️assignments: a player can be assigned to a court or a bench&lt;&#x2F;li&gt;
&lt;li&gt;🛣️basic pathfinding: a player can find its way to an assigned
court or bench&lt;&#x2F;li&gt;
&lt;li&gt;📈skill levels: a player playing on a court will get increased
tennis skill level&lt;&#x2F;li&gt;
&lt;li&gt;🛌needs: a player who plays too much will get tired and need rest&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ctuocb&#x2F;6_months_of_game_development_in_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1164460622186274817&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-hal-0-3-and-wgpu-0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;wgpu-v0-3-is-released&quot;&gt;gfx-hal 0.3 and wgpu 0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-hal-0-3-and-wgpu-0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;gfx-mipmap.png&quot; alt=&quot;Mipmap example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;gfx-hal&lt;&#x2F;code&gt; is a low-overhead Vulkanic GPU API in Rust.
Version 0.3 is published that includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;MSAA resolves&lt;&#x2F;li&gt;
&lt;li&gt;events API&lt;&#x2F;li&gt;
&lt;li&gt;building Vulkan backend on Apple platforms&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;readonly&amp;quot; storage support in DX12 backend&lt;&#x2F;li&gt;
&lt;li&gt;WASM and compute support in GL backend&lt;&#x2F;li&gt;
&lt;li&gt;lots of fixes and improvements in all backends&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cnvfrm&#x2F;gfxhal03_release_notes&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;code&gt;wgpu&lt;&#x2F;code&gt; is a safe, modern and portable GPU API for native platforms and the Web.
It&#x27;s based on gfx-hal and Rendy.
Our implementation and its Rust wrapper &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt; have reached version 0.3.
Major improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;API is (mostly) updated to the upstream WebGPU working group spec&lt;&#x2F;li&gt;
&lt;li&gt;internal deadlock protection&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;raw-window-handle&lt;&#x2F;code&gt; support&lt;&#x2F;li&gt;
&lt;li&gt;individual tracking of texture array layers and mipmap levels&lt;&#x2F;li&gt;
&lt;li&gt;more API features:
&lt;ul&gt;
&lt;li&gt;multisampling&lt;&#x2F;li&gt;
&lt;li&gt;indirect draw and dispatch&lt;&#x2F;li&gt;
&lt;li&gt;stencil masks and reference values&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;more examples!&lt;&#x2F;li&gt;
&lt;li&gt;more state validation!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;wgpu-v0-3-is-released&quot;&gt;discourse&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cu09vr&#x2F;release_of_wgpu03&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;luminance-0-31&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phaazon.net&#x2F;blog&#x2F;luminance-0.31&quot;&gt;luminance 0.31&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#luminance-0-31&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; is a type-safe, type-level and stateless Rust graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;luminance v0.31 was released by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt;.
This version brings &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;luminance&#x2F;CHANGELOG.md#031&quot;&gt;LOTS of major changes and bugfixes&lt;&#x2F;a&gt;,
including two new crates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance-derive&quot;&gt;luminance-derive&lt;&#x2F;a&gt; -
provides several procedural derive macros you can use to easily implement
all required traits to work with luminance.
Especially, some traits that are unsafe can be implemented
in a safe way with that crate.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance-glutin&quot;&gt;luminance-glutin&lt;&#x2F;a&gt; -
the windowing crate support for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, two ways to learn luminance were added:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;luminance&#x2F;examples&#x2F;README.md&quot;&gt;examples&lt;&#x2F;a&gt;. They are like unit tests:
each introduces and focuses on a very specific aspect or feature.
You should read them if you are interested in given feature.
They’re not well suited to learn from scratch
and they are weaker than a structured tutorial but more concise.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;wiki&quot;&gt;wiki&lt;&#x2F;a&gt;.
It contains various chapters, including tutorials and onboarding newcomers.
It will not provide you with the best description of a given feature
as it focuses more on the overall comprehension and explaining
than code directly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cx0syl&#x2F;announcement_luminance031_luminancederive_and&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&#x2F;status&#x2F;1167064285643771910&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;!--
Special section for other news (up to 15) in a one-liner format:
- Main link,
- short summary,
- optional discussion links (in square brackets),
- optional small image.
--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;Vlad Zhukov&lt;&#x2F;a&gt; shared
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;7NojrtICE1k&quot;&gt;theirs first Youtube devlog&lt;&#x2F;a&gt;
about the development of an asteroids-like game
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1162462543530643457&quot;&gt;with Voronoi diagrams for procedural destructions&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;vlad-asteroinds-gameplay.gif&quot; alt=&quot;Gameplay of Vlad&#x27;s prototype&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;&quot;&gt;Azriel&lt;&#x2F;a&gt; published a devlog &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;08&#x2F;16&#x2F;charging-up&quot;&gt;&amp;quot;Charging Up&amp;quot;&lt;&#x2F;a&gt; - characters in &lt;a href=&quot;https:&#x2F;&#x2F;azriel91.itch.io&#x2F;will&quot;&gt;Will&lt;&#x2F;a&gt;
can now charge up by holding the Attack button.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;will-charging.png&quot; alt=&quot;charging sprites from Will&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;droprate&quot;&gt;droprate&lt;&#x2F;a&gt; - a crate for choosing
outcomes based on a weighted probability map,
aka more player-friendly random numbers
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;co3buo&#x2F;ann_droprate_a_crate_for_randomly_choosing_things&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2019&#x2F;08&#x2F;02&#x2F;better-than-your-friends.html&quot;&gt;&amp;quot;Compare Against Your Friends&amp;quot;&lt;&#x2F;a&gt; - after the &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cdw1ct&#x2F;robo_instructus_is_out_now_programming_puzzle&quot;&gt;1.0 release&lt;&#x2F;a&gt;
of &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; released a few more versions
that fix some bugs, improve performance, scoring and UI.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;roboinstructus.jpg&quot; alt=&quot;RoboInstructus logo from Steam&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;wodannson&quot;&gt;@Remco&lt;&#x2F;a&gt; shared on Twitter
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;wodannson&#x2F;status&#x2F;1157472538622078976&quot;&gt;a video of hot reloading demonstration&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cldaew&#x2F;hot_reloading_of_function_bodies_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;cldajt&#x2F;hot_reloading_of_function_bodies_in_rust&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&#x2F;rx&quot;&gt;rx&lt;&#x2F;a&gt; - a minimalist and extensible pixel editor in Rust
[&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cv6o4q&#x2F;announcing_rx_minimalist_and_extensible_pixel&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cloudhead&#x2F;rx&quot;&gt;repo&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;23&quot;&gt;#23 &amp;quot;[Needed Crate] A pure rust SPIRV generator&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;25&quot;&gt;#25 &amp;quot;The state of math libraries&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;26&quot;&gt;#26 &amp;quot;[Tracker] Better windowing&#x2F;graphics inter-operation&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;42&quot;&gt;#42 &amp;quot;[Discussion] A plan for crate stewardship&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;2&quot;&gt;#2 &amp;quot;Newsletter&amp;quot;&lt;&#x2F;a&gt;
(so meta!)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;4&quot;&gt;#4 &amp;quot;Create a rust-gamedev.github.io site&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;!--
- The workgroup recommends crates to have a minimum supported rust version policy
- winit&#x2F;raw-window-handle
- Web presence (Newsletter, arewegameyet.com)
--&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt;
including full text notes or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;Issues tagged as &amp;quot;Good first issue&amp;quot; and “help wanted”&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22Blocking+a+release%22&quot;&gt;Issues tagged as &amp;quot;Blocking a release&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;a-snakes-tale-logo.png&quot; alt=&quot;A Snake&#x27;s Tale&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On 2017.07.06 one of the first commercial Rust games &lt;a href=&quot;https:&#x2F;&#x2F;m12y.com&#x2F;a-snakes-tale&quot;&gt;&amp;quot;A Snake&#x27;s Tale&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;michaelfairley&quot;&gt;Michael Fairley&lt;&#x2F;a&gt; was released:
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;654810&#x2F;A_Snakes_Tale&quot;&gt;Steam&lt;&#x2F;a&gt; (Windows&#x2F;Linux&#x2F;macOS),
&lt;a href=&quot;https:&#x2F;&#x2F;m12y.itch.io&#x2F;a-snakes-tale&quot;&gt;itch.io&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;a-snakes-tale&#x2F;id1211845149?mt=8&amp;amp;at=1001lnX5&quot;&gt;AppStore&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.m12y.asnakestale&quot;&gt;Google Play&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Snake&#x27;s Tale is a puzzle game about snakes in cramped places.
Clear a path to get to the hole, eat some eggs along the way,
and make sure to press all the buttons.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=23pQmEuueNw&quot;&gt;&lt;img src=&quot;a-snakes-tail.gif&quot; alt=&quot;Part of A snake&#x27;s Tail&#x27;s trailer&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;em&gt;click on the GIF to see &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=23pQmEuueNw&quot;&gt;the full release trailer&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A few posts about the game and how it was developed:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;michaelfairley.com&#x2F;blog&#x2F;i-made-a-game-in-rust&quot;&gt;&amp;quot;I Made a Game in Rust&amp;quot;&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;michaelfairley.com&#x2F;blog&#x2F;a-snakes-tale-postmortem&quot;&gt;&amp;quot;A Snake&#x27;s Tale Postmortem&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cyu3zg&#x2F;this_month_in_rust_gamedev_1_august_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1168614980721266695&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>Introducing the Rust Game Development Working Group</title>
            <pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate>
            <link>https://gamedev.rs/blog/introducing-the-rust-game-development-working-group/</link>
            <guid>https://gamedev.rs/blog/introducing-the-rust-game-development-working-group/</guid>
            <description>&lt;p&gt;Rust&#x27;s combination of low-level control, excellent performance
and modern build tools makes it an exciting choice for game developers.
The idea of a working group to support this burgeoning community has been proposed
&lt;a href=&quot;https:&#x2F;&#x2F;internals.rust-lang.org&#x2F;t&#x2F;a-working-group-for-rust-game-development&#x2F;8240&#x2F;4&quot;&gt;many&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2018&#x2F;11&#x2F;15&#x2F;Rust-and-game-development.html&quot;&gt;times&lt;&#x2F;a&gt;
over the years, and we&#x27;re excited to announce that a group has finally been formed!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;blob&#x2F;master&#x2F;charter.md&quot;&gt;Our charter&lt;&#x2F;a&gt;
sets out two primary goals:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;To improve the experience of people using Rust for game development.
We want game developers to have a representation in the Rust project.
We are a bridge between them and the Rust dev team.&lt;&#x2F;li&gt;
&lt;li&gt;To share knowledge and make game engine development more accessible
for people that are not engine developers.
We know it can be a large and intimidating field when you&#x27;re just starting out.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;what-have-we-been-up-to&quot;&gt;What have we been up to?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-have-we-been-up-to&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;While the working group is still in its infancy,
we&#x27;ve already got several projects underway:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The biggest success so far has been the creation of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;raw-window-handle&quot;&gt;&lt;code&gt;raw-window-handle&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;,
a library that provides a common interface that windowing libraries (such as &lt;code&gt;winit&lt;&#x2F;code&gt;)
can use to talk to graphics libraries (such as &lt;code&gt;gfx-hal&lt;&#x2F;code&gt;).
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;26&quot;&gt;Work is currently ongoing&lt;&#x2F;a&gt;
to integrate this into various libraries, and once this is complete,
it should be a big step towards making the ecosystem more decoupled.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;23&quot;&gt;Discussions on how a pure Rust SPIR-V generator could be implemented&lt;&#x2F;a&gt;
are currently ongoing, with the aim of reducing our reliance on &lt;code&gt;shaderc&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;We&#x27;re running a &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;survey-from-the-rust-game-development-working-group&#x2F;31270&quot;&gt;survey&lt;&#x2F;a&gt;,
to help us understand the ecosystem better and to figure out
how we can best serve its needs.
If you&#x27;re currently using Rust for game development,
or even if you just have an interest in the idea of it,
please give us your thoughts!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;how-can-i-get-involved&quot;&gt;How can I get involved?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-can-i-get-involved&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Our main hub for co-ordination is our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;Github repository&lt;&#x2F;a&gt;,
where you can (and should!) raise issues calling out your ideas, proposals
or problems with the Rust gamedev ecosystem.
We also have a &lt;code&gt;#wg-gamedev&lt;&#x2F;code&gt; channel on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;j6QJsMd&quot;&gt;official Rust Discord server&lt;&#x2F;a&gt;,
and get together for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;meetings on Google Hangouts every other Wednesday&lt;&#x2F;a&gt;.
Come and join us!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-s-next&quot;&gt;What&#x27;s next?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-s-next&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;We&#x27;re currently &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;2&quot;&gt;putting together&lt;&#x2F;a&gt;
the first installment of a Rust game development newsletter -
if you&#x27;d like to be notified when this goes live,
please subscribe to our &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;feed.xml&quot;&gt;RSS feed&lt;&#x2F;a&gt;,
or join us on &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;j6QJsMd&quot;&gt;Discord&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</description>
        </item>
    </channel>
</rss>
